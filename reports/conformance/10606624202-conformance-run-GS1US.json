{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "169d61b9-1306-44c2-8cc4-d784b24078ed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ce08a575-2e10-486f-8096-e3222ef0e66a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7f73635-98ce-4848-b10a-5e386fd81d81",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3144e85d-1242-4ec9-893c-a6222d4bd762"
                }
              }
            ]
          },
          {
            "id": "ce205b03-7fa4-481b-a2b0-6f7c7b8f8b07",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48f435d1-4634-4317-94d0-353fcdb0a4c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b93e359-ccbc-42de-b60e-0f5b0cc07dfd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b203e7c6-861d-40ab-974e-c335541883a1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a3e06efb-aaa0-429a-a10a-b3346decb44b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71d24f18-1363-47dc-8831-6f253685e241",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42a724a-1d85-414a-940e-9125ac411b51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "088539a0-b545-4bf1-9dca-4e0238d43bb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "767c49b3-51c1-47cc-b5d1-ed305fe0bc52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62958f0d-e03e-47bb-bdf3-13b0cb065a2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8434b333-683a-478c-aa7f-317867a2733c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37f4fd35-ae73-441c-9b5c-a961c1de8488"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b909e712-ad40-461b-87bd-9dbd009a3581",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a65aa1d8-5f76-403e-a651-503de54fd45e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1625ff37-0766-4c66-aaf1-4e0aa54c6034",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7259d2e6-a16a-4207-aca6-8b97e184aded"
            }
          }
        ]
      },
      {
        "id": "79322d29-15cc-46e5-9cba-542f89d616bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "965eb560-c4ad-4030-a248-4f322b5431b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a65a7d1-0a98-4609-a7a0-db77f85e8529",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97c32bbe-bec5-4dbc-afd3-529eab9e55c4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca51f9b1-0dbd-4009-aeee-3f9b1cc72533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8924cfbb-703b-4b79-b03d-b08c66af2d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfffe1a-1ce7-45e4-9efd-6f3e84aee464",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b9f9c2-0b1b-48f0-82e3-f518b0b41bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ab9d341-129c-4c96-b8c3-ec983d58c8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4261e6c6-5917-4f2e-85e6-9268f658c53d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca4dbf2-aace-4f2a-bfef-25247774393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e92dec1-5208-4081-af7d-c3ac7f2de041"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d90b0915-7c02-4a05-9fa9-62831986507f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46dcc477-0c54-43b0-9360-9bc39d325cb3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8df9e4-17cc-45c4-97c1-ca283ab04854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b539a3b-ea6b-4423-8df7-b8d3dc96b622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da906f84-ceb8-43bd-b825-ae4fa264d77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7318e16-6d92-487e-a3aa-26f4f79af1e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d0574ef6-8eff-4f9c-8844-018e2b4bf5e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91925157-3597-49e3-98e0-0e1e451c4219",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9540c053-dded-455d-8474-a85345e3d926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "292fbd9b-4d96-4f23-923d-8c804ae312be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45da8bfb-09ea-49a7-acdb-cc4535413a0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d9cf8f2b-2d8e-4b02-9711-dd58805a96e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3671124-756d-45a2-bfef-1b678b0d2311",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f2e371c-fb8f-470c-8eaf-0bc2e328651a"
            }
          }
        ]
      },
      {
        "id": "3f1d44e3-cd8a-4de9-85d7-7dbebdd9302b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3bd22bb5-dbcb-42ed-9734-eef8a50e89c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6f060f2-20f0-45c0-9c68-00713ae52788",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ac255323-cdb7-474c-a953-6e604b326387",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed85507d-95b5-4531-8755-bd78aab73d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce65b2d4-9b56-4870-b6f4-321022374b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26fb08-36e1-4808-8867-8217ba809886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c48b33ee-ef42-4ec6-9848-693cba3237cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746a69cd-db26-4601-a959-f39c17d09d71",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1cef4a-3df4-4242-a794-54affcf8f3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6dc1b0-133b-41b4-8623-d3888236de3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd367db-0507-40d5-b677-fdd9da21ac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "741f17e5-3a46-4bc3-bc3d-b7a40edd28f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211c6ea9-9277-449f-ab48-6bae195ee28f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eab5a8d-071b-44f4-ae96-4165858ce3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b148ae96-9622-48c8-b838-af413a787983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906128ee-a5b5-4cbd-b660-a1929a55c401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151d5292-7ef5-4661-9909-041ea9001425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802e4ef8-9ff1-410a-a419-a5cb01741a98",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e775fe-3e64-4aa2-ada2-4e33f273fdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab310520-81cb-4c82-a3cf-cd42070b68ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac9121c-0529-4066-9b84-e26c89396a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c54236f-72c5-44c3-83e2-4e588b74092d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83eff67-d601-40a1-9ca6-16fc61e5f399",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea73efe6-f4df-41e7-886f-c100c1d326f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e592a10-4ccc-4285-8b88-b1b92ce40670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55308022-0480-4096-a2fe-8d390bc7bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7372d72b-271b-4570-bcd3-2faa4f33f640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dc75f5-9815-4bd5-9584-d2f18a49fe35",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ddbda7-44c8-4544-ad9f-021c565baa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4bb30b-b695-42f1-b7b6-d3adb41ed09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7672bfe-85ef-4bb2-b92d-beb008873f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c37d1224-45ca-41d8-a96f-00f2a8685d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422fc703-da00-43b1-bd04-60850c3631eb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f9e89b-af4c-49b0-b438-c4feab60b89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3d18e8-39d5-481a-b2c7-b462018be5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643d4b1d-d446-44c8-9806-17ce0421b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a921a889-cbbb-40db-9aa0-f495b02a2fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebbc7ef-d904-4642-90f0-bb714fce2fe2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0036a8b5-4629-4d80-bb82-1157408f9d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fa673b-eba3-4531-9cda-4f2a75a54dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ecbd12-68ce-4dd3-b7c2-7d2c6c1faa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec198f1f-fc82-47a9-bd7c-dc24c1a92c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b20fb4-0f9f-4dad-8923-197ea03da1d2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb19b557-b92a-405c-8981-c64de4747d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52611981-4e8e-4c41-972c-6441efc6cbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1030b7c-215b-4197-a5d4-7af8bd20a17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d765bbe-3fd4-4925-8915-977799131cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2c9717-5067-4973-8dbf-199898cd9fb7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6045101-b693-4311-bcaa-f49345bda353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de326722-1f07-4f12-959b-8bed152ef638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8991ccd-b7cb-4772-8148-2a5ad1a70c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3df00d97-3d63-4892-8fcb-dde09fbae79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9686b133-7b0e-46cd-bf7a-a5fa92dda25a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be807bc6-6300-41e3-830c-bb34048ab8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6874d58b-8372-4a6d-a94a-0b80458e7696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee82da2-9da8-41cf-bf40-946166171522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03415de1-4411-43b1-829a-258afd66d055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0d3bb6-0e25-4575-8ee3-d0db647e7501",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1465ef8-2716-48da-b70b-43007bfa0c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05a41a8-a977-4a18-9bcd-4fe277518e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e802c7-1f3a-45a7-a789-1f144e5578b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "165ec630-2bd8-4f49-8936-4998d7b6c45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5571ab-e6e7-4d78-b16d-43404668b3cb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1e59c0-1405-49a7-af09-ce0972bb40c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b72fee2-b0a7-4b54-9cd7-b690f3968c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cea10a-58ba-40a8-9d80-4ef2e0c30841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2827ce6c-7aff-4385-8eee-a8787da178fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e86889-fa9f-4182-a121-746c675917f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be88cecf-91e8-46f2-a8e5-71b8af8e1d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d99320f-c4b2-42ab-ae31-62c783dd1d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeabce36-6052-412e-ba8c-fc94737a0158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e828b11e-c742-4bf7-910e-1f280044f6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ef9a1f-dc95-497c-b450-7e83d743137b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788fa1d0-86a9-47b5-8e13-3e2914125ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e672a5-3623-4055-b202-f151934b2f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeeb234-3013-4dbb-ab3f-95eb91f6f386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d53b69af-4f5e-46b3-8b6e-fc7f03e0f1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2788f245-0e1b-4624-8f3f-b7e0df13ca30",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2991f7b3-fdd5-4171-b021-802b32cd160d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997c5c53-7139-4063-899f-1a0a91764397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b454b580-b035-453a-ae81-67dd91b8a555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1dc9227-0f86-47a1-8618-06d1c35729fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373932f3-4fb6-4c69-a8ad-5457b43d3487",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe96cd36-7054-4034-a723-c0c1c8af1313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4684b0-5598-4007-9abd-f4e1dc0d005b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4f9ac4-ef7b-4785-b327-85761b92c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c74102f-06ae-4cc7-bb13-2ac251ed82ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba471e8-1e84-4db4-b23a-c25b8f9bb4c7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b8baab-e676-4ef5-8650-3f0c23f0800e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb921c4-e136-423c-97a4-ac00c7f3f621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea07c97b-b952-4e8b-9a2e-d126b05f2dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e14ea61-2cfe-4228-8442-f18da9ffdd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a226ef-ed88-4161-82b2-fe569ba7d006",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75d0d66-12c6-4970-b8cc-dd71189991d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f0c982-01df-45fa-9fde-b8b25113c81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81453a5-123a-41a0-8a22-7ac4b8685082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f619684-b5a9-4dc9-adce-2db2574133eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fd4d17-5cdd-4a95-9019-70f6d04f5ee0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4811ea86-403a-46ed-a2e3-dc4a15ad0e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05327b8b-f2da-457c-91eb-12a80323b42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c0cdd-a650-40e7-a33b-0159ddcc9338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a5ecf7-14fe-49a2-b835-eef34ae6ed07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138c278c-690e-49de-a089-eec055f581ed",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaa64dd-26ff-4ca7-8790-16750d704036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6499826e-03cd-476d-960e-1e3813608f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d50680-22ba-4039-b500-990a9a167710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80aa8085-f3a1-4975-875e-07057a0f5e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dd5397-1fca-43ed-98aa-c7a8b3cfaada",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5a47fc-d99f-432d-86a2-88ee0f7f6eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6789142-b44b-4123-bb2f-45b7d5033a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0006a594-1970-481e-8128-927bb8688d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a69efe-59f1-4e10-b91e-0f0d81478cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7f869a-ad78-4f7f-b0bb-aa609fe739e4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b9ffbc-f326-444b-a127-85af9b2394f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3609f9-56ad-4b80-80b8-66e00ae49fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e9adb8-bd66-412d-b36d-7acd0f9d9f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ebdba7-f76a-4af0-8740-f36ee9ad269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e86f92a-2362-4327-adca-9b907d34c3a0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f3024a-6685-4c85-9822-e145bf7d35ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b98102a-08f7-49dc-bcf7-a8beaea28052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828a9856-f2c2-4f06-a981-eb541f417f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05b9feb-6f85-4f37-9206-aa9b2fc87910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0df580f-6b51-49f9-9179-c43d4bb9de26",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb6a993-8290-4d2b-a11c-919e21b898d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75dc96b-8fb6-45d9-b297-999591a941d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126b9dd2-8d70-4b06-8da4-327575c45a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "220fe278-ae26-4f22-a89c-ec4fc12dc8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85156372-6b38-4a71-91e7-28ff39e1f018",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eab1b1-d714-4274-9e4c-7ba17d34181d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd99161-1071-4621-a582-902d288f44b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130554e6-2d2e-4c4b-9404-39592243db90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b85cfd-e9bb-4e19-abcc-8e203bf6c34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed4131e-1bb9-40d0-bc4c-0be2f3f1e072",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11e1ca3-ccc6-49cc-9da1-585581aee2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bfca82-a6a0-4be8-83eb-7337327f80c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288a45af-ba86-47cf-9b33-234d053f955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "120f3113-a30d-48f2-a012-f4c14ee844f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db120828-a3b8-4355-aaa9-2593e82943bc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5383a4d-7c14-454c-a35b-7741ece1a1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be40d108-f5b7-4186-a9de-64d03f52ddb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1899a125-d780-4197-b97a-9cf28eb6ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27646989-bd8e-46f8-ab8e-6883830c2c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26feb0c9-32fd-4262-bfbf-e832a4278e31",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a2625-2d98-4687-aa6e-feef32a28cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce33928b-f95b-47e7-b22a-e17a1492f81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fa9c44-0f3a-4b77-9338-c468ba20bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15bc4045-5185-4c59-ab39-ddb24af03f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0443f5a3-c6be-4c34-b44d-439838b494d9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed59b999-4446-4c0a-a81e-ee91f28174fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55035dda-26f9-4fc9-a392-d0ad7cd6cfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ae8f4f-643a-4706-8a19-38af4e71b109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "35178320-7ed9-45f6-9905-18a9a8d9468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed8b07e-b2c9-4b3c-82de-66cff1eb7e89",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f186d0e-157c-481b-8ce9-470f82a35431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cca09d1-c143-4c5f-b9c7-4b7c16b6d1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0506f8-7749-41a9-b5d1-2af4980cc369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be7146f4-95e9-43bf-aa02-669f35480d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d958bad-757c-4cae-8084-a36a1235bdc7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13ecf11-786c-4d09-914e-63b9716524de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae88a18-2b1d-4c01-88f1-76120bcb0a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d7c530-7176-4497-9985-ebc082faccf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4636f7b-7925-496c-9149-2aeddeaa3006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9362623-e8cf-4951-89a3-33db8a6bed39",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3912cbc0-ab98-4d09-8696-5bd6b10b792a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13911c10-7d62-4052-9d69-7befe610c815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e39b9a6-767c-4797-be34-2b00e0b5613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8096a9-5b04-4e17-9c7c-5c35c2ec0790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e97fcc9-c15a-456e-8a08-2a31f8259991",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbdc00e-50ed-43d9-9f63-d91cca90e9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc7b7e7-ef6f-44d0-b2f5-d72c5ca887b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49ecb63-b1c4-443c-86da-dd5264d9cb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5365e449-703f-4482-9c52-70cf7536f90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073bfd33-cded-42c6-9d58-6a1af7a589f4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5b9a6b-ff6e-437c-a903-0bb92c038275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8d4d30-6f0b-4dbd-87e9-4d51294cac73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4343988-d882-4625-8c76-b37584ddfc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b34931e1-117c-4837-aca3-5584ac684ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e92963-9394-459b-b48e-45215c70e1b0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84741354-8f56-4b23-864b-9f238bb5bc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe4196fb-9c77-44ad-8660-a3805211f974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc38f37-f968-4d43-8011-8919cdbc8011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e94b15d5-5ceb-47af-8016-277439712115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3cdb8f-01ab-4919-b634-6db80e25d5f8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dd0047-f15a-49a6-bf0e-7cbe0be834e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d1d65f-08dc-48c4-a139-751fd6b3a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c8f1e-6083-45ac-af79-169cc79a20bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6b7882-edb1-4f41-b4ba-51cdcd9e8611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91fbbe4-9f76-4f30-b0e1-92273212e3fa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f109dff-2801-48ca-bb14-8ab2ef3c6fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5b4a9b-372d-4ed9-ac67-5fb1242408b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b838e23-6819-44ef-8616-d35bd1f709f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7794e478-ec2b-499b-81cd-9f881c7986bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58792358-7f5a-416d-95c1-249ad7349c5a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb25672a-88d9-4995-92a5-d9fe3b1a8c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e121d05d-be58-41f4-89b3-fc19a367c41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d78b11f-8a36-4388-b329-9e53e94045af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df63535e-7b29-4037-a764-754bf2adfbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa57d136-5017-4ebf-80ef-bb31a81a5594",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8df4ed8-0028-4d00-89c3-eea0392ee8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d249b42-020e-487e-a1b3-4770857eccb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84425c53-7ee5-47c9-a47d-9d5e7d5d0d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f675fa1f-fe91-4000-957c-575ccda84588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b57a2c1-bd22-4a5b-88c1-a3558a3d6daa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53b2928-2949-4f6f-8d65-7c142104344d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86de5e88-ac52-4ac5-b8aa-a2e9068b70f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16af70db-8b18-40ee-b945-515065f5c0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b391113-7371-4353-82f1-1da8a32d80f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6429ce-20b5-490e-a306-be7a9da36ebe",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c0e822-96cc-4de9-ab73-a9b306b438f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06a77ed-21f8-4212-89ec-5a8162f00bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72a14a-d7d5-4d56-9df9-32c45f1e4422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d27cda73-85ed-4092-988e-9beb529ab6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4c59ea-94d3-4e5b-b293-c618f20a6bcb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f81552-45e5-4f2d-a551-66fadcbedd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d964438d-d347-4fa3-921d-1646668e85e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aec6975-e053-49d8-a273-51928b03a26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b06e474b-cd18-4e3e-be2d-5dba74d5048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889559b8-45ed-4194-9647-b7b7ff589fe2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22da6047-7bf1-48c4-9277-289dbcca7707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e51c5e-0619-4551-abff-1409031cc60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a080a04-1db3-4e88-af92-ca1022e61c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7343396b-0be6-49a6-8c5e-d468b35dab56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd77a03-7646-4113-9ed0-8d0bce3578cd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1532a15a-337a-4ef2-9f51-354dcc29f168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d224797f-2cff-4c47-94ab-3db223b04ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da8cdc2-eaf1-419d-86a4-fcdcd93ca2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84fc3f7a-09ab-4ae3-84a7-34f50b0e9ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2057b2-1f63-480b-8bcc-08ff636f0137",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc7c90b-cf8a-4438-9d75-7c1376ac2a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3895477-82ff-4c01-8b08-bbd1a0d76061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4624a90f-6bee-4358-89a8-0038c5031bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49076251-0b9d-4394-b198-1dd9ecde893f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e3220b-6a1b-4b13-b89f-62057bbf9fe7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634013ca-81cd-4ee9-9d1f-fe15be4535b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95395a6b-e079-484b-8c35-dafcc1411f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5160c4-34c0-4b3d-ac86-bdec43e78b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "620f72a6-e1b0-4954-a82d-3688e7c3e818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08304165-eae9-447f-9cae-3b86fe4c92b4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7133ff16-6493-461f-aab8-e714f656ab46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2350b790-42af-4ca7-8e0a-37f10477f7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92225fbf-aec5-41f6-ad26-dc8675f72a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e005ce-596f-4df5-af44-cf33e7dfecdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e38c148-5c4a-47eb-8db9-bfcf75b43cef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d7222-d8b6-4c7f-a1e8-c47ef62ca2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5650659-aaef-4b7c-95da-f225667a4000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef1e6d2-208f-42f0-9b50-ebc3cf4a15b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf8d4aa-3baf-4cff-a002-7dd1708d0847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f17442f-99c3-47b1-9745-4584f68087c5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f9b601-a16b-4821-99f8-53819c2b8f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c67143-3c5f-44c2-bf3d-1e4de39588b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bfff70-2d27-4dcb-907d-6d0f26b9bb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec59e32-241f-48b0-83dc-02e4e0941f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8e1024-b5c7-4d47-aeb0-a1d4ea3dc3c4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccf4e8f-3775-4623-9c7b-dd1325cef8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9817336-e4ac-43a7-a485-4adaa61ea04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df48562b-5c45-4a5f-9ee2-6999f9ee8630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c54a674a-8a7c-4a1e-9542-c9e6bf873fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53792fd-89d9-4d29-a045-983f38ee745b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d9f77b-6ae5-40db-94ab-4cdb41fbec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5320fa0a-f2af-468f-9ebe-fda5bf81f879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ac6bb-ef70-4352-8380-cdcb5ee0e22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4c59c3-fb0a-4255-8c56-5d7045c0c745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94f4b2b-bb4d-4d08-8810-70c57715cd38",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ed2cf3-bc05-4027-88f1-9c4b0cf3ad4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecb80e8-202d-4b37-bf8c-02691b5f2fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cd771f-9a30-4ec6-b588-358192ff2df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b624d5f7-8cba-4990-abbd-1e1f889622d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720a8cda-52cd-4517-9e84-4bd91fcb5688",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e1bfe5-2394-47fa-8da3-482e102fcea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5bb05c-3f16-44c0-af69-64ccc966d46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2841bb9-f606-4010-a5c7-fe1e3e384ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c1f8a3-9718-406d-a91a-1d350772cb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c50738-5aee-4566-90c4-f5e0ee6b0505",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e632520-5a12-401a-870e-0de4b895ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c620053-eeee-4eb5-b7f9-4a6b215733cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b100397d-b630-488d-9108-e5304a2752d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d88ba97-dff0-4c02-aac3-9a81cde34da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a645c-d455-4c29-8153-cc19232c1309",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bc775b-b52d-4674-b2da-597db7993ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e4c231-0fe6-4e38-89aa-a8f38d6c5063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d91c9c-4aa1-419b-baec-eba0242e5485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2107fc79-8815-4683-9d7e-ce7132ad84b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9205eb8e-01e7-4f29-bbd1-619155fbaad8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a900a9ba-ac71-40d9-afc6-92cfec410745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9734a7fd-db2f-4249-9b90-514f658213b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b3217e-0b67-454e-af51-fb158fd22548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e479d32-a6f6-48e3-b717-9512f251fa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26944d81-b404-48cf-a0b6-b506881e4298",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9efa0c-e26e-460e-9ae4-df56c30c17c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869c4687-ce05-4cdb-8267-10dd8a0517bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be2d2b3-d109-4d37-b9e6-60e75686e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4e2c2d-8f50-4769-93b3-db1791e478f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f28d95a-8e62-4848-8b50-13e533f7cb2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd100653-e82d-45f2-8c6b-108fe293bb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938825f6-1c93-4288-85e4-8bd73818b75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aa3a94-77c2-4f55-854d-fce5fa81e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc72f60-9a92-4f3b-8969-de16e7cbfdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071f2b06-d641-4cf6-9c84-17e3e9574a62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c642f464-f0d4-49d8-8af4-77090145eb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9352a3-75c6-4827-84d1-fd9ca37aa99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85b585c-7604-4a3c-8ff4-50a7f4edc635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8116a34-b640-46e9-94c6-b4f8adeedbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e0579b-7343-4693-b65e-d3229ad94ee3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa52a19-3605-4ad1-8227-bf4878868428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbeed0d5-0207-4314-a40d-2497a7bcffe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6490f12-7c04-478b-8042-a48cf1bf359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "78ec9304-9469-41c4-b22a-985d12295611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2acd90-44f1-4352-95fe-c5d72134c16e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d164b0-e9b6-4880-9674-b2ba7a94df42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e333e96b-702c-4287-9d3f-fb147351b278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3158e9-6d20-4368-b172-5b7cd4732aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf779cf4-84c8-41d1-950b-7a0dd4d47b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a5553e-bbf3-4803-b074-163e09debf5e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d54d07-343d-4aef-aeab-dcaf030bb812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498ce22a-8fa3-4558-95b5-b72432727dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffbb864-089d-4442-96d2-ff3941768f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "760c4241-7c93-4c5b-9bd6-d953e011c52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c17351c-fed1-4cd5-b878-d225f28af6d6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33500382-fd68-4dda-8d9f-39377a13cbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1cc266-0b0e-4309-9f3c-817e7108f5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36224a4-4383-4f7a-b591-0247bb52f471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "380f7998-9a8f-45f9-ab9b-4a771117d370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59306ed6-5c96-463e-a537-e07a679841b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ed9c3c-d300-4936-8e93-4043f2b49a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0baef4-224f-4cc9-99e7-522c53d1bf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c371fafb-6ae4-4efb-badf-603da52eed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dad6319-47f3-460a-9592-082ea90c7ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5eebbad-9441-4307-9c25-5949a888fe81",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8788463d-96b2-442d-a26e-598435042141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b4ec87-347f-4781-a3a0-80b8d9280396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1cd32d-42cb-4805-94c4-863e1652c18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "704b61a5-dfbb-4968-82dd-f7d4ebb14d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f6b16-1219-4015-8cfd-4864c75a55b1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7005fb-2527-4caa-a5a7-2508d6e7ca0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae300897-ac6c-4206-9edd-e98dda6bbdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ea67d0-d98e-442d-8ac2-c4c50ffd1fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83c0ab31-9007-4913-99a2-e0b666e816e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0900a48-5843-44a7-bf9c-f4ba7c97b9b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dfd6f4-18e2-44b4-b211-b05ec469b82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a525688-5307-4395-abea-b76d087857ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ce0004-6ad3-4356-8fd2-0ef8749379f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d04d41-3588-46fe-9fc2-5f73d7e642d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8829f26e-b0cd-4695-bd49-5fba9e1224fc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d48dcd-3585-4d0f-93c1-0d734fd3cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e661ab96-3ca0-48b7-b3d1-8ce0ae84af6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34509fe-ccfe-4811-9b62-adb0d94dcfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17fb6607-6220-4431-8724-678558b1374c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35311fe-6bc8-4f7d-be0b-e3a622bfba23",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1d27cd-c0d0-4a19-ba2a-49ce652748b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7bc4af-dc29-4ae6-b0f6-40d4350ee114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e17c61-db1c-4c9d-810b-2db00403238e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb3cf99-ace1-4c6f-967b-ca144b396f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84235413-c54e-4566-8173-eadad2322031",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086501ae-d420-4198-90e1-444404664837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ac7c95-7baa-4e89-b611-dd28d43f8070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68903415-55fd-4dd9-9c51-f78cd84867af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdd39eb-34d2-45f8-9376-88913c7ddd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533d5032-4fce-42f6-a5ce-94277213168a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be74709-8780-4e09-9ec9-90bf8c309f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eeea0af-e1de-4ed4-a83e-fa3833a8d372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d444a98b-2698-4151-81ef-bdf98ac3fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e26dc47-b5c4-4ea3-bfd0-c90461b11016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004802f9-7734-4595-8fd5-f7ded1995564",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876be446-dc13-4fbd-afc0-78579d39de8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7ac8a7-7ede-42df-9058-f9c7db6a27da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19be98f9-d508-4b1c-af66-d738f87d96c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e55ce963-e8a0-47e7-949e-b758caafbb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677275cd-e351-40bf-9f3a-bd0176da36f3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029103ef-94b2-4c5b-9c7a-1fca3bb51216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77bfd78-64fc-491d-a506-06a610f080aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bcc762-e75f-4d53-8c7e-f99ffd4df13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "591bd38b-b42c-46dd-9bc9-8b2fe67afa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33381a2-caf2-46e8-a556-95da7e53c2f2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deca99c7-f28e-41b7-9f17-6c2c46566819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c283079-db55-4c53-a7eb-3d01520585a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95604c15-031f-42ca-962f-12873f7211b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8476b09-0cf8-47f3-b4f5-9cc65e455867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f004c0-6e4c-47ad-9398-f2b851b63b6a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b614e5-26c9-4965-8334-96fd727f9ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494fdf53-803e-4750-9223-3860d1259c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039b46da-7ac3-4805-afd0-774c907699a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "721859c7-acdd-412c-ad4c-b9c3bf2eb4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e60bc8-ffef-4049-ba96-d81b5b894002",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d2d414-6261-425e-899e-49460dfc660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62379bf4-6ba2-4a12-9102-4c2d2810d2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d903639-6420-4437-a8be-78f4f41d9ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03906e73-559f-4d67-8919-8cfc63f51165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fbd072-3aba-4fa3-9d46-320686e2bdc1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae4a00e-9a18-4e98-8d4b-b4fb10481538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be23ac45-6f15-4ed3-ab4b-e3078b02e6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4137fa22-2e74-4d35-a7cc-b52349e6e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "015c057b-bc50-4789-98a4-e54e0e71b2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be299b35-0c6f-452b-93f1-8e652d549ff9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316d32cc-3b82-45b0-901b-00c363539dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d971d33-3b21-4b9a-8d7e-443e170d15bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539c20c9-20c8-4d8b-a3aa-c7135f7c3942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44ad7f8a-eb8e-4ce9-91c5-0767adb5e0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285502f0-009f-41c2-81da-01b93af55ca6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcf24d6-c8be-44be-a43c-a37b7e6bc703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91acac30-56c4-47da-8e37-8280961c6f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c6adb5-974f-4b0c-9b17-ae62a2c6336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5d67da-b26c-4102-9772-b1ddd919309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c41ac6c-7d59-4c06-b8bd-b7fae743a421",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8549ed8-0c10-47c9-b917-5bb45ea1c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50751edc-b25f-4315-8ec5-1705b91745cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b4db98-4c98-4f02-9904-e7dde5c38bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b88b4fe-c0dd-41e4-9bd5-3af2dbeccf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d573bae0-6589-45dc-a65a-a20cf2e6e39e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d26d687-7b1e-4dba-a8de-554570b79ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba7094a-25b2-4578-b883-02f95d3469e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89007303-20f0-44bd-bfd1-2399951e352c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28898b57-35b4-4bfd-8b7f-4b7200b25097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d6d569-810e-4900-bc9d-d33e51d1608b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85944d3c-b540-495e-b3a8-ce5b1576edc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18fcc60-8f49-4709-a83f-25b08a542ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41773686-0dfc-45f1-8581-182bd774fd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "972a6ed2-75f1-46b2-9c88-99502f3ea730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00920410-7f86-4f31-9cb2-9b363a0855fd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61fb591-70be-4ddb-9d20-47ea6c711a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448d166a-5b81-4a25-85c9-2d4c429ccb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616d9ecc-fb59-4552-bdb2-f9c485f3c52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa2d707-7fdc-4ae4-9321-de5ef74d1704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6acd2a-f6a5-4588-9fd7-7fd51e817801",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6e0318-a911-42c3-8a38-374c7b598b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8473fa4-8dcd-481d-8935-4e6e6f39c510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf4927e-038d-4baa-8295-1c9b2ee4e13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5b8853-1d83-493c-b00c-1369f47fb05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b08a7f8-1554-47c3-b781-dd7a847df272",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862ca239-e97d-47fa-baba-a24a90a2b731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87496bd8-ea89-47f2-864d-ceb08a2c1136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ba7730-0726-42ea-827f-a9529ac8365d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52897af6-c796-43ec-974c-c30d1109cf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae963d75-d42d-40da-8226-64e2e3c713df",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1f05d9-a270-4a5d-aa1e-7930bd40be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8766b6e7-28e9-44f4-8975-749b12a9fc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734e4cd8-fd57-4841-ba52-d3ec1af173ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26aa65d5-62f4-448d-8cf0-962cd5dd7724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f0b6c-a182-448d-ac01-3ac56af21dc5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f5eec-df56-4c8b-ac11-ef46d5af3e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2949572e-8f59-4fb2-b354-a7354d957976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44914bae-e109-4ae0-b67f-323c295faec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d67111f4-5c53-409c-b995-8782688f5258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914ad74-b8ce-46b9-a8e6-9d88bf9c39da",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19047f47-5cc4-448f-9f3c-c915ce5e076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a780d6d9-9493-4c24-b89b-47c0eb9843a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea02716-8499-4650-9e14-9fe64603f806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9813c951-dee0-481a-85f1-b815a872e7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffa7a35-58ea-450d-85ac-149ea5dea4c6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c116fdd-be1e-4196-b68e-7053eaba292f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3749de-981c-4c7c-b5aa-2721a70f25b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07040c7-3319-4b8b-af66-03c152031183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6fab7a-5fc4-4ecd-807d-591c1a3431ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da8f743-c0c3-42e5-a9fe-4bb4f05959be",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01b6bee-ded0-455e-9185-a348ba970fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400c8f15-ce0c-4d20-8e00-9125a98105f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc65878-c951-48c8-8ba9-01e694644a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb29b17-b1bf-496c-a710-b87d9e8ebdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4af701e-fc69-4277-8f06-5cce53deece9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c849e387-bc4d-472c-b49b-6fb50d942bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9034d8de-7380-4c48-b89e-7bd37779303b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2752441c-d21e-4c5a-aae2-81f1f4ffaa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea5be5d-20c4-4453-b34e-339a8327f154"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae28b64e-8bf3-4ece-83f0-f858dd774b82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c0bc145-2773-495a-9a81-b2aee9de0e76",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e1d1b-79e7-4a7d-844a-47839fbeefa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f49b9cd-e6dc-4f13-90f3-c155f51fba38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e8ab56-06bf-426f-8862-b270369abed4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42899486-f5b2-4691-ab64-0dd433a84a11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f86fc30d-8930-4375-9aee-ee3e8ff885d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aa30f12-dfd8-4fc6-87ec-35a9f00183c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cc26f14-b4c5-4d78-8d69-9aacff3364b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff68235c-a510-4502-be4a-a2a7e91109d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06ed6294-f66f-4b13-b9f6-947c9dc04fc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a9bd7e1-7abe-4202-9275-77f1503f9c94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e397b3b0-e760-451a-bb1d-512791a95268",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd5bf980-a4fb-4942-97d7-4862b1e882b4"
                }
              }
            ]
          },
          {
            "id": "c7bd598b-ae8c-4e09-bf30-2db663484f8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dda59585-631f-4450-8048-cddcdbe871f0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9f769878-6ed4-4a52-b14c-b958b457cfeb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e763324d-06a5-4c02-bfed-62641dfb6b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38dcc30a-3891-414d-9120-cb56091a236c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af633115-7995-4453-a78d-1cef9c8c7083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b561a7f1-c1ec-46e6-ac2c-1e5936252d88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c3a6d24-7947-46a4-8387-561c37489647",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "591a2dea-5281-4807-9eea-a296ac58cb8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9c57802-8bec-4785-bad3-372eb298752b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f76af58-4c07-4858-bfa1-5d655354f0b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14ac4597-ce86-44aa-a5bc-e85e90f1b60b"
                    }
                  }
                ]
              },
              {
                "id": "4ee0a4ac-747d-4e6b-a543-99821eb816b0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d454d854-70f4-4c06-8c96-7615959720f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "064a2279-6271-44b8-bb11-2d70ca921e85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5877793d-5ef9-4e5c-8078-e2536ae1b58a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71550a00-ce56-459c-9c45-0ea6d9eecb55"
                    }
                  }
                ]
              },
              {
                "id": "a7acdcba-f69a-4523-b528-905643334698",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "532c313f-010d-42e9-b858-11cde589f3f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e469950-e217-407f-aabc-c44d1a933437"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5909e8cf-1c5a-4a5d-888d-7265c180e266",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4220b946-8cd3-4fcf-b6a1-d50fca4fac12"
                    }
                  }
                ]
              },
              {
                "id": "332a6e4f-6bb8-4397-9040-d3816e04c43b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86e81aa5-494a-44aa-9015-66905b9e8f74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79fd1caa-e7ef-46ef-81ff-0e13352c0558"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4376addf-b5dd-4a90-9209-7f685c92f6ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b6727c5c-72a5-4af5-968e-52c111d6702f"
                    }
                  }
                ]
              },
              {
                "id": "e37b4295-1fb4-48f7-a589-8ce3d3340914",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4806e19-2b97-4b9d-9c47-499b3fb4eb04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe57122a-ce9d-4545-a993-f1931f363cbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d765e754-f243-41e5-a359-e8b349db02fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "df5da7b9-1cb4-4f98-b731-ea13991b9018"
                    }
                  }
                ]
              },
              {
                "id": "c1246f19-6a46-4cc4-82d3-e03d5e046628",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab1205af-0eea-4c5f-ae19-e21ea1f94e7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6444f744-b002-4ee3-a5bc-c389415ec11e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a11bc111-a71e-4614-88b1-e139d967e420",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5695b72f-5ffd-424f-aae0-710e8b70e0b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fcf2a37c-26a4-4255-b98c-093fb90ad0ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2c5e531-3f58-4895-a0b0-a5d2dc7d0eae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25279d60-ddf7-49d7-9633-1f8db249a154",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3168ccf2-6899-4cf3-9ef1-9f840ec2b95b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "995bfdd5-3c80-44e0-861b-f3d727b93d27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2c9a8576-ff71-46f7-9d97-e2326da74d46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff912328-56bd-4f70-a608-c7f65869052f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8131068-7348-4d24-80c6-0cb7e63108be"
            }
          }
        ]
      },
      {
        "id": "74eb7936-4b79-4595-b79a-eb15d8a9e8ba",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "10dab32b-1b84-436c-bbf7-fc439ed25b6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4180fab3-23ec-4bdd-be5f-20d7ea14262b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff9f07e1-5868-4b12-a445-d11c2f0ab6af",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6536d285-6490-4c40-8bf0-2248988bb577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d60d43b-b02b-4348-afe8-fdff701db453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daec19d5-510a-4608-a41d-e1d6fd2ccf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4be83f2-bbd8-49e2-a2a8-e22739de853d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38ee133-5fda-469e-ba17-93e9bf919d79",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5def7-aaea-45d0-b1c6-1da34e455497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95abfc8b-875a-49fa-b965-22b5d0e1a9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de79536-99b4-49ae-8f7a-3583dd87db8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d34a86fa-3f08-4a4f-8e03-f150c2745fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22215b7f-e817-4e9e-b20b-bbb85e2b0fd5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d937e809-465c-4328-9fe5-e44276ba7ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6eb8f9b-1970-485c-aa15-bd630bc79548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12894b87-1bd0-40a1-9beb-4f9d018840f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c35f69b-0dcf-43c8-80d3-86639dbac586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395e572d-cfdb-4f03-970d-a5ae1f5d52b6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ea6d06-db47-4909-b471-3f8c9fa9ca91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dbe714-bc40-4f0e-9dbf-e48c1ae69991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd055fe2-59a0-4cb1-8898-90f55542d23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3195055d-0dee-40e6-83cc-cc087be36a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b62c2a-a15d-48e4-a012-657f274a0b6e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb0a5ad-be79-44ce-bab1-330d0444be3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba0d350-5ba2-46c1-b0d2-9b251328b1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d46985f-1d7f-4c25-a6ca-11926013e20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f222d87-6272-4833-ba48-fc5bf739bd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8931d060-8346-4874-8283-468ec4e1a678",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820c052b-d7b2-4fe2-96f8-8f788c00e55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f3a89a-0403-4b1e-a1a7-3f3a7fc15345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff72fba-7eb0-49d3-ac55-c30a6e1b16b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afae7e8d-ee63-4049-8806-305257ea4d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec3bfb6-7c32-4086-9a01-c3dbe56087aa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730b1afd-962f-4929-b02b-eaa21abdfac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbcc323-2797-4e03-b277-2b40b130e2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcd826d-c2ad-4d46-92ec-1f09d5c71882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "90552a4c-f53b-4bfd-a454-35b8c534f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3074cb-ba5a-4d63-a4dc-3a1307b0ffab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b71cbb2-675a-434f-b303-fcb549cd088d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2094353e-a5dc-4f1c-8538-5d7e9820b055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635d75fb-4b5f-4107-80cd-e261b82b3420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5b4da7-40cf-4a1c-87aa-6dfe3198148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139fed5d-b52e-4b3d-9421-d154c28efd07",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5c3f15-1459-4acf-8414-168d3fb8bfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a7341d-39d0-4b35-aa4f-c54511edb80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78656028-b207-4e20-b6c6-195332ab255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5e9cea-ee20-4103-9189-76bc9365095c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbefa742-08d1-4bf5-a863-0ee275835efe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61931cad-56a4-4cda-a0b1-3977faf85477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2e1d4d-f16f-455f-9dd8-f2731c45d976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b5ff9f-320b-4140-94bd-df7af4de8bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f706ffd-0f15-4a4c-89db-ae0bc7d49c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7132200-368b-4d14-a491-f647ce9c367a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96ff627-313c-492c-a9bd-f41e6a576fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1043b9d4-adfc-41b5-b7d7-a82e2b581174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eac4346-382f-425d-9d33-e6676cadfdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1cda3723-b501-4224-8399-f531fc750c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a823f1-7035-4f8f-92ba-b19a77934211",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ac797-7c32-4624-b09f-4b2836e1b46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e86a6a-d2e8-4b23-9205-0a7501932fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b7e158-74b2-489a-9952-b0b84a49faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8386bf-c884-4388-94ed-d6185414c380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2ae724-e3ca-4641-81f2-f228627887cb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db59a9b-4e05-44bc-a115-6a6b016c70f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c81ce22-2ad4-4255-93ac-e77f5d201077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d05603-4c0c-4004-aee0-ad4551545aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb40ed37-a65c-433b-b91e-65bb4189a3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad9ff98-cdda-4397-8653-667294bc7ceb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65b9a2f-b9d1-4462-acc6-a870a27c983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f24db3a-1c0b-4229-85f7-5169cc4cdf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1a6952-b671-4a6b-a66a-21f4ca32d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f16c57b-806d-4ffe-b701-2eee8471b494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f29a174-3033-4024-b064-fb5ce06c3a04",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae1ed5b-f45e-48e6-a1e9-be94995d2a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e88f8a-3a14-4da2-8959-27f267ce57bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cfce4f-c2d0-4be3-936b-fa721aa685f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4140137a-e966-42e8-bfc8-47b6409f9df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a6205d-9568-487a-b811-6f37143cfc37",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab5ada4-84ca-4e4a-b6f9-b42ab2ebaf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c77fda9-cbcf-45bb-b80f-082438785fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634ff998-3b58-4318-b819-f82829b20d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c3bb8d-25dc-473b-a1ae-f6d1d77c75d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc93382c-a72d-46d4-bdd2-9049fb964309",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad1a99c-bc02-487e-80c0-09a83fe6d744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f107b8b-1393-49f8-8e45-0a463196f85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b998c45-c877-4c37-ac23-e85ab5c97722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf24cb13-aa18-4d0f-8bb7-a9d3618f0a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f542ca58-b972-431b-b492-3f1fb2baffd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ab84b4-d88d-4de0-bea2-412d65728640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8880f8-5b00-4eda-bae2-18337a97aa03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0042931e-01a3-45f2-be54-645423714ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffe732c-deaa-4e4b-9f2f-0f89cb0d97e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce650fb7-ec19-485d-b2ab-ba9095bef097",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eca59f-03da-4966-911e-d2cfe740bbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9643392-af82-4bd3-9c5c-278a61c77ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8801c0eb-34e0-457c-ba4c-55bd0c1dc97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1755ff48-0cad-4d54-bb3a-cd2fd783e18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1647ee44-0bba-4a9f-a6df-249ba557b984",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c95cc85-b23a-4f28-9eb2-93972eb130ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f30dda-d8af-46a7-99a2-e1ef50b2e562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0653ce7e-9f57-428a-8845-7ff32539ef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfc50a8-a649-4feb-abc9-3db9c86899c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355a1028-42b6-4ee1-903f-e84bf5319067",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9be4052-c5ff-4270-8238-a9c0d90b1872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ed4754-25b5-47b4-ab36-726fcae5b040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521ce8e3-158d-4d66-a280-3bccbd35bbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f5f144-9386-49a7-82bd-b23eddd0a6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9671f50b-2316-4fab-b288-0dd58755de45",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc488ede-24f3-41df-84fa-16edf7ca3a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da73d124-f9fb-46b7-a39a-fe66862a5cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeb4771-f239-4fd2-b4ea-762da26b5fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8d4b3e-df67-492e-88c3-80697a25688d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3f01d7-cb1e-494c-a3e9-b60e99b2540d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed369277-da02-45ed-8e85-0840eb7dd667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602fa49a-a81f-41d2-89aa-5bda991c1008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5abbe31-384c-4f61-826c-c5eddb58c983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b64d93-ba24-4240-bd96-240429e002d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a9d608-ad75-48fb-b9f0-0df013debfce",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb607a6b-f910-4c6a-8d92-ac51262038f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcc9e97-35d5-49c8-b350-31b6ac2a2c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad572c50-5dc9-4773-9fd7-8a24e05e3840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42fae1a2-8008-4fce-a5c8-f6531b5c23c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9f4a5a-ef82-4e0b-9cdc-356d2abdf3d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa505eef-9cc7-42dd-8c44-22ea8213b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc181cb-9384-4110-a142-c894d2990367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dff1fa2-5989-4088-9b2a-73c310c416cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46113a2-c7d9-4834-973a-17497b470bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ad55b1-4b02-4ba3-8c38-b5d5fd8206fb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd180b-e6d8-4501-be3f-7c5effb08962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65b6067-6ac1-4870-aa27-ebc27e84da33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6a9399-e886-4fa9-908e-a1df9a367012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e29f2425-3d78-4cb8-89fd-301c59aa8327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5004d59-dc84-403e-85c9-8119373baa35",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365bfcd2-62bc-4652-aa5c-1cf9748b3eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6618d0-b89a-4db0-a650-fcd55d2eb754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bdba48-b6ad-454d-9b4d-6ef617e0afd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5e8753-1841-4280-b902-6dae7ec21852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023b26fe-2a58-4a6a-85bb-02691e7814e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2e0c30-106b-4b3e-b5db-8a4f1ae3be05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cdedace-61b4-4b30-9402-8eca466f0477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17224ab4-e67e-4de4-9607-85fa12a1b388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68899777-d100-40f2-9468-835bab6e85c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f285cbc1-9b4a-43ba-8e74-2399a83fcdbe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5241e6b8-b071-4e55-9354-b2a2bece2afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ac74d6-5b3c-4277-b727-d10f1c05b87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52adcdd8-8683-4f21-b96d-556f829f2c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4601aa-4c16-4383-b117-81c45ea42284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d494f-db37-47e0-a985-4a3648b888ab",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374f0c58-0aba-447e-9ad9-9681e2600bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695e2685-d36a-4574-95c6-09b1cbb2e29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba2a1a5-e8b9-4fde-ab74-7a6d1ccb7073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0388f931-f7b8-4f58-bfbf-20473e07bed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f081fc67-a2e9-4825-83e5-041d48dabad7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2388787-b1d5-4631-8c2a-f29a1523cdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb64e17-89b1-4507-a854-3f1f0ed8507e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9128d9a8-7520-4d74-ae6f-caa49a8ba850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f40caf5-5148-4798-bfdc-55adbc0e79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15f8a4a-9817-4f0d-a8a0-55b03a606279",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a76be7-51ca-4879-897f-99928fc29522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df3faa7-cbe4-4dac-a521-5cc00276c3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18d63d0-6c02-4c8f-8f4c-cea4bc20ee4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4c4980-8ed0-4a0c-adb8-088013331f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4e5f3f-fe77-45b0-8684-7efda246eb1c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5ab0ba-c40e-4fa2-b422-d51ed2ff05da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91c559c-53b0-4838-b67b-1e289075c6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c283d4a8-2273-4f30-b9df-21445250f624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bae7bd-391b-4270-87f2-e8c3110abd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8413e1fa-c659-4b1e-874e-8b0285b38916",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec797152-351a-4158-b8fa-15ca78e197b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026b9825-94cb-47bb-a628-f4d3c4ddbd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4528067-b6bc-440b-aed9-abe6aee12700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76111df4-06da-4182-ad45-1e355dec0158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6c122a-c369-4963-a311-b8e3c587d9df",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a3f4c5-59b1-405b-97c7-f14c7bc55e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7859fef-d346-4854-a5c6-2b43070d5207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0180b97f-80be-47b1-a73b-8714510dce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30e8307f-9a20-4811-9952-719d9f6511d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a6cf05-0fe8-493c-a4cd-9c1493168537",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f27ddd1-f3af-4b73-97df-50e6943662bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964825f7-6fd0-47bc-a593-cdb1fc672f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0293f557-f333-43f7-a929-fd17d94359e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cb7f06-18ed-496d-8819-336788567d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82d7801-cdeb-492c-8725-c39123424b11",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b46f7d6-2bb5-4cca-9c31-6b23bb942925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2607bd-77e0-42ad-868c-74cce2277f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e022a349-2356-41d7-b13a-fcb168b7dac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2803cb-a5e5-4104-9ad7-3fda174d33b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f012e869-1a3f-4826-907f-32ab67e3c026",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7906d9c7-99ae-466b-af99-6eaa1a684b7a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8394944-dc85-452c-ab12-82d5319b2a1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "19be37c3-939d-4a67-bfbb-1d0366013de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d8f8a5-8e73-431d-91b1-aeaa55feef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66ba0ed4-e130-4f78-a60b-3768a944d865"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a0968c3-99ee-41af-875a-40c1e26524b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eccd9d39-5d5f-4ace-bbf0-2fd13e61007c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05a6040d-7896-4bd9-9c2e-606b28260188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47765451-f993-4ea0-9702-2c532720a690"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab4cca5c-0a21-4e4e-8bcc-fecaf3bb0d64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7826d236-e929-42af-84b4-11d1f83a1773"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37b7812-ee4a-4bde-a34b-7adb72431ac6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bca1759-5845-4e5f-936a-a85865d46522"
            }
          }
        ]
      },
      {
        "id": "d03f7a1a-7456-4889-bfdb-8fda62ee5df3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ecf8f085-64ec-4d78-8a88-7ee4afe5b4b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7bdce5e-5224-4c42-9575-4c712b0828ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb3689f7-9fae-4041-9c86-29fa16a40589",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acdbb90-1e24-4dc4-a8d5-6ecfbe27ecca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f06db0-8e93-4281-8de9-e303416c3a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79db9781-39eb-4b00-ae01-96a1d94d224e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b63535-8a55-41a8-ad92-596d2b75901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f138e98-3d7f-484c-b41a-05133c8da78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c653e8c5-e9d3-4d59-8b92-d25fd70dc73e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca1db7-dae7-4031-a83d-c9fd53f9b024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c07723-6299-44b7-b118-771a970032e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b837ad-6a8c-41b9-b6a3-b0f6c503d7dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ba1ecb-8529-49d7-ba8a-d33856297817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fc9e51-4190-4d1b-b5bc-8bd8a69814f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e94ae-fd05-4cd1-8fe0-db39204c3b2b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2774b056-85b6-4f5b-8b74-1356de2f3a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7dcaec-65a4-453b-9b3e-5a4fabfbbf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060b1ee1-158e-460b-bebd-411d35f01228",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaf3738-72dc-4794-b4d0-7aaa4453b178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08388ad8-f39e-4f3c-b0b4-67f3e3d248dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe420e1-2fbf-41cf-977e-4280211e9c2c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b901d58b-522c-405d-ae9e-f3089002ad7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201b6588-3291-4557-8931-10108ebd8c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95d0873-79af-4588-960c-9d1a088b1546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2612c172-be28-49c2-8907-3b69493d0a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ce09d6-c875-4271-9704-ba67d171a5b5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb29fe-ee24-405b-a3d5-aab0c5c71538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee093256-de89-47d7-968d-f1c1d86f5e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c45e57b-997c-4290-bccb-8d12af0dc540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4973d57-8bff-41ed-9307-a3fa42545d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79430ca2-d2bf-4a9e-892f-ee0e1f0137bc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08357b89-f55e-4caf-b359-c9ac952aafac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16841c63-509b-43bc-885f-b533c9622ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9774e88b-4484-4a62-8c4c-5405ea435bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b04a8b-d1a6-4c34-8407-33880b929bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f90547-0edf-4eff-a391-7ca6ca79d770",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40f021c-e41e-4016-8a21-da98f5c7f28e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5542cfa9-086a-4e3a-9ec6-325a56206329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb371900-f7d9-4cca-8433-75e394ac7cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c90b2c-997d-4310-96b0-f59c8c001158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88b6867-3fa3-451f-9e2a-e2170d008436",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d07483a-24af-464f-b422-fd47e44c8795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99d34ad-d9ac-46f6-8cf6-ffdbebd3a3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7c20b-9fd7-427a-bea9-f4b8dbe9a016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1cb5cf-ee91-4cee-af11-5fe575429d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7be2f8-65d6-4684-abb7-4126a32587dc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89f6d49-8c20-4b9e-acae-be942de04ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f36fdf-303a-4fc7-bf4b-4a96ecfa8731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dbf279-894a-4af5-9a46-7998694ec66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11458488-9ca4-4cc7-8153-b8e54996d31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c653fa-a45e-4dad-874a-4c203319ac30",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004b2f4d-5833-4265-8c04-a9f568a24f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2534df6-3c77-402b-aea7-a7a4d052c943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bad106c-b966-4be7-aadb-b502fb4732ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f36fdd7-d32b-47e8-9fcd-881eebdca8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e05de0a-04d3-4bbb-b8ca-be4eb80e8131",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904dea33-ad40-4a99-8b1d-f223496c1b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8a49a9-58a3-4931-872e-10f48725174a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e441fa7-f7ad-445d-90ce-42aa2b767b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5691d67c-7ba4-4c80-91d5-ce2115196489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6c472e-1420-46f0-9460-251005f08c45",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d91f89-c5a1-4cde-9ed1-a196f3da312b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1169603-cc46-43df-8d7b-79268efe7122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ffbad1-9a2f-4010-8ad2-f6ade07a2fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5841ebd-096b-4863-82ca-350cfd66847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba563a03-8b89-4b6c-b11b-3f81244ee686",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f2a017-62c5-4d34-90cf-ab52e7c63cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8ffda5-a6e2-49f1-9ae1-b268f047966a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ced0fe-75c5-4f11-b467-13ab36074cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdc4b79-e264-4ab1-8fbc-633b833f8b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3667bae-bcb4-4969-a1b7-66aeab18d8f8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bc9a35-b7e1-41e1-a265-de9b0ac4e1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d41b5d2-4b41-4311-90d8-0fd2901c2454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6c1b2c-9cc8-450d-acac-ebe8aa4ad19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b34418-2f75-4d10-b527-fea7f204dc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d556a1-3426-4dec-b0b6-f537f0c4da0c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4433cfb-8df4-4709-b838-61657ed2b073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ad8fe8-77e1-4ef4-9291-518da0a3f2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf53156-e4e4-4325-be50-3bb61fce636b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284ea86c-06bd-4f56-b060-4110394a5ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a48a3cf-f801-4b1b-97ed-893ca71f0169",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e1871f-d0a1-4dfe-9f1b-4e2984776c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdeb50a-6411-45e3-b794-f4f385f25255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f5fd74-88ef-4d45-8318-cc00cfe882fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33f1217-6805-499f-a5c4-191f44bf67c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e8cbcc-2f7e-42cc-8e91-0f0d972d198d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2e3311-e39b-4a7e-898f-5c00530b3ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6599c608-07e9-4e86-b0f3-dc9557035853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f78d84-5f49-4433-99e0-7e1db32bd95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02609c1-9194-4547-89a2-e0844ac17e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347ee5b4-b6cd-4d26-9b48-22ac159fbf6a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c636c74f-a32d-468c-a393-972d94f3ee7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d83ac0-5559-4b90-83d7-af4d94ec4db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf057ab2-9795-4479-b7e8-db9882c80b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9dfe85-bef4-477f-8302-1c5807a6fae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5679d1e5-6a3a-431f-a463-486c7784f853",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad06a892-9349-4ee9-9f07-41d2af1a8710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4be509-9354-4372-a2c9-4a629d8d1231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74442a5-5669-4b40-9259-0928d366c15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c43f4e8-7c0d-4473-b9a0-10a578fb5489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eebdb6a-4bcf-4263-9b47-a11b1801b0fd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2f9dd3-94b8-4d1b-9f03-54469b755e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415f491a-849f-4092-a267-97ace826a237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e810cf-b9ef-4e83-ad53-9276a8c2ab05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccacda3d-b6db-4741-9182-54cf0a240a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7630c9ec-cd2b-4bdd-81ea-2aff7729b092",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1758232-a8c1-47f3-a0ab-50bb5ca5d23f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5ae758-0f1a-468b-b466-9d1b8b67fd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0581b556-d1ff-41c8-9b7a-43b712d4541d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414d0bf4-ce33-41bf-bc18-fbd335a5db66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f53066-5a36-4408-ae90-4dd267087faa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34062602-c4c0-448c-98a3-067ce112e056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa9739c-d3c8-4021-9b94-74de94f9526a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da447839-0729-4428-8a55-5bd60c01c4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bbf2eb-7237-4cd2-8683-8b47c4664807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4492e07e-7774-4c20-a30e-2675c4c9156a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d0a82b-e1f5-4d61-bd86-c17f18ebe847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc82656-f7eb-4da5-bd2a-89ebc3b345fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b05e94-64c1-41a0-8bfe-4e2a624dff42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b17db1-3c6b-4cc4-9edf-020296400d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3597b5b2-d80c-483f-9c8b-7f126372deb2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc217dbe-3428-41cb-8e0f-4fdf7493036b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7ccb08-f09c-48fd-9cd3-459fce2b91c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2111021b-fecc-416b-97ad-607c470d05b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f237451-8379-490b-bd64-f3a13d449f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db3acd7-4712-491c-a3f2-9c92000732d9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a160cdc-142a-4779-ab70-409b7e6a3442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec57f4b9-f621-46e8-ba13-64b5ca529386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf910bbd-eece-4208-b298-34faa61f891b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a31ba29-d27b-4c5e-85ad-f19e85dc79d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4b5245-27ec-4d44-8286-95e67886add2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9944c22a-cf06-4b36-884d-f01b849c7ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d1acf0-96a8-4616-8266-fad05fee3ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15753439-056c-4bdd-b9b4-ae6a855b1487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddab4ab-7705-4e43-9f37-d25dd9f542eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5631e507-4e4e-4361-83b4-854e2ccf5155",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0d21e1-7fe4-4d29-a807-d7aa9a74b24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1f93c3-7815-47d4-9523-e7d9aa8476ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bedc8d-3be1-4028-8f9f-fd9841ade2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd068af0-a25c-49b3-b136-a312acbfefbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8709d2a-9bae-4bcb-b22b-61e6db4fcea0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c35253-12d1-4ae1-ac8a-fc1a481509cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7d06b5-5234-4172-a482-bc693e777dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216b813a-caae-4f4f-8a85-73898caa413b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038698c2-7030-449b-8243-5229213d5c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0094b881-372b-4ad2-aee7-477ec451a2f7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd6722f-d169-4ed2-b963-e27440215e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d204c5-6a55-4ea7-b8e9-326f5d699f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a592ddc8-c112-4281-a710-0594f21ea626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52d9bff-d45f-4340-b244-9725fdaece8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6d54f0-2148-413d-be13-3c6d5f564262",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebc4ae1-c247-4699-ae26-334082e43638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03edea4b-1d28-4e10-8399-1dff983e6abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4113bb-2fbc-4ddd-a27c-e2c74e37af23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf12fd2-6c2e-4d71-8b3b-e211c39140c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49213200-bbaf-4737-9683-78569389d945",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee8442c-9d0b-4615-aaab-a4ee03052557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46890d0c-7d54-4c90-b441-3191b1be9c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82c3af1-6a5b-49d5-8b37-99290d102905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ed7cc7-fbd0-4df5-ac8d-ccd6f67e48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70f1d53-e96b-4509-b0f0-8737d574c870",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b592d5f-6d3b-4ac8-8f02-c66c0b6e1442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cfe2f6-8405-4d6d-a16f-38f68972c377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73c97b7-b6a4-43a3-b903-03ebf5fef38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e166bb54-735f-4ae4-b3cb-b06a6ef3155c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c3d498-3115-40ff-845b-221f46692902",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd56fdab-2af5-4dcd-8b09-98b37fb08dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a61328d-81bf-43e2-8b91-b0fbd037c7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea8cdbd-3af6-4dac-b61e-a95f5a1e9521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19bf7df-5a03-442e-945b-87ba5712a7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4292c1c5-7ee0-4b62-8d0e-21b5e3e0c7fe",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc306d9-c9cf-40f2-9516-91450b58f353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62843308-7231-400b-be3d-1c4878883ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde71966-4258-48ca-a875-246ae2576348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c561fea-393b-429a-86ac-fe24a9e0d801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1042daf9-d0f7-4687-8942-e14a4bb7d6cc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e33086-7020-42ee-a42c-0fb9156c4c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd740ca2-6b8d-4321-81a2-4b6cf890ec80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddefac8-3281-4446-b390-8c8e1f4a5461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ffdc5f-dda4-47fa-9063-f8d515c196a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eaee1b-a4c6-443a-a4e8-d7de30fe07e2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d9b8bc-9028-4b63-a9b7-849024056d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9d1c75-3146-4806-be42-ee6a8a3a060b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512cd679-7408-48f8-8099-408317c5d753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3992dd41-c329-4822-9780-f0db5220be28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef142d94-852d-4401-9555-b87ada4e6b7d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73d3deb-25bf-41d5-b8a9-c1721ae33bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141f0590-7765-4bea-806b-1971a2d5b989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340c92d5-4998-429b-b4bb-1910d361b776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f713de05-be6a-415a-ba95-2e2614992003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3a54da-f058-4f9d-b469-ecd7b4c1f427",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a19bc27-a5f4-48a5-b1c4-0cf580bd0c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406fef55-12c6-49df-b156-77b2acb32bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb233d11-5977-4c9e-81f4-ef3ee1017e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8c93d1-2cbe-4724-b2cb-b50aef1cab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff147e4-661b-41b8-b792-af91a65c6ce3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943d39c4-0d02-4513-a370-db46162b2bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2334e6f9-318f-441e-ad76-6617491256a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd18755-b759-4111-9e87-8ba7c84af59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdd8f0d-bcc7-444e-8a14-4958acfbf569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fa0d88-95b6-4c50-9160-b0580c3a8268",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecca83f-28b9-4306-a41f-cb3b8c3e713b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c94d7d-b81e-44a6-8af3-33259ea1d160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df4e2f4-145a-4545-b438-949c60531111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179d25eb-859c-4513-bf64-c62f1c660f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff738cd-24e7-4653-9600-693b14aa8f3c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc064726-afbb-4be5-8bc6-fe5538da5127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a236ae7a-4cbf-443f-ab60-cd0846aa12e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763126c7-2652-4905-8388-c661927780a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a588adf-4a4d-4f75-8ebd-ed52cf916697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023f94d5-993c-4093-8eea-456f8a353944",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c44af5-9736-48bb-b754-56e248025ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3be503e-786d-4ca6-bd58-1008484bb820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32d4f00-0a05-4c2f-8939-53cdd48c9526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d04a8a-59d9-424a-9fdf-780c3d30c129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b497fc32-871d-4df6-b41f-e788b6cbf250",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533c17ae-6499-4544-a254-3f42b69f4bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3458d7a9-57de-45d7-9a62-af6c4d229abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d94d8-7a22-4183-a163-4dfe725978e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79ca684-4844-4465-8e6c-691572bc951c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18c1458-7e45-49d8-9f43-d86784e23103",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec75cc7-11e8-45ca-9899-e5d5e49cab91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5d3a7f-0fb6-463b-9ba5-5137546b5493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52780d4f-1805-4bba-9786-de12a9fe23e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac12c20-85f8-441b-8997-19394b17e73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cedf60f-9234-434e-8193-8ff591913439",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce837f0-c7bb-4a09-a28e-bf38435b23fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d280764d-dd0e-4cb4-8ff7-9299cba1d84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69277433-ce63-46a6-9dab-f1ca394062ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38fea5c-31cc-422a-96c3-c0091b9a7491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1d4ead-993f-40d3-9862-4dd8c3fb0e68",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3203cb8a-bf6e-4d13-a4ec-316396f41cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a544dd7-050a-444b-9b9a-ef933999db6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf3e018-9733-4cb4-840a-f70c6a715ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935e425d-f5b1-405f-afdc-7bfc9c8f50b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d661e-71c1-45de-9e1e-6e02a42e5075",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89936da3-ce8b-4bd0-8de1-e143f810fcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f52a18-e574-4e83-b9c9-e328e59bba9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e110d961-63ec-4d5f-a543-64be40ae8d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276af63c-e929-4aab-ba09-8297c2fe1fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b4a382-b5e9-4ba4-ba10-eb8182cca08c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513b3d8c-6ddc-4fe7-881f-006e4f69c089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059a82ba-353f-463c-aa2a-dec2d451a972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9a5274-7a73-43a6-8c01-ee17329bd79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f67038d-5124-47b4-accf-4bf208451f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2165376-505c-4cf8-ab75-16408c6203a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc076f1-dea5-4aaf-a3bf-61deaa76ae63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9dfdaa-642d-4c70-b875-c36f54ae1e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ed6a1f-989c-410e-ba01-bcd10c5a45eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2bc4b9-d212-4351-bc20-add3aba077f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e14356e-42da-4d10-a99e-0ed93d13ca8a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd5cf5-ed4e-4b8c-a8a2-b34acb9f670a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4872d36f-10bb-4236-b45c-07e62144478c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeabc459-2344-4849-83e6-9a6efd3ebea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374e1dc1-19d8-42f9-8943-cc2c5d02cee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32dbd6c-23bc-4750-ab65-62085cec01a4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f1f24c-6928-4908-9e65-c047773bfd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09e244e-77e2-480f-b0fa-94c265d2c357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab5c3ae-1ea1-4dd1-8b4c-83a2f7801a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331f0f16-66aa-4ce6-b28e-f0fff64e13c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df14a2f-c1c3-4fd5-98ed-fb6321b77523",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1ebc13-b823-476a-9fcd-4bdf29e924ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90d2683-ee35-448a-85f7-451d76be531d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3e2356-849a-4b36-960b-5a17577f4b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162412ec-f9b7-4947-87c4-5c32f8ac9dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57365c2b-08eb-487f-83e7-cabaad82958e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3495c4b9-b8d1-426f-91a4-14724eb93f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d18fbb-c4f5-48c1-9a2a-6b0e7a5f4624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8ad763-f852-4403-aed4-2443352314b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e2ef45-0d37-4f1c-8d59-f47cd201e60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a24625e-5170-4773-ade9-24b990e87093",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f75d4d-047a-433e-84fd-9ad02b0926ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46df694-38bd-4c2c-90f2-66e1e682d029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8d682f-f884-48ad-aedd-41aa576ee4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8df64a-a5c9-48af-aa17-4f2af74e8da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eb2900-d88d-4138-9265-963adda84eb3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80d6fe5-8c50-4efe-835d-3a7fe2b5bbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713079f5-186e-4b58-b5b3-14b6ee1e09d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d4e6dd-fd35-4d42-8f25-381f7027df2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23498838-36c1-4d54-81cf-ef7e6c773b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c5a819-3e06-4d03-91a8-a236c6d76a3a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f794312-715a-4895-be02-3a206b885d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ca79c5-8b1f-49ac-beb6-646aa1ac7cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1417d2-5611-43ba-8824-a8b5cfabd336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b48017-1936-41ec-9d14-c197dbcc57f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9617225b-2753-440a-aa26-fb3ace73da1d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5a5638-c306-487f-b017-2ae08eaf4ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9643946e-d454-443c-bf97-9fd05a7c6d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab4ab18-2d60-48c0-9f30-82c0ad426f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dd7060-3dbc-4913-b02b-a492af9ea9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9099978c-2153-4ca2-afba-a632368ac0ee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b9bdf-41cd-4a36-93cf-2a35d766589e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd93f3af-b894-435a-8b6c-f6e7768395a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c886dd-a58a-4e59-af86-2934a6865482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c919c3-c5ff-4d65-a286-5273c55936ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9062d6a6-9d75-430f-aa93-df4128e2764b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b17ee5-d8ea-4450-98d8-c8303105e6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d3318a-72ae-46a8-9587-d18f33161431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959e5c0a-781f-4d31-8658-7a527ebfeed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bfb0a7-af91-45d5-b6c9-d41df4d1f042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21eeda9-8fa4-4535-9552-4584bf0be276",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68991d8-5bda-4795-94c2-1ed3f75ba2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2128d3-5ba3-4dcc-9b21-475d1228e528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fec030e-2e2c-4a86-ae6b-0bd4553488ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813ba0dc-0c0c-4452-b931-b72e0b33ce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a171ff-41f7-4d78-bceb-1925b44ee070",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773f903c-e657-42a7-9ce1-715ddbe3a33f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc41583-5742-4aec-b0f1-9279262fe1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9479840e-a5d3-47b9-80ae-38984fa4635d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd546b1-75a3-4a69-93e8-5fdee8a1351e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa32de2-6886-4a97-9a8c-87ad08d85b00",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860cf3af-aeda-4c6f-9a23-296032c02e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d637811f-c3cf-4bf4-9db1-9e24454d61d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6950a0f-53c2-43d6-9810-e59987bd269a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a40bd3-85ed-4687-ba13-49edc0a422a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd4c02a-606d-4740-806f-6b092bb7bb2c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a0efce-e4da-4cef-bc61-b643c75ec279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52289b73-b292-4113-9fd2-d0db558add5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c21a699-7808-49f0-88dd-74c25a687087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d49c26-fd8f-404a-b3cf-df8fffd2e052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0275826-9509-4166-aeb6-9926a17003dc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cba2470-61d3-451e-92e1-25dffd81900b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18076a65-9a40-43fe-abe7-f1780ffc1d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1993e935-3835-4ec2-8a07-f95152809943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d929fc2b-40b2-4a20-a931-9c8978ae81e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e775b70-a6e7-4654-8ddb-f1fa9bb15180",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1694adb1-c4e9-4695-8746-8adb81cfd632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dcc8483-f3d3-4f69-8483-fb58404e6e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de37e20-db6f-442a-92ef-beeb9e6c6b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb3ebde-8042-4ab9-a218-68b0285131d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2409747-ff54-4122-b2dd-96562c33522d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1307c6ef-50b0-49e3-ace9-bffb06d3de4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c4a2ee-e015-4af5-900e-b411dcbef906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc5ef0e-45b2-42ad-b451-88bd76979344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0dad5f-0805-4fb5-b32a-abc243f1068d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b72a0c-7fe4-41d2-a7dc-80bfa602a7d0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b6d0b9-1f32-419c-954c-cb4f2bd81be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c4244d-0d67-47a5-a690-d83736f3ff34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7419dce4-af72-4197-99ac-ce35e4b3d491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e28b0b2-b857-4427-8c42-1d3000983a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a68df4b-4e0b-4596-a939-497f3f746416",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e3ae86-d737-4b1f-aeb1-e909f1285ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0ea9c9-a13f-49bc-a51e-88f195a71912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5847e596-5f97-4fc6-9685-df217e706489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ca0d3e-6aea-4b18-8483-55577331265c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835d4539-d025-4f54-b7a9-d24200bc0b58",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b800011a-eaba-4dec-9524-7cfcdc4c6566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c68ef8f-0152-40a2-a8db-491105477dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79372534-639c-49da-9add-e320efa12726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d760c6-739b-46f4-a3c0-3514810a308c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc067d3-6008-4c12-b6a6-6b659e4fe205",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2de489-9288-4f68-970c-2a3173a9aa47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18477cc7-bb8e-4f06-a694-83600b31acfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3734338a-36ed-412b-928e-9fd3eed11094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1245c35e-5bf8-4c8f-8058-e217bb3c13bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1099a0d9-505b-4fc1-ac68-35d5f13776bb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7116febf-b37e-4233-b6d0-01c7fe677044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c15a802-1ac7-4273-8706-df5da50c39e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289dbd39-f937-4303-90f2-2283a47ad0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d92c3f3-7ba4-4743-b7a2-4438fc96edba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcadec4-f2f1-460a-882a-53e843a0d2ac",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5309f50-ad58-4ba6-9078-4667d1761c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48dcf86e-fe34-4814-9074-f27d2e984a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ccebba-84e1-4fe1-8981-b7bce8d6b06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffeec38a-8367-4557-b3ba-0696ba20e8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ed11c2-1b4e-4cff-859f-7b6cca2267fe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0601cbbf-27f0-47fb-a32f-87a557b7aa61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55e7c0de-4679-46c6-ac1c-ea3c686e80cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7f6962-f598-4d0c-9b60-cdfed993c5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c389de1-46f1-49ad-aafe-3aac26bcb501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0351e6-1ea4-459f-a19d-d93de6ffaf70",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1c59cf-0af4-4a82-9a9d-31a07a29aff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5968b89e-f1df-43d0-a10f-6a3706853f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4d38f6-5b7a-4d5e-b1c1-966a84dfac70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5353439e-2f9d-41a2-b641-0d2d20a23caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0dddbc-313e-4dba-b00b-493f68f0708a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68157495-2592-4c44-a21f-31cc9d8c65c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd75b02-0e5c-418c-b52a-0558b9cb8cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7979532-fadf-41d0-a204-5422cca7aa2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c2e52d-78b6-48de-99df-f0be54811a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de53727-a0a8-41e2-9e5b-180924150d36",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cd455f-edcc-4058-9ab0-45f88b63eb04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b13b73a-5845-4f72-a0c7-4dc8ed92a9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cea373-e145-4849-afe0-d04ae35fc1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443f00c2-024a-4f02-ab2a-7f5396505388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bef9f13-141e-4dcb-955d-504bb6603026",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89495ed7-a271-480a-828e-cc41754c47af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef5df09-a712-4c1f-847c-fde6e6ebeef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d72d1e8-86fc-4273-b0c8-434448e71cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4c79f8-b6e4-4b64-b20b-9c472edc7a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480b1719-a6e3-4e71-83a4-63adf67e3d99",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fea5918-08f7-41a1-9299-6aa354a21965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26f8eea-3b62-4929-80d0-5f71696492e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41064ecf-af1a-48a6-8372-f5f8a243f2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fd2da8-697c-465b-aa5b-2a5135d9a17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc223b7d-059e-446d-87ae-a557f254662c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34414cc9-26fa-4fbd-a7bf-e6e0a8173ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "095b26b8-0071-48d1-b043-1cfb0f6c2db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81082f0c-1c12-4288-9b5b-4d48bebdc208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3378571-41e5-418a-b552-18fdf9e98a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf230313-03a9-4bbe-b746-bc2f5fbf6552",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37170bf-ce7f-4a24-abe6-5781425a6fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d844fe78-7dc1-450b-90ad-ee823b99b577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb90ce1-e86f-439c-afd1-f4e0c35287b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6234f60-be8c-4cf9-892e-fd34b882e39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e32f68-9919-4623-9a05-fa76b8d03f01",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e542dd38-451d-482b-a289-48da27432ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3967f1c0-5798-4943-aa4c-51f112e2c7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e7a699-6d06-4fed-88aa-f4ab8bf562c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4296c6-c759-41b7-91de-1fd67c0c4cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b87eb1-9717-498c-8c4e-a97850e8ea12",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513ae9ed-ee7c-45d5-a625-5aeb42889809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c835e7ac-f500-43bb-ba71-b581e6747def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6466653c-9fbb-4b4f-90f8-af130e597a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9215e79-19bb-44c8-b4c4-67a0f9a05c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f839a6a-3be4-48bd-81cb-cc1dfaaacd8f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0171a9e-a1e7-4772-9252-69cf812c6108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807c8cc1-32ae-48d7-911d-89bfa92f5db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f6b0ee-7bfa-4f16-b057-f848ae5feac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63237c52-6a61-4cf7-94b6-2f0793527892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6bace9-fcfe-4d60-907c-d088a68ddabf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6131783-ff3d-4e00-89ac-4216f9c0b8af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a052fc0-4f4a-4bc8-95b3-588d7af4735a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e10082-9073-4cfa-96ec-8376f4394211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55d7615-4833-40dd-ade9-c3c15f9cb4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97c27a-d59f-478e-a285-908be5f03bd7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4ac91c-9728-47c7-bd96-32a1fe871ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ebb760-7016-458b-afb1-b58ec9f89970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086e34ff-62ef-405a-b7c8-2c9ea9bbd226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c33defb-aca1-44af-bbfe-295104b630eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a93470-0444-4231-b5cf-a580e23b3dc2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4291f14f-36ee-41c3-81e0-69d5f4fd2eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ce153b-7ec8-4b06-93c3-6fe38c4289c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194d37e6-61ad-44bb-9d54-185d93289f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c01dc4-f757-4766-afae-d4e4f039fdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b024f52-07a5-435f-bebf-939a102f496d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e39784a-666d-4fb3-b42a-68a9e3de9241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0165b1d-005d-4d93-bdcf-7ad90feb0fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f701b25-31d2-4a38-9640-edeb02d69ecc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88549338-68dd-45b3-9450-558014aff790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6303be-775d-4e72-859b-22c814211e6a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f50c99d-e37c-4c51-9043-55ca002f5044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67fe8cb0-6091-435d-9de3-aad8bb1d3118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b29977-871a-4ab7-b9d7-657e875cc15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd90986-8665-44cb-a9d0-96a429867db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eddee65-6022-48ce-aa2e-8a8333f43913",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d45d451-9dd5-4303-b4e5-d806fdf39832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69201526-6e5e-4cdb-a44e-1c6ea0fbddb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a39776-e1d0-477f-887f-f5d4ebe85ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96723c8-6552-4553-b1af-31385d3bdaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a5c6f6-a1ed-402c-aedc-de4cbed0cb32",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6aa82b-5817-4ca4-ab72-bb973b793283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fdf0f98-d070-41cb-a996-8b132c58d3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701c7a25-1864-405f-8e6a-3abfb0a4fb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efcbeff-4837-41c6-b3bb-ec1c742f2e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3c5d3a-b46f-453c-8bb7-df8d5c1b7ef4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ce517a-b247-4dce-8524-4c1128484a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b63617-c445-4a53-98f5-a791c07ca04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb46c39-4cbd-4b7e-a2c1-1589ac75bd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fb3185-13b4-45c9-bd5d-4185e1a35055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa340e83-60e2-46ed-9274-b7a5d6aa2c20",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d19805-13c6-40d3-8143-62b4b2bd771a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f14a601-039a-4f8b-88db-945207394123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa8355f-95d4-4256-b88e-b2e49874c82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a21845b-d75e-48ef-98f6-b124dccfe096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee9040e-44f8-4732-8f9f-c7ee2acc40f1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb4fe7b-9c9a-46a3-9afc-0336d06698c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0627c699-27d8-4258-bec0-373a64bfcede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f2a694-1242-4a3c-b5df-0285baa4d8f9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90463b94-88ef-4599-b47d-2d428529c5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba9dea2-a784-4ec8-b1cf-c5da47645add",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f99b6b9-4002-4a55-8b7b-a3485f8979bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94df8f45-f00d-4b0f-a04c-9f6ab2d98d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fd6e0c-3314-467a-8fac-c69a615a86ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3d6256-649d-47af-a418-bb38c4b7c296"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8da69c1f-650c-4f60-9df3-0bb1668a6cf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8d2a51d-81fc-412f-b5a1-a1c1909d0ac3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f1c2fb5-a1fa-4664-a6a7-a78df8e31334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd138192-1bfc-49e6-bcfb-c8d9c3c5278b"
                    }
                  }
                ]
              },
              {
                "id": "325c2b2a-e4c7-4b74-bb7f-ee97049ae840",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a00559d-287e-4d0f-9333-c0387b67741d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514518e3-b0a0-4a38-aaa0-5ecbb7b18cf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb5d8af7-5b5e-46e4-9b61-ac128c51f67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be786b59-f4fa-41d8-9583-67f7f2c5c035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d70a2c1-fc05-4e2f-946b-b538969e42d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b46dc03c-da52-4542-b31b-885cbe768c13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbdbb9e9-5aed-422c-909e-2bf36172fb9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a2f212f-e572-4116-929e-c926aa8bd9e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ec457ab-ca85-4578-ac09-19bff0d52bfb"
                    }
                  }
                ]
              },
              {
                "id": "767eba20-f8e4-418b-812f-f9df0ae39783",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f6f772f4-8b45-479e-8bd5-2db78c934bc6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b40a0-bf89-41e6-8536-f13c41801ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4d6e7d78-68dc-4ad3-acec-f613d8129702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b204c335-a482-45d2-9176-14f0eb90cdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390ca488-3e03-4497-9d36-5371cfee8ec4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0455a304-8c8a-47d6-ac06-5638ce541540",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6f8473b-f0f0-44d5-ac96-ac0ca0fcbb53",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d51a044-88de-4a09-a140-6fdc0ea737c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6cb9e56a-5e66-428c-8f76-cf888c23c466"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b6240f2-8e05-4cb8-911b-60aa57f24e74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30c9d5d6-07b5-4da9-a842-e1a7476ea65b"
                    }
                  }
                ]
              },
              {
                "id": "a2e13c66-3f25-4e3c-b61a-cf30a4223fed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a152f23-0ce9-43e5-9c93-8b1f0ef739fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b4af13b-e15d-425e-a193-1029f6dc2fb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84cece82-a549-402d-aeb7-fef8e9bc1fbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8206051-eab8-4415-aa81-80e6357ce58a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da8f8247-99e5-4ed2-9544-3bbbcd380452",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3b798bcd-5da1-49c6-af42-bd6e721680da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de377117-55a5-4da8-a500-46fec8508153",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5593c2a-3f72-49e3-a611-03738ebd451b"
            }
          }
        ]
      },
      {
        "id": "fef808d9-5679-4f9c-9f1c-e1e2a5d33dcf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "deef271f-d014-43ff-b933-3719932e0c8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68d164ac-722a-4da1-b3e0-4975394ef3d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "628b283c-dd02-496b-88c2-611b36289830",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99371daf-8a29-4f78-86ba-2af7b1ec81bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6586eae6-a8ce-4ad6-bbba-59cc77d7fa01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c56341-dbe3-4e3f-ae6c-5a90ad224725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed0e9217-4cba-4e5e-acb0-41d85e422877"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0af3b46a-1585-49ec-91be-466ef9eeb8db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35e8b8fa-ebef-4a68-b8ed-0460b6e8207c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a402a66-5f64-4f47-a562-b23125c6cea3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa87534b-659c-4ca5-bb21-1bd0ad3cdc1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5a40b94-8cd8-4434-b774-b300fa3b97a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "77f62b3a-034a-4cdd-9bb7-267ff32caf6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7179669-85bb-46f0-938f-0eec17c0461f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ace0852-d088-47d4-9272-064c3d910bbe"
            }
          }
        ]
      },
      {
        "id": "1999f2b8-40aa-408a-a878-2ad8fe9ce22d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2d3b99c7-4533-4ef7-9511-c57bd52d5051",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ba67d0d-daf4-495f-801a-85c4688f64e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "655cb006-0bbc-4492-b5ec-698ab9cf6694",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee9c80e-0bc4-49f8-814c-520f2272abde",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "858b1ce9-9673-4177-9758-f9852f055f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f09afe-d719-4243-9aa5-4dcb84894d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32e32ff7-cb64-4ac4-9101-9e13eaf16981"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ddb312-4620-4f20-8949-9096283ffcc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e3b6a3d-66ee-4837-bc2c-d46afc9fcf48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "350ef362-026c-4237-8633-03b971e866ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e71e611-562e-436d-a6ad-d20606e823e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14e96ba4-002c-4575-a076-0629a4524493",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "333ebaa1-6c91-4911-aa19-5523c3fe5619"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f700ee75-3e3b-4ec5-9a30-bbad3460863a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1aa155c-071c-46c3-8467-5fd612e65eeb"
            }
          }
        ]
      },
      {
        "id": "30f840d2-1b64-4677-a2e9-82a33ea4ec5f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "96b0e05b-e995-43eb-bd37-31154802e048",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c4d24ea-75f9-4f0a-a408-922504958772",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b024323d-256f-4573-a615-87bacf654b92",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1d24d6-888f-4808-8b4e-49bf4d2cce27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1cf4a9f-4b53-42c9-b335-60ed7c7d89ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28add67-6f47-4aa8-886c-7db73f5e089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fde2126c-5446-4cd7-af44-18251914f1bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0c8ac91-aa12-4baa-aa21-e1dda33abb81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d59dab5b-5838-467d-ba5e-17723a125f7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be468589-50ea-4efc-8dbd-a4ba204c7ea2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83102748-576f-4ef2-9f36-833831fee156"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e82943a1-b05a-42d8-8f1f-8cb1fa01cd72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c476f7f0-c725-4ad6-a3bf-7fc2b7b4a59d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d259470c-0689-4795-b5a6-eb8df5d7dc1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4765688-ec64-4c7d-a8da-6e43d77084dd"
            }
          }
        ]
      },
      {
        "id": "56df3ef6-c93f-4a04-b2f6-da933e421ae6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3efb1cc-7332-4493-a056-19d531417818",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cfe1265-40bb-453f-a0d4-c419a781af23",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4ad9cca3-9800-40af-add4-4192e1c65dc8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfb5a981-b76e-4a75-aa59-e97337947b90",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ded45c3e-05bb-4948-b58a-7838966d47e6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 122.74206349206351,
      "responseMin": 7,
      "responseMax": 6926,
      "responseSd": 591.7995365030847,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724892130962,
      "completed": 1724892170259
    },
    "executions": [
      {
        "id": "ce08a575-2e10-486f-8096-e3222ef0e66a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "56bb5d87-3d6b-475a-8862-4126466b9c52",
          "httpRequestId": "1feb7819-0dac-46fb-9784-f34ac9760e9b"
        },
        "item": {
          "id": "ce08a575-2e10-486f-8096-e3222ef0e66a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a2efba21-5521-4060-8bce-842615fa900a",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "ce205b03-7fa4-481b-a2b0-6f7c7b8f8b07",
        "cursor": {
          "ref": "626b77ca-1bd4-4e6e-ab67-d499f8720c4f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "95deed3f-809f-46ea-82cc-c8f2f880230a"
        },
        "item": {
          "id": "ce205b03-7fa4-481b-a2b0-6f7c7b8f8b07",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7932a02d-a1d6-4b53-8d56-3f6ff562160e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "71d24f18-1363-47dc-8831-6f253685e241",
        "cursor": {
          "ref": "284aaa6d-81ad-4ae7-90dc-1c8e8a3d4d09",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4c9681be-b528-4a85-be58-122d674eef07"
        },
        "item": {
          "id": "71d24f18-1363-47dc-8831-6f253685e241",
          "name": "did_json"
        },
        "response": {
          "id": "7efa29e3-9828-4543-8086-5e29b2f7c23e",
          "status": "OK",
          "code": 200,
          "responseTime": 596,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c32bbe-bec5-4dbc-afd3-529eab9e55c4",
        "cursor": {
          "ref": "ff140226-87c5-4909-a1f8-14fbfb1e978f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2f6e3f6a-8efc-4188-bb34-11d4b9d1675e"
        },
        "item": {
          "id": "97c32bbe-bec5-4dbc-afd3-529eab9e55c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3c97fbe-9776-49d4-958f-5f789fa7e1a3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 470,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c32bbe-bec5-4dbc-afd3-529eab9e55c4",
        "cursor": {
          "ref": "ff140226-87c5-4909-a1f8-14fbfb1e978f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2f6e3f6a-8efc-4188-bb34-11d4b9d1675e"
        },
        "item": {
          "id": "97c32bbe-bec5-4dbc-afd3-529eab9e55c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3c97fbe-9776-49d4-958f-5f789fa7e1a3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 470,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfffe1a-1ce7-45e4-9efd-6f3e84aee464",
        "cursor": {
          "ref": "f1d07e20-841a-4cde-a3a3-6079488d6b01",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ca78afb6-bf10-4720-b10d-aa931221079a"
        },
        "item": {
          "id": "1dfffe1a-1ce7-45e4-9efd-6f3e84aee464",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "76045a48-08b9-4642-b5ee-4eb0d5ff170b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4261e6c6-5917-4f2e-85e6-9268f658c53d",
        "cursor": {
          "ref": "f09da059-b8ae-4bc9-90fe-ae5cbc6baef2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f8018812-2a4b-4528-a9e6-ed2731dcedd3"
        },
        "item": {
          "id": "4261e6c6-5917-4f2e-85e6-9268f658c53d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "44f0859f-bad5-49a1-a61a-2bcb9061791f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dcc477-0c54-43b0-9360-9bc39d325cb3",
        "cursor": {
          "ref": "67269e93-cd66-4396-ad3b-908cbfce73de",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "926cc158-6b5b-410f-b4fd-50254473c6e5"
        },
        "item": {
          "id": "46dcc477-0c54-43b0-9360-9bc39d325cb3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a1fd77ec-7c57-495a-995e-5d8d08e4257b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91925157-3597-49e3-98e0-0e1e451c4219",
        "cursor": {
          "ref": "8fea08c7-c65a-4e3b-9669-32931549a8d1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96551361-8d06-4bb8-b312-a2632c85fb32"
        },
        "item": {
          "id": "91925157-3597-49e3-98e0-0e1e451c4219",
          "name": "identifiers"
        },
        "response": {
          "id": "e7430cbb-da01-48b9-9703-42a2279466dc",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac255323-cdb7-474c-a953-6e604b326387",
        "cursor": {
          "ref": "c0340768-c49b-46f2-88a8-e3cfaadbbd30",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9d3b3d88-398f-4fb2-8a48-8d7bdd454a0a"
        },
        "item": {
          "id": "ac255323-cdb7-474c-a953-6e604b326387",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b54b7813-f27c-4727-b6c4-959d4a206ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746a69cd-db26-4601-a959-f39c17d09d71",
        "cursor": {
          "ref": "3d41435b-6338-45a6-a879-872e828f84dc",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5a03582f-882e-4a0a-ba2d-3d000ec639ee"
        },
        "item": {
          "id": "746a69cd-db26-4601-a959-f39c17d09d71",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5b0af303-8361-4b78-8db5-fe1eba000e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211c6ea9-9277-449f-ab48-6bae195ee28f",
        "cursor": {
          "ref": "302fcdd0-2d16-4ae5-9963-f4e65412be31",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6a3c255b-7989-4c1f-8c0c-7c68773d8375"
        },
        "item": {
          "id": "211c6ea9-9277-449f-ab48-6bae195ee28f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a7b66d40-cf74-486d-a0c8-5012836748a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802e4ef8-9ff1-410a-a419-a5cb01741a98",
        "cursor": {
          "ref": "34c3b0cd-c3d8-436b-b5bd-88b595c76c16",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2439d6e7-1ee7-4fa7-9917-50e2797bcf47"
        },
        "item": {
          "id": "802e4ef8-9ff1-410a-a419-a5cb01741a98",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8579db60-4fca-4a1e-9d01-c46744630e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83eff67-d601-40a1-9ca6-16fc61e5f399",
        "cursor": {
          "ref": "c1c81e10-c1e3-4398-9879-cb60b1a98807",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4197079d-bdaa-4fe1-a53a-8815b07015f6"
        },
        "item": {
          "id": "c83eff67-d601-40a1-9ca6-16fc61e5f399",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b1ee7c04-e364-4516-8b5e-b910aa20187b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dc75f5-9815-4bd5-9584-d2f18a49fe35",
        "cursor": {
          "ref": "20a51d9a-781c-4de0-bd6f-1f75d7b80563",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fd06c323-2655-412a-8fce-589a9c9f7a1f"
        },
        "item": {
          "id": "33dc75f5-9815-4bd5-9584-d2f18a49fe35",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "af77b873-7caa-41ec-b497-789031122711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422fc703-da00-43b1-bd04-60850c3631eb",
        "cursor": {
          "ref": "bb0ef3fc-030b-4ae4-a2ce-f7bc4fd6c96c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a4d8f8e8-e423-4291-bfc9-24c5a61c7585"
        },
        "item": {
          "id": "422fc703-da00-43b1-bd04-60850c3631eb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0faa3763-fbe1-46e9-9edb-21a7df198598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebbc7ef-d904-4642-90f0-bb714fce2fe2",
        "cursor": {
          "ref": "b42e856e-b343-4acb-b2ac-2b555868512f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5ffabdd5-09b3-4fc6-a6e2-c7537ced5d4f"
        },
        "item": {
          "id": "7ebbc7ef-d904-4642-90f0-bb714fce2fe2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3926af13-fa18-4d63-9653-01091b820041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b20fb4-0f9f-4dad-8923-197ea03da1d2",
        "cursor": {
          "ref": "36b08c06-43ec-4ec4-8c75-df50bae304bd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6aebc88a-89b9-4efb-bc32-9f3e9e2e1c42"
        },
        "item": {
          "id": "55b20fb4-0f9f-4dad-8923-197ea03da1d2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "84894fab-da3f-4c29-86ae-f6fda7d7d92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2c9717-5067-4973-8dbf-199898cd9fb7",
        "cursor": {
          "ref": "c22b6448-ccf2-49bd-a24f-9c9940c19c76",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4099c373-5d5c-46e0-b96c-9ced4c90adcf"
        },
        "item": {
          "id": "3b2c9717-5067-4973-8dbf-199898cd9fb7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c254c58d-e5ea-4477-9f34-2f81cd1375f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9686b133-7b0e-46cd-bf7a-a5fa92dda25a",
        "cursor": {
          "ref": "c589406d-a0c5-426a-92cd-a27adfc05291",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "326dc208-e1ea-47e7-b513-902c95cf375e"
        },
        "item": {
          "id": "9686b133-7b0e-46cd-bf7a-a5fa92dda25a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "44100afa-3774-4e2a-a445-97c38113942f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0d3bb6-0e25-4575-8ee3-d0db647e7501",
        "cursor": {
          "ref": "6fc5468d-046e-451d-ab89-50d9ea9bddd6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d7b8aaf2-0621-4177-9da2-ea3a5ce874a9"
        },
        "item": {
          "id": "1e0d3bb6-0e25-4575-8ee3-d0db647e7501",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a46985dd-c2fb-4111-817d-a1a7a78b2216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5571ab-e6e7-4d78-b16d-43404668b3cb",
        "cursor": {
          "ref": "dded3da7-f920-4564-80e2-2e8b58165c79",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9f237660-f5ca-425e-9763-93b4d0240a7f"
        },
        "item": {
          "id": "de5571ab-e6e7-4d78-b16d-43404668b3cb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9949b362-baba-4ab7-be20-4ac346301832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e86889-fa9f-4182-a121-746c675917f6",
        "cursor": {
          "ref": "ac19dd5f-086d-4489-9674-76ee73e23573",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e671ecc2-d3b5-489c-b0e6-ac92f620b0ca"
        },
        "item": {
          "id": "e8e86889-fa9f-4182-a121-746c675917f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "578f3168-4339-45e4-9595-2ef36c73b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ef9a1f-dc95-497c-b450-7e83d743137b",
        "cursor": {
          "ref": "134f3522-b8fb-4a9d-b591-48d31a109ac1",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "abf49953-03f5-4742-b541-6d8a923d622d"
        },
        "item": {
          "id": "51ef9a1f-dc95-497c-b450-7e83d743137b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "28702c06-bfcf-4819-8856-d40b13400271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2788f245-0e1b-4624-8f3f-b7e0df13ca30",
        "cursor": {
          "ref": "39af4355-56b2-4df8-b782-0fe7daa62521",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ccd57916-d446-4a3c-975b-a108a352a666"
        },
        "item": {
          "id": "2788f245-0e1b-4624-8f3f-b7e0df13ca30",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d708a41a-6d81-4455-af40-30cad7f554d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373932f3-4fb6-4c69-a8ad-5457b43d3487",
        "cursor": {
          "ref": "0e03110c-e24f-47be-a0a3-212dc14fa644",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d47e28a1-efb9-41db-90cd-83ec3725a18a"
        },
        "item": {
          "id": "373932f3-4fb6-4c69-a8ad-5457b43d3487",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f18de088-bb2d-4025-86d4-71bed957220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba471e8-1e84-4db4-b23a-c25b8f9bb4c7",
        "cursor": {
          "ref": "14687bfe-b2dd-4667-a81b-ec1a2480358d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0b7d2c7a-4c48-4868-8673-dfff2b632fe2"
        },
        "item": {
          "id": "fba471e8-1e84-4db4-b23a-c25b8f9bb4c7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0520eb32-6599-401f-a493-6744c3b707d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a226ef-ed88-4161-82b2-fe569ba7d006",
        "cursor": {
          "ref": "1b860c7c-5dd5-4a36-94ba-6aae6d855eef",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "865b6ad3-b2b8-4363-b1c1-7d129ba28a34"
        },
        "item": {
          "id": "99a226ef-ed88-4161-82b2-fe569ba7d006",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "caa7940e-c058-441e-82ef-d5db19ba1819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fd4d17-5cdd-4a95-9019-70f6d04f5ee0",
        "cursor": {
          "ref": "137ba50b-55ed-4a72-a00d-8c977a86a38f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "917c5b95-ccb8-41c2-be01-bfe1f23f6761"
        },
        "item": {
          "id": "46fd4d17-5cdd-4a95-9019-70f6d04f5ee0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f96a42c0-0dc8-4ba2-b7f3-0065a03ea988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138c278c-690e-49de-a089-eec055f581ed",
        "cursor": {
          "ref": "6fec5485-f4ea-4a83-8706-fad04b250626",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6a400b8c-ed47-4823-a72a-79cea5092940"
        },
        "item": {
          "id": "138c278c-690e-49de-a089-eec055f581ed",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bd0448eb-423c-461c-a138-865eaf89bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dd5397-1fca-43ed-98aa-c7a8b3cfaada",
        "cursor": {
          "ref": "8664ad58-c153-402a-b9f5-c388fff65a53",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9f8384b9-3cfc-4fc7-8de8-f3946cfc53e3"
        },
        "item": {
          "id": "f5dd5397-1fca-43ed-98aa-c7a8b3cfaada",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f9994542-3fe9-4eb9-a0d6-2cf9d8027824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7f869a-ad78-4f7f-b0bb-aa609fe739e4",
        "cursor": {
          "ref": "b2bd27e6-85cb-4220-8aea-ac3ae7ef8050",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "53a6981f-9aec-4c19-82bb-c885a06fa5ee"
        },
        "item": {
          "id": "ce7f869a-ad78-4f7f-b0bb-aa609fe739e4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e787aa30-cc59-481d-b85c-757c9e5c7719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e86f92a-2362-4327-adca-9b907d34c3a0",
        "cursor": {
          "ref": "5ea654ae-573f-4e93-8d58-6a5ee84ae137",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c73b2a25-82ce-422c-9cfc-d080b375145b"
        },
        "item": {
          "id": "7e86f92a-2362-4327-adca-9b907d34c3a0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "80e3d981-3fa9-49cf-b671-0057a79c5f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0df580f-6b51-49f9-9179-c43d4bb9de26",
        "cursor": {
          "ref": "387d7717-d2e6-437e-9fc1-e238fef959e5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "692cd30e-1ca3-4ef7-920b-c16063675051"
        },
        "item": {
          "id": "a0df580f-6b51-49f9-9179-c43d4bb9de26",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d85bae3d-c8dd-4fa4-97a7-9bc2c38c76df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85156372-6b38-4a71-91e7-28ff39e1f018",
        "cursor": {
          "ref": "d7483c5d-fb93-4f9a-b969-4ff62cc03714",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "70e9859d-afa5-440e-b161-471261cf4b2b"
        },
        "item": {
          "id": "85156372-6b38-4a71-91e7-28ff39e1f018",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "edd01853-766c-4a4f-a62f-9cbd1241d2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed4131e-1bb9-40d0-bc4c-0be2f3f1e072",
        "cursor": {
          "ref": "1f8ca7e1-9cf0-401a-8fc7-d641e3e242dc",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d4458b7a-c713-4094-8eaa-7c9b3d893728"
        },
        "item": {
          "id": "9ed4131e-1bb9-40d0-bc4c-0be2f3f1e072",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6675724d-a91a-4e8e-9181-c6e764cf187c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db120828-a3b8-4355-aaa9-2593e82943bc",
        "cursor": {
          "ref": "00e2adac-900e-4ace-a435-c23a9950f72b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "85c1000f-634c-4fc3-90c5-1f4ab33b6a40"
        },
        "item": {
          "id": "db120828-a3b8-4355-aaa9-2593e82943bc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6a64a127-9320-438d-8abc-9e8fdfd68620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26feb0c9-32fd-4262-bfbf-e832a4278e31",
        "cursor": {
          "ref": "2e3887d6-78de-49a0-b513-9fa88c3c8cc5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "713ddcdc-6a09-492b-9813-efe9d57efde9"
        },
        "item": {
          "id": "26feb0c9-32fd-4262-bfbf-e832a4278e31",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "85c19e03-1ce8-49a8-b078-794f3576aca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0443f5a3-c6be-4c34-b44d-439838b494d9",
        "cursor": {
          "ref": "0ef40934-e1bb-45da-a92e-4c5b59cb26cf",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7e7a9c5e-3bf7-42ba-a00d-6c00c63e61ae"
        },
        "item": {
          "id": "0443f5a3-c6be-4c34-b44d-439838b494d9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ec2c71a0-b4fa-4d93-a540-cc718ec1ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed8b07e-b2c9-4b3c-82de-66cff1eb7e89",
        "cursor": {
          "ref": "4dc659e6-754f-4f4c-9ff5-d6a0752de33b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "00c44f79-0210-4cc8-b672-1a6a3d032389"
        },
        "item": {
          "id": "7ed8b07e-b2c9-4b3c-82de-66cff1eb7e89",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fb19a81d-42f1-4ba4-8e4b-41dd0b66f8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d958bad-757c-4cae-8084-a36a1235bdc7",
        "cursor": {
          "ref": "39ee45b0-e218-44b2-9ba2-64eab1090b13",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "83dbd5b4-e17c-4998-80a4-0349386d61c0"
        },
        "item": {
          "id": "3d958bad-757c-4cae-8084-a36a1235bdc7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7c7860b5-b7b9-462e-a9f3-82faec5a8f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9362623-e8cf-4951-89a3-33db8a6bed39",
        "cursor": {
          "ref": "5610bb9c-1f7b-44eb-8340-1b881c2574e6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e4bc3893-498c-4658-a96a-c9b609551394"
        },
        "item": {
          "id": "c9362623-e8cf-4951-89a3-33db8a6bed39",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1ebb82cf-2bf5-49c8-92ad-97b281023a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e97fcc9-c15a-456e-8a08-2a31f8259991",
        "cursor": {
          "ref": "f0de6aeb-7a62-4a41-beb6-e78540e7083d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "93e2e225-6dd1-4316-bd65-649c034ad73d"
        },
        "item": {
          "id": "1e97fcc9-c15a-456e-8a08-2a31f8259991",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c6eb885b-a53f-4b4b-a57f-03cd5cc87b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073bfd33-cded-42c6-9d58-6a1af7a589f4",
        "cursor": {
          "ref": "360d5fff-25e6-476d-bfbb-b8965576ea9a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a5635118-3d04-4ae2-8ac8-54408e370d81"
        },
        "item": {
          "id": "073bfd33-cded-42c6-9d58-6a1af7a589f4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "57070dd6-3cfa-4beb-b17b-8cc9a4423114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e92963-9394-459b-b48e-45215c70e1b0",
        "cursor": {
          "ref": "7fd470e4-00e8-484c-bbd7-4a409d87576f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "57d6c62b-2273-4648-ae2b-604a2951ef18"
        },
        "item": {
          "id": "c9e92963-9394-459b-b48e-45215c70e1b0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9403226d-461c-4175-9d1f-1715f09b6260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3cdb8f-01ab-4919-b634-6db80e25d5f8",
        "cursor": {
          "ref": "e5576804-0153-49b4-a6f2-291df586033c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f89ccde2-7919-46e2-9ff4-17c7cadb4524"
        },
        "item": {
          "id": "9f3cdb8f-01ab-4919-b634-6db80e25d5f8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0f220f1a-fde4-4c0d-bf4e-267c94c0cf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91fbbe4-9f76-4f30-b0e1-92273212e3fa",
        "cursor": {
          "ref": "2a98bce8-8199-4b05-8ba4-404ffc40c1a8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cefdad1f-8359-4fb7-bccc-6bfb9e867e5e"
        },
        "item": {
          "id": "a91fbbe4-9f76-4f30-b0e1-92273212e3fa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "babcfc58-d3aa-46a7-a9d7-6693463b0412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58792358-7f5a-416d-95c1-249ad7349c5a",
        "cursor": {
          "ref": "a32c4357-a369-4651-a430-002765dbaecc",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6dcf84d6-f4ab-4edf-b712-be48ad74d882"
        },
        "item": {
          "id": "58792358-7f5a-416d-95c1-249ad7349c5a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dc59fad6-5ec0-4320-8e7d-52c1c6d7629d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa57d136-5017-4ebf-80ef-bb31a81a5594",
        "cursor": {
          "ref": "51ed12f8-4e19-47a0-b34a-6a671be0b849",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "53b8d955-4ee0-47df-ae8f-68082c9d99b3"
        },
        "item": {
          "id": "aa57d136-5017-4ebf-80ef-bb31a81a5594",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aebf7b3f-0067-47d1-a48b-eebac1cf5991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b57a2c1-bd22-4a5b-88c1-a3558a3d6daa",
        "cursor": {
          "ref": "21cad4d6-657a-43dc-98e1-bc8e760ab772",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7e64a4fb-c855-40d2-a01f-1f5172415bf3"
        },
        "item": {
          "id": "0b57a2c1-bd22-4a5b-88c1-a3558a3d6daa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1e4dbef4-f813-4baf-95f6-f8be2251608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6429ce-20b5-490e-a306-be7a9da36ebe",
        "cursor": {
          "ref": "a2fafddd-6883-435f-8471-d0e4ff45614c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "461e41d0-321a-4724-bf7b-155a5d8049f3"
        },
        "item": {
          "id": "0b6429ce-20b5-490e-a306-be7a9da36ebe",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e0a32d19-b69c-44bd-aab7-82e53729249d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4c59ea-94d3-4e5b-b293-c618f20a6bcb",
        "cursor": {
          "ref": "5ccc0bda-7c18-41ce-9635-9eb2030deea7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "39112695-bdd9-4827-9a86-0b6d269ef1f0"
        },
        "item": {
          "id": "7f4c59ea-94d3-4e5b-b293-c618f20a6bcb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b159bafc-de5d-4b48-b531-19f2a338dd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889559b8-45ed-4194-9647-b7b7ff589fe2",
        "cursor": {
          "ref": "b7b75a3d-718e-4691-9f43-c666f61e2736",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "90988ab3-ce7e-4cb4-bf09-f4363410d404"
        },
        "item": {
          "id": "889559b8-45ed-4194-9647-b7b7ff589fe2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "53b2606f-21e9-48ac-969b-7c9463b381ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd77a03-7646-4113-9ed0-8d0bce3578cd",
        "cursor": {
          "ref": "3e626b56-c95f-4a96-bb19-1f08254025f2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5a9a0244-340d-4d28-8f6f-226fbd504b50"
        },
        "item": {
          "id": "4fd77a03-7646-4113-9ed0-8d0bce3578cd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "54a99962-8ce5-41ae-994b-ef9076597f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2057b2-1f63-480b-8bcc-08ff636f0137",
        "cursor": {
          "ref": "994782a1-738b-45e3-976f-28c263a292ec",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f5990d5f-5a94-4e94-9284-cee3abb0f852"
        },
        "item": {
          "id": "3b2057b2-1f63-480b-8bcc-08ff636f0137",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "032cd37f-330f-4fbf-b800-c507ec937706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e3220b-6a1b-4b13-b89f-62057bbf9fe7",
        "cursor": {
          "ref": "b51df81e-c82d-4a5d-ac55-6bab050733ec",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fe13dbb4-489a-46bb-92bc-8011a006c003"
        },
        "item": {
          "id": "68e3220b-6a1b-4b13-b89f-62057bbf9fe7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "923ae00e-c44a-47ab-b24f-e4b2a00bea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08304165-eae9-447f-9cae-3b86fe4c92b4",
        "cursor": {
          "ref": "93658d6d-0985-49c0-91cc-b7e6dcf104e6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "baeb4674-63ae-4bcf-8970-c122dd8b1ac6"
        },
        "item": {
          "id": "08304165-eae9-447f-9cae-3b86fe4c92b4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e3cfc338-fba1-4e18-9bbc-24b233b44489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e38c148-5c4a-47eb-8db9-bfcf75b43cef",
        "cursor": {
          "ref": "4c733244-b122-4ae7-85e2-0cd6a675c97e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9052f00-dcca-4c79-8b42-85c1a5ef265a"
        },
        "item": {
          "id": "2e38c148-5c4a-47eb-8db9-bfcf75b43cef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b566c9c5-2140-49e3-816d-5eca97ac606a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f17442f-99c3-47b1-9745-4584f68087c5",
        "cursor": {
          "ref": "19704717-a921-45fe-a498-8e2feb6483d3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cfe5b3d1-19e2-4396-b4bf-2d9507c06629"
        },
        "item": {
          "id": "2f17442f-99c3-47b1-9745-4584f68087c5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d29779c6-cbfc-4343-9f04-9ca2e9300433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8e1024-b5c7-4d47-aeb0-a1d4ea3dc3c4",
        "cursor": {
          "ref": "048a232c-88f3-4a23-a2b3-8f3aa2ddb7b2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9674801d-be5d-403c-98d0-c3115d47429d"
        },
        "item": {
          "id": "df8e1024-b5c7-4d47-aeb0-a1d4ea3dc3c4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5df35fc6-25f9-45c1-bcab-025e743a6079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53792fd-89d9-4d29-a045-983f38ee745b",
        "cursor": {
          "ref": "68355b1b-a14d-4fc8-b787-0f31f50f51bd",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b45a5c4c-175f-40d8-aa38-315bd6b63322"
        },
        "item": {
          "id": "f53792fd-89d9-4d29-a045-983f38ee745b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ae4ba4ad-ad33-4039-8596-30aff79b9574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94f4b2b-bb4d-4d08-8810-70c57715cd38",
        "cursor": {
          "ref": "90891ed1-774c-407a-aa32-a962f1941eb0",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fbc17c53-4aaf-4f26-baf2-4cd7503f87a5"
        },
        "item": {
          "id": "a94f4b2b-bb4d-4d08-8810-70c57715cd38",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3651feea-f52e-4382-ba88-8428fdc42a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720a8cda-52cd-4517-9e84-4bd91fcb5688",
        "cursor": {
          "ref": "fabd4965-6e0f-4622-9591-b345d5dae4b6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9e7258ff-4d25-415c-91d8-b028762d228b"
        },
        "item": {
          "id": "720a8cda-52cd-4517-9e84-4bd91fcb5688",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c6891667-f2a4-4ce1-a7d1-3b001248d9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c50738-5aee-4566-90c4-f5e0ee6b0505",
        "cursor": {
          "ref": "b82c42a5-3032-4395-b012-eb354593df90",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "83c3e0d5-c2e5-4787-abad-249091eaca9c"
        },
        "item": {
          "id": "e3c50738-5aee-4566-90c4-f5e0ee6b0505",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "04f9c02a-f862-478a-92fc-705ef5317c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a645c-d455-4c29-8153-cc19232c1309",
        "cursor": {
          "ref": "14d62421-3821-4618-b174-aea0e1d81c81",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7f029aa6-7f44-4fb0-9aee-374f50aa9da3"
        },
        "item": {
          "id": "015a645c-d455-4c29-8153-cc19232c1309",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ebe45d84-09cb-49f7-96e4-3037dca3087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9205eb8e-01e7-4f29-bbd1-619155fbaad8",
        "cursor": {
          "ref": "6868a382-1674-4e20-96f2-57e44c7be00d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b45298dc-ab05-4018-ac98-31a60182e854"
        },
        "item": {
          "id": "9205eb8e-01e7-4f29-bbd1-619155fbaad8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b70fefa3-4281-4199-b7cd-656619363774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26944d81-b404-48cf-a0b6-b506881e4298",
        "cursor": {
          "ref": "29074921-db3a-423e-968b-e0a4699277e3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d97e1f9f-3119-4dde-b1e1-eae414c6467f"
        },
        "item": {
          "id": "26944d81-b404-48cf-a0b6-b506881e4298",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dd0ad44c-c4f4-4857-9c29-d656fe80a734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f28d95a-8e62-4848-8b50-13e533f7cb2f",
        "cursor": {
          "ref": "5d0951bb-59d6-442c-98e8-40001f6b3539",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a256b69f-c45b-4529-8e50-d5f716b5a4c0"
        },
        "item": {
          "id": "5f28d95a-8e62-4848-8b50-13e533f7cb2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3b726ef9-80d3-4606-9afd-4e0389fc573c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071f2b06-d641-4cf6-9c84-17e3e9574a62",
        "cursor": {
          "ref": "777d4662-8983-48ad-ae6b-db794a6f3a27",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a8b300ca-9397-4d34-b519-36adcfae4c9f"
        },
        "item": {
          "id": "071f2b06-d641-4cf6-9c84-17e3e9574a62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c057f61f-7f36-48b8-9775-40d7ef00cd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e0579b-7343-4693-b65e-d3229ad94ee3",
        "cursor": {
          "ref": "0cb680ba-577b-465b-90bb-8e6c0bc406c0",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "68fd5eef-567c-434b-a92c-211d619254f9"
        },
        "item": {
          "id": "60e0579b-7343-4693-b65e-d3229ad94ee3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1020f5f8-64f7-4c4f-b773-7972fe36f463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2acd90-44f1-4352-95fe-c5d72134c16e",
        "cursor": {
          "ref": "6ada3e74-c9bf-450e-9373-f676a2f52947",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2ddad4d4-dac5-462a-89a4-74d3b7ab31cb"
        },
        "item": {
          "id": "7a2acd90-44f1-4352-95fe-c5d72134c16e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "70c95a27-2480-492c-8987-c8dceafce2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a5553e-bbf3-4803-b074-163e09debf5e",
        "cursor": {
          "ref": "e209fc74-9d76-4b41-b719-5b618e636c94",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6f0dec7b-f84e-47ab-b094-cdea9cd427b5"
        },
        "item": {
          "id": "04a5553e-bbf3-4803-b074-163e09debf5e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c0d5578e-7998-437e-8d22-147dbe2202cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c17351c-fed1-4cd5-b878-d225f28af6d6",
        "cursor": {
          "ref": "b6cbd341-4d27-4867-b8d0-1afbc702686b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "771503b3-73b0-4ee9-8758-fa95312da1c5"
        },
        "item": {
          "id": "8c17351c-fed1-4cd5-b878-d225f28af6d6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cac126fb-2ce7-47c8-8e6e-e172608214f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59306ed6-5c96-463e-a537-e07a679841b2",
        "cursor": {
          "ref": "fc0cb924-606f-474c-8cda-a78670b542d2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "293adb98-b071-457f-9bad-478cf616f386"
        },
        "item": {
          "id": "59306ed6-5c96-463e-a537-e07a679841b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "32dc9939-06c6-4d37-9313-05f7fd932524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eebbad-9441-4307-9c25-5949a888fe81",
        "cursor": {
          "ref": "9552b9ab-208a-4c0b-a636-3a17e8659ee1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cdfb1bd1-1610-4e69-a3a2-df71bbf34094"
        },
        "item": {
          "id": "f5eebbad-9441-4307-9c25-5949a888fe81",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "69d661f5-49a3-4741-a57d-dcb9ccb1053b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f6b16-1219-4015-8cfd-4864c75a55b1",
        "cursor": {
          "ref": "656342b7-e4fc-4aa4-92c4-4e87d695f18a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "810303bd-e1d2-438a-9716-9b52816da898"
        },
        "item": {
          "id": "855f6b16-1219-4015-8cfd-4864c75a55b1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7b39c197-70f6-4eb7-bf2a-4017ee136a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0900a48-5843-44a7-bf9c-f4ba7c97b9b4",
        "cursor": {
          "ref": "734b26d4-ccf4-4b45-a651-f54d17975721",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "29dc7e2d-d914-4d80-bab6-5f1d34c50ab5"
        },
        "item": {
          "id": "e0900a48-5843-44a7-bf9c-f4ba7c97b9b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fdfddd7a-45df-4eec-b0f7-3d6976e47407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8829f26e-b0cd-4695-bd49-5fba9e1224fc",
        "cursor": {
          "ref": "71179dab-16c4-439d-b066-24306eb470b4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "613e842f-c573-4092-a371-5981a9a1db4a"
        },
        "item": {
          "id": "8829f26e-b0cd-4695-bd49-5fba9e1224fc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1efc994f-d560-4205-9e5c-328be6379180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35311fe-6bc8-4f7d-be0b-e3a622bfba23",
        "cursor": {
          "ref": "48c4171e-ba68-49e6-94a5-30a5e19d89e9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "baac7a7b-1f70-4b5f-9a82-cf1c2211204f"
        },
        "item": {
          "id": "f35311fe-6bc8-4f7d-be0b-e3a622bfba23",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59d71eab-60e8-456b-9022-13eb636dd64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84235413-c54e-4566-8173-eadad2322031",
        "cursor": {
          "ref": "ec5b62dc-a248-4ff8-aee8-ed8a0d43b62b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dc12cf51-8ad5-4969-9c5b-070ef4615e2a"
        },
        "item": {
          "id": "84235413-c54e-4566-8173-eadad2322031",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "96bcca50-8a44-4255-b349-fa0634b3329c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533d5032-4fce-42f6-a5ce-94277213168a",
        "cursor": {
          "ref": "083fe17e-6df4-4405-8a14-3302b9c2c856",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d5b4790c-8e62-4640-9749-cf86585f89fe"
        },
        "item": {
          "id": "533d5032-4fce-42f6-a5ce-94277213168a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "603e06e6-11b5-4f50-95d3-0006a658654a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004802f9-7734-4595-8fd5-f7ded1995564",
        "cursor": {
          "ref": "8aed6f78-6340-42ee-951c-71f8e5d1cc40",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9bea8282-679d-4f45-8eca-e1b6f9015659"
        },
        "item": {
          "id": "004802f9-7734-4595-8fd5-f7ded1995564",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e25160c8-5251-47de-b8cb-d7b668f25019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677275cd-e351-40bf-9f3a-bd0176da36f3",
        "cursor": {
          "ref": "6898e583-fa61-48ab-a25a-0737ef013010",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d6e50ceb-e0e3-4e86-9fa0-375418a16ff8"
        },
        "item": {
          "id": "677275cd-e351-40bf-9f3a-bd0176da36f3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dd46e3b2-9e5d-4845-9956-1c0c0ce94b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33381a2-caf2-46e8-a556-95da7e53c2f2",
        "cursor": {
          "ref": "01d6153b-1b6b-493e-b5c1-03f1ca598c9d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6ab7d57b-3ee6-4ff9-8811-b3bd87edc9d9"
        },
        "item": {
          "id": "c33381a2-caf2-46e8-a556-95da7e53c2f2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f1bf5975-f5c5-4efc-9d7d-18f1fb6f0ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f004c0-6e4c-47ad-9398-f2b851b63b6a",
        "cursor": {
          "ref": "c112b2dd-66b1-4fca-87df-244195ad76e9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c0e6b7b0-5793-4333-81c1-1e8717511505"
        },
        "item": {
          "id": "f3f004c0-6e4c-47ad-9398-f2b851b63b6a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8256a88d-65d1-4f99-bf5a-4b545ddf87df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e60bc8-ffef-4049-ba96-d81b5b894002",
        "cursor": {
          "ref": "ac47c275-844f-4cda-bae3-4b2d1ceadd79",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4c0b68c5-e950-485c-a6ef-30a0cfc2a9cf"
        },
        "item": {
          "id": "64e60bc8-ffef-4049-ba96-d81b5b894002",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ddf038b-15d6-4e90-aea1-05878e2ac2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fbd072-3aba-4fa3-9d46-320686e2bdc1",
        "cursor": {
          "ref": "27f5fe96-e4e5-48c8-ac5c-26a8269ddac0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8288624d-6258-439c-870d-9c62612e74bb"
        },
        "item": {
          "id": "81fbd072-3aba-4fa3-9d46-320686e2bdc1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e279f088-e92c-4e32-b77e-cd5f6fbede0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be299b35-0c6f-452b-93f1-8e652d549ff9",
        "cursor": {
          "ref": "8a99b69a-225c-4789-be33-ffab93dcb04d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "744595de-88d3-42e3-847e-f5878b961ec1"
        },
        "item": {
          "id": "be299b35-0c6f-452b-93f1-8e652d549ff9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "103c6d15-d2c6-4fbf-ae09-bbaa75f0cd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285502f0-009f-41c2-81da-01b93af55ca6",
        "cursor": {
          "ref": "ab415af0-31b8-4df7-b2a5-d0cc8613ffcc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dd04e2cf-3f74-4f96-8beb-85d55469a8e3"
        },
        "item": {
          "id": "285502f0-009f-41c2-81da-01b93af55ca6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2df98dd5-5c34-45c2-8232-fb104bdcddc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c41ac6c-7d59-4c06-b8bd-b7fae743a421",
        "cursor": {
          "ref": "861794db-e20d-4895-999a-cbef2d13b1c3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a032386b-a5aa-4e25-981f-244e78c8752e"
        },
        "item": {
          "id": "3c41ac6c-7d59-4c06-b8bd-b7fae743a421",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "97f90881-3c51-4cf1-8a0e-2a94d5992b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d573bae0-6589-45dc-a65a-a20cf2e6e39e",
        "cursor": {
          "ref": "77ce8379-e25c-4df5-99b0-755f80a55be1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5e4659da-79d9-4e8a-a7ae-e581c9c742b9"
        },
        "item": {
          "id": "d573bae0-6589-45dc-a65a-a20cf2e6e39e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1f15dba4-c4bd-4a39-ae9d-a15b5974abbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d6d569-810e-4900-bc9d-d33e51d1608b",
        "cursor": {
          "ref": "9ed3a126-9ab8-4db3-9cb1-4fe53bbb4ed7",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4f56670b-e65a-4da9-9950-277e0c1fc781"
        },
        "item": {
          "id": "f3d6d569-810e-4900-bc9d-d33e51d1608b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a1809acf-d055-4acb-bf9e-6c92d152ca47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00920410-7f86-4f31-9cb2-9b363a0855fd",
        "cursor": {
          "ref": "44523761-17be-41df-957b-f9649ea14770",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "428cab03-40ce-4eac-a75d-d3ec258c488b"
        },
        "item": {
          "id": "00920410-7f86-4f31-9cb2-9b363a0855fd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "29cb622a-83c5-4e14-abda-aea4ec280f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6acd2a-f6a5-4588-9fd7-7fd51e817801",
        "cursor": {
          "ref": "2ae43aec-779c-461d-9aaa-ccb3d0d32bae",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f0f396b8-fcc5-44be-ad39-249ab1bb96b6"
        },
        "item": {
          "id": "de6acd2a-f6a5-4588-9fd7-7fd51e817801",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "17bdb0ac-ede2-450f-af93-070a88e6a6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b08a7f8-1554-47c3-b781-dd7a847df272",
        "cursor": {
          "ref": "cf7a99f3-02ae-4a2b-ba1e-b72c7f466738",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c5786cc-567b-476d-afcb-6e35c0ed07d0"
        },
        "item": {
          "id": "0b08a7f8-1554-47c3-b781-dd7a847df272",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "590d2583-ac45-4897-87e0-8cf87d78399d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae963d75-d42d-40da-8226-64e2e3c713df",
        "cursor": {
          "ref": "9ee2f1f9-1e70-46fb-8901-ad784f319bbe",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ad4592d8-0147-4563-92dc-4f14b5f3d9a2"
        },
        "item": {
          "id": "ae963d75-d42d-40da-8226-64e2e3c713df",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d0d2dff9-0073-4639-814b-f46e5406c741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f0b6c-a182-448d-ac01-3ac56af21dc5",
        "cursor": {
          "ref": "264bc972-a425-4588-985d-273837e95af2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "24112c3f-2baa-4b2a-85c3-4017c15296cb"
        },
        "item": {
          "id": "050f0b6c-a182-448d-ac01-3ac56af21dc5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "39303ee0-d80e-4fdf-a424-7f65efbeaeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914ad74-b8ce-46b9-a8e6-9d88bf9c39da",
        "cursor": {
          "ref": "3cd7de87-3fbf-4cf5-86aa-f45f224c1f88",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4f4d95b5-0876-45fd-aa60-fae055da39ab"
        },
        "item": {
          "id": "7914ad74-b8ce-46b9-a8e6-9d88bf9c39da",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d7068640-84a7-4028-a10e-6842e29821a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffa7a35-58ea-450d-85ac-149ea5dea4c6",
        "cursor": {
          "ref": "6c4da5e7-2c99-4189-8fec-4b564b0fadc9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "16a1d600-36c5-4c84-a08f-c3d27359df82"
        },
        "item": {
          "id": "1ffa7a35-58ea-450d-85ac-149ea5dea4c6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d5517855-1d05-42d9-8a9f-10ab8d843b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da8f743-c0c3-42e5-a9fe-4bb4f05959be",
        "cursor": {
          "ref": "a860e30e-a368-4384-b6de-508fef579567",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "88729e72-07ee-4e69-ad8c-3f9253769a0a"
        },
        "item": {
          "id": "6da8f743-c0c3-42e5-a9fe-4bb4f05959be",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a5010bc1-a613-4a2e-9c5a-27dff06656bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af701e-fc69-4277-8f06-5cce53deece9",
        "cursor": {
          "ref": "6bf8e8bb-e085-46a0-bbb2-23d61f84d1d1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "861488ab-2224-44ac-98d0-d376b82bb68e"
        },
        "item": {
          "id": "d4af701e-fc69-4277-8f06-5cce53deece9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0dcd11a6-680a-4246-b2a5-d8d2ebcacbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0bc145-2773-495a-9a81-b2aee9de0e76",
        "cursor": {
          "ref": "40d8655f-2dc4-4d12-97d2-56402b346322",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a403b6ca-ae64-4339-8602-516dda908996"
        },
        "item": {
          "id": "4c0bc145-2773-495a-9a81-b2aee9de0e76",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bacc5bbb-009e-425c-9faf-19af1884569f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f769878-6ed4-4a52-b14c-b958b457cfeb",
        "cursor": {
          "ref": "397a252d-b001-4cf0-9065-f5066716f33f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b1d7985a-a766-4153-82d8-28ded5b9f908"
        },
        "item": {
          "id": "9f769878-6ed4-4a52-b14c-b958b457cfeb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5fd7031c-47d2-4030-bb0a-da13397e44a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9c3a6d24-7947-46a4-8387-561c37489647",
        "cursor": {
          "ref": "f023b6d6-9c5a-455e-a4eb-3d02a51aae4a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aac0b04f-db48-450f-a820-234a2498411d"
        },
        "item": {
          "id": "9c3a6d24-7947-46a4-8387-561c37489647",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d201ff11-e00f-41d6-a06f-423e89549dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4ee0a4ac-747d-4e6b-a543-99821eb816b0",
        "cursor": {
          "ref": "a87d7f57-2db6-4f2f-bbd1-0317b80ef23b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "10de70da-75df-4696-a41a-3f1b516b48c8"
        },
        "item": {
          "id": "4ee0a4ac-747d-4e6b-a543-99821eb816b0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e0466a5d-2503-4e91-b81c-8f0c7228c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a7acdcba-f69a-4523-b528-905643334698",
        "cursor": {
          "ref": "f4c0f697-3967-486a-91af-ccf87274871d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c344ab6-b611-418c-bd18-71770b806860"
        },
        "item": {
          "id": "a7acdcba-f69a-4523-b528-905643334698",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d4fb7dc7-ea72-4b5f-9806-9faa477ffc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "332a6e4f-6bb8-4397-9040-d3816e04c43b",
        "cursor": {
          "ref": "970f62aa-339a-4f2e-87e6-7b99568c33ad",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "71eec2d0-cff9-4a92-a7ed-95f0e7822e42"
        },
        "item": {
          "id": "332a6e4f-6bb8-4397-9040-d3816e04c43b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d6cbaaca-aa36-4626-a750-f1d6eacf7857",
          "status": "Created",
          "code": 201,
          "responseTime": 6926,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37b4295-1fb4-48f7-a589-8ce3d3340914",
        "cursor": {
          "ref": "7c735287-ee26-4d9d-abea-74dd06425945",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3068cbc4-c456-4e1e-8af3-9232e828bdad"
        },
        "item": {
          "id": "e37b4295-1fb4-48f7-a589-8ce3d3340914",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5c9b90e2-69d4-41e6-8b4c-3567b8224975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c1246f19-6a46-4cc4-82d3-e03d5e046628",
        "cursor": {
          "ref": "a7fedc7f-b550-499f-bc69-f2e0e7e31f23",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fdd8768f-33bd-4d93-932e-3e9eee086b55"
        },
        "item": {
          "id": "c1246f19-6a46-4cc4-82d3-e03d5e046628",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a0abe07f-94da-499e-a990-d68a29dc5a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ff9f07e1-5868-4b12-a445-d11c2f0ab6af",
        "cursor": {
          "ref": "d3f65ad1-63a9-4a7f-a5e1-9040d0d0bc51",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4b91dcf3-cc41-4609-8406-fb5436091c96"
        },
        "item": {
          "id": "ff9f07e1-5868-4b12-a445-d11c2f0ab6af",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9d8d541-9576-420a-923c-94062a5b7c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38ee133-5fda-469e-ba17-93e9bf919d79",
        "cursor": {
          "ref": "56778f67-56c7-4a1d-8813-309d885bfc5f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "02275413-9516-4dc9-9c55-f87c63d49c32"
        },
        "item": {
          "id": "a38ee133-5fda-469e-ba17-93e9bf919d79",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4bcbedc1-6e81-455c-938a-c1587f3209bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22215b7f-e817-4e9e-b20b-bbb85e2b0fd5",
        "cursor": {
          "ref": "407a91ad-4c9a-4c6f-9e9c-462ac8baa5f6",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1c1cfcb8-e245-4e0a-b940-b6294de9ae2a"
        },
        "item": {
          "id": "22215b7f-e817-4e9e-b20b-bbb85e2b0fd5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "30fe887b-a9f9-40ad-b7e6-64ac1ae400e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395e572d-cfdb-4f03-970d-a5ae1f5d52b6",
        "cursor": {
          "ref": "09661d67-3afa-4fe5-83fc-1de485879575",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "206967a1-289c-4e5c-a202-d45ff76acb16"
        },
        "item": {
          "id": "395e572d-cfdb-4f03-970d-a5ae1f5d52b6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da8b0025-feac-48c7-ab81-d018e9311688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b62c2a-a15d-48e4-a012-657f274a0b6e",
        "cursor": {
          "ref": "5d9b31c8-99de-489b-af84-5adf923685ef",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5b19a7f1-459e-4967-b7a8-5f618e81aa6c"
        },
        "item": {
          "id": "b1b62c2a-a15d-48e4-a012-657f274a0b6e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2b6fbb04-17c4-4578-88ce-eca5530881b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8931d060-8346-4874-8283-468ec4e1a678",
        "cursor": {
          "ref": "47c02bcb-7163-49e4-9d5c-003d569f2b9f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "59ff3bf7-7e52-4010-94e6-617f629e1130"
        },
        "item": {
          "id": "8931d060-8346-4874-8283-468ec4e1a678",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b5764a55-2888-4dd8-860d-f49c66199ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec3bfb6-7c32-4086-9a01-c3dbe56087aa",
        "cursor": {
          "ref": "86611326-009c-4ae6-b67f-b0a9171c03f4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0bf9c94f-16c1-4bd2-82b1-904b6441d5a8"
        },
        "item": {
          "id": "dec3bfb6-7c32-4086-9a01-c3dbe56087aa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dfc02189-aaad-4315-a23c-e54a5947fe2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3074cb-ba5a-4d63-a4dc-3a1307b0ffab",
        "cursor": {
          "ref": "1c04401c-1f17-4c12-826e-bb98409c8ff8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cf8db92c-09ae-4418-a989-2d0a1581ec1b"
        },
        "item": {
          "id": "af3074cb-ba5a-4d63-a4dc-3a1307b0ffab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "635ceb3a-d1f7-4a22-b1e5-6f8bfca9a816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139fed5d-b52e-4b3d-9421-d154c28efd07",
        "cursor": {
          "ref": "4209143b-4423-4a6c-b9b3-7d10e692bc24",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4f2de0e0-d0d7-4f40-aca0-325ab4b30afe"
        },
        "item": {
          "id": "139fed5d-b52e-4b3d-9421-d154c28efd07",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "36dca85f-8776-4be9-8aaa-ade6416152df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbefa742-08d1-4bf5-a863-0ee275835efe",
        "cursor": {
          "ref": "c4d669dd-72d1-4006-b5c0-7dae77cf1374",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "00591d5c-f022-4f61-a8bc-bc66193e8d26"
        },
        "item": {
          "id": "cbefa742-08d1-4bf5-a863-0ee275835efe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f26c1be-a3bd-4f9b-822e-74930fe278a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7132200-368b-4d14-a491-f647ce9c367a",
        "cursor": {
          "ref": "2584e358-27d2-4742-8903-e310b64f841b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e1da106d-9713-4535-bd03-002fe934fa73"
        },
        "item": {
          "id": "c7132200-368b-4d14-a491-f647ce9c367a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f2080eb3-2805-45b6-8628-8b9a3b44ec48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a823f1-7035-4f8f-92ba-b19a77934211",
        "cursor": {
          "ref": "f9cbcb1b-84f8-4813-8d3b-ecb985e8dd36",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "250730a6-5d97-4a65-ae52-ab5c58147b6e"
        },
        "item": {
          "id": "52a823f1-7035-4f8f-92ba-b19a77934211",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "07bdfc6c-e9e6-42aa-b0cc-95096713ad90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2ae724-e3ca-4641-81f2-f228627887cb",
        "cursor": {
          "ref": "0a53b4d0-4408-4de0-8702-0203a8f5e9d5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cec9eac2-c505-4982-b0e9-8109ce884d24"
        },
        "item": {
          "id": "8c2ae724-e3ca-4641-81f2-f228627887cb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d8ea77ac-7f45-435d-87a8-587b931c727c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad9ff98-cdda-4397-8653-667294bc7ceb",
        "cursor": {
          "ref": "601f47ab-f811-48b3-a326-00adc7b047e8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6d030ef2-31a9-42f8-8f53-29c941c27a4c"
        },
        "item": {
          "id": "5ad9ff98-cdda-4397-8653-667294bc7ceb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "70d913ea-46e3-47ce-a380-1144f5e1dcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f29a174-3033-4024-b064-fb5ce06c3a04",
        "cursor": {
          "ref": "4f260cce-2afc-4a1b-a64c-43f62e583b5d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fa993046-ba4f-437c-84e6-b58daa5bad30"
        },
        "item": {
          "id": "5f29a174-3033-4024-b064-fb5ce06c3a04",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "24d5929c-0777-4cf1-b531-af94404b1b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a6205d-9568-487a-b811-6f37143cfc37",
        "cursor": {
          "ref": "a4d2b774-693f-4c96-8f46-2cd47ce27c3a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "73bcedfb-e398-4892-9bc0-1620e13807de"
        },
        "item": {
          "id": "44a6205d-9568-487a-b811-6f37143cfc37",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e66ad402-b54a-4548-bc01-dc7478e7964e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc93382c-a72d-46d4-bdd2-9049fb964309",
        "cursor": {
          "ref": "66019ea5-3cc2-461e-bb33-f26311f1ec55",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9d8aa28c-5a5b-412b-974f-9d3184dbe82c"
        },
        "item": {
          "id": "fc93382c-a72d-46d4-bdd2-9049fb964309",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "303c85a9-a99c-412f-84b9-c768c178d365",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f542ca58-b972-431b-b492-3f1fb2baffd1",
        "cursor": {
          "ref": "68a2eea4-4370-498d-bd13-0b441ed5a09a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "39d92182-2321-4184-9304-970555fd7bcf"
        },
        "item": {
          "id": "f542ca58-b972-431b-b492-3f1fb2baffd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "42a16010-600f-4161-b271-3fcb2c7d8023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce650fb7-ec19-485d-b2ab-ba9095bef097",
        "cursor": {
          "ref": "0981bb78-902d-4d0c-bbaf-849a0a5b433a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c623ac50-c1c5-4290-8bcd-5216f59b94c8"
        },
        "item": {
          "id": "ce650fb7-ec19-485d-b2ab-ba9095bef097",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4396e529-7274-49f1-abbd-17905500cd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1647ee44-0bba-4a9f-a6df-249ba557b984",
        "cursor": {
          "ref": "5af7d64d-91a4-4e4d-ae12-3187ee6bb997",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e7af3ced-854d-413a-b7b8-aa5490737d7d"
        },
        "item": {
          "id": "1647ee44-0bba-4a9f-a6df-249ba557b984",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "86593d65-e8e3-4850-86dd-05753d5a741b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355a1028-42b6-4ee1-903f-e84bf5319067",
        "cursor": {
          "ref": "744a65e4-233b-4350-970b-cf84278dbea2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d20d427c-a544-4893-884e-19191567d665"
        },
        "item": {
          "id": "355a1028-42b6-4ee1-903f-e84bf5319067",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1d78ec68-c45f-4a85-ae5e-8de5681c1b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9671f50b-2316-4fab-b288-0dd58755de45",
        "cursor": {
          "ref": "ea697821-9256-43ce-8a9a-4bd00925e7da",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dc7ac91a-aa55-4660-8285-e569943f6760"
        },
        "item": {
          "id": "9671f50b-2316-4fab-b288-0dd58755de45",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c6f20dd0-e701-4ba4-bc10-4bbae0bd5f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3f01d7-cb1e-494c-a3e9-b60e99b2540d",
        "cursor": {
          "ref": "06179971-5b73-40e1-8aaf-e2ba718d51bd",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4db942cc-2b53-4eba-9e28-c114e510a4bd"
        },
        "item": {
          "id": "6a3f01d7-cb1e-494c-a3e9-b60e99b2540d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0762ab4a-cd25-4162-9ba1-8a4fa70a6a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a9d608-ad75-48fb-b9f0-0df013debfce",
        "cursor": {
          "ref": "9bffbc5e-f627-42aa-8bf6-659d10624ad9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "baced024-5e81-40e5-a3c5-ab8bef9fb442"
        },
        "item": {
          "id": "67a9d608-ad75-48fb-b9f0-0df013debfce",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ce9445b4-6389-4bcc-8251-7ccbf39f2e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9f4a5a-ef82-4e0b-9cdc-356d2abdf3d3",
        "cursor": {
          "ref": "f6cb93fe-4a29-4109-b9e4-c37e9fd4ee3e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "18c84045-dc94-4ef0-944b-9541bf1e0df5"
        },
        "item": {
          "id": "9c9f4a5a-ef82-4e0b-9cdc-356d2abdf3d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "51afc9be-408b-4cbc-b952-20aa50e5e1db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "77ad55b1-4b02-4ba3-8c38-b5d5fd8206fb",
        "cursor": {
          "ref": "6b5d06bf-6dc2-4eef-94e3-112d4a0ffca4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2edce943-c2d1-4899-bd71-89682c1f8b1c"
        },
        "item": {
          "id": "77ad55b1-4b02-4ba3-8c38-b5d5fd8206fb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "66c1b77b-ebed-4f87-ba8d-caae2c59e065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5004d59-dc84-403e-85c9-8119373baa35",
        "cursor": {
          "ref": "3c0f1142-36b4-4529-b514-4bd682cd81b2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d3578951-e825-4677-9759-b15bec43cd8c"
        },
        "item": {
          "id": "a5004d59-dc84-403e-85c9-8119373baa35",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "270f70d1-629c-4223-a05b-8d9c0dca14fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023b26fe-2a58-4a6a-85bb-02691e7814e8",
        "cursor": {
          "ref": "e610e370-de72-4e34-b596-c6d29dca7661",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cd860a7e-c7ed-482c-855e-3bdfc05aafc3"
        },
        "item": {
          "id": "023b26fe-2a58-4a6a-85bb-02691e7814e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0382b725-3eef-4c9f-bfc2-46ccd6b21b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f285cbc1-9b4a-43ba-8e74-2399a83fcdbe",
        "cursor": {
          "ref": "13cbe3fa-660d-4cb6-8279-d95c47d34f3c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b0a91a1c-5228-4a35-8582-a70ac21c713f"
        },
        "item": {
          "id": "f285cbc1-9b4a-43ba-8e74-2399a83fcdbe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f34f6394-c4e4-4344-8bdc-e550bc387039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d494f-db37-47e0-a985-4a3648b888ab",
        "cursor": {
          "ref": "5733eb97-a657-48c6-b4bc-357e302d1191",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0e90bc0f-1b95-47eb-a8ea-37d638dbebda"
        },
        "item": {
          "id": "192d494f-db37-47e0-a985-4a3648b888ab",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c71366ea-a392-44e7-87fc-9f6ddcc09633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f081fc67-a2e9-4825-83e5-041d48dabad7",
        "cursor": {
          "ref": "f773611f-cdf9-40a8-95e4-aa83e23f7dde",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "68073967-aa9a-48f8-a25e-45426ae9e41d"
        },
        "item": {
          "id": "f081fc67-a2e9-4825-83e5-041d48dabad7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cbd49e51-ff36-4560-8747-06a4448b3091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15f8a4a-9817-4f0d-a8a0-55b03a606279",
        "cursor": {
          "ref": "5cc31cf7-26bc-42fc-8345-ba924db014ca",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0df59d05-d0e1-4ae2-ab9e-e0912e801b33"
        },
        "item": {
          "id": "e15f8a4a-9817-4f0d-a8a0-55b03a606279",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b7206267-5c3b-4d87-8cd8-cf90e6f536e5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3d4e5f3f-fe77-45b0-8684-7efda246eb1c",
        "cursor": {
          "ref": "24fad3f9-6fe0-4025-a678-828afed16401",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4d360082-f287-43d5-a653-30344addc46f"
        },
        "item": {
          "id": "3d4e5f3f-fe77-45b0-8684-7efda246eb1c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f3fff23a-d870-4647-b9f8-e7bc286a8046",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "8413e1fa-c659-4b1e-874e-8b0285b38916",
        "cursor": {
          "ref": "d9c8c6e6-865c-4681-84dc-a55db1d1470e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a8e3aa57-34aa-4acc-818c-ef81b608805b"
        },
        "item": {
          "id": "8413e1fa-c659-4b1e-874e-8b0285b38916",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "52a48f10-7af7-4cbd-9e36-28fa703b2c93",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "0d6c122a-c369-4963-a311-b8e3c587d9df",
        "cursor": {
          "ref": "26fa66c3-5170-4512-b4b9-748a02ee11ce",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9c636d8f-18e4-4b4d-8b0d-bc555daeabad"
        },
        "item": {
          "id": "0d6c122a-c369-4963-a311-b8e3c587d9df",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0c1bae1e-c339-45e1-871e-d54cdcc5304a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "f8a6cf05-0fe8-493c-a4cd-9c1493168537",
        "cursor": {
          "ref": "0156f0b0-8aa7-40dc-b653-a5eef77d22a8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dfcb37c3-2f85-41ee-b84b-6770ec3c836c"
        },
        "item": {
          "id": "f8a6cf05-0fe8-493c-a4cd-9c1493168537",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4a100ceb-36d2-4896-80dc-0dd7f18e5e5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 134,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d82d7801-cdeb-492c-8725-c39123424b11",
        "cursor": {
          "ref": "fb617d5c-041b-4969-898a-a229b9b99f8a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "13235f0a-cd8b-4e9a-a548-bd8a0a88404d"
        },
        "item": {
          "id": "d82d7801-cdeb-492c-8725-c39123424b11",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2ac3b500-8f9b-46ae-bba9-18a9b05910e6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "7906d9c7-99ae-466b-af99-6eaa1a684b7a",
        "cursor": {
          "ref": "4eff65c8-560c-4f8c-81a6-1f79ff0da90e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4eb1791b-addf-4c31-9c32-aa41b0810425"
        },
        "item": {
          "id": "7906d9c7-99ae-466b-af99-6eaa1a684b7a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "75d17421-57db-4592-b67c-b0804d393bd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3689f7-9fae-4041-9c86-29fa16a40589",
        "cursor": {
          "ref": "afb418e0-0a62-4e0e-a0b4-aa68868aecd7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "599ab612-262e-49ae-b539-7a551380ddf1"
        },
        "item": {
          "id": "fb3689f7-9fae-4041-9c86-29fa16a40589",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aa32e96d-b4ef-42c1-8120-ce1b5d082636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79db9781-39eb-4b00-ae01-96a1d94d224e",
        "cursor": {
          "ref": "7907a63e-13ff-4334-96c7-95449a97241c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bc34115f-da35-499f-884a-c720aab45fa0"
        },
        "item": {
          "id": "79db9781-39eb-4b00-ae01-96a1d94d224e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "59f54bf7-8a3d-46e7-9a70-6682c7fc7358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c653e8c5-e9d3-4d59-8b92-d25fd70dc73e",
        "cursor": {
          "ref": "7378b338-4400-449d-99cf-b379ee9b5d48",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e8249725-439f-488f-94cf-ed9f250348b7"
        },
        "item": {
          "id": "c653e8c5-e9d3-4d59-8b92-d25fd70dc73e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "edf402e9-482c-48e5-ba2f-f24e2418f1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b837ad-6a8c-41b9-b6a3-b0f6c503d7dc",
        "cursor": {
          "ref": "0edbfec2-c100-45f5-a632-f98d28f17274",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "87e5df85-cb4b-4241-b66a-9543e4940f38"
        },
        "item": {
          "id": "42b837ad-6a8c-41b9-b6a3-b0f6c503d7dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8c2b634b-922a-42f6-8d7f-893e43b103bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e94ae-fd05-4cd1-8fe0-db39204c3b2b",
        "cursor": {
          "ref": "fc29c806-2b73-4994-b3ab-3edab91cf25c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a369b596-35f5-49fe-95c8-65d6a230aa62"
        },
        "item": {
          "id": "196e94ae-fd05-4cd1-8fe0-db39204c3b2b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "67831e50-03b4-41be-93bd-8daff01cd767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060b1ee1-158e-460b-bebd-411d35f01228",
        "cursor": {
          "ref": "20e34b9d-5875-4d0a-956c-fda6166eadcd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b8f9bc40-4176-482c-83d0-31f0cccf84ed"
        },
        "item": {
          "id": "060b1ee1-158e-460b-bebd-411d35f01228",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f3993d30-eaac-49bb-bfe0-95ed2227da46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe420e1-2fbf-41cf-977e-4280211e9c2c",
        "cursor": {
          "ref": "78f9a9f4-b851-4f6e-88c0-64dcedccaa9f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "040f67f0-52d6-4b90-b075-9412ccca9fa2"
        },
        "item": {
          "id": "8fe420e1-2fbf-41cf-977e-4280211e9c2c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6f855745-3945-4b07-b0f1-804877360295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ce09d6-c875-4271-9704-ba67d171a5b5",
        "cursor": {
          "ref": "cdb26060-d177-4021-8b05-dc6ddda9fb78",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d5584086-681a-4e74-bf51-89883ee42695"
        },
        "item": {
          "id": "54ce09d6-c875-4271-9704-ba67d171a5b5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "96b6c31b-900b-4ca8-9764-ad40cd692c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79430ca2-d2bf-4a9e-892f-ee0e1f0137bc",
        "cursor": {
          "ref": "368165d5-59a9-4bb2-bd02-cf434f687305",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "64998216-c0ac-4f77-a86e-d4d5e763ea2d"
        },
        "item": {
          "id": "79430ca2-d2bf-4a9e-892f-ee0e1f0137bc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1d465472-95ca-445c-a6c0-76763e943754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f90547-0edf-4eff-a391-7ca6ca79d770",
        "cursor": {
          "ref": "036dcec4-7195-48cd-953c-6dd57309c4db",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f23f8f31-c517-46b8-92ca-abb41fcce1fa"
        },
        "item": {
          "id": "a6f90547-0edf-4eff-a391-7ca6ca79d770",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "96545cec-fa38-4524-93cb-3bacce6a57f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88b6867-3fa3-451f-9e2a-e2170d008436",
        "cursor": {
          "ref": "6e498f52-fd6f-4f10-a607-0fb7eeec25f9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1f81ac5e-91b5-4165-8fc5-52d38bcd3bb0"
        },
        "item": {
          "id": "d88b6867-3fa3-451f-9e2a-e2170d008436",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4d3fc861-2898-4359-8e9b-8f5fe0735f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7be2f8-65d6-4684-abb7-4126a32587dc",
        "cursor": {
          "ref": "8b62be88-6896-4e91-a1c2-8868bf033efe",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bfbdd4ab-c7fc-45f5-89fb-e60fc2721d3f"
        },
        "item": {
          "id": "9e7be2f8-65d6-4684-abb7-4126a32587dc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3e1ac687-be75-46ae-a236-a029ecbc76f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c653fa-a45e-4dad-874a-4c203319ac30",
        "cursor": {
          "ref": "13adc01f-3dae-4ec3-8728-af15186be286",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0ece13fd-0e39-45b5-921f-d13471fad3c7"
        },
        "item": {
          "id": "d2c653fa-a45e-4dad-874a-4c203319ac30",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "de6edc83-b32b-4e5c-8d60-05872e229c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e05de0a-04d3-4bbb-b8ca-be4eb80e8131",
        "cursor": {
          "ref": "8e26ece0-dbe5-402c-9fe9-694bd682505b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6b7a589a-0cbe-427d-9206-840536891b2b"
        },
        "item": {
          "id": "6e05de0a-04d3-4bbb-b8ca-be4eb80e8131",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a3372657-ec1b-469b-ae79-e4dbc006db25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6c472e-1420-46f0-9460-251005f08c45",
        "cursor": {
          "ref": "6f7f9951-5c34-4fd2-9ad1-e5d9407555c7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c011ebae-b4b6-44bf-9abd-c9d8cbc74caf"
        },
        "item": {
          "id": "6b6c472e-1420-46f0-9460-251005f08c45",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "79fe90fd-85f8-47a3-89c4-cb7b41234930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba563a03-8b89-4b6c-b11b-3f81244ee686",
        "cursor": {
          "ref": "f4e8f1c8-bc8a-4eac-8fcf-b9d48c69e3af",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9f83e581-067a-4961-b0e7-d10c947cd5cc"
        },
        "item": {
          "id": "ba563a03-8b89-4b6c-b11b-3f81244ee686",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3f05107c-f325-4b1b-bd69-bd0fb68830bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3667bae-bcb4-4969-a1b7-66aeab18d8f8",
        "cursor": {
          "ref": "2c24b6f4-a259-4072-a6cf-eb4e512850c8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a766c64d-183e-4859-a02f-791c67cf404c"
        },
        "item": {
          "id": "a3667bae-bcb4-4969-a1b7-66aeab18d8f8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2eb1924d-8d58-4136-9218-74cc1d8347f7",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "76d556a1-3426-4dec-b0b6-f537f0c4da0c",
        "cursor": {
          "ref": "d9d7e588-e5e1-4080-8a00-d3cb0111f899",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7c37587b-93b7-434d-9db7-1449146d5069"
        },
        "item": {
          "id": "76d556a1-3426-4dec-b0b6-f537f0c4da0c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d6b9b2a4-3fe7-492a-afd1-b6c9a17b9d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a48a3cf-f801-4b1b-97ed-893ca71f0169",
        "cursor": {
          "ref": "c52ec2e5-ba63-4ee3-ae0d-3fc210b4be36",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0bfcc57c-ba59-4212-ac9f-bbf506916850"
        },
        "item": {
          "id": "6a48a3cf-f801-4b1b-97ed-893ca71f0169",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b2646b27-79a7-470a-9e4d-3b6662435570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e8cbcc-2f7e-42cc-8e91-0f0d972d198d",
        "cursor": {
          "ref": "29796b19-163e-4f8b-94bb-9c5fc55675cc",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b8ca9962-96bf-45ba-94a2-4d711bdd67a8"
        },
        "item": {
          "id": "35e8cbcc-2f7e-42cc-8e91-0f0d972d198d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "89da22cd-ba97-4a00-a710-fbeca33af9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347ee5b4-b6cd-4d26-9b48-22ac159fbf6a",
        "cursor": {
          "ref": "0dc4049d-14c2-4327-99b1-9545c297d82f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2eb32504-3d15-4474-86d0-68ea84847df1"
        },
        "item": {
          "id": "347ee5b4-b6cd-4d26-9b48-22ac159fbf6a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5db9257a-aeea-4dc3-bdd9-257549de60f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5679d1e5-6a3a-431f-a463-486c7784f853",
        "cursor": {
          "ref": "5b1d769a-4661-434e-a173-52c0ae9dc50d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c14f7109-11d6-4067-963b-9f3260258459"
        },
        "item": {
          "id": "5679d1e5-6a3a-431f-a463-486c7784f853",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "50afe7f2-c953-4f23-a06f-8e68df3ffcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eebdb6a-4bcf-4263-9b47-a11b1801b0fd",
        "cursor": {
          "ref": "9cf26b22-0044-4f6d-a878-71b34d042257",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1e4ad5ae-c054-4f06-946d-4c0f218cce76"
        },
        "item": {
          "id": "8eebdb6a-4bcf-4263-9b47-a11b1801b0fd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cf802353-ac8b-4519-a950-5b89034aab44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7630c9ec-cd2b-4bdd-81ea-2aff7729b092",
        "cursor": {
          "ref": "6ec1db2c-6e5f-45f5-8526-16aa47f12e37",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4009beee-fe67-44fc-92f3-e080da163404"
        },
        "item": {
          "id": "7630c9ec-cd2b-4bdd-81ea-2aff7729b092",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "361e1c81-3f7f-4f12-94f7-f10d5f04bab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f53066-5a36-4408-ae90-4dd267087faa",
        "cursor": {
          "ref": "8c30baca-f123-4c22-b2ca-98683e0fb2ca",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1984dbb3-2c2a-4c66-9960-4e22f7ed94be"
        },
        "item": {
          "id": "82f53066-5a36-4408-ae90-4dd267087faa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "67ad550b-8a9d-470b-9daa-5338184066b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4492e07e-7774-4c20-a30e-2675c4c9156a",
        "cursor": {
          "ref": "32322afd-4d22-47b6-a3ff-2e32868ba1ac",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aac9de81-f512-40f8-8a65-ee44d6728cec"
        },
        "item": {
          "id": "4492e07e-7774-4c20-a30e-2675c4c9156a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ed420833-7290-4b49-9a73-e0fe9113b458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3597b5b2-d80c-483f-9c8b-7f126372deb2",
        "cursor": {
          "ref": "b2db1620-a760-49a7-81e5-e4fc25309481",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f4b28880-8b5b-4079-8811-315d7d1ab926"
        },
        "item": {
          "id": "3597b5b2-d80c-483f-9c8b-7f126372deb2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "09c44bed-1d97-4ce0-b7d1-53711e887980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db3acd7-4712-491c-a3f2-9c92000732d9",
        "cursor": {
          "ref": "75ecbb10-814e-4674-9778-bc7fe5141453",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "caf6102e-c2c7-4f86-816a-cc2c517ea63f"
        },
        "item": {
          "id": "2db3acd7-4712-491c-a3f2-9c92000732d9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "61d2296d-7f95-4e98-861c-a54cae3262b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4b5245-27ec-4d44-8286-95e67886add2",
        "cursor": {
          "ref": "77084ac3-a0b8-4df5-aa6c-7400d146f1a7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cebb4fbe-0946-4b04-bd1e-768f660d0c63"
        },
        "item": {
          "id": "8d4b5245-27ec-4d44-8286-95e67886add2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3296ff73-c335-4d06-87c4-3451fdcdd33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5631e507-4e4e-4361-83b4-854e2ccf5155",
        "cursor": {
          "ref": "45788966-d42d-4b42-bfdf-03a241222401",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "94720b32-d6b8-4f94-8052-0fb6f81204e2"
        },
        "item": {
          "id": "5631e507-4e4e-4361-83b4-854e2ccf5155",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a23f6a11-6b48-4928-a58b-5d36c30cddfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8709d2a-9bae-4bcb-b22b-61e6db4fcea0",
        "cursor": {
          "ref": "ee1d8c06-3582-4f22-9356-75281a8ea08d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cbeb9b73-caed-4eb7-8ba0-cc6a0da2c78b"
        },
        "item": {
          "id": "d8709d2a-9bae-4bcb-b22b-61e6db4fcea0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1740ff22-7fdf-4078-b37d-7148b4247ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0094b881-372b-4ad2-aee7-477ec451a2f7",
        "cursor": {
          "ref": "f8e71611-528a-427b-b378-5abdedb29b8c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "944369c8-0237-453f-93a5-57aa4eb041ba"
        },
        "item": {
          "id": "0094b881-372b-4ad2-aee7-477ec451a2f7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "39878b8d-cacf-4365-ad9f-342a111dabee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6d54f0-2148-413d-be13-3c6d5f564262",
        "cursor": {
          "ref": "7d8f9b9a-cc19-41ea-9f63-b4ad4cd1369a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "949666c6-4c28-462c-ac32-21392244e555"
        },
        "item": {
          "id": "6b6d54f0-2148-413d-be13-3c6d5f564262",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4fcff3c4-21cf-483e-b033-0d2c3a3d098b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49213200-bbaf-4737-9683-78569389d945",
        "cursor": {
          "ref": "39cfd892-21c7-4dea-9d25-0ee5f69e7354",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c2daa71c-2999-4f2e-97b4-8c841bfd6b99"
        },
        "item": {
          "id": "49213200-bbaf-4737-9683-78569389d945",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9a8fe222-ebc2-4017-8d1f-03fdc5c38ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70f1d53-e96b-4509-b0f0-8737d574c870",
        "cursor": {
          "ref": "1811d490-2541-4985-9e32-40d3f864d54c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "48e0958a-73c4-48b8-aa9c-cfdfa1781216"
        },
        "item": {
          "id": "c70f1d53-e96b-4509-b0f0-8737d574c870",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b9e017c8-a1ea-47d6-b875-cd851695deb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c3d498-3115-40ff-845b-221f46692902",
        "cursor": {
          "ref": "4a3686ae-50af-49e4-a265-cea8a321b600",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "37f225a0-39f2-4280-9af4-195997195707"
        },
        "item": {
          "id": "82c3d498-3115-40ff-845b-221f46692902",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6d4adcb8-36b1-4ec9-9375-495d35bab90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4292c1c5-7ee0-4b62-8d0e-21b5e3e0c7fe",
        "cursor": {
          "ref": "d3faae3d-2161-4f8f-a928-8d6c17595566",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d9f6a723-a5f6-42e3-a0aa-e9d378c82708"
        },
        "item": {
          "id": "4292c1c5-7ee0-4b62-8d0e-21b5e3e0c7fe",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7db5cc1c-666b-46cb-bfe0-05854ffa24e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1042daf9-d0f7-4687-8942-e14a4bb7d6cc",
        "cursor": {
          "ref": "7a1f291c-253f-4c42-9a86-6825b5d369e8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "10fb829d-88f8-4088-a024-6ecc69ad10d9"
        },
        "item": {
          "id": "1042daf9-d0f7-4687-8942-e14a4bb7d6cc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b24d5d5a-7e05-4aa2-b499-2169f9b628a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eaee1b-a4c6-443a-a4e8-d7de30fe07e2",
        "cursor": {
          "ref": "16890e33-e5cb-4b5f-a451-f74e13b89831",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c7fa781b-0ffd-4e1c-8839-2031b0c274e1"
        },
        "item": {
          "id": "17eaee1b-a4c6-443a-a4e8-d7de30fe07e2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "357b7038-5003-4c9c-808e-84369bdf6b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef142d94-852d-4401-9555-b87ada4e6b7d",
        "cursor": {
          "ref": "4987af7c-60fc-4519-8901-fd8afebc9f44",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "271379f1-6c0c-490e-9ea8-1e30e16f6757"
        },
        "item": {
          "id": "ef142d94-852d-4401-9555-b87ada4e6b7d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "de9229c5-f701-4d8b-974b-9dcb195e3420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3a54da-f058-4f9d-b469-ecd7b4c1f427",
        "cursor": {
          "ref": "dd1088a3-0e1f-4bdd-b131-94022773d3ef",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "692c81e9-9578-494e-b33f-3fc9cad78f86"
        },
        "item": {
          "id": "5a3a54da-f058-4f9d-b469-ecd7b4c1f427",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "37ec96fc-4bbe-4ef6-82d4-d8288f3c891a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff147e4-661b-41b8-b792-af91a65c6ce3",
        "cursor": {
          "ref": "a341f01d-ed7f-47cc-832b-fd2b65196080",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "559a096a-82a3-46af-b267-bb51c8039796"
        },
        "item": {
          "id": "5ff147e4-661b-41b8-b792-af91a65c6ce3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4f9de4aa-bd8a-46bd-8cb9-2db303894aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fa0d88-95b6-4c50-9160-b0580c3a8268",
        "cursor": {
          "ref": "d824c746-03d5-44b0-83cc-1c9bd37387b2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1ab4e52a-1c56-4b07-be09-442af841a47d"
        },
        "item": {
          "id": "d0fa0d88-95b6-4c50-9160-b0580c3a8268",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cca84925-de68-48c7-842b-69d486d50ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff738cd-24e7-4653-9600-693b14aa8f3c",
        "cursor": {
          "ref": "93ed19ab-5131-46b8-b804-d98088567dd4",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "15aef6f1-83e8-4302-8ed0-8d70a123c050"
        },
        "item": {
          "id": "9ff738cd-24e7-4653-9600-693b14aa8f3c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8ca52c6a-9344-4e62-ae18-6a4bf2854b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023f94d5-993c-4093-8eea-456f8a353944",
        "cursor": {
          "ref": "2ddee46a-cc18-4d19-b64c-ed111644b555",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "39e22f48-8b8f-411d-a48e-b3c925bd9085"
        },
        "item": {
          "id": "023f94d5-993c-4093-8eea-456f8a353944",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1a14b759-e3d7-4eec-9cc4-2f2a6504476d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b497fc32-871d-4df6-b41f-e788b6cbf250",
        "cursor": {
          "ref": "db80713c-14a5-41ab-a246-88a6ce799157",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "021fc768-72ca-4e83-abc5-ee1b408c908e"
        },
        "item": {
          "id": "b497fc32-871d-4df6-b41f-e788b6cbf250",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "26f9c755-1904-462e-858a-2b4fc8cdebab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18c1458-7e45-49d8-9f43-d86784e23103",
        "cursor": {
          "ref": "9d1fb397-685e-469f-856f-0b46123fd861",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6a93d1c2-c34d-4da8-b8ed-0fb90c73cea3"
        },
        "item": {
          "id": "d18c1458-7e45-49d8-9f43-d86784e23103",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "39d89284-debb-4305-9cd0-d01acdd634b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cedf60f-9234-434e-8193-8ff591913439",
        "cursor": {
          "ref": "34291d3c-2248-489c-86d8-bddb459c0f59",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f64dd6c1-5ca3-4fdd-a415-e95448ad375e"
        },
        "item": {
          "id": "3cedf60f-9234-434e-8193-8ff591913439",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6c9fd493-847a-45d0-ac14-e38efa2103c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1d4ead-993f-40d3-9862-4dd8c3fb0e68",
        "cursor": {
          "ref": "30b11a72-7de5-402b-8c64-f00b920854e4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4c7106cc-bf79-4be5-8337-e68053cfedcf"
        },
        "item": {
          "id": "0a1d4ead-993f-40d3-9862-4dd8c3fb0e68",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "eeec61f3-530d-4b22-aef2-4075251adabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d661e-71c1-45de-9e1e-6e02a42e5075",
        "cursor": {
          "ref": "545d6b0a-5f22-4f50-8a4a-d756cc3d9ef0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "78372492-3137-417e-b88e-94c235571399"
        },
        "item": {
          "id": "010d661e-71c1-45de-9e1e-6e02a42e5075",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4658b9cf-219a-4d62-a179-d51bd7fdc48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b4a382-b5e9-4ba4-ba10-eb8182cca08c",
        "cursor": {
          "ref": "97bb7043-7caf-4ecb-a67f-0aa4fa1b2371",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "42fbfb7e-0d56-41cc-8f12-836708953b07"
        },
        "item": {
          "id": "66b4a382-b5e9-4ba4-ba10-eb8182cca08c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b9eb05f0-9185-4481-823e-f989e214dc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2165376-505c-4cf8-ab75-16408c6203a1",
        "cursor": {
          "ref": "e46953b8-a5a5-4ee5-a5e5-eaec3e735dd2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b8377509-3b7a-495f-96d6-bef9c794cf29"
        },
        "item": {
          "id": "f2165376-505c-4cf8-ab75-16408c6203a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4df39f08-a91d-4b2c-9187-193bd3bd3bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e14356e-42da-4d10-a99e-0ed93d13ca8a",
        "cursor": {
          "ref": "62461850-8b81-47e2-9944-f1ee5b0feecf",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a1e1a77e-8ebb-4508-860e-a66b89c20b2f"
        },
        "item": {
          "id": "7e14356e-42da-4d10-a99e-0ed93d13ca8a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9af58f1c-3a7f-4ef6-8618-730af36f9391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32dbd6c-23bc-4750-ab65-62085cec01a4",
        "cursor": {
          "ref": "af7d87d7-44db-4539-a698-ac21c735e8e4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "19c3dce0-19b7-439d-8bd9-d037637001bd"
        },
        "item": {
          "id": "d32dbd6c-23bc-4750-ab65-62085cec01a4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "30d6d09b-d4b9-472a-a0da-43f857c21632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df14a2f-c1c3-4fd5-98ed-fb6321b77523",
        "cursor": {
          "ref": "59934154-ff03-4076-ae11-245432dca0e6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "111dbbdd-c5fd-48d0-a441-9888da7f3624"
        },
        "item": {
          "id": "1df14a2f-c1c3-4fd5-98ed-fb6321b77523",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a1c8e0a7-6b67-409a-9386-bceb315b4934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57365c2b-08eb-487f-83e7-cabaad82958e",
        "cursor": {
          "ref": "3191e155-3520-4591-a406-54beec324025",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9795799d-3451-4b93-99ef-0b21ce8e2368"
        },
        "item": {
          "id": "57365c2b-08eb-487f-83e7-cabaad82958e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b730563f-2099-4f61-b8f8-7c9b999605fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a24625e-5170-4773-ade9-24b990e87093",
        "cursor": {
          "ref": "2fd0c6e8-cd73-4b84-b6a8-e5f3885d43c1",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00088cb1-c0e5-49c7-9cea-93f6c8e1eaa1"
        },
        "item": {
          "id": "2a24625e-5170-4773-ade9-24b990e87093",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7ea50228-1197-4ff0-85fd-3d1f84b0facb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eb2900-d88d-4138-9265-963adda84eb3",
        "cursor": {
          "ref": "3ec19e7b-0aa9-41f2-84da-f5e0721d5df7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "15926a4e-bcb4-45d9-aac5-72a7522d9c32"
        },
        "item": {
          "id": "67eb2900-d88d-4138-9265-963adda84eb3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8195db95-2025-4dda-8d2c-790707480639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c5a819-3e06-4d03-91a8-a236c6d76a3a",
        "cursor": {
          "ref": "1b9c599d-61f2-44a8-869d-f090740e6397",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d1adf750-760e-4de2-ac14-a40c71ba9cee"
        },
        "item": {
          "id": "d1c5a819-3e06-4d03-91a8-a236c6d76a3a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b7278baa-4903-4325-a935-688636155821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9617225b-2753-440a-aa26-fb3ace73da1d",
        "cursor": {
          "ref": "c94b24a8-42d6-49ae-9118-3d79f5055a61",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6ad8756d-9301-4ae0-9ffd-71731255f288"
        },
        "item": {
          "id": "9617225b-2753-440a-aa26-fb3ace73da1d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "513c792b-b28e-46b8-8a3f-4debac2dfe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9099978c-2153-4ca2-afba-a632368ac0ee",
        "cursor": {
          "ref": "e58ffa4b-9519-42cc-a3ba-b4fe31a40a48",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "364a32d7-4a30-4606-bb5f-84fd8d710973"
        },
        "item": {
          "id": "9099978c-2153-4ca2-afba-a632368ac0ee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a18054e6-8e76-47e2-9d97-1eaa18d137ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9062d6a6-9d75-430f-aa93-df4128e2764b",
        "cursor": {
          "ref": "91c9cf78-68a2-41f0-a902-de1b2e19e7e3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "abf049f4-697a-4d6c-98dc-1191bafb7f9b"
        },
        "item": {
          "id": "9062d6a6-9d75-430f-aa93-df4128e2764b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "72d410a5-a6a7-4666-a71b-1b4de16158ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21eeda9-8fa4-4535-9552-4584bf0be276",
        "cursor": {
          "ref": "665be9c9-149c-432a-87e8-d3d925d2053f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "97d719b8-6043-4619-8018-0927013b1931"
        },
        "item": {
          "id": "f21eeda9-8fa4-4535-9552-4584bf0be276",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4731f788-57ae-4083-9f18-d2c8f4589976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a171ff-41f7-4d78-bceb-1925b44ee070",
        "cursor": {
          "ref": "54888291-8106-4ed1-a596-36aa80073f4f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a782458a-348c-44e2-b826-9392d4fe03a5"
        },
        "item": {
          "id": "14a171ff-41f7-4d78-bceb-1925b44ee070",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "89e7bf46-8a75-4ad9-9a04-81d86b93dadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa32de2-6886-4a97-9a8c-87ad08d85b00",
        "cursor": {
          "ref": "9f9b4f95-3d43-4932-a6cd-c23e228dafc9",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "527af747-57c6-4608-a1b1-655d8f4255b9"
        },
        "item": {
          "id": "6aa32de2-6886-4a97-9a8c-87ad08d85b00",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "74fd2450-a0f6-4d82-ad02-d53817d0333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd4c02a-606d-4740-806f-6b092bb7bb2c",
        "cursor": {
          "ref": "1bbc1ba7-edb5-4573-9f48-e892b47b4376",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8673c357-defb-4966-aac1-e394f9c22b9b"
        },
        "item": {
          "id": "6cd4c02a-606d-4740-806f-6b092bb7bb2c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c658da70-3b9c-49d8-bfe2-1c8a3dad0695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0275826-9509-4166-aeb6-9926a17003dc",
        "cursor": {
          "ref": "b74d5bfb-3fe7-4402-8a3e-c1a472698c83",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c7890402-7163-41a6-81e4-5b0eaf85d987"
        },
        "item": {
          "id": "e0275826-9509-4166-aeb6-9926a17003dc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0393975e-a404-4c43-b346-d61b4e65305b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e775b70-a6e7-4654-8ddb-f1fa9bb15180",
        "cursor": {
          "ref": "c6d7d426-b8dc-4823-8f1e-21c8fcc46dab",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "88e24bcb-0e73-42ee-b7b3-384902e7f1a2"
        },
        "item": {
          "id": "7e775b70-a6e7-4654-8ddb-f1fa9bb15180",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "82684019-9315-4be5-bc20-21ee884e81c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2409747-ff54-4122-b2dd-96562c33522d",
        "cursor": {
          "ref": "470a490f-f807-4cd4-ae88-5fc48274906a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "037d5e71-a808-49e7-92b0-8d8e70f98b3c"
        },
        "item": {
          "id": "d2409747-ff54-4122-b2dd-96562c33522d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2cc3723a-7188-4886-ae00-fe1addf17921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b72a0c-7fe4-41d2-a7dc-80bfa602a7d0",
        "cursor": {
          "ref": "72594f3b-6aeb-498e-bbc1-51cdb9e9d2d8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3265fccb-0657-4dfc-a282-fce8700d4c28"
        },
        "item": {
          "id": "59b72a0c-7fe4-41d2-a7dc-80bfa602a7d0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dc8a21e4-9f39-4d87-b65f-9e638c89c6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a68df4b-4e0b-4596-a939-497f3f746416",
        "cursor": {
          "ref": "34c1c36f-8665-4c3b-aa32-06a44c45dff0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "86c2fea3-a292-4f18-9880-e97a0c643ef3"
        },
        "item": {
          "id": "7a68df4b-4e0b-4596-a939-497f3f746416",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9fab6edd-d6c5-4f99-b504-f965869cf645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835d4539-d025-4f54-b7a9-d24200bc0b58",
        "cursor": {
          "ref": "ff044381-5e65-470b-b674-ddb85476644e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cec88a60-e9a0-4493-b163-1d267e1ae59a"
        },
        "item": {
          "id": "835d4539-d025-4f54-b7a9-d24200bc0b58",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ade1b691-1b1d-48d6-adee-4453f914643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc067d3-6008-4c12-b6a6-6b659e4fe205",
        "cursor": {
          "ref": "b4748230-3e85-404d-801e-4a7b1375de4e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "44c4b83b-d105-406f-8cb6-ab5c4e36cfc6"
        },
        "item": {
          "id": "cbc067d3-6008-4c12-b6a6-6b659e4fe205",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5d083379-313b-44a1-b5ab-f60a80d2f5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1099a0d9-505b-4fc1-ac68-35d5f13776bb",
        "cursor": {
          "ref": "03963a6f-5fee-417d-b699-58cd625d6c4b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f94c56fb-5d8c-48df-90db-a016ef68ec14"
        },
        "item": {
          "id": "1099a0d9-505b-4fc1-ac68-35d5f13776bb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8057ba42-0d2f-4669-875d-3343520e8d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcadec4-f2f1-460a-882a-53e843a0d2ac",
        "cursor": {
          "ref": "8025607a-ea5a-421e-b12b-e4718d344557",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cc3de542-1af3-4c27-9e09-aa100ff20792"
        },
        "item": {
          "id": "edcadec4-f2f1-460a-882a-53e843a0d2ac",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7595c4a-e4de-4f9b-8a7c-7e83d13c8c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ed11c2-1b4e-4cff-859f-7b6cca2267fe",
        "cursor": {
          "ref": "681d43a9-21ea-4e20-b7f9-1b174949335f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "319c31f4-ff38-4311-b681-774cc12d816b"
        },
        "item": {
          "id": "35ed11c2-1b4e-4cff-859f-7b6cca2267fe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "09ef4956-f14e-470a-a8df-348945353199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0351e6-1ea4-459f-a19d-d93de6ffaf70",
        "cursor": {
          "ref": "b8804979-8533-47fc-978b-97a99d4df026",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f4209aae-1853-4466-9951-3cf0ffd5d9e7"
        },
        "item": {
          "id": "8d0351e6-1ea4-459f-a19d-d93de6ffaf70",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fccb86c7-6580-49bd-a559-cd2f441a0628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0dddbc-313e-4dba-b00b-493f68f0708a",
        "cursor": {
          "ref": "6f969c5a-dc27-4e76-861a-768993f75c2e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "95040e77-c10f-40e5-a00c-bd71ab08849a"
        },
        "item": {
          "id": "2d0dddbc-313e-4dba-b00b-493f68f0708a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "08bf2a2f-4879-49a4-b875-a0ac92a391ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de53727-a0a8-41e2-9e5b-180924150d36",
        "cursor": {
          "ref": "6a324637-8b8c-4abd-9fc9-341c999a2f29",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "80fb1c7d-7cf6-4f84-990c-2e5f8ab6a2e4"
        },
        "item": {
          "id": "8de53727-a0a8-41e2-9e5b-180924150d36",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "411d8ad2-5ba4-4568-943f-e559c3b7f15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bef9f13-141e-4dcb-955d-504bb6603026",
        "cursor": {
          "ref": "9d1ff915-9f28-4706-997f-26a70dd99521",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "888eb4f0-32e5-4d7f-a9f7-4ea0f0cdcb72"
        },
        "item": {
          "id": "9bef9f13-141e-4dcb-955d-504bb6603026",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "68a61d93-99fc-48dd-a633-6653546556a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480b1719-a6e3-4e71-83a4-63adf67e3d99",
        "cursor": {
          "ref": "a74ebf36-ef37-4141-9178-cc865e80f39b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "02422ba1-23bd-4b1e-a2e9-f332ac934e5e"
        },
        "item": {
          "id": "480b1719-a6e3-4e71-83a4-63adf67e3d99",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "75a5960b-f435-4e37-b69c-24c01ec14563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc223b7d-059e-446d-87ae-a557f254662c",
        "cursor": {
          "ref": "3fcd6938-0772-4a39-9dca-3eb481b5a2a5",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9568c77a-5129-4f45-a1b1-7a8428ff2129"
        },
        "item": {
          "id": "bc223b7d-059e-446d-87ae-a557f254662c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "07e18bc5-f486-40c6-b4a2-da5b64f68e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf230313-03a9-4bbe-b746-bc2f5fbf6552",
        "cursor": {
          "ref": "ba8b8062-c768-4d35-a476-84bebf834bb5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3550bde3-ba69-4708-b6f3-7f0ea2364459"
        },
        "item": {
          "id": "bf230313-03a9-4bbe-b746-bc2f5fbf6552",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "72828555-a574-4df9-ad5e-d8eea0585448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e32f68-9919-4623-9a05-fa76b8d03f01",
        "cursor": {
          "ref": "601ce162-464d-4c63-ac7d-82d8b744efae",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d523cb8a-9cb4-437d-8b2d-df7bee64c421"
        },
        "item": {
          "id": "64e32f68-9919-4623-9a05-fa76b8d03f01",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "caddd607-a3cc-4bb4-9a49-08eb4a18940c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b87eb1-9717-498c-8c4e-a97850e8ea12",
        "cursor": {
          "ref": "07bf8ae4-7d18-4fbe-a94c-fd6e9215a063",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "70a6b59d-acb1-425b-aef4-f6489821d183"
        },
        "item": {
          "id": "54b87eb1-9717-498c-8c4e-a97850e8ea12",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7d51fd6c-5cd6-4e76-b00d-0115f91359e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f839a6a-3be4-48bd-81cb-cc1dfaaacd8f",
        "cursor": {
          "ref": "74deb34c-e690-4aac-a410-b7e7fc9fbef3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cd842d77-d222-42a5-8cb2-3625e6a491c9"
        },
        "item": {
          "id": "6f839a6a-3be4-48bd-81cb-cc1dfaaacd8f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "767f89cf-4b74-436d-839a-71431330f103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6bace9-fcfe-4d60-907c-d088a68ddabf",
        "cursor": {
          "ref": "f001f2e5-9817-4840-bc3d-0c5b15e2c98f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9582342a-fb69-4534-8904-4da799c3288b"
        },
        "item": {
          "id": "6e6bace9-fcfe-4d60-907c-d088a68ddabf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4a3be247-c6b1-40ea-a20b-7293b08a6210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97c27a-d59f-478e-a285-908be5f03bd7",
        "cursor": {
          "ref": "18fe2ef5-275a-4a92-97f9-14d05ebc6e88",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dc89f64b-ea92-4f62-ae6f-aa02b2bd9ec3"
        },
        "item": {
          "id": "2d97c27a-d59f-478e-a285-908be5f03bd7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f0467ad4-a32f-4c5a-afc4-1a706c7dcaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a93470-0444-4231-b5cf-a580e23b3dc2",
        "cursor": {
          "ref": "f051c909-8320-4528-abc7-4af8aee594f7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5c53cc98-ee72-4f3e-91a8-162ec11aefed"
        },
        "item": {
          "id": "c0a93470-0444-4231-b5cf-a580e23b3dc2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2b7fdbca-c9ef-47af-b302-50e1289ff5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b024f52-07a5-435f-bebf-939a102f496d",
        "cursor": {
          "ref": "f87bc29d-6a3e-4280-9b30-ba42989894fa",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "57f0fdda-31c6-4766-9be1-b4efc5d15e4b"
        },
        "item": {
          "id": "9b024f52-07a5-435f-bebf-939a102f496d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f2d5e666-ac3d-4919-b4ed-2cc339280b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6303be-775d-4e72-859b-22c814211e6a",
        "cursor": {
          "ref": "19fed944-4189-4b96-91b5-6ef006947de7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8d0ca357-1754-422f-bab8-57b98a0232ae"
        },
        "item": {
          "id": "dc6303be-775d-4e72-859b-22c814211e6a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "27bd6989-3607-42c9-a837-82029031c820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eddee65-6022-48ce-aa2e-8a8333f43913",
        "cursor": {
          "ref": "c9595d3b-5461-4fb7-9685-8e7b2f3c3ec1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c13cbdb8-3014-4b08-af8b-24fe1e579dcc"
        },
        "item": {
          "id": "9eddee65-6022-48ce-aa2e-8a8333f43913",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "18159879-1b9b-44fb-a3b1-383968f326a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a5c6f6-a1ed-402c-aedc-de4cbed0cb32",
        "cursor": {
          "ref": "b78d5742-f935-4377-8a2e-3118cf487162",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b0e33824-08d4-4a6d-aa28-88def55bb7c0"
        },
        "item": {
          "id": "82a5c6f6-a1ed-402c-aedc-de4cbed0cb32",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5d93480f-a9b9-44ed-b9c9-564025484fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3c5d3a-b46f-453c-8bb7-df8d5c1b7ef4",
        "cursor": {
          "ref": "c672bd4e-2bf1-49a6-a5f9-8f2b289f51f2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "14b44fb7-676c-40e2-87f6-8685fc5b47e6"
        },
        "item": {
          "id": "8b3c5d3a-b46f-453c-8bb7-df8d5c1b7ef4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "110ce4b7-75db-4f20-b829-6a0d167899b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa340e83-60e2-46ed-9274-b7a5d6aa2c20",
        "cursor": {
          "ref": "edfcde73-e607-449e-9867-fda00ee91969",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "001b815b-9b9a-4057-9665-a4ea3c22c7e1"
        },
        "item": {
          "id": "aa340e83-60e2-46ed-9274-b7a5d6aa2c20",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "95fd1741-145a-4b4c-9c78-975ab7afe3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee9040e-44f8-4732-8f9f-c7ee2acc40f1",
        "cursor": {
          "ref": "302f685a-8c35-4528-a46c-bde0f7bda54c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0a49cb1c-51ef-4db5-83a0-25b8c2aaeb4f"
        },
        "item": {
          "id": "aee9040e-44f8-4732-8f9f-c7ee2acc40f1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2a98e6ff-f0e8-4845-a9ef-ba62d9e86c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba9dea2-a784-4ec8-b1cf-c5da47645add",
        "cursor": {
          "ref": "70b7a101-3437-4710-a4b6-564774b5b5e7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b891b9f4-9c45-4537-8d8b-2ba7da35fe95"
        },
        "item": {
          "id": "9ba9dea2-a784-4ec8-b1cf-c5da47645add",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7d540609-2340-4846-aedb-02fe6d0dc838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a00559d-287e-4d0f-9333-c0387b67741d",
        "cursor": {
          "ref": "44411474-6ddb-467c-8563-fc324de108d7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9978f7bb-9f71-433c-9c85-33e161a48e81"
        },
        "item": {
          "id": "6a00559d-287e-4d0f-9333-c0387b67741d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8d25c0bc-bc99-4128-9902-8407d4ed345f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f772f4-8b45-479e-8bd5-2db78c934bc6",
        "cursor": {
          "ref": "99faf02f-e42c-45c9-8d24-882818214239",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a3726961-bb17-46d8-a8d3-9d44f41f92ce"
        },
        "item": {
          "id": "f6f772f4-8b45-479e-8bd5-2db78c934bc6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "976f8adc-ff16-4b8c-a06d-da8ca1be9d4c",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f8473b-f0f0-44d5-ac96-ac0ca0fcbb53",
        "cursor": {
          "ref": "843a8367-69d5-48cd-a66b-6404e72cfe64",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4de64ea8-8561-41ef-ae31-acfe15b47e40"
        },
        "item": {
          "id": "b6f8473b-f0f0-44d5-ac96-ac0ca0fcbb53",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b38a04f3-c9b1-4fcb-930d-f6433a73b2e8",
          "status": "OK",
          "code": 200,
          "responseTime": 5122,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e13c66-3f25-4e3c-b61a-cf30a4223fed",
        "cursor": {
          "ref": "e4fb58ac-54fc-4759-b49a-28fac6398f63",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7664c5e0-0827-467d-80b0-da62781f8261"
        },
        "item": {
          "id": "a2e13c66-3f25-4e3c-b61a-cf30a4223fed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ea729774-b7e3-4849-a40f-ad641074cbf3",
          "status": "OK",
          "code": 200,
          "responseTime": 2699,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "628b283c-dd02-496b-88c2-611b36289830",
        "cursor": {
          "ref": "e40d797b-8d5d-4201-bc74-c06c67cea068",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dac2d32f-d04d-414e-85e7-12e3422b5861"
        },
        "item": {
          "id": "628b283c-dd02-496b-88c2-611b36289830",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e305fc92-5c3b-494d-9169-943b1aa96a65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628b283c-dd02-496b-88c2-611b36289830",
        "cursor": {
          "ref": "e40d797b-8d5d-4201-bc74-c06c67cea068",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dac2d32f-d04d-414e-85e7-12e3422b5861"
        },
        "item": {
          "id": "628b283c-dd02-496b-88c2-611b36289830",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e305fc92-5c3b-494d-9169-943b1aa96a65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655cb006-0bbc-4492-b5ec-698ab9cf6694",
        "cursor": {
          "ref": "3b59d628-c2d4-4a49-85fa-ad190f9f7bc1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a0e25661-0454-4085-aa02-5ca305938ced"
        },
        "item": {
          "id": "655cb006-0bbc-4492-b5ec-698ab9cf6694",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a14132d2-6c4e-4d53-9126-92fd5ed5ce42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 98,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b024323d-256f-4573-a615-87bacf654b92",
        "cursor": {
          "ref": "c9a05efb-0386-457b-a0cb-e1c33b30ac81",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "669f76ef-7b50-4a2c-b041-49e489e3a9ff"
        },
        "item": {
          "id": "b024323d-256f-4573-a615-87bacf654b92",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6e54c4b-4a92-4bc1-9147-93b38f5305d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}