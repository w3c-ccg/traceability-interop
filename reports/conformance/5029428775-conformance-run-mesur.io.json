{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "217903a0-fea7-479d-95b2-528a9c1c5da7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "447a043c-2e84-4ad6-9240-da458909f39b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3dc1fcf-a25c-4f35-b31a-9695cd48c632",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "69cc5b30-6ada-43af-9190-46782c4c7ae1"
                }
              }
            ]
          },
          {
            "id": "7417149b-6f3a-482e-8a1c-f796b170ee3b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "676c0fab-0719-4cf9-9457-f1aeb45605ed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e431a697-b6eb-4e81-aace-40497b347d12"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "98d12553-72fe-4c8a-9315-845af1a3e559",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f064b1e7-2c7d-4ee7-b83a-634cff5d7bfd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58cb8fef-da36-49e3-b1ad-77f389905ed3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cce6cfe3-26bc-4de5-bc51-53a87f7fdb86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26f3aae8-bdaf-40c7-bd96-3f438a44f602"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27332ab7-f05d-4520-8618-aa399425c004",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8afaad88-6156-40c7-a0b8-43a6a57a5f74"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23accbe5-38a1-46c4-94ee-1c3140f73068",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed33b6b8-edd8-4a79-b301-419252383111"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4491472b-e182-49fa-954b-f334804e8577",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0c10b6c4-2dff-4b9f-8c74-1077ef0d1097"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44866204-54b7-4002-9e6b-c7ccb928f853",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63d96c4d-a074-4807-acf8-a2fc0fae659c"
            }
          }
        ]
      },
      {
        "id": "82291333-37d2-45aa-916b-1ad9c8d87596",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6f3eb986-466f-4d30-a1c4-10f931c1b592",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e44fcc7-90cc-4c64-8d9f-8fd3fff36e8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9a8b181-7272-4d36-9b41-29739acfae77",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba8595c-1ac0-4d15-a949-83c2bf6f5dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1002931-07d2-4c27-9276-8f86e3ff9686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67a08cb-acc6-4d6e-9e58-f31d2afdde56",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26377e8-27d4-4734-8b17-74c24eb35454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba00772-8595-4993-90c7-dc324ab1527b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc4594d-7748-4cd5-98be-f7417d18f267",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ec7cc9-3983-4fef-9dc6-ad98430697a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "211cc747-68c3-4c57-ad74-0a937119e894"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c348159-f5a2-4f2f-90c9-7df249c68d7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e401f18-d3c1-40bc-b362-bc05a1cb1a8a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd70726-e0b1-413b-8167-ff5ee039d135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37746355-b4ad-4c24-a228-577e7cc8fca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065f2ffc-e8f7-4fc0-91c9-2901fac66e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31080ca-eb5f-42fa-ab84-6a10e57c2b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba01e75-fa1d-4015-9f79-0d7bf6f22260",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123c2143-2362-4b2a-8aa4-129d460af4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c72e962-4848-4fe7-8525-31a183f0c48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8dc8c0-7ecc-48ff-8db0-574e1a02270b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "91f1e0e3-8d5a-493c-84d6-4ef8ab6b8a21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d313a926-d00b-41dd-af32-bdfdb2ee9192",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f2f5ae0-f215-4607-b056-a6d524af40f8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83fdfadb-c30e-403e-9684-b03efdcf8198",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8bdbc7f2-8843-4f1b-9b06-e38eb347bb02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88d6dbc7-4951-4b92-9593-049af2dd9125",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e5436033-82c9-426f-89fc-43609b8b107a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00a81574-3c86-4ac0-9d00-04e41bf5236b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52b50fb6-b518-4c2e-a212-43a8d72ef7d8"
            }
          }
        ]
      },
      {
        "id": "039c9d5e-f838-4b9f-9a27-6d4c36ea1e71",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8b15e56e-c467-4c4c-80ce-2cbc907efe9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0513d9ea-6cb4-4519-bdc5-88c074af57e5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9c569ae5-e47e-4f98-a449-cb1fbc283811",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9fc4d2-cb00-455a-9972-412c7f8277d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dec1591-7081-4246-9f44-8ee984cdc702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d737c6-4a90-4727-92c6-204a9c633112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e93f8419-69a8-4e23-ae2f-08e45a21a302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8519e842-ef57-4e8f-8f2f-248c2eb8b38a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2f5263-cb38-4b53-9a25-3e391cae7d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c96fa2-c598-4246-ab81-2787936e6a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e7a1b7-1b90-4272-a090-3db791d439ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1291c61c-c6aa-423f-b2fc-e85961974647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfc0b60-0165-481f-89d5-82f0e2450736",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45da4a91-83cf-4e77-89df-a47d256d9884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f757dd5e-6be0-4860-8339-670f07ba1419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b4f6a9-207f-4222-b805-4ab355534d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c4806c3-d989-4bf8-a17a-463c435e371f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659664dc-2dd2-4ea0-854a-c2837eb0a7d7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0721420-08cd-45cb-8e60-8be1ec27ebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb205a4-aefe-4f0c-b154-7ad44d138e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14630a93-646a-450b-b227-d13db73925d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4045b94-71bc-4858-ba53-a45a86be5e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9d6ad1-1b7a-4c98-a76e-59111978fabe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bf2b91-6bc7-483b-baea-a16cb9c99ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f346c37-2f80-4ecd-884f-6125efdbda6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976f79a0-c67d-44ec-bbcb-0045199a9405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "617dd7ca-ca46-4bde-a469-8b52a4ce72ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb25d553-59ed-4d68-b68e-c447077e7c15",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9846da3-9ebb-4de9-97f8-456595683656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7019aa7b-61dd-403e-8043-d08b941daa9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87579781-78d2-46a4-a859-6d76d657f681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "471fb8ab-913c-4c88-a167-894b5d5c4dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec247f7-8c37-4e78-92e0-980dad4bd725",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e190b8d-aed6-43e8-87ae-511771201b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a729f8ff-2a04-48aa-85db-f1fafe9bed9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369badb8-2e01-4f48-850b-e499004e0226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85af21bd-e0f2-4c71-b40f-f2857314f10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff4fc13-f666-418a-89b8-705133565325",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c09405-4363-4fbe-89a3-5d67216942a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593e8be1-3f43-431f-a73b-bbaca4de005b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e1ac63-651b-457b-b44a-a05585bf0ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08d66f42-f9ad-45f4-9f62-8b0cb8f5f08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0476e47-fb7a-44c2-9f5e-992d6aca0315",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7a4de9-070a-45f1-80b1-662626ca10de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a635da-7623-4ec5-ad31-09d528c40448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9586382d-ca44-4d4c-86b7-ff47e16bce9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b843da3-ad31-4598-b866-655d7ac22440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842bf887-cbfe-4b46-81bf-69ffe1fdd4f5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a623d93-a0bd-4f22-b81d-2a44ff14422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308fbf56-6ecc-419d-8457-e1a6eac64c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313e3327-db91-437d-9392-82d704934d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2111aac5-6506-4666-86b7-81aa0032212c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b066e3-9be1-4588-8c65-f35164af4604",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e19a38-4974-4e3f-b562-e2ea4790b07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9ad45e-22e7-4d19-a958-8dc7a0d671b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c733c5e2-be30-4ce8-aed2-a172df8e4840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12f06e85-a2d3-4fc0-8a3c-e67efe81c6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00479eb2-23a3-4886-9455-4e2e506a2a9c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ee3884-9320-4659-ac9c-570230d75c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e5baae-f2d0-4614-8504-7ce2d697cd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b473aa28-692c-4702-a6ff-f2c3b6764280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0341049a-5fc1-4a25-9fbe-8fd98941fc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caceab7-8302-4196-9d6f-a03febdf92d0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9991ebd8-a511-4cbb-aba1-6bd1f5d3656a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb982d5d-ae95-46db-8c26-518edfba5c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf202e3-cc7b-4c14-8f34-a079b989041e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e44dc2d-8b7d-47fb-8de3-0bc117da696a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d037e7-dfd4-45ca-8b0f-ea1fabf02d48",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4f4f31-d3db-4d64-b35f-e174311877a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acd635c-3c98-4802-9b26-4c18668344b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1d1554-05ff-4c1e-884b-edbfe4bd8ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3d5a548-5628-4035-943b-7a1990d34aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5121273-4f65-4dce-9ff7-7b289da84858",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b3825c-d99c-4b8f-ae2d-79bcee50893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f2dcab-fa22-49df-834a-cc47cb0e013f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b015bde1-bcae-4c5c-b320-31c0dbb84e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1191fb3a-132b-46f5-b627-156ad087d9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68019ba0-6dc4-4d4e-8ce5-082ac1dac9e9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4933d4-d77d-4959-8b20-a53444e73396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7c1d5c-7700-4538-8fee-01800193e24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f49a144-bfe7-49ab-8c06-adfd2aed2cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a661f03-f7b7-4768-bfe8-0be0229d8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8677413-ebfa-4bf1-879e-b7b929cd2ed2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5089e37-b82b-4f27-a899-9410d2661e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8213bca7-cc94-4d10-97ed-07bad2cf56b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d094bd2-1ee5-4483-9d6e-1e3522362d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc2bdf73-86d3-4259-9ab4-cca28964f580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26ceb68-08a0-4b42-b2c4-e2cfe3a59e14",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9a44d7-07ba-4a8d-91e3-09b9877d52de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc45ba1-f6e3-4fc2-951d-e51233d419b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac37c6b6-4e3c-4eef-8ee7-74391299cf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34a806e-dae4-4231-a7a4-9fb4389b834d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1c67a8-7894-4c2e-b5d1-fa51f309f46c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56904881-d3ce-4283-851c-e851de7cc083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bf226c-0cab-4158-9269-ca6a3c56f2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cd8e01-2805-4da9-8c15-78859a84ebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b5fe44-10ba-438d-a449-17c5506d6dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0071ffa-cad2-441a-845c-8d8409d22246",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55559b27-981d-48c0-b2ca-a2c9001b2338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf649bd-82ee-49fb-943d-51c6f1511b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc20b1c-ca6b-4e02-9cfb-cc24146efd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08e438cb-0aa4-48cd-aeb7-84cc6d179ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179f7be8-4d60-46b1-a511-b4758a598889",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bad00a-5f1c-487d-9e3d-cfec226447fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f980365c-e3b8-453b-9176-1410e57104d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19eb5fad-e7d0-4fc7-bbfb-7436a7cb0605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ee7d7d-c120-49f7-878e-fbabdefd6f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cbe5ba-fe8c-43fe-9554-7b4b3c97bdf6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa5c111-0954-48eb-8837-79db1db4702a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c227c0-071b-4970-ab7b-a7d1cd5e90df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3182e31-ea2c-4704-834c-f9d5dd54b036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b64b08-aa88-4de7-9f34-029caa08088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcdeb43-1c9f-4120-8e90-46c4b86ddda7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a5e20b-015b-4e66-8ce9-2c605c6d861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f2e4c0-4564-45dc-b091-723cd13d7ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7955a89e-ee40-45df-b6e8-b9bd3a057837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65dc9e6f-adbb-4f39-bac0-d3e9c33c6cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c845d319-f40a-4e9e-a3fb-2d56dd980869",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f17cf-cfed-442c-9aa9-4a349c31815c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd9e941-fc88-4986-9dc6-0196245dd54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2829849-0b64-4235-be37-00801256625e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be52acf1-8729-4177-b72c-d1ee77973b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b13a9ba-2f36-4b09-b531-f45ef6bc72f9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52eadae-0d6d-4893-b249-cf2a06bbefb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fbfad0-8c85-424d-9d2b-aeeffbb9ad85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2f5d97-0533-46c9-81c4-e1838e7d9e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b30e49-79b4-4a92-a170-05b5e30f26d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa49cdf-ee4b-4cec-adda-ccce49e76e7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e194cac3-bab6-408d-b952-506d1afcb89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0484e952-3236-46b4-bd86-496ff2351a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f4c1be-bd1b-4e72-b7e6-69a74d87b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d6acab-3dfb-4c4b-ba85-edc501a62a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb6158a-2f63-44d4-a249-604d8268290c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39df368e-245f-4aae-8a43-ea545f965f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6409c57-a4bf-4b70-9255-ce3c9034c58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29357c43-5542-4ebc-a47e-28172f28e18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da213338-889b-4c4f-b61f-c1f8486db985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07f731f-6578-4962-a046-2b508dc5a37d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08dd98c-b0a7-4a86-ab5a-9748ce8069d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1673ffe9-9e5a-4bb4-a987-f93d50f7393e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71e67fc-6208-4d2f-9f93-8571fc86483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ece7336-9498-4e77-9ec9-f4bb6e3a47ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28824a5f-df74-4ac9-96b7-620619d896d3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eb287a-61dc-4812-9d22-5a4c747c1978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d16ed2-a74a-4f41-8148-485bdc5294ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7aac55-b6c1-400e-8203-23be2c5fe730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7db52dc-d66f-4b2a-861b-74d3181a753f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24da53a9-898f-4531-951c-104535a28d32",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1755b0aa-91cc-41dc-bf26-1c60b66a5338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffa2082-5ea0-414e-9fcb-1a7a2b8cc43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54603121-cbab-471b-bb30-7538c3a6d578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d468826c-1dcc-41e0-815e-e1c706604584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd01d40b-2795-4013-8df4-9be89f6b4502",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b6b1d4-3bce-473f-b2f1-fe9d28161dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a93389a-6340-44de-bf4c-00d566f5f8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affec743-340d-4483-82a1-9fc97e0fca08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b819aa1d-f8f9-422b-af01-1e18203a3a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fa8b6f-11b5-4cf0-8fad-5379d3b66760",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c74b513-4dbe-4c81-ae76-1134b961c388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0642172f-5dca-4a9d-a90a-80cf0ed7111c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76f9805-88b4-4b5f-89e5-46f88ba384e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ef7634-d2c4-40ed-b4ee-266208861791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256af0bd-1d16-451f-b622-459e64c5788e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce88001-2456-4b67-8174-92e54026423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f7453f-ffa7-40a4-af54-53c726687184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0e9530-d10f-403d-8c4b-2350cae0fd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3a93ab-5c3a-4b28-bd00-c21a74956a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa2ea0d-df9a-47a2-b271-a1682db58f70",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1dd291-0346-4db5-9c9c-3778d465d43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcc9f53-de27-4152-bd74-3c092db7f77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fe150d-1ef8-47a2-abf6-30c51752ee7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47a33df2-b6b5-433b-8c2d-51a155403053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3529715-8106-4a2a-83a5-d354bd6e49dd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a42773-0b7d-4dfe-9ea9-ee672b21dd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb5fa1a-1672-41aa-b825-2b2f9856186d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde90bf8-a8df-427d-a496-71c8c9f401ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f27cc0fe-8ad8-466d-aaa6-865622692075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30697eb5-36f9-4f88-bac4-f48c4772b0d0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd86941b-461b-497b-a2ff-fcfe65a609f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13719540-df46-4ee5-8e4d-42f290c9689e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d47f76-ee6d-4d1b-9ce1-e47a9764e3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee965a63-4ee6-4dcc-979a-607d86113502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847dac29-fb27-44d9-9b56-2dd4972567e6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdeabf4-401b-4932-b37c-ed8923b7824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092011cc-c8fb-494f-ab0d-abe729fb6906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0109a561-2feb-4849-a310-6c30bde2c08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "033ce326-2117-4aa4-95ca-9ce35315856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd08241-5318-49b0-b35d-6e66ca335c12",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a542d8a0-dd0e-4305-ae6c-7bd65025c9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b36dea5-92de-41c4-ba96-ea3a6babb38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00569738-c399-47d7-aaec-86e9812fcd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e02d2f-4e60-4ace-91fb-25fbba882b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4780cdd2-f4fe-4090-ae0c-db13e3d1702b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e17e0e-89dd-42af-9d30-89cfb65e53dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e232102d-c1e2-47cd-9073-3e6bc84fafe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8aac43-c1be-4316-848d-be7925931206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5511f243-788e-48b0-a423-4c6ed73ea634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11362e3f-149c-494d-a793-f552e7da26da",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72fbff0-4a36-438e-9c5b-f230f1cc1449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426a518c-e527-49f7-a2de-bc149ec90c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576cf73e-b32b-4c55-92c4-89d8e31c90be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4944117-82c5-4bf8-b7f4-626099c9e3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec819eb-1050-459c-bcf1-33124d705c40",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc07d77b-4df2-4757-af24-6e3a8d011bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63275ae-2b0a-4fb7-9436-036d2066d9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6308b6f-7c05-4e94-9e07-8747beadb678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aca149f4-1371-43c1-ad31-bf3f5a789486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8a9c1c-fa58-4812-8b63-b0fe88374db9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd9ed61-e54b-4fd4-8566-eef72e09e267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d131b9-6ccd-4328-b622-273ed7bad706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde9293d-488a-462f-9170-6fa89a92f153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "277ecbf7-f572-4d90-a3e8-0cb29cac2d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae48a739-ef5e-4647-8e72-fe0c84f6412c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e07abd-18f0-4522-a79b-a9469b9b35bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c263b2c-7d70-4b2e-9806-45d7c8550cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c78ade2-5f35-4c49-ab54-e14684feb7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "30720f48-2dc7-4b88-aa72-32c18f296c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd627d0-24f1-4b24-ad48-80744fbdd0ca",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72627f73-02fb-4083-8192-81ae64e2f9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ef12b6-6ecb-41d1-8730-203bea8dec8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca799c7c-ecf4-42b6-b28a-c6d1d058ec13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ad495b-d22f-4363-9d9d-40dc843525b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d3cb50-3f50-4f31-beaa-3d3cdf55ba01",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f359faea-3e2e-4940-8609-1df487b74746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac90c8cb-baec-4aa9-8b5e-ce7d27a8e270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce98c3a-ebf0-4fe1-afd3-da8dd0243a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b754f369-17d4-46f7-8fe3-6f6994767997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc9987c-e58a-4a50-821c-78030a5635aa",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0990d6-8423-46ad-b67f-895789bb7dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3ffe1e-5aec-4554-b5b9-39570a6c4cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd990f99-4e66-483f-aa17-0742f051fc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "566e4692-3f20-4794-bf48-02dc3c7e4bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0751a627-f7d5-4e8c-b429-04bad688d2d7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23574713-bc70-4c8a-98a3-cdf6625635f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d98773b-35be-4ef7-935c-ee76160752ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c725a141-31a4-4183-8968-d3a725896a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e68ce7-759e-48fd-abbb-3aaadb699f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e379bb2-f518-4313-af6c-76d313d3d1d2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f93d349-7ebc-47c1-8955-2e6c3c0252be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e06ead-e2a8-4b69-b15e-22ae487fd2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5251b15-42ad-444f-9cdf-cd889654f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f5c005-2c1e-49cc-8ab3-1edd7558d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8577b9-5c9a-4665-8529-aad5e07a3116",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4373aec2-2ded-49e7-a4d9-89f772db6dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b265ed-53d0-4fcc-b557-426b9eb73139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b472de-51f8-4ad1-80a6-728e194c5e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73d7c92e-a584-4315-a592-5c257bb067d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270262b0-9840-4baf-b589-2d353a2dc9ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e4ab06-3be0-4d55-9727-e7f273762796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0c2447-deac-4ab3-b3a9-7927b6e00f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847b1039-a985-4b8c-88f4-10fa9c68eda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbe5ff7-7c20-4c27-befe-c9b69c5e9f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cec7be-0e92-4da1-95c3-0af2210c29aa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27a028d-b8f6-4940-ab7d-c6bd950e30cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1ba59a-d715-4386-9b39-c12e29dade75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64ceaca-b2a2-406c-8d34-1a3d2176fbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "891585af-3fc2-469c-b80f-871243b6cbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08ee0e5-8623-4212-be2f-106ac015d022",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6df363-1554-4e97-bec2-18a4e4d0b9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdb252f-14f9-4030-a6a4-9cc3f05df326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945273a5-7cfd-4b89-a531-a4f11cbd37b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0ae56d-5c6a-45a2-b46f-c298ceffb88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1c0376-2d40-4dbb-812c-6923f805c067",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5063fdbe-a5a2-425a-9253-4947381a718a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2494fd6-a38b-41b2-9d96-0fb81f1319e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f88a1b6-3823-4a77-802e-7980eb10687f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7abd7d-ec07-46e1-aff3-bc0ac7f5d9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef3c8d0-4c0a-4fd7-bd77-7fbef7a72f89",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c4cb91-f850-434b-a660-f8e5860b08d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cc114a-7698-424c-a625-70ce5082a680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b841846e-31cf-4add-b910-53c593eb1008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f60874-c023-46e8-9d10-be9bc968032e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abe7575-0b5a-4f45-bba1-e42b0569e6ad",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf565cd3-62bc-4b8d-ba85-8152ed78d3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7467c757-aac3-4119-a001-5679c0e89532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd932e5-ef51-41bd-ad67-b03fd0bd6c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c628d501-9bbd-4678-b236-21244009f6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e30df2-e5a5-4271-9a5c-b0ebad2ce805",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9ea3f3-5bb6-4910-b7c5-52cead4df9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6784db-2700-4bcb-8f72-887412f9274c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd0e01d-304a-47c7-81b0-b8bbdeb5811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f48594ab-6a7f-4f30-b235-7983b3e57b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c0eda2-42b8-4756-a0e9-245034717aa3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58451bf5-2dd2-417f-8147-b7276a80be92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa249f19-80e8-43bf-a13a-d95641d0b75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d531a4c-9573-4d11-809f-f0bb70c3690a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "72d47014-fbbc-4c21-9962-23aee5f4bae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b60e91-64da-49da-83cf-806bbf107954",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a10f8a-dee7-4c9a-ba7e-88c83fbf4d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23477644-02b2-44d5-b256-3f6f47ce8e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6319812e-40d1-4e07-b227-aeb2f3d2a8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1503cde1-eefe-4007-9b7b-2f93a51b9c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5def8cf-693c-4e51-b1c4-0acaaafe3799",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf975715-4abe-40ed-a8fb-56c116e58229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2cf2a6-f21a-4438-8f05-e0b65fc37cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e2810b-b912-40e1-99b7-4eccc96733f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43036071-8902-4bfe-aa14-d908ccca4eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4feed70-cf1f-4582-8e24-fbcc81383836",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c3c1eb-cce5-4560-8bc7-68744c8e8361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0adf5cb-9e93-4d70-b740-2f99149dabda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db3aba8-b9e0-4d5c-9d48-67d9dec9e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e07bf48f-408a-4933-9a5b-fd81c3ab4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb080f6-056b-4b5d-ad2f-c4d7bca07e02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46e00bb-2581-4ef7-80c1-ec61eda85297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd55b1c-95ba-45e8-ae22-52c66957c4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3be62a6-9812-4802-8845-e86d82226dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0476f4-a918-4005-9c88-bf010d413cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c67cf9-1f77-499f-9ebf-d088ccdb9495",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec75ed0-28bb-4f28-b37b-8d13cfb20224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd60c24a-1875-494e-9be0-4c6d200563aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65792dd9-74f0-4b87-8b8e-00fb74edf87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1efb8a02-286c-4969-b3b0-e69cc639db82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a09fa6-5c8b-423b-baae-bb89f37124e2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76d1444-f310-47fa-ab2f-c0bebbcabec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e06d93f-b483-41b1-8415-a3cf40b74f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a4e3d5-8bbf-46b6-9f1c-5414630bee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3abef150-7528-4e11-bd05-95f0c5f73716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319a1370-c2bc-4ae0-b55d-86b942bdbc66",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25790177-5077-4d82-a451-bdbe98a6a1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa92f68f-5e85-447a-b82e-63dbe14f4cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a848b05-1f2d-4c52-b7e7-32eb225e8855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33c3aa0e-1828-4a90-ac45-31caf845676d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5006648-ed04-4530-87a5-d91455e544cd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39f4dd1-a0ea-4f9c-b094-445fdca151e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c46659-8dea-4970-9eba-27c3419b6062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c54f1f-93f3-486c-9d12-be7ed45a0817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b1c5ef-5fc7-485c-9ddf-5c66c3a765db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536ee71c-f5fc-4b15-8d5f-ef394ec7179a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848a65cf-626b-4bc1-90ac-c09c8f986ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372b7521-7dde-4592-b726-7b58810e7295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72b1a08-6672-484b-adb7-352b782c7a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73d950e8-4480-4ab3-8b80-9ecdef2b180f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a36ba5-c522-4497-968b-bb68bef1c94c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa3160-5d6d-49c8-bd94-e235b064b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43dcff0-75e3-4afa-85df-718337251077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1b3fd8-1f3b-402e-a82d-41b145f24848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25b080f2-fbd8-4692-9456-8c317debb8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e184567d-f9f5-4aec-8498-b04640d56958",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003e7679-d5e1-466f-adbd-45ef4b5e82a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dc322a-daf7-47e4-879e-5d0cd34bc842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f306c6f7-1817-4b52-a73d-da98b6d90527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "33c3e030-9ab2-43b0-9f75-cc923c3c40ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ac2ce2-ad7a-474d-9156-6e6050b85bb7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1369358-e600-4259-9714-2bf45b72693a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d1de91-470d-4a2d-9a1e-8444258f39d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f525628-9d3f-43b4-8b04-ced7387b0937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8c6926-7aab-465e-b9fe-2d8891941084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54034139-be00-4235-9982-1862af0e4e72",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d412ae8-51d9-46a8-b746-f545d90b54af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dc41f3-3786-401f-bc99-130237bc304e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75a6cc5-709e-4e60-b7ee-30766735947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "972e5d93-8680-4283-b882-22c419f6662c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732049cf-774f-4e5c-8f22-16f2931c37bf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704a4458-5b30-4985-b250-7abd6544c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9244b7ec-ef94-49a1-8b06-7a9ed0125fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e72d7e-0042-40c7-8563-8053bd93fd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2a10b2-e325-4d5a-b6bd-57a890ff4e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1a6279-2429-4fe1-854e-4ef874e1a29f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4850973-706b-4583-9c78-8f07255df9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afce74c5-4aed-4083-9215-988783880abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b248dc-2335-41a1-928d-0810db775d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6666ef0-6bfc-47fc-b1d6-daaec4df2109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c228c67-35b9-4180-919f-d7f986e7930a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a220d002-8695-4ce8-9449-f81b987a5617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c40a48-77fc-40f9-add7-d9120d7bdb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a4c5c1-5210-484a-a7cc-de1c18644579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25e9c7f8-e24f-4425-ab0f-4c4a95b0cfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7acabe-2236-47c1-ab1d-e377c2aee43a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f5b450-498a-439e-aad9-217f0d22b2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbe456b-6788-46d1-8923-a81a2d7c14f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccd663f-c19d-4b12-94f3-b41384cec111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5280ea9-4854-4858-af4f-24e72cadf139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f8f749-a543-4252-806f-1484113bb29a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e32345-a6eb-4b87-abd0-1058b93c0951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dea050-a349-4423-8b38-7413cb900dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b4f341-a52e-437a-817a-ca20706f446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cfaab4-d6be-4f89-b066-47fb23e4f744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d708ec4-5854-46e7-9e20-3812074e0ae5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed54ab6d-0abc-4dbd-b353-a24388b91217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51deeb2-9bff-4f3b-9e02-ab7d8c6587f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac2760b-a59b-4bbc-8d7f-81e7728fb1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5ef5a7-9f4c-4673-bb10-3590c31cbf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2da1ead-2ee0-4dc9-88ea-01089a8fe11e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d4659e-c07e-40ad-b7b8-56152709f5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566fafc7-e4f0-4224-8cdf-0d86ed16664d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7242847-9a4a-4c49-a27b-493d5796a63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7199916-7fed-4a0c-a8c8-0fd4b1618e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe69d96-505b-4715-b011-11cd82113bf4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e193b119-4d7e-47a1-b780-a14ec5261916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac590893-a70b-4e7e-9af1-44282d29c17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97db3e2-53ce-44ac-b922-65e9dbea172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e2d372-2735-4773-a662-24ce65c3720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb937cd-57bf-4bea-888f-2c5a7fd5244c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e78f67-724e-457a-a958-c1c6e2f3bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a153d25-4840-4348-a9ba-071d1b378b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98be0681-411a-46c2-bad2-d9f46990f05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3fcb13-ad20-48d4-88af-da4972a421a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df269d5-a025-4f31-a6cd-ee09ff5c4e1d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d916d3b-d11b-4e47-be59-15bc1fd73e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dd5bd8-16b5-4dbe-bf75-4c4e4ba29b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fad3046-7825-4e6d-858c-54e6a91f25a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7efc76-1a08-49b3-93cc-d0a95e709cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2228a7a1-6877-44a6-9a9f-832cfe7378a9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f029b24-a7f9-469a-84d6-d2420562f16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5576ee-23bf-4b6d-bc57-c5dd599b06e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8330076b-628a-4b1c-8bba-2264f84c9ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7aeee5-3cfe-46bf-9215-c0ea2a2afe4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318452b2-ae43-4f85-ad6e-0dcb788ab900",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f810ffe-cf95-4bcb-ba7b-9aff0f21afc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662c7555-a841-4f8c-9cb7-f3d628f76668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839d1d43-d855-483b-8838-588ddb8fdbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ad569f-9085-49ec-a002-5ebc79e25d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94718db-3864-42d6-85d6-6783d719d41e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d5cd1-cdbe-4c60-b33c-73fd2be80ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9080e520-8268-42bc-93d1-da6a5e76960f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd4291d-9de0-4a25-b5cd-f78fb52faa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a01117-cae0-484a-a632-0e16d835cca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9bebc7-f519-4482-8edc-954edd2be862",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1809d4d5-ed76-4cd2-8af4-70879f102078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbd56a4-b530-45d9-a567-acb0d02e52a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834bc787-3c05-4f1e-bca7-f58991a6ce76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "483c3add-bb62-41f4-88d9-c3bd9ea1cfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5027f2ef-6851-442b-9f8b-3fcc0dd02171",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebb1561-94bd-48f5-851a-e4053f962089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e84f48b-a1af-40ad-896b-df959bee6a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be67edf0-de13-4919-b16e-bf940d501af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "163580fb-90d0-41a3-9b87-9708058e98a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697c2689-3f37-4da9-bc63-6ed665c291bc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cd803a-ba0a-4c2f-a303-4ce88106179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cc0e6a-044a-40c3-b3a6-92dbbe7661a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7febff-2968-44a5-873a-418af8cc2a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6881b37e-af8f-46c5-97b8-01d72e5a40ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec26165-cd8c-41ad-8046-6063340f5c36",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b073ef-2015-447a-9b53-e54206fb066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c92f64-c4a1-4945-8862-37bfa58a3313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030b9f79-7d77-4cd7-a67a-f1c841c65d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a235d0cb-a21e-41d0-bb35-7063662711d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755a8606-5ccc-4690-a5d0-68703eff0541",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a7375c-4b6c-4c69-8463-9e069108fbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff98ea5-8fd3-4387-a39b-590f951e045b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284097a1-8e4b-40f4-93c5-1f281149d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "74cce1e0-38b6-4bb6-ba7f-f724be1a2ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b93a009-5aaf-42da-be67-76411e8e7daf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41206432-b940-4266-94d8-b67885276675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b13d42-e5cb-416c-b2c0-4d320247b174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c132a17-a0c6-4838-a93f-10ce70be43f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01c24af7-9a6e-4fa6-b45e-343cb31401f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10117096-5920-4877-bd58-18322c7778c0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5074b84-9aa3-459e-95ac-d64f7dd7d9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e3a4c6-45f2-4321-bf41-9799dad8865f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2518ee59-9c75-4522-8b48-fe7d581926e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "260aa5ad-3651-4d63-aa76-0006fe07022b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91b3b03-e44e-441b-8580-3a48ef82783e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778c469f-3dde-458f-b83a-e99e1c972c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1b2e03-7466-4e1e-9720-d3031bff14f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c009fd63-764b-4b21-9046-3dde2b2f4761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "af2a9522-28e7-4944-924a-831e80ece378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302d2dd5-cf15-422a-af7a-b01ea7e44df0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56174b-cc26-44ef-a59e-7c43e0c04dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "216c1b38-2647-44b9-aae6-cd7de7e47f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c1d6d0-636c-4032-9bdd-b09048948740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a985e722-b8d7-4513-8219-393f301e226a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26be4885-077a-4498-acba-7b0a66362e91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1f4a85a-9f33-4e1f-bbb4-0ce40b44016b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f2269b-d599-43ee-940a-b64fe2b8a15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8282749-2a4e-454a-b715-0696bb89dfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb179af-569a-4850-8a19-fa58cc55ae43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f7da5dc-1888-48f6-8aa3-bd34d2f23818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb06f2c4-8fd3-4715-a121-7b9232b12ee3",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76968334-c1dd-4914-ac1a-664692cfce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75d9716e-f480-46c2-af82-020bb384edb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d23a757-c4da-4ebd-8d64-3fbd95ab42a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72ae8cf5-3dde-4b85-ae43-f26a8eacd82b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f365c0ec-a0ea-4754-8f92-c0b30973ec04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "657232a8-517d-4d3c-b111-88f6c16627f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d80a049b-6d18-4e2c-898f-466d819762f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f70fcf3-f428-46ad-9e71-84b6b24f0f70"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8af4a88f-7d06-4fef-998f-37507f0a52a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ed5792d-e15d-4390-a43a-884efd6559c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee60d3dc-6372-4252-ac4a-a2113c43de84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "046035e6-9150-4c44-b6ab-7362c382932d"
                }
              }
            ]
          },
          {
            "id": "2f432299-3a6c-48f5-9931-c6659367ac1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "524f2b26-d5c4-42e0-978c-9a1f830746a4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57d60bf3-4296-41ff-b15c-152c8b5742d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67355a68-dc67-4912-a333-71a6ba19e852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c517324-7313-463b-a574-698f00a46c15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b140ec6-c444-4401-bdc0-28afeb6e5013"
                    }
                  }
                ]
              },
              {
                "id": "bf4ccefb-b377-4cda-9db9-f28eedfb4a99",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39b210de-27ff-4379-931a-3ee4913bcc2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "617f9ac6-a193-4503-9b94-505a36da8101"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4630f1b-e55f-4da0-bf9c-8fd0c5f30d1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1e0de95-9cf7-4f7a-b0f5-1aabaddec335"
                    }
                  }
                ]
              },
              {
                "id": "7abc241b-c360-4bb8-85e0-bf86b80e033a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bba3b73b-7c64-41ca-a9b8-d7bb47de18fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3172a99-378b-4039-adef-64d01cfaf704"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc6dbd17-8115-4dda-862f-e46ec0c6718a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5572e09-4beb-4336-b898-241cae737233"
                    }
                  }
                ]
              },
              {
                "id": "979b18a2-69b3-438e-a3ce-63ea7b5513e3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c4e8a4c-0c0e-424d-89b6-6fc08a041bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b983e1bd-75a9-4d7a-bf32-507faae727da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acb17815-2853-49cf-9291-16309396f248",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "12a2970e-1eb5-4d4d-9263-f51e946f6bed"
                    }
                  }
                ]
              },
              {
                "id": "c831217e-dfc5-432e-9032-b844ffff9c57",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c32954-46dd-4d9f-a50b-90114b5b7825",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7268abd5-7c00-461d-ae05-cdfc773aa307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef27f845-29c8-4f91-8161-d062e20dbe73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bcaaab02-a4a1-4c0f-834f-71c7ee05cdee"
                    }
                  }
                ]
              },
              {
                "id": "b68c3b54-2220-467a-8f1c-f029d0c6173e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad4f9edf-2007-4cfe-9fd1-0ed27d4d7758",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58fc1281-3151-4538-bc20-956669e7e809"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "786577a7-af5e-49d6-a91d-960e2827df40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82533f71-c0f9-4428-9394-76742b991376"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6786492e-8d85-4254-8caa-a430d6f12eee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e86a1e2-0763-461f-bcd3-c7568dc50c44"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01b03b7b-5a68-4604-b4e6-61eb2019fe68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccef9e30-c0cf-45dc-b5be-8692be6e8741"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78b66f73-f4bd-4a13-b000-7a64c5791f58",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "010578a6-f854-4421-a256-ccd36e6a857c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c528e056-13aa-48b1-a980-85f0a92a3130",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c3ab73d-e558-456e-9a6e-e278bf784b05"
            }
          }
        ]
      },
      {
        "id": "d0ace1a3-f477-4b74-8004-b21188f7b14b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d1278670-97df-47f0-87eb-5f5fcd58693e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aead1d8b-3609-4657-830c-a11e162d4021",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14e9131d-b29f-41d9-a197-fd120d95698f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb18567b-1a62-447f-b46f-431ab56337bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc8d26c-11e8-4bfb-8846-2d5b214d7578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724c7b4f-1572-41c8-b1fd-467a06bb2d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "60f8a3d7-1577-4876-8d56-0a24c0b7724f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1652701e-9376-4e8e-92dd-03fa45fbad56",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4677f7e-47b4-4b51-8849-6e7438e7a4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05870f33-568e-48b6-84a0-c6e10ef3691e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03448c05-f9d4-4195-bf0a-7f3cd165f46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2dffbf-99d7-4c3b-ab3d-a8770660e5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ac26f2-d7de-4911-987f-abbde363c12b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f34dc2-6088-4b5f-b633-137e9d20321b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d107e3ee-ebd6-4d5c-bbc1-699362378ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8d0681-6e1b-46a9-9647-6ddf7f16dbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb279ffe-836f-41b2-b549-2cd9143efc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c709e76-be1c-4e1f-a4f2-34cba0177695",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18800df8-8d1d-4f62-a32a-58bdfb828539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96a5be0-f2f5-4048-b397-60d3f5acab5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e3fe6e-feef-46d9-abcb-306f2b317dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d66d0f-f22e-4413-b334-734999cfb477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88502798-b975-4ec9-a092-55dfd22e33d4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affab0d7-ccdc-40b8-9d8d-2028be1c21a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081795f3-9733-4640-b479-e64bf523fd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2aab7b-4f42-492b-bc23-264f5b2227f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d793bd-7a7b-443a-b01c-18a476408e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02068ce1-fbf3-4d18-a9b0-319f4c53915a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de19e29-3144-46c5-b34c-93e40e88f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a0d6b6-7bfd-4014-92da-c35c2033c513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71faf029-746d-45ce-a7e1-da1b952d0ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c15fc83-e018-4188-a192-36e949bc993b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c214073-d2e8-4850-be25-22d4670b1567",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362b1990-3aa1-49da-9655-3046bb243f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525ed860-2411-492c-ba93-67d47f3038ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0377be-2397-4a06-a137-fb8acf2c3ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "18e00aca-b62e-49b6-8566-ad8d65b932cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01a2f96-efbc-484f-85c3-03fa1de089f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1012d3-83ee-4659-96c6-d0cbfa06c90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872df361-18ed-494f-ab8a-6a31094258a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e50a9dd-842f-4aba-a106-93931496e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3129a1f-366c-4c59-ad43-3b4c17bb5000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50b9510-705d-44b8-879b-913b6050e53b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da707a3e-4478-44a5-8179-b7f5e4b77375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72d4e69-4754-4e8f-adf9-8919a61a8661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec6e0a3-7f76-4dd2-a221-1ebc88dcd5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58691fd2-e1ae-41cd-a98a-83e451a4d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5414a3c-bf34-424f-bd5c-a59ada0ade0f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67d4237-4c10-4611-9293-5c8e002bd261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace8aaab-f32f-4c93-8925-d480dc96bbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a06e80a-2163-4413-992f-be0e1a70766b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7deb5e7e-6afb-42ba-90c0-ca9ddbcd0b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75df51c9-1537-4efc-85c6-09fe57a95c39",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e3a1c4-9235-4f36-a816-1b520a13c452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5981ee97-6ef4-484c-99f1-997daa3a56eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed99df5-87ce-4e7a-ab39-e8edb4ef2446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07e43fa4-bbdb-4852-a43c-9e7dd32f2bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313ae220-7b65-436d-80b1-40e13c10c684",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2239646f-f1db-4020-8082-10eb66486da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6084f6e-1380-463e-ac2a-0445abc85d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2700c6f-7a9a-460d-ae94-7dc76270d025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb50885-7737-4ed0-9e29-f7f8f1db897c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b4e798-5aae-4e74-b1c8-ede524138822",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6345cbc-d10e-48a9-af4c-83ee10bc438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4d8edd-f82c-4eae-95ee-adfd6cdb4f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9ad44c-03f5-43eb-8a08-bf02f7cf1879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f883a11-5f09-4899-bc9a-0a1df5422ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee88fa1-7cc2-4142-afc7-748a9807ba1b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e785629-91ac-44a3-925b-6881e2da9a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e4909d-d44a-4b5b-ae75-04c6afaba2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f213c3-a3d5-4949-8d71-589b589c562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "36afd39b-deb3-4c67-95b3-2be3ae39680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3967b3b7-a4fb-4852-bda9-d2061b604694",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0134e442-e4e2-41bf-8176-ce07f23c2c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d316a6-fcc9-4f70-9c69-01b9a5075aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4fd251-06c9-479f-abe4-ffccb72b3756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe001ac-a6f4-4600-a8e8-84790c7fd1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aeba04-6dea-42e9-8521-048acd7aa7b2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410e1eb9-67f9-4e6e-ae69-733c07a1654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3cc28e-5664-4544-9811-5796f3cc3ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978f4b32-3515-4c91-aec4-954ebffe0f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4395f3c-5905-49b2-8892-c2e72f9baad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969c29bb-dd85-4569-9c4e-fec238daad4d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe81e06-38f6-45fd-91f8-ace0234ef088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96e5d81-d027-47de-ae7c-d8bbe0c2295d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d646f37f-8132-4eba-9ccf-9c320a23e3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2ba37f-2651-472f-9f05-0538178a78fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e0084a-d436-48fa-84d5-e5119899fb70",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30320d18-2eb5-4e16-bc49-8e835de6cd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5ef590-21cf-4568-bb81-41c1047666c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c719598-c0fa-450e-81bb-038a748bc71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75408abe-da18-4d87-865f-26bac9cf7009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbdd6d1-3f20-41a3-8b68-d55315088e49",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ef10d7-1f10-41bf-bc70-3ed6fc0e9556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147e99a3-ad85-41b7-9c07-d95b6bf59f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5fe91b-3c87-4003-9dd0-5cf891b3034b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d249347-a0ed-4d0d-aede-f63072eb3426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e29e32-3ab9-4ff9-b2de-a444344c4363",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e5e609-ece6-4923-8466-a8c563d7bb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475373c8-0276-4e8c-9e0d-c9202803e813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a87456-b019-4a2e-bdf1-2ee5e95ed3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "582b8e03-4b93-4064-b78e-3d950b089a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3737e99-6145-43d9-915e-05bfb558bb8a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7203b981-e22f-42a5-94dd-84428e75f93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2386cbe6-d2ee-4e3f-ad7c-46d6350600e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59b1b2-2d93-4362-b98a-347b7fa3f9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a73b2fa-53bb-423c-bfb0-1ee4f9112e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e934f5-ce3d-4673-913f-cddaf43636c5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f05e7c7-cbd9-403d-bfc0-058085edff90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaefc7a0-5c63-4e08-b0c5-2d5f11a3457e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d176c173-e27a-48a1-8a03-fe9c4ed1408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5c353c-67b2-4980-9044-1d58cfc299cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51125372-a808-4124-8d85-c727da08770c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5efabdd-7516-4f15-968b-2f49953d2e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d5e933-043b-4972-a007-3d0806b86516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1088411-fa49-416a-8b13-14bc3352017e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d99ea8-02b9-462c-9261-7d79fe1ddd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5c2d31-d6fb-42b9-9636-02cf45074693",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9e41eb-8361-4014-8dd6-9d3214a5c6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0e9228-3391-453b-b68b-d81b58cb7af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abd8af1-bc97-4a69-9ade-d918b18c2667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ced0e7-80d9-4a2d-97de-64edc4fdeb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e434b2-9570-4ecb-978b-dbbd4c50a4b7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fffc8dc-4c75-4f60-850c-2cec845d52f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af2b3ee-9940-4fba-80d0-c7c50dc5b186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1a0764-f25f-4b18-98d5-bfa478975c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46ef610-a228-4863-8def-f2752d79bfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4618bb9c-a49f-4388-8119-2c424285447c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6849691-7713-4bd4-8125-b4bc7bec97b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db8a983-13a5-40a6-a4ed-98f815ab2aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda333c6-c3e8-47f7-ba95-c295a9376c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3afd35-9e1c-4cb8-b2df-5c699edbcd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3524aa9-f2fb-4d6d-857f-81fb6ffc4162",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe29102f-75c5-473e-8327-b66bf3928b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8e364b-e491-452f-8f7f-126d0aeae94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a0171b-ae03-45da-8f9b-69224409c328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4f312a-4651-48d9-9cd1-0ae6db423982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369091dc-2dda-406c-b685-3e7f8b26e8c7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae6ad8c-63f6-4fc2-bff2-5a46d23a54e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef6d2f9-dd9a-4f37-b6ce-6d8ee2a62db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f379d166-8103-4612-9356-1e8d316fe09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94182a50-8ff4-4790-aa88-38942d51da41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a21e27f-c943-420d-a6c8-5e6f6ef7f580",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a326b1b6-20f6-4a60-a229-e5fe1742c063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf378a1-cca3-47ee-b2c3-fbeea0a8e78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bc9f18-ad41-461e-8775-191730e6aaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96a8c772-a5ae-402d-a465-de21628bd2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199e7694-ab34-461a-afb7-1a5b1a39e0f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25cb0f0-12d9-4ad9-8e8e-3b97a86bd70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4619230a-662e-4bb1-81a3-5c58800320c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e28580-c9f7-44c0-88d6-b45af51a5a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11746050-9bc7-4706-8e10-3410451a415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1541945-0238-4d54-acbe-a39c0d7c2520",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8869da7-adef-4a69-aaf3-34c782c22139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38dfa2d-9fe7-4257-822b-0e3d94740078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051a8c23-2eb7-47d7-9416-1478d84246a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d94e90-00cb-44eb-80d0-93503b888a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e4dafa-f239-4124-bee4-dc35f6a44e56",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854c828d-bb00-4914-885d-9b3c1eac0788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c41a1b-87ce-47fa-80ad-773467f36efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e496119-367f-4e03-b993-be86686cdd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "453d4e2c-7a3f-4f8c-b35c-30a18e52f422"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9426f33-7e61-4eb6-917c-ee1ed7d3e6b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a46f036-2d53-43e9-9db8-87a40d6b3505",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4db327d-4984-4a7c-8279-dc3651b54751",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "30cfa38d-5573-495e-ba42-aec847e6ee8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8592a6b5-10e1-45a3-841b-9118b55c3758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae459bcc-a6c2-4ecf-a5e1-02b6e0a29b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac9bcc5-42ee-4b2c-981e-b7f7890ff329",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90149c73-b321-41fc-a65f-787a6cc92eb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "97132118-b0b2-4397-804c-d5b13a97cc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd42461-27ff-45e9-bb25-878c9e26dd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e2c471d-a45e-4189-afed-59e3d79f1fd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88cb124f-87dc-47f4-b834-90cf51472072",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a98a06c-c96c-40e3-8c40-587343998031"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "955375fd-3b95-4768-a046-1f0b05e71542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e72cd9b-2a55-4fc8-87e1-519fff570a01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03324265-d0e8-4e0e-9f09-dc1e227977d1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d39942ef-892a-498d-a13e-3f996a7cf91a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5a5a76d-951d-422b-b58e-32ebb66d8d4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11aceea0-cb9e-4acd-bb7f-b4fe9dd9da9b"
            }
          }
        ]
      },
      {
        "id": "9472be85-940a-42eb-b7fb-c6f2f8035450",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "17039e75-e9db-4c7a-8a4e-9969c179bb50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66e0d1b2-445e-4838-bcd0-ca0fd7a32399",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f486a30e-70bd-41fb-9094-7708818d1128",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcb48d3-cf00-452c-ad8d-cecd18faf91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b3e13f-6006-4871-b76b-97964a42db02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5751e13e-a313-42d0-b69b-c914b0c70ece",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77513bb7-a6ab-4d6a-9695-9b43bfe02433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41671d47-f31b-4fd7-8c40-64e8141a09d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2efd8c-ba19-4429-b82a-dd0a5b40b3cf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e269707-db44-4b66-a3e5-cd1444c8dc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace42fe8-1dd0-4993-832b-08feb76dd257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aebad78-258d-4068-89d9-59cfef960561",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f947d47-fb9b-47c8-9acd-46f8a589be6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87f966a-23e0-45cc-ac24-c3b2ef03f191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f743617-0b15-4040-92fe-cbfd8403bb76",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e5b3a4-4f4b-417b-97e4-4ce2696ac951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9712e7-c1a9-4859-958a-d36e77289565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c0e65f-7abc-4a60-94dd-64891acc0597",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc45e8ab-febd-4c79-887d-481274479e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f99e64c-9021-46f6-8a02-948e25eee8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3195113d-b3be-46f4-8499-69562612ac0c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c299a56-e044-4739-ad4e-911dfbc1b61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09e6b83-e5b4-4dbe-a90a-27965c51f026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "341a638d-8485-4769-8d82-5d3f459ad141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07e0de5-1c02-4adf-87a5-91820bbf37a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017bec51-e68a-4763-a70e-9601b51d4902",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9f2894-084d-44fa-b5de-6c82d396e8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b292bc0-8c60-436b-afca-43429537b1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3bff6d-1604-4fd9-9179-af389a055b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a44c27e-3ae4-4476-b0df-f56f9fcf8be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4104c5a9-bed2-48f0-b45b-897e532f7e0d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc3fbc2-a552-448f-858c-abfe4a5a8e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b0a1ef-ba26-4998-96d8-cc9338bc49a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89269a97-ac5d-4bca-b05c-6da4269904fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da81dce-1851-4d6b-8db7-74f42f53aa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96961ee2-e1ca-4084-a3e8-50b837b0dbf0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e130264e-a8b4-419a-a44b-85e101d91350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b289382-1031-4a7d-b63d-354dee27ab86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0038a68-b1f1-454c-8b2f-229385486f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc665045-77a9-424e-a805-a761e6541656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66c76ba-d7c6-45c6-b02b-ee7d72b6e643",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1b70b9-eff1-49d6-a06a-5a2367dbfa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fed3874-880e-45ad-b56d-ecb2089ac7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581ce57c-5bcc-44a0-9c0e-3a634df98d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356f6181-b0e5-4f3d-bcc9-dd34ec03aa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd96d08-9a3f-4189-90ce-e32b0cd6b96d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac5ae91-d7a1-4075-9d10-14b015e49adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09a89d2-e47d-4b61-a05d-031ac1060e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b3a182-9f02-4f27-a0f3-fb3dbb05d3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db70d0f-f13f-4b39-80e4-b776afd81fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf3ad27-1f6a-4a8e-8d31-6882af86f1d9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c372e5-65e5-400f-be5c-a994ecd84f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29eb1f1a-4ba0-4c0f-9ebc-d0c9bfd66412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd6b695-c445-4ecb-a8f2-d83519a89199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f13645-08b7-4cc2-bcb0-25390ae6bfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12c0454-6be8-46ad-8695-f7ab2682b850",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1654b1-85f1-45c1-842a-62716b0fc7a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd62531-c270-4431-a0a4-70719002c171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65befcc4-e4d9-4927-afe9-36a70b717bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc65280c-43cf-464c-b8c5-21495f2d13cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b8f4f5-5674-402e-b378-8b56ccd721f4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7336f5-f739-45ef-80f6-9bbe58959152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5cc7b7-d344-4481-bba7-2ad51bc42cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d92421c-682f-4164-b651-6b1570c8b166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043aed41-81ee-44fa-8d51-b677e335c204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d046360-92ef-4c26-ba8b-f9e05a8e13a9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350e5541-18b5-474c-a82f-2567393e0ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e33b79-0b97-4b11-8130-93d0c3733511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3ea04d-fb97-446d-b652-a31c0b1a26e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f564b9b6-9155-406c-84ab-7030eeaccb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462c34de-bf44-4dba-abee-9ba2f3719b98",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f2861a-a173-495d-8f82-e4cec25c2ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187c28d6-d1d5-485e-9ac2-87d2b0358f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6908a7f-9a74-48f1-89f0-fa13a3f321b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d239973-ec12-4e95-a2ce-7efbd063befe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00e398b-1a1e-49f1-9378-d2a37aa03252",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818329ae-74bb-44fe-8878-5a5de315185e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805ddb9e-8b63-4ed4-abc8-3b16fea03355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c597fd12-5584-4711-8606-939dbdb0c393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427b0e13-6c15-4ace-abfe-4701503a9a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7248d710-0136-4e1b-9299-4cf19f74a9ed",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec1288c-ac19-410b-b198-8519719899af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6775082b-8c09-4cb0-9913-8edc6a7b6f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e901e5-334a-4ce7-af60-93e499b97c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de3be00-c83e-429b-a41f-c288a3e5d64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3bf3e9-9ccc-4b73-8a1c-6ffb1221b44a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8b0e17-6297-4d90-9328-7e71c8880395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2c41c0-24af-4d82-9d28-24862939a137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43dca7a-9872-44f0-85c2-cdc974b8656a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3fc810-4bd6-4f81-a7c4-3a28cd8a9619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477a659d-79b1-45fb-888b-91b45c488f31",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1c4e09-f5fd-4782-a798-b12c0b0f2457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba89d2c-febd-4328-b080-64b73ba03627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36f2460-be2b-4ac9-914d-f91f93af35b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b280a42f-431f-45d8-b266-998e22e55aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efa66d3-3e27-490b-a4a9-092147b43856",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a490295-7668-4665-a1fc-7b8b5570665b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8522f0e0-18f8-4c4e-b64e-6f4a21d2bfc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d9e42c-cfec-4b59-8817-bb33f124593c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158bfc03-addd-49df-979b-97f3064f8774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed585a3-544a-42b2-8508-1ade930b16c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949e36fd-4aee-440e-a8e6-5deca2159208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522a3431-2253-4323-b773-7d9583f5e4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c290b779-3dfb-4801-be7d-833a54bf1c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea11379-38e2-4800-b13e-9ab7b4b5a915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8236a3ef-9ac5-4a98-bbd7-2c2773dc0816",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eec8c1b-d985-4a34-adb5-8c869226d045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6791eafb-daeb-417b-8548-4a7ed0d65f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d10fb4-b6e1-4722-a225-773230a0fa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86474b3-76e5-4704-9cb5-bd523499517f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df2b9b6-b97e-44a1-b83f-f7c14191b376",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fef3981-537b-4c14-8165-b2ad1b2eac1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda8ece9-f4ae-4b67-b848-20e473464ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c771b82a-b9c0-4d6e-8268-25593b92ce9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea34c97-5553-4aea-b81a-15e55cebb2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc17b212-ebfe-4570-81a5-78d1ff68339e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45409740-6188-4ff2-af33-d421a809c91d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc9a22e-4933-474b-8e27-bff361f632d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce82d8ef-0949-4b90-b0ad-7c5748b1816e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044a8454-1ee2-45b2-986d-0bcaa62707c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de70f952-4b1d-4a3a-9d2f-9795d3a82729",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7534b24-37b9-40f7-8856-ef51d43ff369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3120f8c6-9a2a-44b5-9f58-db8a148020bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49787420-46c7-427c-96a7-87d3994afa7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263a53fd-58d2-4e6b-b438-3142de5885aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebcb384-8062-49a4-907e-f53ed0aaf612",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f74df5-ec7d-4423-b0b7-c8d52481179c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671d8be6-242d-4de3-a57d-71388ae8b64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c66e70e-ac2b-49a4-a543-d4a2b4f85caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cceb2f-c266-45b5-8e82-5bd9bab491ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb24a53e-a65f-4497-ba76-48a4c99cf74a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5629ad-506e-4cc4-a5be-25e78cdd54f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f243bd81-1594-422a-8818-4df049f78b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014f5a1f-9d7f-4c0f-98b7-4166cc4b0c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f2ef72-50f7-4eb9-9445-72d0c8403ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41efc57-7cb8-4070-b8f0-b507e47ee82d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e674854-6e6d-4d89-86ea-f6b69b18aa96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cef9b23-c835-41fd-b228-c8ebf892d85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a396b9a8-18fe-44a9-9451-2179b0fecb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759ceac8-455e-4ff8-b7a5-6d0533671d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9000b20f-5fef-41ce-b79a-bc9c604e466b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e186da5-1ec8-4fe9-a1cb-2d98fe21e591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d36636-ea67-4c29-bf65-ca3c8aeead89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246c657a-61cb-4d97-a3ea-3af7ac02b444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d33e25-6e26-4403-bd7a-0b3897f38f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf0d7f6-8026-4f05-b60f-8eec8b9ba04f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453d2f22-68d6-43b5-96d0-74e6edfbe029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8348a9cc-0db0-4ca0-9678-67309b755465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46054a16-2c5f-4a1b-bcc4-1c69cad52e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b871778-887e-40fc-a2a8-e25d1aba90ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79029b72-cbb9-46ba-ae7d-13b826d2bd69",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb25898-6180-4d56-aea5-175fb336737d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a373af7-904a-4382-8f3f-c7a80f0e2060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14017ca5-9b33-468d-899b-1afdd89c66cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf105b8-cc6b-41ca-a0fb-dc011a25836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6983ca-a3c1-432e-bdc5-6f7de9bed43b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f2a32f-9068-4af5-b3f4-854aa52a3866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b082ced-267b-42c5-b55a-c9ac99a2eefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce9d8fa-2e0b-4021-964c-bb31fadbc84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0010971d-2d9d-40b6-81b7-29d3ca104e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd7df30-09ba-41f9-888c-f0331dd3214e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456a35ee-fcf7-49e9-9338-e38b9234d9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d2ee6a-5fe0-436e-991d-df71d051e415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2b20f9-28ca-48ab-9c09-d950532f0137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51add23f-af3e-4397-b9bb-646c0c384b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69253831-b4c1-410a-96e4-968ff10d1285",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a255ed2-28ba-42dc-a939-9e260e44fd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651af606-0a03-4741-a84d-d6471aa289de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d479f20b-8df9-43a5-8388-ffe67e1aa7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8454af-ff28-4607-a754-eed797078d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855565f2-3c67-454d-ad47-8814a131bca3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28ebb18-702e-4047-bdca-3fba04c85efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef16bb2-67ab-4c39-8937-78a50c60082f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00175b70-b13d-4ab9-a7e1-d09e3e7dc64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca61bb94-84c1-4bdf-88fe-0127cecb6c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b919c5-b67c-4660-a983-6d985ef68d1e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305d8926-f4a9-43e7-b4ac-5fb88bed7d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67d14e9-81d1-4883-bf05-1cec66d4c2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4dfa66-c71f-45ff-96fa-4b326be53f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77134ea1-31f5-4ad8-b28c-71c97c0407ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd3b94c-9ee9-4de4-9f8c-af44ed479d3b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2351bdd6-c7e6-4a6f-b51e-b6396bc609fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd9f3eb-c7ad-482d-ad85-97801f6f33ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2ddf33-aae2-439f-9ae5-07ad0c7b5501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b02077-4f48-4808-a8a6-afba41eff850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c71e414-a689-402a-b1b7-16cf5dd31d0a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98252817-44e4-40dd-b001-f43c3710dcc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19436893-a2f9-4685-8e11-fab6252c281a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57444e3d-9004-44cc-aa3b-ff6434bda367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9663ee90-0d10-45c3-873d-5f391259e287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbaf283-8e58-4ef7-930c-c7dce23da134",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d13f5d8-dee5-4f75-af1a-f66a9aa63b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f9ea19-b7ab-4929-91df-19c157c655f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc224c75-7dc3-4e90-9034-73c9cf2f191c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1783a255-f651-4380-b561-742b0c6dcc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466d274b-c2c9-4385-9695-cc243db1c69a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb177518-57d1-438e-b28e-054c5218971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673a9ad7-4a97-44ac-96d9-8d1872159e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245fed18-bc9a-4084-83b1-8d1ff12f9754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334f5bd9-ee2c-45a1-9f6e-1f549873eb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400a5f80-a845-4569-90fd-93327ee70801",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a994d3-477e-4d6b-a5a6-8b2df10ca4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4076c48-868e-48f3-ad4f-1f7348bcf99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20720b8e-bf87-4e5a-b4d2-403565566a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0400dae5-fa19-46be-91a5-e6649fe128d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3e222d-b6a4-4332-881e-e25059a048cd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8de195-4be0-4128-8fb9-303b0f995df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e27c46-5791-4fd2-a2b5-6daa4509827f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3576fc6d-57d1-4bd5-939e-36dddc5d53a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb38725-6d49-46f2-8011-20b991607b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e150d1a7-ba8d-4798-be57-5e81e938770b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8fe8a7-bb8d-4591-a768-71ecac4d3cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d99152-8c79-427e-bf1c-442cfdba526d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e97f04b-2979-4c04-b59d-a25261d57d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1641b4-a848-486e-8686-41aa15d6be35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f93c41-e8b9-4f4b-b4b0-6a9833a9ac9b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696e7382-3003-46a1-b218-4ad888670d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18b221e-0c54-4213-9775-b76f00d52dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b92d306-4511-4c60-8032-007ab41b6624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a04062-eb47-4049-8b24-3e1c5806fba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca94a5f1-f432-4054-a89f-af7fcee86cef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1bcfdb-9cae-4031-b41c-5a3c57fcba79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26d49cb-9a69-446a-a401-572ece24d1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd8a687-5757-4ed9-b0af-08e104d94a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d0c3c0-c105-40a4-a9ef-e3a616e54082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6064595-fcdf-426b-b4ad-177020f8b059",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4878b2a8-9211-4e39-8134-05018f4c95ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76922a91-235b-4402-af35-1e08aa48d5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6973b54f-3f16-424c-83f1-c4fdbbbb35ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6cbb3a-1ed7-48c5-8b57-e153d3c6089c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd4e7df-3a93-442a-8548-f2ba2f1b6bfc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ebabe6-7849-4e55-8a72-a74f805db19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039a94e7-de04-41a0-b7cf-3b9a1d657576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de72b25-65e1-4a8c-b25e-8f45f22d4088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5968ddba-2706-411a-8a86-193205068a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9cc7d4-cd6b-42c4-89fb-208a3db61cab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e4db8c-7665-4098-93da-06686c0b311b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c34bb34-fac7-4da0-9656-8a92e6628b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1427c25-13ef-4a63-bfdc-e0ec93b0b83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dd9fc8-f152-4ed0-b90d-a4a8f27df7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9efa6a-1a74-4609-8932-43a269b53e14",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc981d0-00c1-49d6-b562-3282ba929219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b788552-43ee-4655-8872-58b7c24393f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af85145-ab5f-4e83-840f-1e50f91f7af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a1927e-fa44-4106-a68f-4f57a75e66e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9bcf6a-61e2-4695-be2d-8501d8ec9bc9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69553da4-3641-45b2-b4fd-78a1689ab5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb6b8ae-1c48-4454-a310-21c4e8bbc7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5227579-3bb1-4550-813d-0b6126bd3e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cc0e8b-d612-4da4-9a34-e26f768de155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e214d3c1-197d-4bbf-a4e0-2f7ecf436b8f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd11357-235a-4d51-92cb-755e334533c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54963cd1-44d4-4fcb-8b20-f7471360420f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7993cf8-1a9a-41b8-8622-457a7026ef34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234ab7db-2ad7-42fa-aaa1-ce3206babb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd8583a-dbcf-4440-a56d-d388801493a3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74208aac-247d-4d1e-b24e-03e1c78ff53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7d8da8-fcc9-4e0d-8bcd-08bc03267b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c12f56-4865-4ae5-8be1-8fcd543beb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c8d817-8433-4a73-9b58-49f3c2a5e859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde1fe95-f03f-4111-958e-5e55e4229c80",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf6ae4b-f8ac-4f79-8625-92100a02b733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514ba7c1-b8d7-490a-b04d-527c473499ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6458b142-6f46-4071-a232-827daac2f2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fda752a-640f-4fe1-aa17-63ed2a7f953f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335eff42-c9c8-4fea-a078-a2ca841c22e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16179c02-5370-4a29-9bb8-b2efea212eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4f9cfe-081e-4f26-ba36-ae77fd01921a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c271dd6-aece-44b6-9188-9a3af85c3d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416b06cd-4622-460d-80fe-1465cf531722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5527b783-5e3d-402e-babb-32d16009bedf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7d91d0-4d5f-406a-8934-142b2dc05f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d93aaaf-2610-4f2a-b50f-d8bfde2a1b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef37eadf-9aa7-4dea-ab70-7962200bfacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faca28e3-4c63-4c99-9be8-7f84bf46cb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb59c19-0089-4ee8-896a-9693cbf45401",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8605ed13-3b30-4917-8047-710c822ff088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46306602-0f0e-4396-b650-57e3a6f26cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a141ce-6958-4fb6-952d-0731a1763381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a46e02d-c983-48ea-84bf-96d673d7f803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c16cd4-d9c9-4d19-8c17-6a97a6b2e015",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5dc418-7a93-46e8-9c55-991b64e9319e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708298d6-b975-46ab-96a5-00c2244cac00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63afaf76-fe3e-4ccf-acc9-bcd575a18e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e1500d-56a3-4eb1-9bee-34a2fdce202d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7d6821-5cdb-4c26-8429-1b1e1888c042",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f10d4f-e6a4-4e3a-bbc6-34de9387ad37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197c7d9d-97c3-478f-b7bc-d15f01e45b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40379038-0cc6-41fa-bbc8-7e00931f214d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3961230d-4b3d-4d9b-ba06-0704142f2369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c84819-75e6-44ee-b72d-335e35cbe31a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e6db99-002b-4b21-8573-44cb9ce2b384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218ddedd-abf4-40f6-9b12-f61131449313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc7fa4-48a3-45fa-a328-d137b84c5be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea22c1d-ddf6-4525-bfe1-9f842613d299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a2e4b8-2f81-4641-a99f-0a31bc13db47",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6da2910-a25d-4163-bf99-28e8b354dc86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fecf927-891e-4302-8bd9-3f23106d47c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afbeec5-d67e-43cf-a3fc-33e0392868ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8da7a4-540c-4470-af70-542e5f3415d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fbface-15cf-4452-b734-3f627a8ddff6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e814e1-03e6-4f2b-889e-3512c369bd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0fc14a-4883-4d12-941e-cec56085fdc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951956fc-ded2-4da7-a811-256b029ec452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dda976-d607-4386-8532-5a980af6642e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493f41b9-d1dd-47bf-852f-8afd84aa5006",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42fbd5e-34a6-4740-9a38-68a699a365ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f4b83b-45b2-436c-9e86-7f7b9daeb924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46834bc5-a584-4b70-abf7-4c0ef5e95359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581c5247-bdb1-4feb-86f4-acfd9aa526d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a37281-3b7a-4602-a6eb-3efc0a890208",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d071834-08f9-4d6b-8733-e938efc3477e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3232447e-eee7-4dac-9a6a-36b5eaab4133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599a863d-c5df-416a-ae43-2a23b5f2e53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2872c5d1-1ca0-48ec-bcea-c1770f7d2cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f747f3ce-fe0f-47ef-b087-c8fdd1bd6664",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6adc07-1fe5-4725-abc6-d3886a083199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8511c81a-4a04-487a-a621-1513a7f0e7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40473de-3bf1-4d38-8c7c-1ed421d99ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd29719-7e9f-432e-ad8a-1d2644af1c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7926e8c5-66bc-45e0-8a9e-6c70daf0a0cd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc1d7af-cd6b-4bde-8d3a-45a62aa72a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4808f5-7ec9-4090-a8d7-6e425a2b744a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209e6c20-0c05-42d9-bb2f-a3c3117ea6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a2a8ce-0151-43a2-9d5b-e83abdd888fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c210f3a3-7b71-4d82-8c1a-acc7658981aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f384a7-eb90-44db-b094-b85168272ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d834a126-27dc-4e2a-bfc2-c24a79999f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49083840-d9a7-44fc-9a95-37927280ee6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcff37d-e6b8-4198-9347-5a938f5d92c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10acca11-3c19-4caf-b8be-caceb1a58450",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d68f0cc-4a1f-47fb-9380-3b8d901537b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef9be74-57a4-4ac7-bf95-ebd351271f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883902cd-2695-47a4-8b97-2220b0814eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93edf1ad-7cf3-4529-88c8-5a9ad979e860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486c7e68-9434-4ec0-867a-e322547b34e9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b26dd07-54e1-4eb5-a451-c6129f6c0c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac753ede-a230-43d9-b7c9-c2d196cd0ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33598ac-8c7e-4fdc-97f6-d6eb888a5d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ab3e76-f31f-4fef-9b9e-9f979454caac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e3d28a-fae2-410c-accc-b1623098c6ae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebaee0e-5b9b-426f-ad7e-a3c0d0ed7008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce00ffb5-fe02-4cfd-ae6c-4932b7fa2640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f8cbe9-e8a0-481f-a97b-bcaff21d79bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7981d919-9eec-4f6e-93ab-be82cd6263e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c145f18-a119-4689-83b4-ed0a324165c5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461af0a6-023e-443b-b57d-3e52711dc694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aeb299b-8a0b-43be-97c6-a8d9b057938b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31a8688-998e-4659-957b-901e823c41aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efc4a2d-03a5-4bd0-8a55-0eeeef43c96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ef21ae-ff87-43c7-a5b1-8efe3dfa8ae1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9e0d09-f0c2-4312-9389-238d6bc295c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "089cdf91-d123-4943-bc04-93d1cf61df9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37b02cd-dd09-4a00-8fc2-d7589476e503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0750a3f-3d2e-4ee0-bda1-ff21207824ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26e38ea-f9a2-4bb0-853e-42e588f22675",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd62c4-ac23-4128-859b-474c7a7c2d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f6342a-49ca-458c-9d42-14ec8ba91d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec99a589-93f0-414f-a7bb-c1c861b79bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498346ff-dfb7-415c-bba9-5b8d4408b600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d09736-a680-4419-8017-66795c1201eb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b51c8d-2d93-46b9-97fc-5511df7bef67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab21151f-ea3b-417a-a1ba-ec51974b88cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b14aa3-9c61-4185-ab97-b68d712a967d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1042784a-e627-4719-9642-2b37966fa491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038411f6-675f-4ba9-a906-228f43165279",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6dff11-c085-4a98-add6-ff17d4e72e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0a4309-0472-4115-a6d4-5961f3cff8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801395ef-d1c4-4b86-a963-7576b89f28f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a407196-751a-4b77-a5e7-d7ef23983619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e882fdd-da3c-45c6-b883-12d097288396",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c741e2a0-bcb4-4978-b6a0-b1db844ccc38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df90e6c-3c26-44cb-a070-df74f31f317a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0516a9-4c86-484b-a2fb-647de0803333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f881cc-a744-4a89-bc87-103fa32aa624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd8f0ba-f3a3-45f3-a95f-e2a11a2a49d8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea777bc-decc-4782-855a-6c266c2ee26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109a9eed-bdc0-456b-b4eb-46edcc29f3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78747eac-5000-44bc-9620-0d4b2335d09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5be2063-36d5-4b51-8f56-553b3067eb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b44485-7637-43c5-ba99-531595121440",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de71170c-a23c-4885-8f6d-3b235a554e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4a7a4c-a1b3-43ad-be05-1b9dae5ace5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b75a13-f011-4603-ad76-bf5412e2d845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bb91d4-e834-422b-ac98-7a549c9544cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e159ba6c-eaa9-4291-baa6-c26b42e08210",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8d6147-3933-44e9-98f1-d290bb9db96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffd84af-7c5b-4b6d-a3e6-9d8629e6b9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6524d9d6-effd-4820-89ad-c8d9cfaea978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368aa86b-57bf-4ac7-ac49-b2ad0d3b0764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98ac2a0-9c8c-460a-8737-b5287cc8e4b6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696521ec-cdc5-448f-a986-7eca45ee26df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecb75d85-a13b-4ad6-8b79-20462294dfe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a243eb6f-8ba6-431f-bd30-3e2da5c6e545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea82494-f4e5-4d00-b91d-571ef57d5d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d87204b-725a-4550-941f-ed88016d8115",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4f9d76-69b8-4a33-b377-99e2cc38346c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68103e4-316f-40f2-9528-341ac626d35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f656dc-da52-47bd-9427-bace66489b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efbaa56-b01b-458b-8a8b-d79469807f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b25ee8-9cfd-4269-84ad-c3f798b7cdd7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a931bf-d059-487d-aab1-d130e97c9a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e25051b-87f0-4395-b1ae-6742f2407ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193f232d-011d-472b-a6d7-dda71d0b06b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668d293b-a3a8-48c5-83ba-76f76ad4d677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df36b4cf-8816-4037-8ca4-0116dc3902e3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ff6c56-c7a0-44f4-85f6-20816cf0b8f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fa6bff-dc8b-4736-970c-54f2538fae22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf60a04-e7e9-433a-aa82-49aca6ceb9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5976e9e7-ea54-4267-b4c6-fd7ab1250cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5ec87d-f65b-4e2a-a41f-7376b6d73dde",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f07facd-e2de-4dc9-a8f6-56ac59690a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "549cbdcc-157a-4803-8f3a-de4d54a0cd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccff4e4-5b3c-452a-a3bf-ee1b88bf6c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bfa2e8-02e9-4258-90e5-0a20ff911a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b4bb6c-762f-4d53-bd31-b017636f2dd7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babfbdb3-d282-4860-99e6-e6bc1b92ce90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a6161c-4a25-4b1c-80c1-a1395ab4b8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cd81af-2171-4934-b574-1c1242f639be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c0cf10-cff4-4591-95b8-b4c7ef09d94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e107cc-d527-4178-aaa0-a3e3af2db444",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359607d8-3d0a-4c2d-80e7-77793b989ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df51341-3264-4092-b304-c05b0eef5b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504cacc5-4954-4494-9f52-f47e52be7dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4544a17-a455-4649-8fef-35b014ea61f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa77970d-8ed2-4083-89f1-fe0ba1bf58de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8517e390-0c8a-4b67-bef9-4af84364b662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc4578d-2294-4d91-9ff6-12a5fba5b148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b84f01-1a9b-4367-8748-05046856ffd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73672cad-59de-4c2b-b4a0-c0fa3e18d532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd98f2ed-3937-4b48-ae59-1b7553f40332",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d424245-5032-43be-906f-cfb58876a5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656884c9-21e4-4436-99c0-48ddcc35b182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55214d8-db1a-4906-aab0-f6088bf235dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e193be-e02c-44a6-a160-e58708158a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fbe601-815a-41dd-b1aa-973a49b2ceef",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533cf159-3b85-46c9-a701-4132e6fcc970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "431a8b78-1a49-4e5f-98bb-50d20ff97c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c471dce4-1d5d-4d45-9122-30e43b49b37e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb6c506-9c8b-4c5a-a522-736487e15a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d181d68-31af-4406-95af-37395e23ddd4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da174c4-f16a-4e36-85a3-ad293cc9264d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca789627-ecea-4550-9fda-127f7395b9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88eccab1-c746-4d19-8c10-00dccc34397a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbb76c0-04ac-440d-8af9-62f20912afd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2d3edc-d0ab-4193-a6c2-39f2c549e8c3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef67d8b2-7625-4a52-a3b6-35fe172b6e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f09d2b75-6c1e-4f83-919b-ad6a7c72f55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa78eb8-3235-4344-afab-abe1e0ddc15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730b9fb4-9879-4e8e-8e52-f8fcf3df6b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9563cd9d-f4fc-4aca-b7ec-e1d9d2acfc4c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11914c31-d298-484c-9855-22e077956816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d40b1c-c970-487c-a974-521131043af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7f641a-2412-4eb1-bf48-9f880ed1a6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3d8120-5556-4688-8aab-485e7908897b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b418775-b77e-4992-b565-b23495dfcc67",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97527509-a798-4818-aff0-c76ebb0b2425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13edec6-4dc2-478f-9343-34adcd127da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb60f543-b237-4d83-8cf0-6d60e1dca782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c3387e-eba0-4f16-8b00-629bcacb9024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c2a7cf-8630-4a17-a0f3-e2c139315178",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363178ba-3ed0-4c71-bfda-7c85b89856b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4306d10d-ec76-414b-b133-927db0a2043e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1a926a-a457-465a-a45b-f1d3593778e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac8155f-614e-48a2-af25-260250a943cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3964728f-49f8-4557-97bf-893e59588e98",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205c23f4-cd6c-445d-9d40-4b64c6e55542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31925444-d256-40ac-841d-60dfa827acdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fd29ca-f5db-412d-9d12-00a461c1abae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a94e45-45ab-457d-afd2-eb7fd9588e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eaf47f-7eba-487f-b93e-c7d8c39ec6f2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c80195-5365-4ebc-874c-bb427e144336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee69da6-e9ac-4cd7-a12a-82658baf89a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293b04d9-6a01-41c0-b246-b15dc27030b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558550fe-80e9-4c59-b0da-cb0a3866dc9e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01836c07-deb0-467c-a978-06ea637a5c4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65ea4a74-0f88-4151-8749-33152227285c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7163432-a3e8-4ebe-8ed0-508ffb24e57d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f899091-58eb-4b0c-8ed2-a956a64b7443"
                    }
                  }
                ]
              },
              {
                "id": "0185ecf2-b79e-40da-994e-9b17671f2280",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eedf593f-0f28-4b94-ae43-75ee69552ce3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff1a449-5b59-4dad-830a-cb6e89516339",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c1558c0e-b8ff-4419-afa5-87c6a940276d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b1e973-26b8-48ec-b0e6-f27415ba2ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecbf490e-5ffc-42fa-8257-f8d0356094a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c74c3d9-ecaa-41bb-9c88-40a7bde70f36",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21a01f3-5a99-40ba-b932-6f9736bf4b5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "123a5403-e617-46dc-a7e9-b2cd36fb1fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64f5686-17a8-40ec-8038-0aabd3bdb9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "256b582f-deef-46a4-b28e-ab824d2327fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab824b99-c9ac-47e9-b8e9-3cbcd09df0df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e5ab919-7197-4507-bab0-182c1b009bd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1594831-0bc2-4a89-8a9e-875a6bfaac42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2172c2f-d952-41e0-b62f-cd3c1f4de89b"
                    }
                  }
                ]
              },
              {
                "id": "2f98a75a-38c5-4309-a466-e38ecef13941",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "849c066c-0695-4356-bdfd-6c77b7bc7522",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c395911-011e-4275-bad7-ee9086244989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "27af6712-8139-496c-bdd1-a1e9cf84c882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e944586-8690-4796-bc24-bcf81330e10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84349cf-5414-4a41-a857-bfce00667515"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e27d4e4e-d554-470d-88a5-3861c8f96dff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bac0c2db-15a7-4f24-9830-6701160829de",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67dd10a5-1b6c-42b0-ada3-c3440450d0a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "280ac0fe-4058-4698-b9ad-e932cd237c1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f94c1af-28a7-44b7-94fa-a9f90f1aa17f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2fd1fee-484e-4b56-a0ac-04cc81650ee9"
                    }
                  }
                ]
              },
              {
                "id": "1464571f-7567-45ee-a18c-a349b2681780",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1b905f2-496a-4dc5-b33f-c10efa4ceeac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90a0809a-eb7e-4d9c-8cec-2cede17f88b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3f7b883-257a-4d70-bd8c-59bcbad15685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82d3e26d-7594-471a-9473-e38840948971"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5352024-eb96-493e-809b-24e1f3710cac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ed2803c8-74c8-447e-a62c-be5e959e14d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "316d3205-44f6-44a5-8e2b-8e4bb050d449",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "525e6fb2-423f-44e5-928b-c4b4cced5726"
            }
          }
        ]
      },
      {
        "id": "59030000-9d2a-423c-b2e4-452671837a0a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "29f4b41f-feed-44f2-8088-a611eb0a18df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b67d8c3e-bef7-4b5b-9d48-db64ff8d1a83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23863cc0-63ab-417c-bb73-058ed72f5e3f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f791b3-d938-44c8-b35c-50d713c723ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf4e5286-f185-4029-9e31-ce36aa051b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b919439-adca-44a1-b001-83064b620674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f2bf474-3d34-4cc8-b41e-1b28a0909a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc4a72f-02bc-4e32-941d-886c053ac879",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a084a670-25a2-4dcc-9648-395084a8e8ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f5c83b77-8383-4a3b-9ab1-bb41f0b7c773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0577a8-9d68-4351-bf33-d69bfbefc26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a43f1637-4cce-42d7-baa7-88d53fc740f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40479ac7-c2e8-4c1c-b035-cc6af1b7cff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0562603d-88c0-4593-bdfc-b2e1dfe14db0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53ade042-4df4-40e7-a6d7-4fcce15beb7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1998f9bc-844a-4da1-8dd8-0a61a77f46e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b8b31bb-246a-4d5b-9710-b12f5c872502",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ba8a69da-cd68-4415-a114-4ea1faa2b0fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30cc0a84-18ba-4bd6-a60e-6b21a6634fb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b669291-bd17-41d0-af10-e40e7525e7f2"
            }
          }
        ]
      },
      {
        "id": "2293533a-2724-4ac7-bdfe-185fd4652d0e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2011a383-1f49-4871-b003-ac510715f5ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa3e9fd1-99fc-4db4-bb0d-5c85a42cf73d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52f14f7f-9a2f-413b-8606-47a6343a3688",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1564f392-628a-425f-9615-c068de3ae4c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "324501a4-419f-4025-af3f-86a0f49c5aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee583c0c-280c-454e-80ba-f71a3a27ba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cceeea2-8c82-4411-8bab-469877e483ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef5d740-0b56-4fab-bb68-13cc648b21ce",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d871eaf4-d05d-43a1-a8d9-985ccbbf60b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "98848098-481f-4a3d-99d6-b9b1b8a6a534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80913ae2-d236-4b8c-a593-02ff5aaf6666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f8e7bfb-791a-4f73-a712-793075344c44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2073170b-2eed-4ac4-8142-2955f78ebe73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "372ed731-d7a1-4442-a58c-35f644031f4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba7263b4-181a-4eb8-bd81-f9e13e07a1c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8df4152b-cc3f-4f54-bfef-725930236aac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c95b226f-bcad-4490-b53b-03c1c9c1c2db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b86e3fa8-3dad-48fb-8d26-efba2be01186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "934c6d00-2651-41a3-a7d4-ff6b51ee9fbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87441f79-16b6-49e4-b1d1-3daa9b5b1d53"
            }
          }
        ]
      },
      {
        "id": "22e3ba5e-7370-4974-9a48-76b587558d07",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "449bcf6d-9e9c-4050-9453-4808845e477b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f02bbfc4-1506-4814-bd81-0a0645dfc41c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef13408f-c1cd-4eb7-9715-053ff299981c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fa1dbc-04ec-4b76-badf-39bbca541833",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc0b3cfe-6d18-4fca-894f-4eb6b495bd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e121ddba-c51d-4942-ab53-6c7003b6a19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e9381ff-40cb-4e87-9f9a-ca0a241b0c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d996b2-53bb-460a-bc20-2fe81a69fe84",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29645a91-b197-4277-932f-3ac5d6b31f4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3dd880-a1b3-4a00-bdb9-506a049d65ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68025fe7-ba27-40b3-a8b9-c8b5f7898fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e84906cb-5cad-44d4-a9d9-7243b732f799"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4c79b6c-285c-4780-a17e-32426a02b12a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea5db294-1362-47b7-a176-0da1df2fbe0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2d108fa-5b72-4164-ae6b-c7d319b79f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4d4c57f-a8bf-43fc-809e-036f8a0c2ef4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5fd94e8-8beb-4696-893a-5cf2e09de89f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96e8437d-01c6-4138-869d-e8009e44e6dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "616e9862-00d2-46be-b86a-70906c45fe8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "112da278-b3a5-489a-9d9e-2c5aeca0191b"
            }
          }
        ]
      },
      {
        "id": "7aaf2a01-9d8a-41f1-91f3-0b47a361ab39",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48b7ce83-2271-4c3c-96cf-52e5c10039bf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "963ce9c0-d15c-49eb-8bf3-88407a194268",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6eeba1dc-fe08-4353-a26f-f249f85df6fa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60f68fc7-6879-4e3d-98a5-ad86c67397a6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faf72ade-0cff-4990-b983-f735b096c1d6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.60384615384615,
      "responseMin": 7,
      "responseMax": 312,
      "responseSd": 29.326949810832666,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684542948668,
      "completed": 1684542979502
    },
    "executions": [
      {
        "id": "447a043c-2e84-4ad6-9240-da458909f39b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "19727f77-977e-4cfe-be38-a9141151eabf",
          "httpRequestId": "73557e5a-e09c-4023-b65d-0d6cae3421a5"
        },
        "item": {
          "id": "447a043c-2e84-4ad6-9240-da458909f39b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1248be58-62ca-450d-8ed9-12e08b1ac467",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "7417149b-6f3a-482e-8a1c-f796b170ee3b",
        "cursor": {
          "ref": "fae52d58-b6fe-443e-b394-9575e0bb952e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3a8fb33d-06ac-4bbc-a090-9a5508b38885"
        },
        "item": {
          "id": "7417149b-6f3a-482e-8a1c-f796b170ee3b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "14971e23-8761-4758-b8f5-7a41ec993f25",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "58cb8fef-da36-49e3-b1ad-77f389905ed3",
        "cursor": {
          "ref": "b75b4844-a0c5-4922-971e-d9783c6af06b",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6850d825-329b-43df-ad4d-a1ca1df9cccf"
        },
        "item": {
          "id": "58cb8fef-da36-49e3-b1ad-77f389905ed3",
          "name": "did_json"
        },
        "response": {
          "id": "94e63b08-1c23-4ed4-8695-af9a749c4e56",
          "status": "OK",
          "code": 200,
          "responseTime": 312,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a8b181-7272-4d36-9b41-29739acfae77",
        "cursor": {
          "ref": "de2e3cc3-dafa-4193-9f9f-6a72531ec96f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7176b18a-1d9b-4850-8d69-b59a90c2b447"
        },
        "item": {
          "id": "e9a8b181-7272-4d36-9b41-29739acfae77",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b3677bd-baaf-4192-8007-8fddf25f6095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a8b181-7272-4d36-9b41-29739acfae77",
        "cursor": {
          "ref": "de2e3cc3-dafa-4193-9f9f-6a72531ec96f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7176b18a-1d9b-4850-8d69-b59a90c2b447"
        },
        "item": {
          "id": "e9a8b181-7272-4d36-9b41-29739acfae77",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b3677bd-baaf-4192-8007-8fddf25f6095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67a08cb-acc6-4d6e-9e58-f31d2afdde56",
        "cursor": {
          "ref": "6f9d5807-3f56-42f8-9097-f21f3147e1ec",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd90bd2f-dad0-4f22-996e-c0fc80659c97"
        },
        "item": {
          "id": "c67a08cb-acc6-4d6e-9e58-f31d2afdde56",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "26684684-de88-48ee-a1c0-2bc0c977c162",
          "status": "Not Found",
          "code": 404,
          "responseTime": 131,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc4594d-7748-4cd5-98be-f7417d18f267",
        "cursor": {
          "ref": "ac8b5b5a-0e6e-47ed-b6e0-bc40e39c60b3",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5f825698-9d49-4791-84ae-d88951f7913a"
        },
        "item": {
          "id": "0cc4594d-7748-4cd5-98be-f7417d18f267",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98472d42-c780-47e0-81ec-5bd439d85284",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e401f18-d3c1-40bc-b362-bc05a1cb1a8a",
        "cursor": {
          "ref": "6e8d4310-a7e6-4954-81b8-1b28e3bd1e2b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "60c9d75e-0f1e-46a7-9343-f34befb463ab"
        },
        "item": {
          "id": "3e401f18-d3c1-40bc-b362-bc05a1cb1a8a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "df9acc48-2bdd-4192-ba09-224fcd05db66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba01e75-fa1d-4015-9f79-0d7bf6f22260",
        "cursor": {
          "ref": "fa8033ae-9e3a-42e6-813f-8d4c6ff9e354",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bd7b3cb0-20bd-447f-9746-650e4f6672ab"
        },
        "item": {
          "id": "3ba01e75-fa1d-4015-9f79-0d7bf6f22260",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3568d1bd-5bc7-43ea-88ff-6de5f656fc01",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba01e75-fa1d-4015-9f79-0d7bf6f22260",
        "cursor": {
          "ref": "fa8033ae-9e3a-42e6-813f-8d4c6ff9e354",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bd7b3cb0-20bd-447f-9746-650e4f6672ab"
        },
        "item": {
          "id": "3ba01e75-fa1d-4015-9f79-0d7bf6f22260",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3568d1bd-5bc7-43ea-88ff-6de5f656fc01",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2f5ae0-f215-4607-b056-a6d524af40f8",
        "cursor": {
          "ref": "a7ff2b8e-9c0a-4fe3-853c-1d9ea7808edc",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1ba0c732-987d-49fb-b6bb-ab6094b18483"
        },
        "item": {
          "id": "2f2f5ae0-f215-4607-b056-a6d524af40f8",
          "name": "identifiers"
        },
        "response": {
          "id": "d645e427-5f78-41b2-bad8-fb0f0efdd3fa",
          "status": "OK",
          "code": 200,
          "responseTime": 223,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c569ae5-e47e-4f98-a449-cb1fbc283811",
        "cursor": {
          "ref": "706dcc03-8ef8-419d-ad3f-2b943cf1f74a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e7fc5c4-6711-49f0-b213-59ab82809697"
        },
        "item": {
          "id": "9c569ae5-e47e-4f98-a449-cb1fbc283811",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dcf7a40a-cab2-4784-b495-f51e2e6ed037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c569ae5-e47e-4f98-a449-cb1fbc283811",
        "cursor": {
          "ref": "706dcc03-8ef8-419d-ad3f-2b943cf1f74a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e7fc5c4-6711-49f0-b213-59ab82809697"
        },
        "item": {
          "id": "9c569ae5-e47e-4f98-a449-cb1fbc283811",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dcf7a40a-cab2-4784-b495-f51e2e6ed037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8519e842-ef57-4e8f-8f2f-248c2eb8b38a",
        "cursor": {
          "ref": "dc692dd2-4d5f-4ec3-9718-3809c643ab71",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0fec34b2-af66-444e-8226-451b49da1db0"
        },
        "item": {
          "id": "8519e842-ef57-4e8f-8f2f-248c2eb8b38a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bb70606b-a7ac-42a0-8b84-b02e9e598ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfc0b60-0165-481f-89d5-82f0e2450736",
        "cursor": {
          "ref": "b12b2779-3cb5-49c5-9a56-6f63c1070169",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b85265f-a62b-4362-a0f8-939e48dba3d4"
        },
        "item": {
          "id": "adfc0b60-0165-481f-89d5-82f0e2450736",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "348c8837-b7bc-410c-8fef-7a17329d49b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659664dc-2dd2-4ea0-854a-c2837eb0a7d7",
        "cursor": {
          "ref": "f3204211-516f-4089-8577-21108ccd06de",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a7c5564a-1f19-4157-87e9-36a6d5a0162f"
        },
        "item": {
          "id": "659664dc-2dd2-4ea0-854a-c2837eb0a7d7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9c1077e0-ffad-4039-8b89-3e0ef0414983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9d6ad1-1b7a-4c98-a76e-59111978fabe",
        "cursor": {
          "ref": "638614fb-0863-4292-a677-93a0a1ef8c39",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "257c0e7f-8e61-41f0-a81b-b068f479f901"
        },
        "item": {
          "id": "9d9d6ad1-1b7a-4c98-a76e-59111978fabe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bd645bef-4fda-4a11-885a-58915f1f4fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb25d553-59ed-4d68-b68e-c447077e7c15",
        "cursor": {
          "ref": "571054ea-40e6-4e3b-824f-fa6f461f6f6d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "13ecd155-b3fb-4bee-8e11-4e6ea73d5e90"
        },
        "item": {
          "id": "eb25d553-59ed-4d68-b68e-c447077e7c15",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1c118570-8680-473f-a127-8c247583d377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec247f7-8c37-4e78-92e0-980dad4bd725",
        "cursor": {
          "ref": "b679ff31-e7f0-4d08-932e-f2cffcca662f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13228195-6be6-46b1-b5ce-c067ad3ff6f4"
        },
        "item": {
          "id": "1ec247f7-8c37-4e78-92e0-980dad4bd725",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ea35bc30-acfa-431d-9056-2887862b2900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff4fc13-f666-418a-89b8-705133565325",
        "cursor": {
          "ref": "c7c52023-c236-46a0-b747-ac0b58bf2746",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9a669c20-3429-46d7-a9da-fc8f0c654d48"
        },
        "item": {
          "id": "8ff4fc13-f666-418a-89b8-705133565325",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ab07fe93-4b19-4be0-bac7-2ff6ae46e0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0476e47-fb7a-44c2-9f5e-992d6aca0315",
        "cursor": {
          "ref": "423490ae-6297-40b7-9e8d-019dc15b5838",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c6fc72b0-7438-4b31-9714-86c371912a08"
        },
        "item": {
          "id": "c0476e47-fb7a-44c2-9f5e-992d6aca0315",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "205c1bd8-7ce9-4d9d-96a7-1371e1612352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842bf887-cbfe-4b46-81bf-69ffe1fdd4f5",
        "cursor": {
          "ref": "8a21818d-d032-465b-a8b0-9681f6e9c5d3",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e00fbbee-4900-4840-92f4-afd3294cda24"
        },
        "item": {
          "id": "842bf887-cbfe-4b46-81bf-69ffe1fdd4f5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7af5adcd-128d-4a2e-9ee7-d781f9f049c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b066e3-9be1-4588-8c65-f35164af4604",
        "cursor": {
          "ref": "8209b0f1-9521-4f69-8b07-91c1d835b868",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e5207568-796f-438a-9a6f-45f8190263ba"
        },
        "item": {
          "id": "d8b066e3-9be1-4588-8c65-f35164af4604",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6d8f116e-e13a-4b55-94d7-266682707961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00479eb2-23a3-4886-9455-4e2e506a2a9c",
        "cursor": {
          "ref": "fe9d663b-980d-4dc8-b3db-08c89ef3375f",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "da4ce761-ba05-4fca-a126-bb98e0dabd75"
        },
        "item": {
          "id": "00479eb2-23a3-4886-9455-4e2e506a2a9c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a8a5682-5d45-4ddb-866c-91bd23bb72bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caceab7-8302-4196-9d6f-a03febdf92d0",
        "cursor": {
          "ref": "75f96125-aa7b-4b51-a7eb-63f43e7343f6",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fa333039-8b17-45c7-8c19-d62fa4c321f9"
        },
        "item": {
          "id": "2caceab7-8302-4196-9d6f-a03febdf92d0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1bdbe3d2-dfb4-4576-8f3f-176b2f065cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d037e7-dfd4-45ca-8b0f-ea1fabf02d48",
        "cursor": {
          "ref": "8ce28e51-a1a0-4404-90d0-a94cbb62adee",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "06b4b437-0cce-46b1-8e9f-7c697e508936"
        },
        "item": {
          "id": "d0d037e7-dfd4-45ca-8b0f-ea1fabf02d48",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "62390c68-08b5-42af-90a3-0c997c543fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5121273-4f65-4dce-9ff7-7b289da84858",
        "cursor": {
          "ref": "5baafe7d-4d1f-4124-9d6b-fc95239502f4",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f4949fd5-ea5f-4dee-aba8-0ceafdaa67a6"
        },
        "item": {
          "id": "c5121273-4f65-4dce-9ff7-7b289da84858",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1a7b245e-0e8c-4d77-9b9f-e34d4c5081cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68019ba0-6dc4-4d4e-8ce5-082ac1dac9e9",
        "cursor": {
          "ref": "6edffe64-770e-4da7-87bb-b1b18c57c91e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f320c147-0bfe-4596-a8d8-db8e0811e532"
        },
        "item": {
          "id": "68019ba0-6dc4-4d4e-8ce5-082ac1dac9e9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "84ad9d46-8026-462e-acf3-1cb189cba4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8677413-ebfa-4bf1-879e-b7b929cd2ed2",
        "cursor": {
          "ref": "7c04db7b-e518-43f2-8e27-46c0eb9c5d34",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "26274d52-a59e-4be3-98fe-6cdd51476550"
        },
        "item": {
          "id": "d8677413-ebfa-4bf1-879e-b7b929cd2ed2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "812a9e80-398e-4c53-b7eb-3909b0a308f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26ceb68-08a0-4b42-b2c4-e2cfe3a59e14",
        "cursor": {
          "ref": "88ac7c4d-041a-4f22-8914-9b868a19c06e",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b149033-3a9e-44eb-8b81-6b4630728916"
        },
        "item": {
          "id": "e26ceb68-08a0-4b42-b2c4-e2cfe3a59e14",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "17c747b2-ac86-427f-8a52-83f2a4cf15c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c67a8-7894-4c2e-b5d1-fa51f309f46c",
        "cursor": {
          "ref": "3f6f1396-88cc-436e-a431-2f008a682354",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b71e2a9c-917c-43d8-9bc8-efe467a26b5c"
        },
        "item": {
          "id": "4f1c67a8-7894-4c2e-b5d1-fa51f309f46c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d0c1bcab-5943-4ca4-95b4-d86c9795da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0071ffa-cad2-441a-845c-8d8409d22246",
        "cursor": {
          "ref": "398d83ac-7f6b-4184-9f32-3e2dae567307",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a0cfd6cd-f61d-4e63-9d19-720aa370257b"
        },
        "item": {
          "id": "d0071ffa-cad2-441a-845c-8d8409d22246",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "05590681-c36e-4014-936e-4be1071c8aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179f7be8-4d60-46b1-a511-b4758a598889",
        "cursor": {
          "ref": "bc25775e-7d8f-47a6-91bf-b60ae9f5e7fd",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "864fe35c-5823-4255-9bfd-55ff043d58ae"
        },
        "item": {
          "id": "179f7be8-4d60-46b1-a511-b4758a598889",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "57856a3c-e910-4a79-9364-0c3a3eb8e233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cbe5ba-fe8c-43fe-9554-7b4b3c97bdf6",
        "cursor": {
          "ref": "26b0a560-106b-4090-9b69-56bf2cd4748b",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ef50d2da-5d5f-4f13-8feb-0965cce4d070"
        },
        "item": {
          "id": "c8cbe5ba-fe8c-43fe-9554-7b4b3c97bdf6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a88f04fe-8216-4a9b-893c-a605fced696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcdeb43-1c9f-4120-8e90-46c4b86ddda7",
        "cursor": {
          "ref": "f47b82f2-b131-4f7f-8d16-fe98204280d7",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9dbb3982-26dc-4f55-b96f-4321905744d6"
        },
        "item": {
          "id": "6bcdeb43-1c9f-4120-8e90-46c4b86ddda7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2ba7b92a-0db5-49a1-ba45-a0bc56754f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c845d319-f40a-4e9e-a3fb-2d56dd980869",
        "cursor": {
          "ref": "0ba3cc54-4603-48dc-92cc-df683878f30f",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5411d367-365f-4890-a869-8685bbe7ab24"
        },
        "item": {
          "id": "c845d319-f40a-4e9e-a3fb-2d56dd980869",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9f1dc512-d35b-4254-9d9c-3861be283f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b13a9ba-2f36-4b09-b531-f45ef6bc72f9",
        "cursor": {
          "ref": "89648930-bc9a-4a96-983f-486b27fae601",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "aa693b60-a5a8-4520-a7ee-d01b55e93aa1"
        },
        "item": {
          "id": "6b13a9ba-2f36-4b09-b531-f45ef6bc72f9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a5a074c3-e54e-4d2b-9728-18081c982e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa49cdf-ee4b-4cec-adda-ccce49e76e7f",
        "cursor": {
          "ref": "3e23bb9d-c9e1-4e75-87d5-247ed5833bb2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "170b495d-5a1a-49cf-b0b1-243bb140948e"
        },
        "item": {
          "id": "faa49cdf-ee4b-4cec-adda-ccce49e76e7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "40542959-5295-4e82-82fc-0f500aaacf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb6158a-2f63-44d4-a249-604d8268290c",
        "cursor": {
          "ref": "cff12162-3925-4f19-91bf-f0abeac651ed",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c1d81857-b34d-4dee-888c-121b62bf01ff"
        },
        "item": {
          "id": "ecb6158a-2f63-44d4-a249-604d8268290c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b4c6fba3-b2c5-49dc-a7ec-833e43c16c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f731f-6578-4962-a046-2b508dc5a37d",
        "cursor": {
          "ref": "58c053a6-5e79-4033-8526-7f0e65513cd3",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d2c4c88f-0d87-437f-8306-ba879bf7b754"
        },
        "item": {
          "id": "e07f731f-6578-4962-a046-2b508dc5a37d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9ffe03b7-582e-4382-b143-18d5767292c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28824a5f-df74-4ac9-96b7-620619d896d3",
        "cursor": {
          "ref": "2aea0e12-8c8b-4d60-b847-49b4fb19b905",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c94453cb-e513-403d-b03c-1b2cc5c1a1ff"
        },
        "item": {
          "id": "28824a5f-df74-4ac9-96b7-620619d896d3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "233069de-0eab-4121-8670-d002ea01568e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24da53a9-898f-4531-951c-104535a28d32",
        "cursor": {
          "ref": "8a2e2003-4c0c-4574-9677-9fe89b76c323",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a6d3cacd-24ea-4e10-bd83-7e6a1588ffc3"
        },
        "item": {
          "id": "24da53a9-898f-4531-951c-104535a28d32",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b76eb96b-a0fb-40cb-9898-99a6e5241c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd01d40b-2795-4013-8df4-9be89f6b4502",
        "cursor": {
          "ref": "54b742d7-9775-4654-88c4-05ee70a757f6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1f0b215d-cffb-4d1b-974a-eab95cffa38a"
        },
        "item": {
          "id": "fd01d40b-2795-4013-8df4-9be89f6b4502",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8cf5eb78-6798-45c4-b883-4a94889b7dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fa8b6f-11b5-4cf0-8fad-5379d3b66760",
        "cursor": {
          "ref": "5def84e9-db09-4086-b180-2f8363ab47cc",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0eaca46c-8f56-4461-a96a-b35b4168de01"
        },
        "item": {
          "id": "28fa8b6f-11b5-4cf0-8fad-5379d3b66760",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eb23aa01-3cbd-483b-9b29-ee74775b65ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256af0bd-1d16-451f-b622-459e64c5788e",
        "cursor": {
          "ref": "a8e86fdf-a580-4030-91f5-892750b499b2",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b88f0f43-cabf-423b-9fbf-e04d2569a48c"
        },
        "item": {
          "id": "256af0bd-1d16-451f-b622-459e64c5788e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "af88d04f-d4cb-4966-945e-8650dc1ad6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa2ea0d-df9a-47a2-b271-a1682db58f70",
        "cursor": {
          "ref": "63ba754f-1115-4702-ae23-e02a2c43b1c1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "99c2da60-0bc9-4077-bea5-91b86f3100a0"
        },
        "item": {
          "id": "9aa2ea0d-df9a-47a2-b271-a1682db58f70",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aff5a902-e624-452f-a502-65cfd2169ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3529715-8106-4a2a-83a5-d354bd6e49dd",
        "cursor": {
          "ref": "eb7a0388-aca6-475f-ac7f-b4605af39de5",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "051e03e7-52aa-4553-90c6-1b73ad44a515"
        },
        "item": {
          "id": "c3529715-8106-4a2a-83a5-d354bd6e49dd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3204a1fa-e41e-472b-a1a2-e9f41f77db21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30697eb5-36f9-4f88-bac4-f48c4772b0d0",
        "cursor": {
          "ref": "0c1bf88d-6365-423d-824c-7c26e7967ff4",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d0714067-dd06-45ba-8e55-c65a859a98d3"
        },
        "item": {
          "id": "30697eb5-36f9-4f88-bac4-f48c4772b0d0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f1d0c54d-184c-4010-80f8-6532033902d1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847dac29-fb27-44d9-9b56-2dd4972567e6",
        "cursor": {
          "ref": "f8a5d04d-2c12-4880-9863-07375f96a828",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "976d62b4-82d3-48e8-a7ca-9630393cf597"
        },
        "item": {
          "id": "847dac29-fb27-44d9-9b56-2dd4972567e6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7d80eade-1423-4c84-b3d8-b02a7f184dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd08241-5318-49b0-b35d-6e66ca335c12",
        "cursor": {
          "ref": "c04bde08-0241-4d66-94cb-d8fc319949ec",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "22d35fcb-9935-478f-a7d3-993582d56c48"
        },
        "item": {
          "id": "1cd08241-5318-49b0-b35d-6e66ca335c12",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "56bc46c6-b0f3-406b-b6e5-f209686fa7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4780cdd2-f4fe-4090-ae0c-db13e3d1702b",
        "cursor": {
          "ref": "74026d6e-fff9-4ae6-a668-2ecc694526c2",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "84771a7b-ae4e-4ea7-90d9-78a156353235"
        },
        "item": {
          "id": "4780cdd2-f4fe-4090-ae0c-db13e3d1702b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ae3a11b7-60ee-436a-97a4-d47f8a332d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11362e3f-149c-494d-a793-f552e7da26da",
        "cursor": {
          "ref": "16495ac3-e5ee-478f-8039-1c139e27af0f",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a56fa57e-30ca-458d-85d1-60c23bf0e341"
        },
        "item": {
          "id": "11362e3f-149c-494d-a793-f552e7da26da",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "78fa99ea-8200-4eb2-bcbd-2f5546f5e3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec819eb-1050-459c-bcf1-33124d705c40",
        "cursor": {
          "ref": "02efc97e-6665-4b8f-a62d-be805d88496f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7ba70872-3102-43fc-b61a-9e337e16cc1c"
        },
        "item": {
          "id": "0ec819eb-1050-459c-bcf1-33124d705c40",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "54cfb83c-2016-4721-ac26-a34eeb72ac4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8a9c1c-fa58-4812-8b63-b0fe88374db9",
        "cursor": {
          "ref": "85e3b937-5f29-4600-9814-6d6866356534",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e9b80df6-d26e-40ab-8fab-619e1fe6f6a0"
        },
        "item": {
          "id": "fa8a9c1c-fa58-4812-8b63-b0fe88374db9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "76565529-3e12-46f5-a114-fe8c239fed83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae48a739-ef5e-4647-8e72-fe0c84f6412c",
        "cursor": {
          "ref": "760b6381-a204-4d76-a3b6-55426cb43f16",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20dc90ac-4bcf-4d89-97e2-2833bf5ec2f9"
        },
        "item": {
          "id": "ae48a739-ef5e-4647-8e72-fe0c84f6412c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "86f2e0e6-b5b2-41de-996b-988651c07e8d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd627d0-24f1-4b24-ad48-80744fbdd0ca",
        "cursor": {
          "ref": "49a7d484-ae93-406c-91c7-2d6688ae4ea3",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9bd95e53-d05b-4096-8f46-8b0cd07d13fd"
        },
        "item": {
          "id": "4cd627d0-24f1-4b24-ad48-80744fbdd0ca",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "955a85f0-522a-4363-9bf4-57b01460faf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d3cb50-3f50-4f31-beaa-3d3cdf55ba01",
        "cursor": {
          "ref": "425a312c-7a3f-4edd-a44b-12cb7b8e3802",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "919774c6-4b9f-4025-9852-250cfcb2f2fb"
        },
        "item": {
          "id": "f4d3cb50-3f50-4f31-beaa-3d3cdf55ba01",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4e327491-d1da-444a-a138-d09284b7504a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc9987c-e58a-4a50-821c-78030a5635aa",
        "cursor": {
          "ref": "a959cdbe-1138-4fd5-ba90-b998edd7f627",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "01d8086f-eb22-45df-8e64-ddb58ab52f58"
        },
        "item": {
          "id": "4fc9987c-e58a-4a50-821c-78030a5635aa",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "136ec3ae-f105-4941-b592-e6088b5a31a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0751a627-f7d5-4e8c-b429-04bad688d2d7",
        "cursor": {
          "ref": "e3231f61-9a3e-4088-95c3-3256df207c62",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "579fb9ab-177d-43e9-8069-d3607cfedf16"
        },
        "item": {
          "id": "0751a627-f7d5-4e8c-b429-04bad688d2d7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c9ec260b-0c0c-434d-9fc0-d1b189b58e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e379bb2-f518-4313-af6c-76d313d3d1d2",
        "cursor": {
          "ref": "2e52dafa-a436-4657-af1a-f01c6b088c0e",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3145f504-68f1-4c2c-8be0-87b871c6e22d"
        },
        "item": {
          "id": "2e379bb2-f518-4313-af6c-76d313d3d1d2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d8902147-d5fa-4227-b381-eb26fa5fe561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8577b9-5c9a-4665-8529-aad5e07a3116",
        "cursor": {
          "ref": "c8adfe92-7e12-4171-a30f-76c5558d325a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c157074a-fe83-47fc-9ec3-13c88fe349b8"
        },
        "item": {
          "id": "3d8577b9-5c9a-4665-8529-aad5e07a3116",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "34dfb118-915e-4de6-8950-67827ebe1764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270262b0-9840-4baf-b589-2d353a2dc9ad",
        "cursor": {
          "ref": "8eaaf63c-d838-4fb2-8026-ef2b5207c423",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7f913b86-c5e7-480d-afbb-4081d10c17bd"
        },
        "item": {
          "id": "270262b0-9840-4baf-b589-2d353a2dc9ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e8c1b71a-6366-4fbb-b6e2-7e51d981e37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cec7be-0e92-4da1-95c3-0af2210c29aa",
        "cursor": {
          "ref": "41febffb-055d-45a1-8290-375f474cc5c9",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e9040b53-d65a-4a87-b612-bf7a27f161b6"
        },
        "item": {
          "id": "e1cec7be-0e92-4da1-95c3-0af2210c29aa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0ecdb6ea-f249-4548-95eb-b44e0858e3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08ee0e5-8623-4212-be2f-106ac015d022",
        "cursor": {
          "ref": "724d1199-e192-4c55-b3c6-43a0cbc7479b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c721888f-9449-439a-9ef9-331e30ab12f1"
        },
        "item": {
          "id": "f08ee0e5-8623-4212-be2f-106ac015d022",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2cd6a9e7-3b35-4ce5-ab0b-59b6a737432e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1c0376-2d40-4dbb-812c-6923f805c067",
        "cursor": {
          "ref": "3590b124-7195-4edf-a4aa-34e00d6f3307",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0a24338c-2980-4ab8-a372-7c7ad604f215"
        },
        "item": {
          "id": "4e1c0376-2d40-4dbb-812c-6923f805c067",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "53c73353-3480-415e-b172-13c6c8b3483d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef3c8d0-4c0a-4fd7-bd77-7fbef7a72f89",
        "cursor": {
          "ref": "74c0e0a7-ba62-412d-8d94-5472549d08f0",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7c5897ba-78cf-41c7-95d5-6f661b0453d3"
        },
        "item": {
          "id": "7ef3c8d0-4c0a-4fd7-bd77-7fbef7a72f89",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d9416034-5ded-403d-9e11-5cb721d6880b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abe7575-0b5a-4f45-bba1-e42b0569e6ad",
        "cursor": {
          "ref": "6c0a5cc2-5e89-440d-b2d4-7d7d7e6efc63",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "86c78895-94c7-4b33-adfd-855f3502c1a0"
        },
        "item": {
          "id": "5abe7575-0b5a-4f45-bba1-e42b0569e6ad",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b8a51516-f615-4e31-bf8d-0a0b8335171e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e30df2-e5a5-4271-9a5c-b0ebad2ce805",
        "cursor": {
          "ref": "7934f510-be0d-4bcb-9c6c-17024a9deb90",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "21332e62-0c74-4d7b-9783-a17f359a3399"
        },
        "item": {
          "id": "d8e30df2-e5a5-4271-9a5c-b0ebad2ce805",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2d38d8af-f060-4bef-9410-13876decd845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c0eda2-42b8-4756-a0e9-245034717aa3",
        "cursor": {
          "ref": "22bcd2cd-46e9-4eb1-9301-f50ecab8be4b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d31bc94-839b-4635-bd83-f5d7205b255f"
        },
        "item": {
          "id": "96c0eda2-42b8-4756-a0e9-245034717aa3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "731c3c77-7f30-41b5-988f-9307c82e8305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b60e91-64da-49da-83cf-806bbf107954",
        "cursor": {
          "ref": "06cb1956-477e-4252-91b5-ac83fa2ee173",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "00f37827-3bb7-4d58-94fb-ce687fb5c8ea"
        },
        "item": {
          "id": "b0b60e91-64da-49da-83cf-806bbf107954",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7ed953a3-2550-4de7-9ddb-385ee7a59a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5def8cf-693c-4e51-b1c4-0acaaafe3799",
        "cursor": {
          "ref": "9d26781e-4ab9-44c7-be39-87b68940e8c2",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c6575e3b-1bad-4c45-a79c-6b380ed1e342"
        },
        "item": {
          "id": "c5def8cf-693c-4e51-b1c4-0acaaafe3799",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8b6e792d-4aad-41c5-b790-bf4a106212b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4feed70-cf1f-4582-8e24-fbcc81383836",
        "cursor": {
          "ref": "c2bd920f-97ff-428b-bbc9-afbb47f2d88c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d8a3b681-8432-4fca-aec6-27d95080cb94"
        },
        "item": {
          "id": "c4feed70-cf1f-4582-8e24-fbcc81383836",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "91a5e07d-27b4-4ed4-a391-e615f070725c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb080f6-056b-4b5d-ad2f-c4d7bca07e02",
        "cursor": {
          "ref": "5adeea78-7c9e-4ad9-8bbf-521c1c9cb90b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "98ffc011-a960-480a-8cc5-ce7f3d009c71"
        },
        "item": {
          "id": "3bb080f6-056b-4b5d-ad2f-c4d7bca07e02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6352ce62-c5ce-4f4a-b56a-a393e90878f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c67cf9-1f77-499f-9ebf-d088ccdb9495",
        "cursor": {
          "ref": "176794cf-73d3-4fdb-864a-8975357d6e97",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f0da6606-0ab7-4b2b-b79c-d8575af1a983"
        },
        "item": {
          "id": "67c67cf9-1f77-499f-9ebf-d088ccdb9495",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "29f14e88-3268-407d-8713-97c3c5dd705d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a09fa6-5c8b-423b-baae-bb89f37124e2",
        "cursor": {
          "ref": "4d47be63-bc80-4d2c-87a1-afba971cbc7d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3237eaa4-853d-4252-910a-3d0382df4440"
        },
        "item": {
          "id": "24a09fa6-5c8b-423b-baae-bb89f37124e2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0fb11ca2-ea3f-45a4-98ae-02f54995ddb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319a1370-c2bc-4ae0-b55d-86b942bdbc66",
        "cursor": {
          "ref": "aad5f9f0-bda9-4e1e-91d8-6515010d8977",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "379bfa5d-31e8-4a6d-8232-e167637bfc3b"
        },
        "item": {
          "id": "319a1370-c2bc-4ae0-b55d-86b942bdbc66",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d73d1544-f935-4e93-95e8-9d7b2bd476ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5006648-ed04-4530-87a5-d91455e544cd",
        "cursor": {
          "ref": "2242da26-f23b-473c-bf55-8e84a0d1595c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "20ac9b0f-c966-48b7-b5ef-76009aa02fb6"
        },
        "item": {
          "id": "f5006648-ed04-4530-87a5-d91455e544cd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ffdd1417-f463-468e-a221-a894d7b90e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536ee71c-f5fc-4b15-8d5f-ef394ec7179a",
        "cursor": {
          "ref": "609e4a87-15cd-471b-97c9-8d188f815842",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8ee541c9-6c4e-4668-93de-6a1dc6e07462"
        },
        "item": {
          "id": "536ee71c-f5fc-4b15-8d5f-ef394ec7179a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d252a01f-73c4-4429-89bd-941b79ea4435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a36ba5-c522-4497-968b-bb68bef1c94c",
        "cursor": {
          "ref": "7926a86b-7717-4147-aef7-470828b12d89",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b1f45a63-3bc1-45df-bc6d-869616458039"
        },
        "item": {
          "id": "b8a36ba5-c522-4497-968b-bb68bef1c94c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0cef029d-186b-4413-b3d1-65fecaabcd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e184567d-f9f5-4aec-8498-b04640d56958",
        "cursor": {
          "ref": "6ac39a12-6939-417f-a6e6-d563b8ef5dca",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eab80574-a8ad-466c-8ac5-e25753282960"
        },
        "item": {
          "id": "e184567d-f9f5-4aec-8498-b04640d56958",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4d153482-64ed-448a-992b-923355bebfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ac2ce2-ad7a-474d-9156-6e6050b85bb7",
        "cursor": {
          "ref": "1163de7c-34f7-48a3-be30-b55add0ff13c",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8cfef9d9-51b2-415a-abf6-c35692bc1079"
        },
        "item": {
          "id": "98ac2ce2-ad7a-474d-9156-6e6050b85bb7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a9399423-095d-4bff-ab4c-f81d3c91d61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54034139-be00-4235-9982-1862af0e4e72",
        "cursor": {
          "ref": "50f8ca46-3e7a-4722-8ff4-826dda66265d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "94088365-783f-42a7-b82b-3a9fc8cbeeb6"
        },
        "item": {
          "id": "54034139-be00-4235-9982-1862af0e4e72",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9103f827-2b87-43f8-b669-00d56fef7c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732049cf-774f-4e5c-8f22-16f2931c37bf",
        "cursor": {
          "ref": "c9aad2ff-9ae9-4f20-94a6-7a1c82ad17e2",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d3763c29-a9b5-481e-b126-df4ef6fb6f01"
        },
        "item": {
          "id": "732049cf-774f-4e5c-8f22-16f2931c37bf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5c95353a-84d8-4561-923f-b637db8ca6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1a6279-2429-4fe1-854e-4ef874e1a29f",
        "cursor": {
          "ref": "157cfbcf-dfec-4c1b-868d-39b9f50b02bb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2970f508-6697-4808-8933-61cf4224be80"
        },
        "item": {
          "id": "ae1a6279-2429-4fe1-854e-4ef874e1a29f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2544ff66-f2c8-40a5-8054-6caebb380fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c228c67-35b9-4180-919f-d7f986e7930a",
        "cursor": {
          "ref": "6ba070f7-e7a0-4f0f-ad81-2efed3da6919",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0ff9c890-6a0d-40fa-b5b9-6766610955a6"
        },
        "item": {
          "id": "0c228c67-35b9-4180-919f-d7f986e7930a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "229cab82-ee34-4986-8281-ca8242e00651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7acabe-2236-47c1-ab1d-e377c2aee43a",
        "cursor": {
          "ref": "5c9e27eb-205f-441c-88d2-40f0c02cb732",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "74104d6a-49f6-4daa-bd03-5bf4a9a17784"
        },
        "item": {
          "id": "9c7acabe-2236-47c1-ab1d-e377c2aee43a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b6038851-77c0-4519-8e44-83c615322063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f8f749-a543-4252-806f-1484113bb29a",
        "cursor": {
          "ref": "3583f0f1-6026-45f2-81a3-8026b4a436e8",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b485ec1d-fa3a-44c8-92f1-28b1634c19c1"
        },
        "item": {
          "id": "05f8f749-a543-4252-806f-1484113bb29a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "77391505-b434-454a-8e1f-f805c64449be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d708ec4-5854-46e7-9e20-3812074e0ae5",
        "cursor": {
          "ref": "346761f3-d640-494f-a434-9a1c4ecab236",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "677cf620-b72e-4c40-9260-b8a3a6c2f339"
        },
        "item": {
          "id": "0d708ec4-5854-46e7-9e20-3812074e0ae5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3e35345d-bd58-4d8f-a032-e9b40f8ab93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2da1ead-2ee0-4dc9-88ea-01089a8fe11e",
        "cursor": {
          "ref": "1191c5c0-aa12-4f0e-a393-ce346807b301",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6d381a1a-0245-4f8e-967e-f43b20475149"
        },
        "item": {
          "id": "e2da1ead-2ee0-4dc9-88ea-01089a8fe11e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f7d5b535-0f88-4c02-9e7f-5b6414d65ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe69d96-505b-4715-b011-11cd82113bf4",
        "cursor": {
          "ref": "f45e6b39-79ef-4859-b5db-17a5f6e55c9c",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "905c3d13-441f-472b-9d02-2e7e3d0b08dd"
        },
        "item": {
          "id": "fbe69d96-505b-4715-b011-11cd82113bf4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4f6f9c37-01ac-4ac3-8d2d-8fa7c9875bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb937cd-57bf-4bea-888f-2c5a7fd5244c",
        "cursor": {
          "ref": "a7d43da4-1f07-436c-90ba-f8fa58fdea4f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ef9d69d5-e65a-4e8b-9cf6-ce260e8cc3c0"
        },
        "item": {
          "id": "5cb937cd-57bf-4bea-888f-2c5a7fd5244c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "11462fce-1f66-4a33-8308-73aa81c4fffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df269d5-a025-4f31-a6cd-ee09ff5c4e1d",
        "cursor": {
          "ref": "738f881b-cf5d-4235-ab8d-f2a24338ce48",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "89dae9f3-fdff-45a9-9400-f6fbec1ce0bd"
        },
        "item": {
          "id": "6df269d5-a025-4f31-a6cd-ee09ff5c4e1d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "98599cbb-1c10-4145-9dba-6bc0ae27a747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2228a7a1-6877-44a6-9a9f-832cfe7378a9",
        "cursor": {
          "ref": "4cb1e410-9dd3-4c2d-9ed0-ad2c9ff3ea65",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "22f10c2a-86cc-4365-a34b-ddada5a903ea"
        },
        "item": {
          "id": "2228a7a1-6877-44a6-9a9f-832cfe7378a9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "013cdf1e-abd8-4318-a744-493de1309e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318452b2-ae43-4f85-ad6e-0dcb788ab900",
        "cursor": {
          "ref": "d919e514-4961-4d4b-88c4-f645c71683ca",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "818f886e-ebdd-43d3-97e4-355654b71c27"
        },
        "item": {
          "id": "318452b2-ae43-4f85-ad6e-0dcb788ab900",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8ed56df1-5091-41ae-89f4-326e328cfe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94718db-3864-42d6-85d6-6783d719d41e",
        "cursor": {
          "ref": "31e7acb7-0202-4001-b285-96bd29730ab2",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ec6b5618-f713-4f1e-98ad-e62c1c9c4bb1"
        },
        "item": {
          "id": "b94718db-3864-42d6-85d6-6783d719d41e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c63ab731-d79d-4a8a-a7dd-a1ee72c881c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9bebc7-f519-4482-8edc-954edd2be862",
        "cursor": {
          "ref": "62537df1-9865-47f9-9e0f-7007d2fb28dc",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "000c5958-4f38-43bc-a1fa-56aafb56ac6d"
        },
        "item": {
          "id": "5d9bebc7-f519-4482-8edc-954edd2be862",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dd4633dc-8045-467d-aad0-d5d91461d2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5027f2ef-6851-442b-9f8b-3fcc0dd02171",
        "cursor": {
          "ref": "2fbb6156-f86b-4832-a908-4433ecac19c4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "992bdac8-bc75-4871-9f1a-2ea44181e12d"
        },
        "item": {
          "id": "5027f2ef-6851-442b-9f8b-3fcc0dd02171",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f17e5fe3-6f5c-471d-912c-d80f1957cfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697c2689-3f37-4da9-bc63-6ed665c291bc",
        "cursor": {
          "ref": "7d8eb752-692a-4b14-b73d-0be77a583ed2",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7eeb2089-f33a-4252-a37c-1e3485d7b59d"
        },
        "item": {
          "id": "697c2689-3f37-4da9-bc63-6ed665c291bc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8cebb8db-0b37-4021-aa97-8cbc4c444539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec26165-cd8c-41ad-8046-6063340f5c36",
        "cursor": {
          "ref": "38238760-b027-4c38-a2dc-84dc0daa99e2",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dfd657f1-bec2-4c81-b8c1-65dff946f0b9"
        },
        "item": {
          "id": "3ec26165-cd8c-41ad-8046-6063340f5c36",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d700fb40-cb47-4c84-b4f4-86746d40744a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755a8606-5ccc-4690-a5d0-68703eff0541",
        "cursor": {
          "ref": "b8b65d11-a76b-41a6-a0f3-b11f3c1a99b1",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "74678008-830f-45d8-876f-0c8d6e4f8001"
        },
        "item": {
          "id": "755a8606-5ccc-4690-a5d0-68703eff0541",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3635eceb-9e68-4e37-af4e-9f9ffa7a9c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b93a009-5aaf-42da-be67-76411e8e7daf",
        "cursor": {
          "ref": "3ebe4d05-1821-43cb-83cd-d1f20fce7058",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "92728047-719a-402a-977c-76afd1a63cab"
        },
        "item": {
          "id": "5b93a009-5aaf-42da-be67-76411e8e7daf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b0d02f3d-ddb4-4eef-93ff-e088e75012c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10117096-5920-4877-bd58-18322c7778c0",
        "cursor": {
          "ref": "29b7a488-cacb-4fc0-9bbf-920b325ce360",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9c549695-fa02-4b3e-ad87-8a6f1008b4ae"
        },
        "item": {
          "id": "10117096-5920-4877-bd58-18322c7778c0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "004acdc4-d020-44b9-aeb5-d50f1562668d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91b3b03-e44e-441b-8580-3a48ef82783e",
        "cursor": {
          "ref": "a564e441-c755-4a85-9e02-b64f5685a54b",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7f7b48ae-61a6-44fe-802d-fcd5a51823fe"
        },
        "item": {
          "id": "b91b3b03-e44e-441b-8580-3a48ef82783e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0d784f96-40c6-4bb7-8b26-c997ad56f885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302d2dd5-cf15-422a-af7a-b01ea7e44df0",
        "cursor": {
          "ref": "9f82c6c9-f42a-4d3b-a708-a1c2ee904b01",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1c0351a7-200e-4976-9a5a-7fd77a2ba269"
        },
        "item": {
          "id": "302d2dd5-cf15-422a-af7a-b01ea7e44df0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e30ee4c5-19d9-4b0a-94c5-eda39f723e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f4a85a-9f33-4e1f-bbb4-0ce40b44016b",
        "cursor": {
          "ref": "a3744a33-cf99-4133-9e02-8939a0fcdeef",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4e1a852f-6257-4425-94e4-71ef88b38ffe"
        },
        "item": {
          "id": "d1f4a85a-9f33-4e1f-bbb4-0ce40b44016b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "61313be4-447f-4560-a49b-190eecf7b822",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb06f2c4-8fd3-4715-a121-7b9232b12ee3",
        "cursor": {
          "ref": "640bbee8-872e-42fa-912c-7a9728d708e2",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5cf91b19-0481-4c31-99b8-fa62f36ecfff"
        },
        "item": {
          "id": "cb06f2c4-8fd3-4715-a121-7b9232b12ee3",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7f4d9053-e6ea-4d2f-96fd-b67f3f3af9ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 200,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524f2b26-d5c4-42e0-978c-9a1f830746a4",
        "cursor": {
          "ref": "ed6da85d-83a2-4168-8b57-5e5f0a625408",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2d54c13f-ab0a-45f1-99b5-ff587076799e"
        },
        "item": {
          "id": "524f2b26-d5c4-42e0-978c-9a1f830746a4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a63b3755-9cf0-480e-80e4-0040bcc7d536",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4ccefb-b377-4cda-9db9-f28eedfb4a99",
        "cursor": {
          "ref": "50476484-0e04-4dcb-b5eb-49e5905a94da",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8de3481b-d144-4927-adc1-c79d768aa983"
        },
        "item": {
          "id": "bf4ccefb-b377-4cda-9db9-f28eedfb4a99",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0ce669f0-910a-4f6c-bb54-93bbdb9e13b1",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abc241b-c360-4bb8-85e0-bf86b80e033a",
        "cursor": {
          "ref": "bd93e8e4-34fe-4b6c-9377-801d391e6e8a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1c2a05ad-4634-4dab-b640-2ef9dd3083be"
        },
        "item": {
          "id": "7abc241b-c360-4bb8-85e0-bf86b80e033a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2384437c-b025-4b84-9a36-1669a475ec1f",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "979b18a2-69b3-438e-a3ce-63ea7b5513e3",
        "cursor": {
          "ref": "4169af0a-c4c6-4bfb-bc94-6ac96feee97c",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e02dac6-e051-4150-89ed-6e3d7fc3b671"
        },
        "item": {
          "id": "979b18a2-69b3-438e-a3ce-63ea7b5513e3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a89a96c1-cbed-4fc2-9a7e-afa13710e243",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c831217e-dfc5-432e-9032-b844ffff9c57",
        "cursor": {
          "ref": "00316ae1-37a5-4629-a9f4-96ad3dabb58f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "11d83116-8c25-45e6-b710-7634c53bd0a1"
        },
        "item": {
          "id": "c831217e-dfc5-432e-9032-b844ffff9c57",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81c3f31f-4c37-400c-83d8-49a71906a98d",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68c3b54-2220-467a-8f1c-f029d0c6173e",
        "cursor": {
          "ref": "cd031410-7a68-4baa-849a-5dff3234c635",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "61341282-d146-4421-bf73-4c6a7067b3f8"
        },
        "item": {
          "id": "b68c3b54-2220-467a-8f1c-f029d0c6173e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "547e6991-e6ed-49a8-ac08-bbb2ca1e4f98",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e9131d-b29f-41d9-a197-fd120d95698f",
        "cursor": {
          "ref": "4048f4c4-80ef-4122-a8c2-f8d9cd558f91",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1de6808-6d5d-4f83-9d61-35c3ffbef753"
        },
        "item": {
          "id": "14e9131d-b29f-41d9-a197-fd120d95698f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8df29202-6aef-46dc-96a9-4879075ea983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e9131d-b29f-41d9-a197-fd120d95698f",
        "cursor": {
          "ref": "4048f4c4-80ef-4122-a8c2-f8d9cd558f91",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f1de6808-6d5d-4f83-9d61-35c3ffbef753"
        },
        "item": {
          "id": "14e9131d-b29f-41d9-a197-fd120d95698f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8df29202-6aef-46dc-96a9-4879075ea983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1652701e-9376-4e8e-92dd-03fa45fbad56",
        "cursor": {
          "ref": "5d7c8001-c486-45c8-a4ef-b8a874f5dd3c",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "48e1359f-b93b-443a-9d39-ae108dcf81db"
        },
        "item": {
          "id": "1652701e-9376-4e8e-92dd-03fa45fbad56",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "474e62a2-dd96-4b20-9afc-36acf76f73f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ac26f2-d7de-4911-987f-abbde363c12b",
        "cursor": {
          "ref": "02036fd9-4c8a-4062-a7a7-e85ca9482bb6",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "23c48525-79c3-483e-9433-edb9bbde54e3"
        },
        "item": {
          "id": "63ac26f2-d7de-4911-987f-abbde363c12b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9419c527-a11c-4c7c-afd8-bba4a457efb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c709e76-be1c-4e1f-a4f2-34cba0177695",
        "cursor": {
          "ref": "8ba3a86e-175a-48a0-9bac-2c0025c37334",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9ad9071d-4460-48c0-bb3d-6645f22a5b94"
        },
        "item": {
          "id": "2c709e76-be1c-4e1f-a4f2-34cba0177695",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ba968982-5294-499a-86c8-b85d5b79df54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88502798-b975-4ec9-a092-55dfd22e33d4",
        "cursor": {
          "ref": "ca5f692e-011e-4a7a-bf78-a0df930e94e3",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f4e5e00-631d-4d53-b741-88cebddb178b"
        },
        "item": {
          "id": "88502798-b975-4ec9-a092-55dfd22e33d4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "94a3e030-541c-4b1b-b6e3-6c05acd79200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02068ce1-fbf3-4d18-a9b0-319f4c53915a",
        "cursor": {
          "ref": "93575c19-f020-41b4-a9ec-c1a92cfd548d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f4993f8e-17ec-4cea-a8a2-e95255c604b6"
        },
        "item": {
          "id": "02068ce1-fbf3-4d18-a9b0-319f4c53915a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6d32be03-5ec6-4adb-b5c3-79e4bd814272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c214073-d2e8-4850-be25-22d4670b1567",
        "cursor": {
          "ref": "f8baaba7-7b70-4aef-8bd7-f77ef45700ac",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "56b6094c-48f7-4d53-9af8-8b674d7fb56d"
        },
        "item": {
          "id": "7c214073-d2e8-4850-be25-22d4670b1567",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "13296e0c-90f4-44ba-9943-89ac604090a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01a2f96-efbc-484f-85c3-03fa1de089f0",
        "cursor": {
          "ref": "da604571-37f0-43f9-a3f7-db2d1af7ebea",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c138165e-aab4-4ed7-a3d9-47caa55767c6"
        },
        "item": {
          "id": "c01a2f96-efbc-484f-85c3-03fa1de089f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ac5ed0f0-b1ef-4c63-a398-4e2a27699dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50b9510-705d-44b8-879b-913b6050e53b",
        "cursor": {
          "ref": "34e647a3-12cc-4794-a6c9-a4ad41b1c248",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "92ead815-d86a-4624-ba18-a31dbdfc2950"
        },
        "item": {
          "id": "c50b9510-705d-44b8-879b-913b6050e53b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce0bc189-9edf-4715-b2ba-aafdaf0c90bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5414a3c-bf34-424f-bd5c-a59ada0ade0f",
        "cursor": {
          "ref": "48d59cdc-b1f0-4321-a869-59d15a0fcabb",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b95e19a7-6944-4083-ab34-9ab15f44b3f6"
        },
        "item": {
          "id": "e5414a3c-bf34-424f-bd5c-a59ada0ade0f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4c59b7d1-61d0-4df4-a372-f2455b579983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75df51c9-1537-4efc-85c6-09fe57a95c39",
        "cursor": {
          "ref": "baad80fe-7b4d-4025-9337-57d1ac164a82",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e82f1aec-95a4-40e2-973f-8882581ddb2e"
        },
        "item": {
          "id": "75df51c9-1537-4efc-85c6-09fe57a95c39",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "264fb301-6534-40ae-b1ce-a51625319159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313ae220-7b65-436d-80b1-40e13c10c684",
        "cursor": {
          "ref": "65411ec9-c279-45fe-80b3-bfc15761982d",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2a9f3294-40ef-40b4-9d55-01dfa7da52be"
        },
        "item": {
          "id": "313ae220-7b65-436d-80b1-40e13c10c684",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "753519a8-b0f2-4abe-ae0b-40d07222e666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b4e798-5aae-4e74-b1c8-ede524138822",
        "cursor": {
          "ref": "16de4570-bd4a-45f9-96f9-1f4ae66fd369",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9601bda9-d708-4294-8e2f-6156e6096a50"
        },
        "item": {
          "id": "c7b4e798-5aae-4e74-b1c8-ede524138822",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a5ff40e4-2502-453c-a78a-21eac1448a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee88fa1-7cc2-4142-afc7-748a9807ba1b",
        "cursor": {
          "ref": "4082c9a9-b51f-4dea-95e0-7abc6f12b537",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee1ceb1d-9fcd-4c6f-9364-8b875ca80042"
        },
        "item": {
          "id": "6ee88fa1-7cc2-4142-afc7-748a9807ba1b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "75e05a3f-5ec8-41de-a570-c18a6e9d5672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3967b3b7-a4fb-4852-bda9-d2061b604694",
        "cursor": {
          "ref": "6562edb8-2938-449e-aa6b-7b3fa8f7490d",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7529df83-524a-4a0b-9518-eca1f1acf51d"
        },
        "item": {
          "id": "3967b3b7-a4fb-4852-bda9-d2061b604694",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a54e7555-9f6a-47e1-bdd0-37e800b50e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aeba04-6dea-42e9-8521-048acd7aa7b2",
        "cursor": {
          "ref": "5c8b58cb-6aae-40b9-9bd7-01692e7a0197",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eb2c78f7-45b2-4ecf-9b0f-73b957e3f696"
        },
        "item": {
          "id": "37aeba04-6dea-42e9-8521-048acd7aa7b2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "08d5f364-3102-4097-94cd-1fce42612fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969c29bb-dd85-4569-9c4e-fec238daad4d",
        "cursor": {
          "ref": "1c18f4f6-77cd-4015-9502-e6190aa1a708",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e5fc4ef4-2fb8-4c59-b80f-d64a9a0675c9"
        },
        "item": {
          "id": "969c29bb-dd85-4569-9c4e-fec238daad4d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e94e3b68-3b40-447b-bd9e-4b178df3ecb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e0084a-d436-48fa-84d5-e5119899fb70",
        "cursor": {
          "ref": "c0b2933e-42f2-4f84-b4f5-e31104419212",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a5d9e662-8987-4b3a-886a-4edb88b2eda8"
        },
        "item": {
          "id": "06e0084a-d436-48fa-84d5-e5119899fb70",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9e43f877-c557-4762-a798-6fa616fbe358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbdd6d1-3f20-41a3-8b68-d55315088e49",
        "cursor": {
          "ref": "7be71f44-7059-4ed0-ba5a-095bf2b957a1",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4150ba0e-6f49-4ef8-9c7a-35a473daf03f"
        },
        "item": {
          "id": "abbdd6d1-3f20-41a3-8b68-d55315088e49",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8f03bedf-9deb-4e00-a320-48bdd878eacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e29e32-3ab9-4ff9-b2de-a444344c4363",
        "cursor": {
          "ref": "97f9fa21-4bc1-4bba-b1a8-7cb429dbb956",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a17c2601-58dd-4c97-b822-6d5a6f18085a"
        },
        "item": {
          "id": "33e29e32-3ab9-4ff9-b2de-a444344c4363",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d25fe913-b686-4b03-9427-73039c27f96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3737e99-6145-43d9-915e-05bfb558bb8a",
        "cursor": {
          "ref": "09fe7391-e40c-4938-8d4a-473862027102",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "598cc25c-d3da-46a3-8083-447833202159"
        },
        "item": {
          "id": "e3737e99-6145-43d9-915e-05bfb558bb8a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b91ad530-f84e-43e4-8273-28fbb886cf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e934f5-ce3d-4673-913f-cddaf43636c5",
        "cursor": {
          "ref": "04cf3f51-34c2-4d6e-b741-8c50975040e3",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e724289d-5710-464f-aa3e-9510da866abd"
        },
        "item": {
          "id": "89e934f5-ce3d-4673-913f-cddaf43636c5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98df1ecd-54ec-4c46-96ba-73b434ad530f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51125372-a808-4124-8d85-c727da08770c",
        "cursor": {
          "ref": "a9967bd4-ca51-4a2b-8ffc-5b6392b41513",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bdca29f1-f136-4c2c-a3ee-3335183c0a8d"
        },
        "item": {
          "id": "51125372-a808-4124-8d85-c727da08770c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab7984e5-14a5-44af-8695-a55e81ec5c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5c2d31-d6fb-42b9-9636-02cf45074693",
        "cursor": {
          "ref": "0a0f9199-44c4-4875-b02d-0f0931f33745",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "312887cc-7367-4e05-b9c3-31bd07df5ca2"
        },
        "item": {
          "id": "0e5c2d31-d6fb-42b9-9636-02cf45074693",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f8d6952d-37b9-4555-99e0-4d2eefa00548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e434b2-9570-4ecb-978b-dbbd4c50a4b7",
        "cursor": {
          "ref": "aff90374-4600-431b-896f-e18e57c4fe99",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e63c2f4a-9320-45a8-8e62-02b86ecaeae5"
        },
        "item": {
          "id": "92e434b2-9570-4ecb-978b-dbbd4c50a4b7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e289cfc2-8aba-48fc-a614-20dd2dd28ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4618bb9c-a49f-4388-8119-2c424285447c",
        "cursor": {
          "ref": "5886603b-c443-4d84-b85f-52bb95c742ce",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "876277a4-35bb-4a03-9c66-8d7ea7b73492"
        },
        "item": {
          "id": "4618bb9c-a49f-4388-8119-2c424285447c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0dae19d7-78b0-4ae1-88e1-230cf33c3a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3524aa9-f2fb-4d6d-857f-81fb6ffc4162",
        "cursor": {
          "ref": "f81048e9-11cf-4667-a0c1-a0704aeef288",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a60a34c0-3ab2-4908-81da-1f43f87b1e16"
        },
        "item": {
          "id": "c3524aa9-f2fb-4d6d-857f-81fb6ffc4162",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a8e6b5dd-dbd8-4473-87cc-454832966fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369091dc-2dda-406c-b685-3e7f8b26e8c7",
        "cursor": {
          "ref": "668f794f-a425-45ad-98e4-52085bc2c390",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "de0a195a-7676-4a73-8ac7-b175246cd86c"
        },
        "item": {
          "id": "369091dc-2dda-406c-b685-3e7f8b26e8c7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "27ca9dd6-d3ea-4e10-aa18-69a989c53f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a21e27f-c943-420d-a6c8-5e6f6ef7f580",
        "cursor": {
          "ref": "54b6b4d1-bd52-4ed1-8bfb-5631a30c3805",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6de8cd61-b0fb-4937-8b40-9c94b0e74e22"
        },
        "item": {
          "id": "2a21e27f-c943-420d-a6c8-5e6f6ef7f580",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8238eba3-b8c5-4cf3-bcf0-e2730ebae4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199e7694-ab34-461a-afb7-1a5b1a39e0f0",
        "cursor": {
          "ref": "6253039c-f3b9-44f9-b518-2210806b39c4",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3cfe4fea-4638-43cf-a670-3d0b71d4cc40"
        },
        "item": {
          "id": "199e7694-ab34-461a-afb7-1a5b1a39e0f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "551532ec-4401-40f2-8c76-b556d6e718b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1541945-0238-4d54-acbe-a39c0d7c2520",
        "cursor": {
          "ref": "7b0f175d-6b7e-4616-9c5a-9f0c8e14e713",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fa9760c0-3a1b-47e8-8685-1294cccf2064"
        },
        "item": {
          "id": "c1541945-0238-4d54-acbe-a39c0d7c2520",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "db885159-d0f2-4f31-baef-a0cf66471c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e4dafa-f239-4124-bee4-dc35f6a44e56",
        "cursor": {
          "ref": "de0a80d9-6839-43bd-9291-cb75f2ac394c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9bebce8e-9955-4229-91ad-2e209d1deb19"
        },
        "item": {
          "id": "b3e4dafa-f239-4124-bee4-dc35f6a44e56",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b8ee857a-6599-4322-b5d4-094e40d958eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a46f036-2d53-43e9-9db8-87a40d6b3505",
        "cursor": {
          "ref": "47853761-7ec1-49f6-b79c-c4c612e4a6b0",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e5ad856b-a3e2-4ee1-803d-917e70c74059"
        },
        "item": {
          "id": "0a46f036-2d53-43e9-9db8-87a40d6b3505",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "24fb289e-3f9f-498e-8c8f-617e6c184289",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac9bcc5-42ee-4b2c-981e-b7f7890ff329",
        "cursor": {
          "ref": "61be6b2b-61e1-4907-bfdb-d9124ac74c26",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e58a334f-9d8c-4733-b5d9-1dbf58c73e64"
        },
        "item": {
          "id": "9ac9bcc5-42ee-4b2c-981e-b7f7890ff329",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "774daf28-e109-4898-8c0d-aaf51ee4a316",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f486a30e-70bd-41fb-9094-7708818d1128",
        "cursor": {
          "ref": "be5a9604-4927-4cec-b84b-925bfe952d95",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "be4c9231-a9af-402b-bc15-b61caa60e6ed"
        },
        "item": {
          "id": "f486a30e-70bd-41fb-9094-7708818d1128",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cd222403-09ca-4004-815a-9621069c120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f486a30e-70bd-41fb-9094-7708818d1128",
        "cursor": {
          "ref": "be5a9604-4927-4cec-b84b-925bfe952d95",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "be4c9231-a9af-402b-bc15-b61caa60e6ed"
        },
        "item": {
          "id": "f486a30e-70bd-41fb-9094-7708818d1128",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cd222403-09ca-4004-815a-9621069c120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5751e13e-a313-42d0-b69b-c914b0c70ece",
        "cursor": {
          "ref": "e45228cf-a5e0-4aa0-8074-4f1fc22a10c9",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d41e2229-22c4-4cde-9f07-5febecac4628"
        },
        "item": {
          "id": "5751e13e-a313-42d0-b69b-c914b0c70ece",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d46f3aed-2ab7-4568-9f67-896418b41050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2efd8c-ba19-4429-b82a-dd0a5b40b3cf",
        "cursor": {
          "ref": "e82e383f-d809-415e-aab2-692b3a151139",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "69f66160-b98c-4b5a-9b71-614af46449af"
        },
        "item": {
          "id": "4b2efd8c-ba19-4429-b82a-dd0a5b40b3cf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "64333740-f132-49a4-ba80-a6f3aa973a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aebad78-258d-4068-89d9-59cfef960561",
        "cursor": {
          "ref": "83fc992f-925d-41c2-9db2-12134b760577",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "45f40010-3999-409c-8ad4-d8f310927242"
        },
        "item": {
          "id": "1aebad78-258d-4068-89d9-59cfef960561",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "31c7a725-74d0-42e9-ae48-58e9280ac205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f743617-0b15-4040-92fe-cbfd8403bb76",
        "cursor": {
          "ref": "0faeebec-ad14-47d2-9dd2-78a3ce4e131c",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b56b208b-ca82-4004-9f99-adc4a83150ed"
        },
        "item": {
          "id": "1f743617-0b15-4040-92fe-cbfd8403bb76",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1936ec9b-436f-410d-a38a-f67af1f9658d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0e65f-7abc-4a60-94dd-64891acc0597",
        "cursor": {
          "ref": "35a6b12c-9ab8-4743-9410-1daa96094da6",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "40309562-7845-4a84-97de-e4a5dd39f939"
        },
        "item": {
          "id": "94c0e65f-7abc-4a60-94dd-64891acc0597",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "961bbb5a-5547-468e-be90-fde688a99b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3195113d-b3be-46f4-8499-69562612ac0c",
        "cursor": {
          "ref": "d73aba4d-25f4-44af-9131-f7fcec489724",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "41a5f5db-f945-4c1c-bb5f-d4b2f69d2166"
        },
        "item": {
          "id": "3195113d-b3be-46f4-8499-69562612ac0c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e32645ec-a305-42af-8172-4ff66f837444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017bec51-e68a-4763-a70e-9601b51d4902",
        "cursor": {
          "ref": "3748262b-9daa-470c-8027-ba74e493ff4f",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "29561cba-59e9-44c6-be75-f6611acac8a2"
        },
        "item": {
          "id": "017bec51-e68a-4763-a70e-9601b51d4902",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b47ca99c-6c34-47ef-bd72-0bafbc455bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4104c5a9-bed2-48f0-b45b-897e532f7e0d",
        "cursor": {
          "ref": "ce29aaa0-2a82-4a78-8614-d94f77a13219",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ec227e51-ec7d-40e3-8aa7-0d2bdaf19c72"
        },
        "item": {
          "id": "4104c5a9-bed2-48f0-b45b-897e532f7e0d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8a8f6937-acfd-4f25-b1d8-583f208f488c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96961ee2-e1ca-4084-a3e8-50b837b0dbf0",
        "cursor": {
          "ref": "16d20393-9a66-4b41-80f6-921b37222303",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d754bff0-2884-4de2-a0c2-e5186f7d3d83"
        },
        "item": {
          "id": "96961ee2-e1ca-4084-a3e8-50b837b0dbf0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f58af357-9cca-45e8-8941-742591526ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66c76ba-d7c6-45c6-b02b-ee7d72b6e643",
        "cursor": {
          "ref": "d618a2bb-8986-4679-98b3-0e10bbb5fc2b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c1ae2a91-355a-48a1-893b-f6e6584558c7"
        },
        "item": {
          "id": "c66c76ba-d7c6-45c6-b02b-ee7d72b6e643",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cd8af35a-7b01-4109-8ef0-4c2d6c43b596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd96d08-9a3f-4189-90ce-e32b0cd6b96d",
        "cursor": {
          "ref": "6b85a55f-c702-4fa7-a1a4-951b83cdf1a7",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9d917e9f-9533-4392-a0ed-ace520dc2a94"
        },
        "item": {
          "id": "0fd96d08-9a3f-4189-90ce-e32b0cd6b96d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ab2feecd-765e-4ce0-831c-0f74d1e39e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf3ad27-1f6a-4a8e-8d31-6882af86f1d9",
        "cursor": {
          "ref": "f52987ce-3e0d-4a7a-bbf7-c81192cd28cf",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8a7f8241-b224-4993-a733-5352fa673370"
        },
        "item": {
          "id": "adf3ad27-1f6a-4a8e-8d31-6882af86f1d9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "60b7101d-a0a8-4e0f-9673-16a101510af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12c0454-6be8-46ad-8695-f7ab2682b850",
        "cursor": {
          "ref": "f779a777-41f1-4f2f-8a48-ee59700fee74",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f5ef9c16-b447-4b37-8781-46d0b6b04fc6"
        },
        "item": {
          "id": "f12c0454-6be8-46ad-8695-f7ab2682b850",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "17556a35-dfba-49e8-9efa-7462fb74cef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b8f4f5-5674-402e-b378-8b56ccd721f4",
        "cursor": {
          "ref": "ee906236-a392-4f1e-a0ac-1cdc288d5105",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "29bbcaee-d8c2-44e5-b549-443fc0b0e038"
        },
        "item": {
          "id": "29b8f4f5-5674-402e-b378-8b56ccd721f4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "009a95d2-a258-4026-8efe-ea2055efc82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d046360-92ef-4c26-ba8b-f9e05a8e13a9",
        "cursor": {
          "ref": "0c607776-f2bc-41a5-82c5-2417bd9bbe59",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "15d1fec9-2f2e-4738-999c-ed36aa995418"
        },
        "item": {
          "id": "8d046360-92ef-4c26-ba8b-f9e05a8e13a9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e860bf5f-952e-4925-a4b9-2079fa5f85d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462c34de-bf44-4dba-abee-9ba2f3719b98",
        "cursor": {
          "ref": "6cb2a554-a50f-4fa2-9013-5c427fb3f123",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c9628185-d341-428a-90ac-6cf3ad15b33d"
        },
        "item": {
          "id": "462c34de-bf44-4dba-abee-9ba2f3719b98",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "53ebd2b4-3e46-4d00-8487-e1c1af74efe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00e398b-1a1e-49f1-9378-d2a37aa03252",
        "cursor": {
          "ref": "76b54c5a-3973-4e65-a904-fee11e556ae7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ce891161-4cb5-4347-bc80-1313086b899c"
        },
        "item": {
          "id": "c00e398b-1a1e-49f1-9378-d2a37aa03252",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b90e262d-f10b-4313-b3e3-f5b21a463df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7248d710-0136-4e1b-9299-4cf19f74a9ed",
        "cursor": {
          "ref": "0550c43f-4deb-4197-9bec-a1508b7c498f",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "382e0217-2d93-41e2-9391-e47cc8754005"
        },
        "item": {
          "id": "7248d710-0136-4e1b-9299-4cf19f74a9ed",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "48abb9cb-caeb-41f6-8938-d9dd928e4364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3bf3e9-9ccc-4b73-8a1c-6ffb1221b44a",
        "cursor": {
          "ref": "ec177fc4-82fc-4c43-a3e2-ff73f348ef83",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95b73548-af92-413a-9e1d-ea0cc4e0ecc0"
        },
        "item": {
          "id": "0e3bf3e9-9ccc-4b73-8a1c-6ffb1221b44a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "44b05711-ffbb-4816-b28a-851b1437c826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477a659d-79b1-45fb-888b-91b45c488f31",
        "cursor": {
          "ref": "1fc2dcec-1f38-462a-bf19-ba28d03dce3e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "96e8a857-a3f7-42fd-82e8-11a170dbb25b"
        },
        "item": {
          "id": "477a659d-79b1-45fb-888b-91b45c488f31",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e6b7e761-5cac-45fe-a597-2e0984a8b3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efa66d3-3e27-490b-a4a9-092147b43856",
        "cursor": {
          "ref": "e54937e6-c046-4870-9e53-0e6514f561ac",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3c02575a-0e2b-4b56-bc89-d64b76dd1fda"
        },
        "item": {
          "id": "0efa66d3-3e27-490b-a4a9-092147b43856",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ab2dd728-56e2-4f6b-bafa-6da3f6e84a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed585a3-544a-42b2-8508-1ade930b16c4",
        "cursor": {
          "ref": "f7b66cdb-74e4-4b48-b0a7-e44a3304f146",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a35bcbaf-680c-40e7-aa8f-601d1c850749"
        },
        "item": {
          "id": "2ed585a3-544a-42b2-8508-1ade930b16c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6db75c83-ab64-4cca-b5d9-1f11f6ae6a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8236a3ef-9ac5-4a98-bbd7-2c2773dc0816",
        "cursor": {
          "ref": "9d1f771d-859b-408f-8a78-da094eb4c6ad",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3ec7932d-5cf2-4f87-9beb-221ccacb6f5f"
        },
        "item": {
          "id": "8236a3ef-9ac5-4a98-bbd7-2c2773dc0816",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "455bc679-33ad-4d55-883b-4809ca9cc861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df2b9b6-b97e-44a1-b83f-f7c14191b376",
        "cursor": {
          "ref": "36ce42d9-60f1-4f7d-808a-f9fc195c1427",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "63c7a5fc-82a0-4782-8883-859e3f015ab2"
        },
        "item": {
          "id": "6df2b9b6-b97e-44a1-b83f-f7c14191b376",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e548fdb8-920c-4300-9b66-ae79ce91d989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc17b212-ebfe-4570-81a5-78d1ff68339e",
        "cursor": {
          "ref": "1d5d2560-a652-48e5-a397-2b3cd88556b8",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5e07aa7b-0231-45dd-beee-36b54584e09e"
        },
        "item": {
          "id": "fc17b212-ebfe-4570-81a5-78d1ff68339e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d249e8e0-06b6-47b1-a4f4-ec424b64dfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de70f952-4b1d-4a3a-9d2f-9795d3a82729",
        "cursor": {
          "ref": "086a246e-6481-44de-adee-062e0bd08e0e",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "954a7893-61a8-4258-a0de-dd1bc534b8c0"
        },
        "item": {
          "id": "de70f952-4b1d-4a3a-9d2f-9795d3a82729",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0272e872-addd-421a-a2d3-1407dc6a9b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebcb384-8062-49a4-907e-f53ed0aaf612",
        "cursor": {
          "ref": "71e26625-8dfe-48d1-bdb9-3fd31d75666d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f5cbed0f-ee2e-4375-80a9-e15ea0c8b4c2"
        },
        "item": {
          "id": "9ebcb384-8062-49a4-907e-f53ed0aaf612",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fabad78b-7cb5-4cd0-83a7-4ddf337893c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb24a53e-a65f-4497-ba76-48a4c99cf74a",
        "cursor": {
          "ref": "0890b3b6-02f4-4687-bdcc-c5ab8eb6c45e",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "000b709c-46ba-4057-bc3e-50f4ebfe6f32"
        },
        "item": {
          "id": "bb24a53e-a65f-4497-ba76-48a4c99cf74a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f0dae35e-c5d3-4355-b9a0-6b3652b8c5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41efc57-7cb8-4070-b8f0-b507e47ee82d",
        "cursor": {
          "ref": "f6e7ec9a-c604-4b80-87e6-4cfec4fd4cc7",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "947fe312-9ed9-404b-abb2-b4238cce7d1c"
        },
        "item": {
          "id": "c41efc57-7cb8-4070-b8f0-b507e47ee82d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d336ac96-3e42-4205-b297-89fa3969197c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9000b20f-5fef-41ce-b79a-bc9c604e466b",
        "cursor": {
          "ref": "7a885836-99a6-4bdc-8dd7-d4459d8b1f0b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c1817965-1902-41e3-99c1-45ca1ce11783"
        },
        "item": {
          "id": "9000b20f-5fef-41ce-b79a-bc9c604e466b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46f39a57-6a6d-4fce-a9b5-9148c32d1e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf0d7f6-8026-4f05-b60f-8eec8b9ba04f",
        "cursor": {
          "ref": "e6cad3db-b010-4af0-8fcc-269f70b1b58e",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "118e8fdf-7266-4f2a-aff9-660496284e47"
        },
        "item": {
          "id": "baf0d7f6-8026-4f05-b60f-8eec8b9ba04f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f5e98a9f-8f4f-438a-bcb3-6cb8ba69a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79029b72-cbb9-46ba-ae7d-13b826d2bd69",
        "cursor": {
          "ref": "f436f3d4-7d40-4815-a8d1-ebcab735d823",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "de8c70bb-c496-4566-931d-be96e3f7338a"
        },
        "item": {
          "id": "79029b72-cbb9-46ba-ae7d-13b826d2bd69",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "91574cbf-6bed-445c-8a04-9a30bd4442fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6983ca-a3c1-432e-bdc5-6f7de9bed43b",
        "cursor": {
          "ref": "9bb20c1e-1abe-4c69-90ba-47d59b898534",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb7d762c-7d9e-4068-9f21-050ecc2669cc"
        },
        "item": {
          "id": "7f6983ca-a3c1-432e-bdc5-6f7de9bed43b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4639a5a5-25ea-4816-ad21-692170cef572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd7df30-09ba-41f9-888c-f0331dd3214e",
        "cursor": {
          "ref": "bca51f80-bbef-472c-9c90-00f4e5900081",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6bc762ab-5002-4c94-8f79-7d534bff9afa"
        },
        "item": {
          "id": "1cd7df30-09ba-41f9-888c-f0331dd3214e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e1a0d20c-8517-4cbb-853d-a2a49a84af04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69253831-b4c1-410a-96e4-968ff10d1285",
        "cursor": {
          "ref": "8f5007c5-2fa9-47e7-a363-1bc55d2cfa24",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e562d2f8-159f-467b-b511-a29a564de673"
        },
        "item": {
          "id": "69253831-b4c1-410a-96e4-968ff10d1285",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1e053d91-776c-4947-aa64-46ff4f5bda30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855565f2-3c67-454d-ad47-8814a131bca3",
        "cursor": {
          "ref": "107593d9-187a-42d1-a7cf-658c2d82b46f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0343a644-a7ed-4122-a23e-ef9254fe2c5f"
        },
        "item": {
          "id": "855565f2-3c67-454d-ad47-8814a131bca3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "43988e88-9f98-466b-aa81-806e296fff2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b919c5-b67c-4660-a983-6d985ef68d1e",
        "cursor": {
          "ref": "8982bbd9-2971-48a4-9de7-263067b69e7a",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "523ce040-0134-4256-bd6f-dc731c4f1bfa"
        },
        "item": {
          "id": "16b919c5-b67c-4660-a983-6d985ef68d1e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b2ad586b-d0b8-4d54-8865-78b8df025f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd3b94c-9ee9-4de4-9f8c-af44ed479d3b",
        "cursor": {
          "ref": "cac50755-6daf-421a-9535-ba28889498e1",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0b2c6fe9-25a2-4ec7-89dd-13568fa8bc04"
        },
        "item": {
          "id": "abd3b94c-9ee9-4de4-9f8c-af44ed479d3b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "38b6492e-6aff-425a-8b96-e69ee2b9b528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c71e414-a689-402a-b1b7-16cf5dd31d0a",
        "cursor": {
          "ref": "dfadc5df-f75e-4487-9517-dc73b93f557d",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b78ebe38-6269-497a-aa23-fdc618c447b5"
        },
        "item": {
          "id": "4c71e414-a689-402a-b1b7-16cf5dd31d0a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5f00e73b-5463-440f-8cdb-bd7ebbc1bfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbaf283-8e58-4ef7-930c-c7dce23da134",
        "cursor": {
          "ref": "9671516b-c6f1-45bc-8a13-81d862f582cf",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b395bb1e-9608-4aae-8dae-f284c58d7988"
        },
        "item": {
          "id": "9cbaf283-8e58-4ef7-930c-c7dce23da134",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0186f41c-662d-4dca-95e4-b25d8f24c7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466d274b-c2c9-4385-9695-cc243db1c69a",
        "cursor": {
          "ref": "2ebe59b5-8fb8-41de-be75-4a3a30cf1881",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64b4dd58-d812-48cf-b323-8b56a895a707"
        },
        "item": {
          "id": "466d274b-c2c9-4385-9695-cc243db1c69a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c8f2b6f8-96f4-4728-bd76-a3e67aabfe80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400a5f80-a845-4569-90fd-93327ee70801",
        "cursor": {
          "ref": "93658c24-e496-4089-b812-d1781075963a",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8eefb45d-3b5d-48bb-a221-0548e784d412"
        },
        "item": {
          "id": "400a5f80-a845-4569-90fd-93327ee70801",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1ad4c352-f802-4e2b-83c9-8f38340da110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3e222d-b6a4-4332-881e-e25059a048cd",
        "cursor": {
          "ref": "0aadc30b-e07d-4ff6-9311-327700f4177c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7b0a7ae0-945a-4500-8243-ad5b068f63b3"
        },
        "item": {
          "id": "5a3e222d-b6a4-4332-881e-e25059a048cd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "708ca0a0-f9da-436a-8e0f-6316d4a18476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e150d1a7-ba8d-4798-be57-5e81e938770b",
        "cursor": {
          "ref": "5de5f2b4-9fef-4372-b06e-b8b693e03486",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c3a1c5d2-0157-4aa4-8976-7566fc18ba22"
        },
        "item": {
          "id": "e150d1a7-ba8d-4798-be57-5e81e938770b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "14d118a9-d2a0-497f-85ad-e233257fbcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f93c41-e8b9-4f4b-b4b0-6a9833a9ac9b",
        "cursor": {
          "ref": "7f8df7e9-d8b9-45f5-b4a3-36635bff0cba",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f308f5a4-ae1e-4306-be06-8a0433cc75c5"
        },
        "item": {
          "id": "b9f93c41-e8b9-4f4b-b4b0-6a9833a9ac9b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "000c9c63-7ad5-4517-90ec-7c3bb2afedfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca94a5f1-f432-4054-a89f-af7fcee86cef",
        "cursor": {
          "ref": "235e8ca6-dfcb-4918-b2f7-1337e4ad9b70",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a4daa942-1cda-4316-b2c7-daaf973610ca"
        },
        "item": {
          "id": "ca94a5f1-f432-4054-a89f-af7fcee86cef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "045afc0e-b37a-48a2-b304-babb547f16df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6064595-fcdf-426b-b4ad-177020f8b059",
        "cursor": {
          "ref": "6b1dc8f8-c473-42eb-9588-dd9816210299",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b2a57339-9eb8-483d-b094-f086cc433177"
        },
        "item": {
          "id": "b6064595-fcdf-426b-b4ad-177020f8b059",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5219efa5-7414-4efd-8cef-07692451d0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd4e7df-3a93-442a-8548-f2ba2f1b6bfc",
        "cursor": {
          "ref": "21cefda9-1430-440e-a179-a96d41df7954",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b209d9b5-6bb0-41cd-860a-d13266b323ed"
        },
        "item": {
          "id": "fcd4e7df-3a93-442a-8548-f2ba2f1b6bfc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0584514-e2c2-44e5-9714-9f8c5ac5bf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9cc7d4-cd6b-42c4-89fb-208a3db61cab",
        "cursor": {
          "ref": "01fe3285-f7fc-4f00-82a1-36bdabbca1bb",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b8d909d3-26c3-4962-a0be-7c2ef6dfb72b"
        },
        "item": {
          "id": "ff9cc7d4-cd6b-42c4-89fb-208a3db61cab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "01822e49-315d-4333-952c-deb402005419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9efa6a-1a74-4609-8932-43a269b53e14",
        "cursor": {
          "ref": "162c5a46-f5ca-47bb-9b53-bf16aca475e5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2a9dfd69-1520-490a-98c5-148f998842df"
        },
        "item": {
          "id": "0a9efa6a-1a74-4609-8932-43a269b53e14",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0dea9670-2df3-40f9-ac55-f70e5ae8041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9bcf6a-61e2-4695-be2d-8501d8ec9bc9",
        "cursor": {
          "ref": "30af8363-bf41-4279-9359-3998fcbeba05",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b8c3facb-7b4e-4c5d-be68-259f2572c5c3"
        },
        "item": {
          "id": "da9bcf6a-61e2-4695-be2d-8501d8ec9bc9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d8f88246-54d2-4b48-b9b6-da2e8e03970a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e214d3c1-197d-4bbf-a4e0-2f7ecf436b8f",
        "cursor": {
          "ref": "5681e134-c49d-4baa-95d9-8bc10c9d95ac",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2a40337f-dc13-46ce-a774-95954cb4b357"
        },
        "item": {
          "id": "e214d3c1-197d-4bbf-a4e0-2f7ecf436b8f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0e0638a2-d0b6-4433-98ab-a6fca2b1ac8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd8583a-dbcf-4440-a56d-d388801493a3",
        "cursor": {
          "ref": "8153a1d7-b7a1-4baa-829b-3ad4b5f65742",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1f603df3-0d1c-4ee7-8a7b-a0892c6c1974"
        },
        "item": {
          "id": "4cd8583a-dbcf-4440-a56d-d388801493a3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fe5c47ef-71a0-48b0-a563-3b0ae0847589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde1fe95-f03f-4111-958e-5e55e4229c80",
        "cursor": {
          "ref": "8ebf8eec-d592-4267-b59b-61f62b98701c",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a80eff75-db81-462e-b229-486d9a63fcc6"
        },
        "item": {
          "id": "fde1fe95-f03f-4111-958e-5e55e4229c80",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6faf28f1-6613-42b3-b55d-1fda80c73603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335eff42-c9c8-4fea-a078-a2ca841c22e3",
        "cursor": {
          "ref": "99cadb66-0567-4d75-9e9f-964cd92b8c91",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "41974e8e-bc05-424e-9ba2-c70a13b8c4c8"
        },
        "item": {
          "id": "335eff42-c9c8-4fea-a078-a2ca841c22e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8f9fa164-c743-4f83-a596-ed95f0a391fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5527b783-5e3d-402e-babb-32d16009bedf",
        "cursor": {
          "ref": "e8b2a88f-18d5-431e-8026-a3154ddf6d26",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bcc5f28a-3a50-4fdb-8ebc-d339ef649232"
        },
        "item": {
          "id": "5527b783-5e3d-402e-babb-32d16009bedf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f9751312-abe2-42fc-9eea-ceec9f895fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb59c19-0089-4ee8-896a-9693cbf45401",
        "cursor": {
          "ref": "7eee8611-743b-428a-b1f7-c621def586d9",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b0997a07-f1de-43a4-8b7f-d96598ee2ef9"
        },
        "item": {
          "id": "5eb59c19-0089-4ee8-896a-9693cbf45401",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "82bbcfbb-d46b-4c02-acfb-0852e4f70c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c16cd4-d9c9-4d19-8c17-6a97a6b2e015",
        "cursor": {
          "ref": "7d72be20-f627-49b3-a5f9-4bb11435e5f3",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "986d139c-c37b-4ec3-8278-516752116e29"
        },
        "item": {
          "id": "f4c16cd4-d9c9-4d19-8c17-6a97a6b2e015",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ef43b457-2cf1-42e0-b4ce-af063eeaccd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7d6821-5cdb-4c26-8429-1b1e1888c042",
        "cursor": {
          "ref": "5636017d-e4a0-4694-806e-4c7d13606ea6",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "afbea326-dd9b-4f58-9c09-27d84b9ce9a8"
        },
        "item": {
          "id": "2f7d6821-5cdb-4c26-8429-1b1e1888c042",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c51378c-8bb2-4e79-9f03-db49629e3425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c84819-75e6-44ee-b72d-335e35cbe31a",
        "cursor": {
          "ref": "f2bc44e0-94f4-43d2-b2f9-108394b3408b",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8b84c450-48a0-42d0-93d0-3eca5ddae281"
        },
        "item": {
          "id": "43c84819-75e6-44ee-b72d-335e35cbe31a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f2a982ae-c883-4e39-ab58-f02548267150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a2e4b8-2f81-4641-a99f-0a31bc13db47",
        "cursor": {
          "ref": "2f5c0422-ca2c-4625-b28b-d86e1d54a2b1",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a5a27b13-ee98-4369-90bc-cb1d52137c3f"
        },
        "item": {
          "id": "c4a2e4b8-2f81-4641-a99f-0a31bc13db47",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "af927418-3f54-44f4-9d4a-246d2bbf61e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fbface-15cf-4452-b734-3f627a8ddff6",
        "cursor": {
          "ref": "ae66ccf1-e18a-47cc-98a1-20382af778ae",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "10af00ad-9b53-4b78-9dfa-4fdba2bd9982"
        },
        "item": {
          "id": "d2fbface-15cf-4452-b734-3f627a8ddff6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9c29dffe-c80d-4590-9802-1a136d03ab63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493f41b9-d1dd-47bf-852f-8afd84aa5006",
        "cursor": {
          "ref": "bbe62e19-bffc-46ce-91a3-4e122fb9f92e",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "26a66c50-1b47-4f5f-94c3-8f49e91a8cde"
        },
        "item": {
          "id": "493f41b9-d1dd-47bf-852f-8afd84aa5006",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "066685e3-a86e-4193-8f9e-25dc3354d345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a37281-3b7a-4602-a6eb-3efc0a890208",
        "cursor": {
          "ref": "cdf491ea-87bc-40aa-a37d-cb4116b8cb08",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eb4b7417-5a87-4501-822c-c88ca85dbf4c"
        },
        "item": {
          "id": "c3a37281-3b7a-4602-a6eb-3efc0a890208",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7fc99652-a9f1-476d-b493-a3d5f6726bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f747f3ce-fe0f-47ef-b087-c8fdd1bd6664",
        "cursor": {
          "ref": "c7dec468-8a18-4c22-8992-fec7defaae90",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "447f4538-2cf6-431f-92b8-8417abd15052"
        },
        "item": {
          "id": "f747f3ce-fe0f-47ef-b087-c8fdd1bd6664",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9a2a41a6-fa03-4ea0-8414-6fd19716e493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7926e8c5-66bc-45e0-8a9e-6c70daf0a0cd",
        "cursor": {
          "ref": "7fbf276b-e379-4e07-bdbe-d46b86e234bf",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7bb37072-3a71-4e06-8293-4fffafc7eb99"
        },
        "item": {
          "id": "7926e8c5-66bc-45e0-8a9e-6c70daf0a0cd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "368ba892-fea2-42b4-9378-d4233ad092d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c210f3a3-7b71-4d82-8c1a-acc7658981aa",
        "cursor": {
          "ref": "b04bd64b-d6ea-4c9e-aaf0-a9e205f6ea3c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "badf868e-435f-4dc1-8312-947627e76a7c"
        },
        "item": {
          "id": "c210f3a3-7b71-4d82-8c1a-acc7658981aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8360d558-0901-43e9-911d-6dd7fd8f0e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10acca11-3c19-4caf-b8be-caceb1a58450",
        "cursor": {
          "ref": "598d3106-3864-440f-a8bc-e09a9fbca261",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "99962f81-feba-43e2-a579-b3330a645a1e"
        },
        "item": {
          "id": "10acca11-3c19-4caf-b8be-caceb1a58450",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "90413e00-8184-4bff-ab87-a61ed0240c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486c7e68-9434-4ec0-867a-e322547b34e9",
        "cursor": {
          "ref": "b38f95c9-617c-4283-b160-37f61df2b954",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d88e793e-c294-471c-9ddb-f5eb384d44b1"
        },
        "item": {
          "id": "486c7e68-9434-4ec0-867a-e322547b34e9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35c6f8b9-1407-4b9d-a655-bd8d0f3ee726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e3d28a-fae2-410c-accc-b1623098c6ae",
        "cursor": {
          "ref": "517b16e8-0ba4-4d66-afa5-4207c83c03c8",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ca916fe4-bd1a-4102-a7ae-618612a46821"
        },
        "item": {
          "id": "f8e3d28a-fae2-410c-accc-b1623098c6ae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "55174e9c-80fd-4e0c-8a9f-ff4e5f40900c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c145f18-a119-4689-83b4-ed0a324165c5",
        "cursor": {
          "ref": "57a144ac-ad0f-4016-8405-fa3208517034",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f8225a93-ab44-4841-80fb-3f794d5d23aa"
        },
        "item": {
          "id": "0c145f18-a119-4689-83b4-ed0a324165c5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "980f15e6-41dd-4422-95f8-3d0b58c17e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ef21ae-ff87-43c7-a5b1-8efe3dfa8ae1",
        "cursor": {
          "ref": "051d8180-b8d8-402b-8809-1c7be024becd",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7981f0d5-4f6f-4f78-bdb5-cfff582435f9"
        },
        "item": {
          "id": "18ef21ae-ff87-43c7-a5b1-8efe3dfa8ae1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6c2198e6-9bba-4560-bda9-38df8f2d777b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26e38ea-f9a2-4bb0-853e-42e588f22675",
        "cursor": {
          "ref": "7779e4e5-353e-40b4-b77f-7d8f3883c224",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "69603894-4c8c-4095-a933-247a5078b7ab"
        },
        "item": {
          "id": "e26e38ea-f9a2-4bb0-853e-42e588f22675",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "60050a95-7c94-49fd-b06a-81e5c536b1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d09736-a680-4419-8017-66795c1201eb",
        "cursor": {
          "ref": "4ddeeaec-b8ed-4325-84d8-0217ccdc5f3d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "13f41fb4-aa06-4734-9d19-45f206363208"
        },
        "item": {
          "id": "94d09736-a680-4419-8017-66795c1201eb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ba2a37bd-5c07-4fd6-acc8-57e5c258ae87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038411f6-675f-4ba9-a906-228f43165279",
        "cursor": {
          "ref": "fcae7846-7230-4160-8b55-9233e44a7d2e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "47a81a04-32a8-4d85-9e14-5e27f03e0a98"
        },
        "item": {
          "id": "038411f6-675f-4ba9-a906-228f43165279",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d0e7d80-47bc-4b7c-bfb0-b73fd20462d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e882fdd-da3c-45c6-b883-12d097288396",
        "cursor": {
          "ref": "8fea5c32-ec86-4f22-93dc-c09b2dc3dbc7",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "55f8f3b6-0fb2-4a5d-9644-27b7b99bf180"
        },
        "item": {
          "id": "5e882fdd-da3c-45c6-b883-12d097288396",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "04f8aeac-41d8-4996-b786-b39451b5774d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd8f0ba-f3a3-45f3-a95f-e2a11a2a49d8",
        "cursor": {
          "ref": "5bb994b3-b6f5-4936-a519-aa11710e78df",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e0e5b35c-6c7c-4874-832e-deb3dbd5daa6"
        },
        "item": {
          "id": "bfd8f0ba-f3a3-45f3-a95f-e2a11a2a49d8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8a6aa998-9e9d-4f67-ab82-1ffaafed7308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b44485-7637-43c5-ba99-531595121440",
        "cursor": {
          "ref": "6bb91594-c64d-421f-b878-416c885ca0f5",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c3104e0d-61d6-4186-b468-dc25e5a24e7f"
        },
        "item": {
          "id": "41b44485-7637-43c5-ba99-531595121440",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1c9cc902-cdfc-4f57-8d28-91cc6e37e171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e159ba6c-eaa9-4291-baa6-c26b42e08210",
        "cursor": {
          "ref": "f82c716a-e2a7-412c-91c0-c074754b703e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2b2d4ee2-5dad-4e70-8969-b9215b6e9468"
        },
        "item": {
          "id": "e159ba6c-eaa9-4291-baa6-c26b42e08210",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cabd9a84-f896-4a26-9d3b-f8b4e7e43358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98ac2a0-9c8c-460a-8737-b5287cc8e4b6",
        "cursor": {
          "ref": "250de79a-e0b9-49e0-a00d-1f6e03e4ddff",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2995a8c6-21f2-426b-b0dd-d7e6bafac0a5"
        },
        "item": {
          "id": "d98ac2a0-9c8c-460a-8737-b5287cc8e4b6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7a12b1a3-e492-45ca-9552-8243783e0193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d87204b-725a-4550-941f-ed88016d8115",
        "cursor": {
          "ref": "c4c61e41-607f-497f-8b39-053d1cf6fc19",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4cdab46b-15c9-4178-9b2a-aafd45a2e174"
        },
        "item": {
          "id": "5d87204b-725a-4550-941f-ed88016d8115",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3353afd9-b485-4135-a5e5-999e12d1b85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b25ee8-9cfd-4269-84ad-c3f798b7cdd7",
        "cursor": {
          "ref": "c6eddd36-020a-4591-8409-5db3c14d4c95",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c5662db3-c6b0-4d87-8460-4a2b561e14da"
        },
        "item": {
          "id": "71b25ee8-9cfd-4269-84ad-c3f798b7cdd7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f3505a21-b805-4aad-871d-f7b86ac13de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df36b4cf-8816-4037-8ca4-0116dc3902e3",
        "cursor": {
          "ref": "824e5639-56ea-4435-959a-5515dad3c24f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3e51b2d8-a7ba-4731-ba50-1580a286438a"
        },
        "item": {
          "id": "df36b4cf-8816-4037-8ca4-0116dc3902e3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7f49cfce-f502-403c-b6a8-56e9cebbe2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5ec87d-f65b-4e2a-a41f-7376b6d73dde",
        "cursor": {
          "ref": "4ff7722d-3109-4461-a88e-c713850dba84",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de0ef19c-d308-46c8-ac8e-15436c25b3dd"
        },
        "item": {
          "id": "df5ec87d-f65b-4e2a-a41f-7376b6d73dde",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c1207355-1def-4e84-8344-7255be543e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b4bb6c-762f-4d53-bd31-b017636f2dd7",
        "cursor": {
          "ref": "ad5e627c-bf8b-4dd0-9e78-8f5d7ee836e7",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c84a09e1-2712-440f-ba72-06f12e7af490"
        },
        "item": {
          "id": "c7b4bb6c-762f-4d53-bd31-b017636f2dd7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "34251b18-cf2a-4720-9af8-271ac68f43de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e107cc-d527-4178-aaa0-a3e3af2db444",
        "cursor": {
          "ref": "73ae2308-2621-4e52-9e7d-995705d99415",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "53d11ba6-4b01-4d12-8ef3-1c3b18eccfe5"
        },
        "item": {
          "id": "f3e107cc-d527-4178-aaa0-a3e3af2db444",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fa515304-05c6-4ad9-b099-ca84f18db5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa77970d-8ed2-4083-89f1-fe0ba1bf58de",
        "cursor": {
          "ref": "fe4ad347-5b94-4561-868f-08180483d26d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ca94ce94-1d6b-4137-8c94-4967c9e76030"
        },
        "item": {
          "id": "aa77970d-8ed2-4083-89f1-fe0ba1bf58de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5da96dab-b549-4098-8095-08f0940b2c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd98f2ed-3937-4b48-ae59-1b7553f40332",
        "cursor": {
          "ref": "466d1631-b221-4686-bd62-018e74a3acd5",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f267c197-7542-4a5a-958c-11402b28abd2"
        },
        "item": {
          "id": "dd98f2ed-3937-4b48-ae59-1b7553f40332",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b424b1ce-5fb8-4a7c-b1c8-584719840b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fbe601-815a-41dd-b1aa-973a49b2ceef",
        "cursor": {
          "ref": "510f150d-7ae1-4ff0-aae1-5a8ef7b15bfb",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ff894205-5020-4b15-a15e-14b8eb4fec83"
        },
        "item": {
          "id": "b5fbe601-815a-41dd-b1aa-973a49b2ceef",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d8fdc717-e6a4-4bae-a72b-dd39a4e5e5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d181d68-31af-4406-95af-37395e23ddd4",
        "cursor": {
          "ref": "2ce19ba9-3105-4662-84ee-9699b86540c0",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d6332e20-e669-477f-8a96-1e91f35635ea"
        },
        "item": {
          "id": "3d181d68-31af-4406-95af-37395e23ddd4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ac76b6cc-8f52-497f-8796-8bdf2d41a078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d3edc-d0ab-4193-a6c2-39f2c549e8c3",
        "cursor": {
          "ref": "3ddccf51-14fc-4c57-980d-7e9b2eb78c75",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b95a9d47-2528-4be6-ac2a-867b895cb929"
        },
        "item": {
          "id": "fc2d3edc-d0ab-4193-a6c2-39f2c549e8c3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "55cdd0f0-6bad-49c8-8c99-2d2539612107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9563cd9d-f4fc-4aca-b7ec-e1d9d2acfc4c",
        "cursor": {
          "ref": "259bcec3-ee74-4b9f-a078-97fa59eecca7",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3e11ea51-9d46-4f01-b88f-c11000cc8ec6"
        },
        "item": {
          "id": "9563cd9d-f4fc-4aca-b7ec-e1d9d2acfc4c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4114cc1c-05a1-46b0-b9d8-d14c4988bcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b418775-b77e-4992-b565-b23495dfcc67",
        "cursor": {
          "ref": "79c44c06-94ac-407d-be77-6b7dfb4aca7a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f80a7cd0-ba1c-4a7d-86ea-17f857c319ff"
        },
        "item": {
          "id": "7b418775-b77e-4992-b565-b23495dfcc67",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "73c73b83-d8c3-4675-b1d8-15f9574962ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c2a7cf-8630-4a17-a0f3-e2c139315178",
        "cursor": {
          "ref": "a287d0d9-bec8-4b26-ab0c-47a855bbc6dd",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "15d4fba5-982d-4e55-8080-87d36dea6301"
        },
        "item": {
          "id": "a1c2a7cf-8630-4a17-a0f3-e2c139315178",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4925fe35-a1a8-4e28-9549-f63bb89e12d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964728f-49f8-4557-97bf-893e59588e98",
        "cursor": {
          "ref": "b87aefea-5901-46d0-a37e-dff8f28159bb",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "70433ead-3654-4b34-b153-a01bd9606967"
        },
        "item": {
          "id": "3964728f-49f8-4557-97bf-893e59588e98",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fbcb877b-9430-41db-ae22-8308b8d96e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eaf47f-7eba-487f-b93e-c7d8c39ec6f2",
        "cursor": {
          "ref": "03e17bb9-9013-4ea8-a014-50c1c7c86c89",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "432cb7bd-7531-4732-83de-e923f38509c7"
        },
        "item": {
          "id": "e1eaf47f-7eba-487f-b93e-c7d8c39ec6f2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d6d91c07-5500-4b67-b211-d2b5b7aa3f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedf593f-0f28-4b94-ae43-75ee69552ce3",
        "cursor": {
          "ref": "acdc130c-9017-4507-a68b-69fc0a5f8fcf",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5eb64c18-7192-4877-ac7a-de7948be8a9f"
        },
        "item": {
          "id": "eedf593f-0f28-4b94-ae43-75ee69552ce3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fa218e4e-0d39-4bfa-b312-fd023cd6c8d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c74c3d9-ecaa-41bb-9c88-40a7bde70f36",
        "cursor": {
          "ref": "4c3aba31-d848-4689-8674-52545ea3b33b",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6e98b03c-b676-412b-bf36-8257f8025555"
        },
        "item": {
          "id": "4c74c3d9-ecaa-41bb-9c88-40a7bde70f36",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b83240b9-eedc-459a-8cdf-7e623f5a3c4c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849c066c-0695-4356-bdfd-6c77b7bc7522",
        "cursor": {
          "ref": "ceabb89a-c992-4543-9488-31c0af5bf32b",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3d85b010-77b9-49ff-b290-777001c79b0d"
        },
        "item": {
          "id": "849c066c-0695-4356-bdfd-6c77b7bc7522",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ccd910d7-1f8e-43ca-8424-f80ab00a01b6",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac0c2db-15a7-4f24-9830-6701160829de",
        "cursor": {
          "ref": "419826b7-cc76-4260-be87-bd4b75e303ba",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c0948382-ea21-44e9-8d90-edd05f8664f9"
        },
        "item": {
          "id": "bac0c2db-15a7-4f24-9830-6701160829de",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f742cf12-e7ce-4515-93db-c842904cc0af",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1464571f-7567-45ee-a18c-a349b2681780",
        "cursor": {
          "ref": "8eb57229-05da-443a-9c93-c04da0050a8e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e62319ab-c9b6-40e8-b808-6c51ce7142b9"
        },
        "item": {
          "id": "1464571f-7567-45ee-a18c-a349b2681780",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bdf9e159-8aa3-4cd4-a284-473878266e92",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "23863cc0-63ab-417c-bb73-058ed72f5e3f",
        "cursor": {
          "ref": "88577aa6-3900-4213-a733-8e447b96c915",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "62b08fb5-6845-4347-a559-62a59529e54a"
        },
        "item": {
          "id": "23863cc0-63ab-417c-bb73-058ed72f5e3f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f33c3fc1-59ab-4486-9315-354423475936",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23863cc0-63ab-417c-bb73-058ed72f5e3f",
        "cursor": {
          "ref": "88577aa6-3900-4213-a733-8e447b96c915",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "62b08fb5-6845-4347-a559-62a59529e54a"
        },
        "item": {
          "id": "23863cc0-63ab-417c-bb73-058ed72f5e3f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f33c3fc1-59ab-4486-9315-354423475936",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23863cc0-63ab-417c-bb73-058ed72f5e3f",
        "cursor": {
          "ref": "88577aa6-3900-4213-a733-8e447b96c915",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "62b08fb5-6845-4347-a559-62a59529e54a"
        },
        "item": {
          "id": "23863cc0-63ab-417c-bb73-058ed72f5e3f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f33c3fc1-59ab-4486-9315-354423475936",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc4a72f-02bc-4e32-941d-886c053ac879",
        "cursor": {
          "ref": "486e8e8e-c935-4ce9-b102-21f11f5bbe7e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6d1c6261-90b7-4436-a1e2-fe04d742ab91"
        },
        "item": {
          "id": "afc4a72f-02bc-4e32-941d-886c053ac879",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a450ae8d-4d95-4ec9-b271-01738751afac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f14f7f-9a2f-413b-8606-47a6343a3688",
        "cursor": {
          "ref": "42326043-9b0c-42a8-b5d0-65a386e61e38",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5dbf73a3-6ae7-41a3-9041-7eb4714f066e"
        },
        "item": {
          "id": "52f14f7f-9a2f-413b-8606-47a6343a3688",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cac50e76-95fd-43c4-90b0-8204d211ca57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f14f7f-9a2f-413b-8606-47a6343a3688",
        "cursor": {
          "ref": "42326043-9b0c-42a8-b5d0-65a386e61e38",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5dbf73a3-6ae7-41a3-9041-7eb4714f066e"
        },
        "item": {
          "id": "52f14f7f-9a2f-413b-8606-47a6343a3688",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cac50e76-95fd-43c4-90b0-8204d211ca57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef5d740-0b56-4fab-bb68-13cc648b21ce",
        "cursor": {
          "ref": "945b8b3d-8412-474f-8aab-0c2a2d1e0ca4",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "303d424a-cc54-459f-a417-306d6be4b4b3"
        },
        "item": {
          "id": "bef5d740-0b56-4fab-bb68-13cc648b21ce",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3eb3bb4d-4962-4c74-849d-5f496d45fa97",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13408f-c1cd-4eb7-9715-053ff299981c",
        "cursor": {
          "ref": "0b0428e2-323d-4a0e-8cfc-2813934b891e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "61141ee7-7193-40bb-983d-940270d68d63"
        },
        "item": {
          "id": "ef13408f-c1cd-4eb7-9715-053ff299981c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87d771da-12e6-4436-9b0e-cf3a488bf4ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13408f-c1cd-4eb7-9715-053ff299981c",
        "cursor": {
          "ref": "0b0428e2-323d-4a0e-8cfc-2813934b891e",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "61141ee7-7193-40bb-983d-940270d68d63"
        },
        "item": {
          "id": "ef13408f-c1cd-4eb7-9715-053ff299981c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "87d771da-12e6-4436-9b0e-cf3a488bf4ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d996b2-53bb-460a-bc20-2fe81a69fe84",
        "cursor": {
          "ref": "c3e10a85-687e-4ace-941d-2027f0104e94",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "678ead00-e8a0-404b-ad0c-49f3d6a20f08"
        },
        "item": {
          "id": "03d996b2-53bb-460a-bc20-2fe81a69fe84",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d42287be-dbf6-4678-90b9-80ce3117125b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}