{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aef92581-c370-4c51-a759-4118a606921a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6582cca5-db02-448e-a683-86ceedf1a41b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd216b66-a91c-4506-9f6d-9883b5ee496a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc2cbc09-1c9d-476c-af6b-a0ce487fea5e"
                }
              }
            ]
          },
          {
            "id": "27a8974c-c6bb-417f-a3d2-47a44e59ab91",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc2bf7a3-dbd0-4674-a745-a0ae26385722",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b4ec5765-b9e2-4363-a41b-d4c0f54fe60b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d46b7ebf-61ab-4be8-a0e5-87b5cf30fe9c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b16f2a58-002e-46f4-a3e1-c4795a1fc7ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9da3d292-7b77-4794-98ba-4f7fa09f67e8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcad5a46-3ecd-4283-a26c-598ccf693812",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e3e9fa1-ae07-4c9d-becb-e41e877d70c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7157370-c02a-465f-8fa9-c59651af8fc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "682345a8-cf83-4d14-9e2f-0cafb4d0ee76"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4fdd4f69-d1d7-43df-9f9f-a63f15a522fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eef423b-f3d9-4e55-a9e0-fcbee4d44e01"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f79646f3-3ae0-48ff-861a-2c7dee1cf750",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ce2e555a-7f93-48d7-8e86-f6f79392cdb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34d6f19f-4e8c-4285-9c49-c19b0cc8217d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6949f564-b0ed-48b0-8aad-947b7a516fc8"
            }
          }
        ]
      },
      {
        "id": "deac6160-6698-44e8-bf16-2c98c0bd3d6d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "658201eb-c949-4571-a618-b356dcb6bcb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d17f2500-88bf-425f-9926-e4a89672bbf3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66fbb3cf-5988-42da-9840-d468b4fecd01",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6462ef-dd6e-4707-8fd7-778d817d4b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a145e15-b952-4c96-8c6f-56f6449d26a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93def70-c240-415d-9eee-c8486b92f96e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1363bf2e-012c-4b4e-93de-684ed3162c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2a91096-2327-4e10-8954-1cc7e44e594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb2f08-11fc-4c2e-81de-ab8af6f03d6a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9f2554-c8c4-4d31-b21a-c661194e9076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c53fc29-9501-45e5-9852-72d3621baf55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14fa7358-38f4-4584-af42-a2a69b8714a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40aaae09-2377-4a4f-88af-5ea388fe58c7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16bddb2-f0c8-425d-b160-09342e68ab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "572b6016-f3f3-4772-993c-8f494057c161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608e66f2-2ef8-4ce1-ba43-f9473c49c63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ea97f2-02bc-4764-9aac-3b8727e83ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b110e1-8399-42a4-8731-be652c1fad07",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d06445e-12fe-4b8c-8ba7-eaea1cea6e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef69b301-12c4-48b3-8339-1d4ad5230757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a153165-21a9-4501-961b-f36fbc47253f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "4602c35f-6b2b-4aff-8b37-382ebc9fa593"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "55fa8a39-8c29-4ded-9905-43c54107b671",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e99804bc-b35b-4db7-9848-d802e41d24d9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbd5f79c-1365-4991-8a24-c8b5aa94405d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e99696bd-cbb6-4df1-baa6-28608b84b1a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "002c5aae-74ae-4b63-b40c-9a068c216e54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a2e4e48e-fcbd-4c7b-be6d-1d77f1615f84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e81108fa-4cf6-4422-995f-1619074ba92c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a40c5c50-2252-4dfd-ac35-6ab0e5add9f4"
            }
          }
        ]
      },
      {
        "id": "9351c5a5-eccf-44f5-847a-7eaf25a440d7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "92e16382-3935-4c54-90b0-a6375bbfc219",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b83307f-e078-4223-ada4-f7da5318094a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a91f76d6-98b3-466a-9a21-e7257c0235e2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8018af1d-c915-42e4-9ab4-ee6553f55fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7778a488-affd-498d-9cbd-ab691132b039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d94f79-6ac4-48e3-8427-f1c3b4df61a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1961bda8-5c67-49ef-8df9-f7ef69e249ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82140c44-f9df-4227-bf83-7b88460c481f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a008dc85-5ef5-48ba-8f52-28a9e9cd424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5a17f8-3efe-4df8-acaf-a995016d91bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63efa158-d987-48ae-ada2-27fd9489a065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ed5178e-88e1-4564-b078-b93466ee17b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d68ebba-c3e8-426b-812a-4d7900a142d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f298ce74-c452-4ecf-a9ad-6c5581b36abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac32a6a-4012-41c7-bf34-50e043c49aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068f8b83-58dc-41ef-9f54-ef141cc597d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f4ce73f-5590-406f-81b9-f011b9fa0c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb96e61-d076-46a3-9c86-3f874a6e060a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8118430c-7252-4213-9a25-ce5b3ce14073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7927f8d1-38ac-4711-8d14-6157394f7df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ebddff-6464-4c0b-9f0e-2c03dd462db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d884b2b-c91d-4d8d-8898-cb0eab1074d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e544cb1-269c-4b5d-a5c4-98b0f04a4064",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d06c0c6-4e23-40cd-b51f-5067e069a353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212a036c-fb03-433c-8066-1718f1df0f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197474a2-d861-44c5-a46f-d099713100e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc1dc622-d919-43b1-8d77-3f63fb65607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44be2d6f-c2f5-4dea-8647-db359cf57a9c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c67c4cf-7d53-4f04-b6a0-f3f304476047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d11482-b754-44ce-ba90-95ec1ff0567e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9679ff03-cbcd-4e4e-9845-5d72a39f7c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cf6dc3a-b839-4bcf-a46d-21f0e7a10769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0be88b-5aeb-4430-bd49-7efc6bc851ff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0573ef2-314a-4bc1-97c2-62f88ac0a52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f996e35f-a702-4869-94e3-5693fd36e337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f09f2d9-bb65-48df-88e7-9fc612463087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ee55c1-4f3c-4dcf-b594-ac00297618f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079e91a1-4847-499e-b0cf-feb8732712e1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f43ace-50fc-4267-8b78-c5121050745b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e3ab2d-74e1-48e8-8930-78e64a973cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751efc78-6f44-4c05-9f5e-10b5bd328c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6789f265-496e-46fd-90ae-8e6e80848801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6ad708-ff4c-48d1-b088-72d8179d7d6d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527dabd2-61ba-4524-ae46-f41c5eb80f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502bf206-242a-45f5-8b23-3964594cd5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0371706-d8ca-4701-aa6e-042612490999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf42fe35-7795-43b4-8a21-ec9f05accfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c43d75c-41d0-433f-8ad5-92dc0a2ad342",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90be5aa8-158c-4655-961f-02f9e87d1a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f3eca0-2a06-4475-a8b9-a30a9df4a76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb92053-79f2-4d38-838c-8779632577b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f1e9e73-0e41-41e4-8c32-b2800e91fb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fb096c-565c-412f-a21e-88a37b1749b6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cd8f51-fdf7-4085-8edc-173e9f308e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3313ef54-5a04-4599-a09c-3e07262572b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b58017-5a11-4f14-a6f1-5bb0f7cd8e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "980f1f94-c255-486c-9435-0ddab1f5d344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1545ebc-c0f9-4502-b553-2508d573d2ce",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7d4b8f-ddcd-4edd-b920-86b81b78acf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c5df58-3207-4865-9514-1932288ab34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53346909-09eb-4c6f-a98a-8f44b8f80693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "695357f3-904d-4df0-8b8b-c799d35f924a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eadce1-cbed-4319-be61-4e3a09554438",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6678f30b-09ce-47a4-bc1b-d00a299618bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05897984-53b4-485d-8724-3ae6dbfec055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16df9b0-2d59-4236-abc6-ecb14efbdae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70846805-e987-408e-a0fe-7bc7a4c105fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccbef45-f2ac-42e1-92b6-cb8d09ed74b8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9723c9-511e-4e71-9675-9ac1d779718b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04c37d3-abd4-41da-a47b-f43de05fac61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf523b75-ccb8-41c3-bb32-8a3594a520e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f66fbdac-aa12-4a5b-b7e5-082ed16bf412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fb1560-3f7a-4776-9995-068403ecd282",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c1a0ed-3286-4bc7-a324-55047daf3f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d407bf0a-34f0-4ca6-9779-f69fbadbe7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0cdf9e-7a73-40e2-9536-3a9b8d0460bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbe85b57-2d1d-4a6f-841d-236e3d005c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd97cdd-7f7f-422c-a91b-7f4b594a6cf6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3246bb2-8360-4795-a856-a74f1289b98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd279d3-1fc1-4097-b721-75c7198c8a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5833b74-8b20-4d2e-a426-7484bf8e966f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66a1709d-c1ce-4cbf-8939-4f9ea5957c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741954a4-955f-42bc-b4c7-58f4605532c5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e73a650-9d5d-454c-90c8-39993252fe4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5669d3-7b59-4da1-82fa-78d08b4cc365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c033d9-1580-4fbe-ad59-f6e89d6d85d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d80cf91e-86d5-4a41-a54a-32fbc2f59d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989e2200-7dac-4b53-8a6d-fcfed7714597",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cc3151-5175-46da-aa81-2edb9bf2801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e525581-e8c9-4f5a-8e58-2fc6938d6f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670f796f-7942-414b-b4fb-9ed06407c53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5862ab-87a9-4394-be42-6a54f6393bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ba8b5e-7bf5-48b0-bed6-361612616af3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30908cc5-7599-4f96-900f-380446af53e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440d2cf0-e367-4525-bdd0-3aa8e6003c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de29c56-2161-4c68-8e30-902d3484f9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c9e944-2f53-4994-9872-6a88c6368ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8935c0c-234d-4f16-b1d2-19604e028232",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d6fdd7-5018-436c-967b-96be116f5bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7addd9bd-5f43-408f-8af2-596a39ae2a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae6507d-31f8-4bfd-8985-4592e5c8011f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1845a53-c76a-4576-9d79-5070ed57f42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f03cb5-1821-4294-839c-719f81bd89d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61faf2f-5430-49a8-976e-ece112873a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46589f70-0598-4a4d-ab64-7031db47b29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3682b211-f30f-4f2f-8dbf-86bfa53f275f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47dc212-6d7d-4d8f-a195-a550d1de63eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0486db93-6c44-48be-8f0d-98f6c315eb94",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1f95d5-e3e1-4728-8d55-beacc7548bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79798f0-cab7-4109-abf8-2a87caf5b571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f10a3e-d7ba-4d60-a9f2-6c09c5bae230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2baa5bb-9cfd-4389-885f-ac04b3ff0437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdc4d7d-f4b8-4e0e-8615-461c7ccafab1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26774bd-ba1a-4675-94c7-62eb2424eeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c59ac8e-4366-4ca5-9bb5-67423d247f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490a23ca-440a-4116-83ca-c4ece1d7868d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f69a54-c59b-4d83-b292-19c3ba0a8010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b11a94-4de3-4325-8891-d70b169e5d56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c80706-6fcc-4762-8efb-65fe72082042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10f6669-d2a4-4651-ba1c-80a712b746e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a66dda-ef1f-4954-831b-7aabb21e5dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a23248-9bfc-402a-a24b-8cbb2fbdb6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798856c6-cc5a-4d5e-b040-d7e0aa47053e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5563340-7388-46ff-80bc-eff5bd0decb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1794d25-7a5e-40c0-a6cb-6b2b42a04628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c300fc29-febd-4519-8251-e3574f2d245c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38c723ec-2d03-419c-90dd-374cae6921fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c2d1e-72c4-44b5-9561-9d918dcf9233",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad4a842-8c25-408b-bb52-6042dd891bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed20509-466a-45e8-831a-2ace4cd9c57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eed366-59e4-4b74-9bfa-07da85192fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1212d2b-caf3-4967-83f3-1eddc86fa8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1514f1-809e-4495-8ac0-e406355d6538",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314e7cd4-936b-4f16-a110-c603c2ba0c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d70d79-9986-4464-b501-08d74f43dcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6685a306-8985-4118-a590-a6a672cec171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bbc98a-8afb-4dd3-8ab2-57ee5f72b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae51e2be-bd30-470a-93f5-af44c8b7d50c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cec26d-2304-4da9-898c-bd72193d1128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61af87fb-ed53-4715-9dfb-ae3f78886f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125d1f89-f07c-4448-9da4-6f0286f4dcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d0d244-49a9-45e5-8d94-72291f8c6687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51699974-02ca-4f4a-8f3d-2bf0cb97bd66",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524a76e1-8325-48f4-9272-cb10671b9891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab0acac-a51d-4788-854d-818cddc6bdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ed4e3d-f61d-445d-9289-f72fdc93ba05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ba91dc-a952-4737-8efe-db8f6645f537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9964a9d3-11d3-4a48-8536-9642a8c61153",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf68b546-f6ef-4e39-82b5-2fd1e65f3177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cef94f7-bfba-4a96-b507-fb63be86e506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445a6283-f51a-4708-ad37-0bd84d3988e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "41f156d8-4cc8-4155-93ff-b07088595fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a5d7f4-c644-4ccb-9842-ff3f457b59ea",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53c8c94-8e91-41b4-8fed-f7896052320a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725b887a-e71a-4ba5-99d0-6c6a0f9117d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d8f879-8b97-4265-a4b9-c89d7cc71176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d0eafc-cd60-458a-a48d-2e30fe970135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1cc1da-7699-4b08-843e-1438ae2fe524",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8a6ac4-02cf-4cd5-9b41-aa783be5a5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c4afbc-298a-40a0-8886-90787c428c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7deaa08f-31ec-4e85-bd44-e41b433005fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7424afb-9ad2-48b7-9163-5a0365870951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ff3022-d224-4fcf-84af-f5032e91a89c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bfb81a-cb92-465e-9ea5-c7aa2ad7d54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcbc077-1223-434f-bce3-d6fc36aab93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8108f383-1640-4670-8223-0884b6c2ecff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83ad094-b7bb-4a40-969b-e34ffd6035ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dd4706-874f-4823-a363-84d997f0e32a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5f3f53-2c25-4317-8078-aa9fe31c131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58702b4-b998-45b7-b93c-953bfb719924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e0dea1-e13e-45cf-9c44-b9a027fbe729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbaed6c-9329-475b-a736-66be465e9f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb2caac-af33-4d22-86c4-89985f1632ae",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bcd535-7d95-4be2-9dae-10ebdd48ee4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c83be68-bd68-4ed6-b92a-ca51b2eaea22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2adf868-68e9-4a6e-a8d1-e888cc75c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "90d8f3c2-e7c1-4c9c-8724-dddf6ddfd668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a1f359-8b12-4115-b1bb-d1ed3d603ef3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b92ac97-682b-4013-a908-b9af1dddefa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f842fdcc-3f3e-4880-b68d-d7b9a9c4fe49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9cdd2b-967d-4150-936f-205f9e0a8924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8452f6c4-39a1-4818-aa09-e4d302b57385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b390aed-2a21-403d-af85-7d657d75aac4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87749952-55a1-4a61-b949-2df33c300fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ae519a-53c9-4fca-9d9b-62f1d3487f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d66d53-f248-468a-820c-592f29546cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3588eaf9-288c-4392-b6d2-0d1cc280eefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c5285-0a06-4d4d-af4d-dbb0f342d698",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc7d4b7-6c14-4598-b900-71ce65c1b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c616808-c521-4946-884d-b50f1869fb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c30dc5-17c4-4007-a4f7-230e1e8cbc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b9f52c-8f17-4d05-a7ba-18d18266601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0ff51f-88f7-4016-b714-5a80d2704004",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b2469b-3d6b-494a-b3cb-d21f895ee85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35da739-4102-4a13-bbdd-511defaba8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41322ff-7a2b-4b7f-baf7-5b51e848c183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9de99f61-914c-4c9d-ab6f-14079ee08f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824871de-b508-4196-93ab-ec5a6175f526",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13909553-02dd-45d7-8333-f2f51b958858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0d5f1b-3db9-4ed8-a1b2-3413e208df11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e8b0fa-f706-4c0c-8b4a-cb0f5123bce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd06cc70-5960-43db-bdfd-82d96033ad73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3733e184-c6d3-4b27-b2a0-f2aad3958f67",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250af72d-ddcb-417c-8d74-b812b0e7598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9b9674-285d-4aac-b674-25b126042b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6325ea2c-5e86-4afd-b585-a83713743cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdd4b02-f632-4fdf-88f9-a142f68e20c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e455dc-725d-4dad-9938-5a10c75decdb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71da3db8-525c-4814-8a17-4d14f4f96cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a83669d-6e71-43d0-bcfb-8789f28cf081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73781985-dd07-4ec1-89c2-bc515a2bf3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a788e416-0949-461d-a996-42366f8a5279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a42a0d2-695d-47a3-bfc2-0047f58c646a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad11a9ca-0652-421e-89ad-56ead9fccd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f05d90-f4d9-4d14-b736-2c7890706ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78596db9-cd34-4524-8b00-5f37a02b9451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a469aaa-e882-462f-9c6e-62386a213057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4980fb-6e67-4281-8026-a1f0bbc1aeb3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3266202e-d006-45f6-8bad-85aa116d5e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f75128-4108-4c2b-89e3-418a88ac3532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c4f064-5f26-4d8e-bbfb-d0eee5b85cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97998bb-7db0-493f-ab69-c315e484a258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9546b842-fa6b-4190-b29a-106e9511f3b8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9885cc35-59fe-4fbc-9a61-f0dbbe70578d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8841f2-d72d-496a-bf12-a9053a51aa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e417c8d-4882-4ff2-88bd-c5c59d40a317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c39c3a5-04f3-4946-8bf3-444946a0cf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7620baf5-dba2-4595-a578-4a049ae11c80",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7ce21f-0ad5-4ca6-a5c1-0e341dd80d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f5ffa3-81fc-4627-8502-bc1d9b81ccdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c405a0-cea5-4a5c-8b99-3c8aa0ae1593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c94a6a4-9ca5-4626-b241-456e2477ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21649463-181b-4b3d-acf9-9a3dee28c55a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0f2c60-b4de-4fc7-a3a5-054acd92f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4325cef9-8d10-43ad-b6d9-bdda89667d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382e846d-26dd-4874-8e10-628dab8d4b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58627348-6ec8-498c-baff-3b765064216c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79f740b-1c63-432b-becc-c947a6963192",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae97b34-a486-4772-ad3e-db644ea718a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa04d56-d7d9-4bd1-911b-dc5efd5205f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b1f843-78a0-43d0-a9af-557517b8ecba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e88b83-26d1-4903-9c13-9802d0a41355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3841053e-afe1-4049-b237-647a9d5db7b1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014daa3e-3fe8-480b-8590-9ec5319f3cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fed798-9739-43c8-aa67-4a1104cb5636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34855588-46bf-4ea8-a1b2-b453c7044a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7837a9fa-b2b9-421e-9adb-e8d10bfe52fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbde5df-f259-4f37-9a02-7c33bab79c48",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8805ad-3d50-48ae-a129-bdeabfab2c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f4144c-94c2-4477-8e54-63d7352ef4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682e8a5b-8d4a-4b3f-a21a-a2411b3db1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57b4a443-a769-41b1-be7b-1cf5ab394023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcfe555-4f49-4990-acdf-78708da13123",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a2a53-9858-4d5e-bddc-20b1f733d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6d6341-f266-4178-8825-b41cff90755a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405909b0-676b-4fa8-abe5-ac9b903413d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e81f3b4-643f-4916-884c-54b380c20ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8881d9-e81f-43b4-8451-72b5c98856c3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b415a3e9-a889-4b2a-b72b-bc30dbfbed39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b8d1e2-69af-4a20-99bc-b8f0b81b8ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cca510-4fe7-46a3-a072-c0bc41f2ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f6d6a5-ba23-47a3-83a6-58f552ae3ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a623a7a6-3408-4fcc-8248-1ed50a1e2281",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e917a2aa-e4b1-41fe-a352-afa4a8acccde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b91a2a-92dd-4bda-8578-c90be161bd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602764e1-6ed4-4374-b528-9931887cc827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19903ad3-8ac0-4f79-b11f-7a2c19a496af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f951bb70-1540-4149-90ff-fa3a2b6a0d88",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b602661a-f1bb-4a71-ada1-d79a7a3c1ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce0ea90-787c-40e4-8884-a39aef15b638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caf0648-403d-4320-8853-5930750a6b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d969144b-c7b1-4c8d-91eb-196281df2ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84306ed2-0ffa-4bc9-aef1-1535363cd4f8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7524701-e93d-4c50-bc9c-d871e2124fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7110e7-384e-4d9b-b9d1-c0cfc296cd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52b1358-d669-4cd0-adcf-7487ca462399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "001615fe-6d34-48f5-8afd-b0f717c62ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7408d1-c1fb-4948-828f-15fd979d8f4b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c79553f-0889-4a91-948a-cbd0b8e18857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff99cbd-eb07-4e96-abd1-ab8740f8ab55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e20ecc3-60e0-416c-9682-7c4e318775e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf6408b-8cf0-4f13-a86c-2d88b5a2775e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4570ce-1a6e-46f1-a14c-ec496ed84e90",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9538b7a6-b8ba-4b0d-a12d-e01fdf4ae889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafb9c41-0964-4f9b-b76d-8a58404a1419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3aaed5-19f5-41ee-a1d3-453cc33af448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d174908-f53d-445d-934e-d15041eb3b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae4759-7c23-46cd-b3fb-0a68827922d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fde509-af23-411c-bb39-cf8a9bc3d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08eb4435-2e61-438f-a6d7-0b17e659ec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f39e5d-3ff1-4be5-9b77-481ce7e6de8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d9ff38-1590-4013-9cc4-95ae38262383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8597c9-970c-4602-a532-ce458c1f6c72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4c58ab-5402-4993-9f7e-21665ba52da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbcb64b-0ecb-471f-a4de-bb0065b7580e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a51a0c-1cee-46dd-b58b-b952670ec55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4400a2-4679-4f62-b44b-fc256a90fd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdf915a-3cbd-468e-a145-f31baa9dd92d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88fc66a-0e5d-4036-8096-a774f750d401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c05cdee-9178-4756-899b-97514334f709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c90d9c7-d8e6-4d28-84c0-d18ceb29c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0333722-8a4b-4460-a2a7-6bdc976051b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fd2424-0d60-41b7-99f2-4231d993805b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142cd4f2-934b-4241-83dd-ae511b53d548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ca4c34-53a0-443c-98b0-d1e74ee25edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90f5d55-14aa-472f-b41b-96f8779974e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "28098bf2-a625-43ea-a521-2a78c5207946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4016f7-e7d0-4e5b-a4d1-2b6cfae9e722",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac86ba4-8c68-4d0c-a9fb-7a05d7b021e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d3d179-e1a4-41ec-a7c6-ebe4fbea2f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9eb777-64b6-41c3-8a16-6ab5429c0640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "54a9ab0b-917e-46e3-9024-8f6ebded80f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f4bb82-90bd-49b4-8ba6-441b7ff5c466",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3992a81a-36d4-4c13-adbd-bd433b5f8195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2109d10-1f1c-4875-9646-4284665aaf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d981535d-514b-4630-87b1-6e0b4fbea3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d84e227-6a07-4e2b-b514-236c6ee00412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e835eb8e-6e92-44e6-80e6-8adc8e36d6bc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1bd2dc-a40a-4eff-98ce-a1a5a7b8e312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fa63c8-7e89-4b56-8102-d174ddddedb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aced545-c385-4d08-b46b-ed50a5e293ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0b3f17-2ab6-40a7-94a4-82b7c4595115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d30a35b-1aa1-4440-af26-ddc0a23e6a3b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb41238-898b-44b7-8e38-a8440b5977cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca2d636-62fd-44ec-a3f9-ae233473d6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54749a3-10bf-410c-a67d-86474983f80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaee3012-cd0e-4d78-be5b-19fcc255401c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50a2ef7-65fa-4808-9ae5-1f2ef1b7b1b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc7012f-7362-4b61-a947-c7c8978bb858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004cf548-3852-4cca-b375-fd23e765603d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba36447a-8ddb-424e-8d94-b6ae33d4d353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f652e825-aae0-4116-8717-37a83269c4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196615de-38f1-4f72-a38e-4128aab2626e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893c5064-b39c-4df4-bd4d-b94d1be5e387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80c6cab-e965-499d-a59a-bb149f6db427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599715f7-307f-4805-b4d4-fec295930c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b12fdaa-be85-469b-9365-2a107163c64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6034a365-7492-4271-837a-6ab655c7ffc9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8ec558-6430-4976-9556-4f0c633abbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c891463-9e15-47a2-8ca2-9a8059766957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495ae11e-d97f-485d-b7cd-6e765332120e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c25d71-f6ae-4217-8eb7-a5eab8ca3b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3473fec-b548-424f-864a-962007dc9226",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639671bb-9f52-4fdc-a995-3124046d874c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430b055d-ffb1-4a55-a805-aec0f7995695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c9cfe4-a374-4b2d-98b8-354d1d16d54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50781ed-09bc-4f49-8661-448c24957a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81bb9a4-ad5e-4a9e-b0ca-5dfeb781a12b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1930329f-bec5-4610-8a8c-023c994f18e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c3ad33-8d77-478f-828c-b1913e67ff0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd40c96-04c7-48b2-a046-381d53a30357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4890df6e-31cb-42ea-9678-a0241b5cd493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650dce67-607d-4e14-aa1b-5e6d19745b36",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5908e0e-3955-4f89-8029-6010f2a7259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10062b90-ed8b-44b2-8cad-051a282c1896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829f772f-3860-4cab-8216-ac3a2337b966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aecbcf30-264d-46d2-9e1e-29c98aa98df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7868e523-e936-4197-b356-53e3b299ec18",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e805f8f-8b5f-4f1c-8961-db8af3ac35ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278eeeac-a9c2-414b-812f-8c29bed11f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9beb49-7389-4c96-92fa-779c7a20efd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f73d02-b5da-4385-9730-e360b369f4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f5b3a9-85a1-4a85-b773-8c322b1ebeb1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d282a1a-2e69-4db8-ad8e-2e614be70e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89301cd4-b11f-4b53-9f6e-b60b1b4ccdc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123d105b-c946-49b5-a0a3-2d940b809e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b69e38f9-0f55-4c72-94ca-0cd88591b862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2f50d1-3c6c-47d9-8fd2-4180b259ea83",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de490c21-84dd-4ec0-a0de-c9a369bc61d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68c0868-c785-4768-adf7-92a1cd393f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab981ea-2290-4cd5-8d53-5d1789ea118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08eb0861-63db-4efb-aee1-aa57c25467f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e79c2c7-b319-4175-8a69-b6cb229c92be",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc79e2e-95dd-4254-a352-0860ebf56920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aef1f10-36a1-4f65-a096-209a34f80a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c517da-8f03-4bae-8d0e-b036d41bb255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c522730d-cb3e-4e97-aabb-0a17ecc4f705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24386aa3-181a-44a8-956b-d6b063953764",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2834bf-7b21-443c-b20c-8a91760cd363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c660687-a3de-4d7c-a0de-0d67225471c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce7632a-424d-4811-a9c3-26ba612895a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02682afb-f9aa-4d26-8421-cbd9df2d0841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b6ac6f-1a3f-44a5-9a81-6380cc65275b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3b7335-1fb9-4b2e-9d8a-7ea691296af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354b02aa-1c3b-4cac-9f4d-4d8a0e37335b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169d03a9-8eb7-4755-812a-f6b43edf6261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a52d12f-f659-4f12-9213-2d3be443d686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccc8365-8297-4100-8aa0-72100cc84ea8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa93c14-536a-4305-834b-713fb9076f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc12d677-3a2a-419a-b6a9-46f4e0a8a03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e52738d-6007-4869-8bcd-5c8c51c0fefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a32880f-43d4-4d3c-80c1-5a5676cbbefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0592eae9-d9d6-4684-bc09-1b193ce25a56",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b85972-27cb-41a8-adbd-6ce199a2ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf54fff-e004-4d3f-bae0-e6bd7cc3b6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cbf760-4812-4965-9982-83de1ee362fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d950fe76-642c-4bb6-b0c6-598e95126f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b54188-b911-4bd0-b23e-fcee19e5d6ab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235898ff-3423-4704-add2-a48d30c146f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76e13a9-69cc-4e65-b2a9-b35b91d38764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605e6b02-fb6e-488a-9b56-92007347ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43a12088-1847-47a2-b150-27974953aa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b23649-b47f-4bc3-b74b-8ea8e9fe9c8e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1e5138-d84b-4946-bbaa-de01b5035cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b92dd2-fa63-4912-b74b-21fe9f217e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d021d4fb-91f0-47a4-8941-46f91fc61efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67a639c-9aa0-4d7c-ab68-8b82a1f2f7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aecf11-adae-4da5-991b-6f5d9ed0e729",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a307f651-cfbe-4b7e-8068-d1ad9ddb00c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0613a0b-139d-46b7-91bb-66a0e332caf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c501169f-3d78-41cf-af96-fe398b1efa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e55fbf3a-3de7-41c2-869a-6281c8e8a0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841483df-be33-4881-a42d-afbdff0da59a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d823a5dd-8065-406a-837a-b7fa286e4725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8329fc0-99f4-488d-8cfe-bdb2ad6fd971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157b9ee0-5cae-4c7d-ad80-097464f14ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c775049b-a708-4793-9dc3-9ca0f2e67e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdd7adb-2e6e-4e07-9107-c23f4d4ea8ad",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cebf12d-5e4a-4dd7-b388-32ad7359509b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb82aff-c8d7-43d8-b667-290eb14e2700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a234b39-6183-4edb-a751-7102cf78dc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e94efc32-af91-4da4-91fa-372909e9f4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b4b37d-875c-478f-b337-9c6357a11914",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6454e13-3182-4c58-87a7-936bc9b8b1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca67476d-6e1a-4747-b13f-695ce48c8442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f8e5a2-78ab-4be8-99dc-3858b840cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61e88519-4f7d-49c9-b51c-13090768bdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a66395-826d-41ca-9e8c-d2718e4d75be",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b9bc2e-5a01-4ff0-99a6-00eb96a32a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4483ea48-0e82-4878-975b-eeceef440063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19da199-8084-48bd-a39a-1f4f5a57e378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "945475e3-93ed-45f9-aa00-533eea8ac074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f300b7c2-ba58-49f2-bf2b-5c63fd8dfc14",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78273c8b-64ce-4e7e-8027-1809da835108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb33261-8e8d-4e6b-bbac-cd27c2fa0b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3245a27b-3f40-4618-8a57-d92012b7f88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9000fce3-2489-45fc-a7e6-5042d219723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1280bde2-f4b5-4847-8703-934e7d636389",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac174c06-1353-411b-adc5-a40462403005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa06887-c0bd-48bf-b3eb-07b3bab54b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f1b05e-df7c-4f4c-a92d-303b0ca9283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68c9a686-ef7d-41e5-8d3f-9b04e6461028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5478de16-0af1-4c4d-b18f-721c4ddfb365",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51cd57c-cc8c-4a50-9ece-e7afa2f112db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc743eb-dcca-4915-bbe9-bbe1329afb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73d6ed8-34c6-4cd3-ac89-085ce8fae9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44205e0a-e9e1-4b78-ad85-7e33fb936e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2866e2-2ae2-421f-a422-337a7adccfa3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7543a2be-1b8e-4ea1-b811-aabbe156f1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6001cc64-4bbe-4a67-8900-1d320e90b80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0da20e6-76e3-4a18-8a97-176fc53e6cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df767ffb-a5aa-41e6-bacc-b81f538ae05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530c304e-4229-4f0e-8c88-5ad0b7b5d316",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6a9e53-f02b-48eb-b42e-1a340edb95b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdb8792-208e-47ec-8fb1-5df035db188a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81c1f09-7107-45e7-9389-56f1eb71cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "165ba6e0-02f9-408c-9902-305f61e87f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5a349f-a5f4-496f-8980-f13f52babd2f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bc28e8-7022-4125-804f-8a58486605d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "598ab284-9836-4b39-b41d-b02f874ef33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923aff08-002e-4045-a0bd-1566907001dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "11c4bc0f-9fdc-4111-83e9-33e1f91aefad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c8ca85d-cdb6-406c-8b7f-a9f998112e45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e2f2d43-2e96-49e3-b069-7b837c2bfc2b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819a25cd-15d8-440a-b818-fe62367302db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a4efebf-9a1e-4da8-9d4a-f3bc210322f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ebee79-12c0-450b-8411-339cb6e07535",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f738d2aa-c373-4d23-8873-2f6ef22e452e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9421b060-6561-4e77-a686-08af34d861a3",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e0add2-cf6c-4301-a8db-311cd218220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1898bff7-71c5-4a36-8997-5ed66e10a96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d6d091-0795-4545-91c5-0432c9efbd0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5e6ee0f1-ba75-4600-acc8-e05c4e0742e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ad17a99-7e45-4e0d-82a5-de93b8b45196",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e17c4b9-a4b8-44a5-869a-fa6755c3bd83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "088dc028-a4f9-41f0-86c7-6ca94fea65b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef1f422e-704e-49c8-81cd-ed39ba95a38c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c015a7c-41ec-4758-9c3c-04fd1ee15429",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf52b11c-6197-45fe-a74d-dd21a3d6ac80"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e683a1bb-a32c-4787-b681-52e10a87c666",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "295f4575-efa3-4dbc-b860-ad20c8dab48a"
                }
              }
            ]
          },
          {
            "id": "a1b74b5d-765d-49e8-9e5a-20af40e49af6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ab74747-2258-45c9-9fbe-e9b46bce048f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4f2c963-d0d4-4227-ac69-6800dd8420d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "966f31e5-5dca-4ab0-a1cd-3c77eba57695"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3478fb49-f7a0-4954-b6f4-f7dec90cf458",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48ca08ad-a423-4873-8868-884cb5badf1f"
                    }
                  }
                ]
              },
              {
                "id": "eb1004c1-ba6c-4412-86a9-f27b2e467977",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7e28fed-dd79-4a58-9cac-b533b0e1a7a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5c16050-8232-40f7-8b52-066f51eb45a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4636c1a-41a3-4940-9925-d3b42d149a8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50d956b6-f456-4956-b12b-19e38ed8604f"
                    }
                  }
                ]
              },
              {
                "id": "a111197f-c5c7-400b-b379-9d948b9ee0ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0695b177-809b-4123-a7f3-6d4ee5b652e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45c9685b-55eb-4a7c-97fd-94aeff8d2610"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a92db1b-b51e-4939-af04-f5ee54173843",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b7361dfc-e26b-4256-99eb-1bfe05b06e7e"
                    }
                  }
                ]
              },
              {
                "id": "f95d0793-cc26-48e8-a653-ceedab280dbc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48effa88-42e9-49de-9ccb-65577d69af04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ed057bb-9545-41e6-85d5-26247129ee6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5252b727-3754-459a-93da-7ba8e10a0650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee1b37fd-7347-4e31-9d5e-a67cda5190ef"
                    }
                  }
                ]
              },
              {
                "id": "003fd2e9-3062-4376-8ad3-ca09bad3cda3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1f3a25b-c76d-4265-8f59-ee401d103feb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2343e7c-780b-42c1-a223-80a5d3da56e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b02dd8-fc5e-440c-ac9d-6c76fe41cdef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "053b10f1-0aea-432d-bb52-7f8930434d44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c378b92-7abc-4013-b781-00c8fa2eeda3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4061df5b-c507-4151-9b2d-df59663ad64d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4dab1f8f-d49b-4f62-a475-3d980022f513",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae7dd04c-8f29-4eb4-8e7b-0459d35add29"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2a89785-3e3f-4a98-88f9-3e7b4e658c0b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d99931a9-1cdb-4edd-b3fd-0f5ff8622ed1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18fec079-a886-41f1-bce2-66ac52147e34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e60cfe8-2787-4ead-a332-370ab629b404"
            }
          }
        ]
      },
      {
        "id": "ab65e63e-76b4-4013-ae5c-906d2a5f7892",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4cfaed66-b668-4cf9-a626-f6c40dc19b54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "deba0479-3b48-4536-9e09-0c3f781e05e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cdae44e6-0f16-41c4-b894-83b5b51f4004",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3174a5-9e0e-4d17-a178-93e03b9c5276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6f0d35-1348-437a-8f98-2dcfdc2165ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fb645f-2792-43c1-9fe9-e372ff7a77b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2302340d-7977-493d-9365-1dac988c1af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7246416e-49f8-4383-81a4-a78750b12835",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911d11e2-0089-4f26-8202-48137d97b5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e5e676-8bcf-46a1-a618-11cb1708eacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431310db-2b8d-40eb-843c-89c2ffd693a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "068098c7-5f2c-422d-b986-444cd6998194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ace604-841a-4354-b39e-f341fbdc16fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9f85aa-ffa8-4555-8f06-e4c067c947af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ad9a79-205a-44c5-9ef0-9f800f176a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53655a3b-3433-4c0e-984b-d4e8959c616a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5bec59-daea-4ad5-a331-7ab14528d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641e4f1a-2d09-45b3-8cfd-5aab5fb0bc75",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83f605b-c5e1-4d90-9a14-4726d974369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e3b1b3-3cad-48d9-8c4f-5f6c1f93c9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48e22b1-e906-4563-b5c3-62c5ee6ffc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab25ee0-06e1-41ea-9757-40d0bbdb5a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00087be-c5ee-4cb1-9568-2da5d5cf5992",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1bc049-ed9a-418f-84f2-ca66179070b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258b7f11-167f-4b49-936a-6dfa0de9bfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2e505c-22bb-443a-8043-2916f8754a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e3fb09-4bcf-4b36-990e-28e63804998d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d9fae0-46e2-4166-8fa0-01c0bd33b48b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323ee617-e5cf-40d6-b9ae-4574b8522b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4aba81b-542b-42f7-833a-63f972ec87e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d17770-4607-4400-9b05-722c0896f6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1198c7-4927-49ab-aa91-9116cd152e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bd52bd-a25c-474f-8348-fd7a27c8d51a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bc83cc-2ac1-4ac3-b438-b99324bdc232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346c4438-d6ff-4ef0-b4ba-9b0727285ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54023cc-6d68-4532-842e-947f8d5c3b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7927f9-b3ba-47d3-bdcf-76439b6867ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb84986-1a54-4f9a-8db0-d095428ed2d5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d2f36c-44a7-4636-9af3-967b333118f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71ba5d1-4a17-4639-aa2f-c6fffb611939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cfa889-cb11-4f1f-be02-8182cc73dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "339720b5-8b19-4242-a846-c568be2fb91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dcfd64-a745-4f1b-b28f-5b8b40a29b79",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a075da1-4e7c-4020-b117-db77fcb3345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a0c817-44b1-480b-8b80-8b4079a183ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae01809-ec27-4597-a54f-dea5d6ff6b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aab307e-85d9-4f39-ae20-bacf1edd7678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0ae82b-fbe2-4840-a16c-556f5fdd34a2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06832dea-2a1a-4170-8e61-d145d792d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ab9679-77cb-4851-ab18-a2712cce723c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112a62d5-7137-4021-9ea4-aaaf62dae47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a284577e-327d-4fd8-b170-34d6c27e06b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ea0dba-a6a7-46ce-b075-ce23a3bda98d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da52d96c-4492-416c-a746-e05dc587d332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62d127d-04b8-4fa3-a459-235bf737464c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9b2c0f-cab1-4e77-b7ac-5ec5112503a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e44cc1-16d7-4cdd-8bb1-81006444062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1380b8ac-7018-4c16-bfc1-ee7e8e80c8db",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c55d36f-3b24-4573-ac25-ec70c94d44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca7dd00-5db8-4c37-87b1-b7011b9b404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c32a05-9149-40cc-be37-b555af530ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8bcdc1-f8ac-4e62-bd6d-4669341cc7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cfaade-e752-4d93-82d2-d18b9641b1f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1547fc-1f9a-4578-b2e2-c3ade650c52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1bdfbc-3483-4054-a955-7709a56a957e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1561217-b03d-4971-a10f-ad777609a920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbbfc79-6cbb-4ffd-b427-d119499480aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a6fb62-c965-4cd8-9a4b-363dc51690df",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7e2706-184f-4a52-a34b-6c10005b7e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130fc176-b3c6-4482-b1da-98be6604ea10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4820cf25-8834-4270-a04e-04544270a012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a5bab5-6294-41f9-af75-d32ced498e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b048e6-6bcf-4d8b-917b-1db810f076c1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1308c80b-7dcf-49c0-8273-85def7327c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a1ecb5-fd2d-4a6f-bc40-6cb9829bc423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6689b1f9-a062-49f4-b55e-07b6d1e7aa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e863cb-9cfd-4299-9a30-53b8b898c6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ade464-096a-4d37-9205-9e69f2988329",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ffd37b-7145-48f6-8476-3dc732be4b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106f3832-7e96-4e43-b31b-cc94c2f888b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1e7aa3-21af-4a4e-ac8a-c09cb894ac37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e213c58a-0271-4de7-9450-2a8e7d40e2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9b9e34-0f92-4d01-99ea-c074c34fa268",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a26679-1817-463e-962b-925e698432eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509d197e-3536-401e-b921-4c985e7f2105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23984ff-3538-4001-aed0-d270e34f327b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a78b38-61cc-4a85-aa10-8ca9dba09c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717ead31-65f2-4fbd-9811-7498febcf822",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82b2be0-010d-4109-a089-429417a84007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7a744a-d876-40de-9fe2-7d33c6140682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa439eb-e062-47a9-95bb-6f57ee2920f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "376f25c4-11b5-49ea-82fc-4785392d5822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a08305-09c4-4619-a8de-2e139c5b3b21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbd6551-148c-4062-a84d-e6a1e9ec1b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1710bb6a-74ba-40ed-810c-1e075135357d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ffb533-a261-4059-8e3d-108547de35d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2ff39a-6074-43cf-8ae6-63344fb54b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e95f59d-37e2-4656-b0f4-ef3c76910c68",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfc7c43-d9f7-4211-8318-4a0c321bff5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b0c507-e7c2-49c0-a941-67d032cd5b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec642a0-b291-4469-b9f2-fc5ea0b82929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a29755-afff-4b38-98a1-46c8400bba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b42433-0782-47a6-a04f-e73b039b9c23",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00e3241-2bb1-4ff9-b0ef-f7c61a42e979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c30007e-67af-4a22-900f-cd7d5678954d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe2dae3-fce5-499a-adb9-7d0f5cf2dc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97e4c3d-072e-4289-b819-7d521db47812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda221b7-eaac-4cbf-b560-1c0344429b07",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e28738c-93c3-4bd2-abb1-93276330e02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d4d50b-40a2-49bf-85d6-3488e04185c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74c5a98-ba6c-4552-b7de-50c79144b896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bf2b64-34a9-4dea-a440-58804a8395cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08b055c-4a94-4839-ab76-38893c3ba061",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a66c08-308e-4c02-8031-2f297d8c4f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf828b6-abd7-47c9-a0dc-3beac9deddcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c73b64-45a2-4a9a-b04f-e8435016927c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5944f171-a35a-4249-a566-70ab8bb88158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1becdb21-7a35-40f3-b716-ad8fe6c31d83",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd16221-cf3d-46ad-b8cc-3809c8a0b260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e528c52d-dcd8-4bb3-b458-de2a68573a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ee53a5-b26f-4b18-a9dc-8b85ec839b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "715498f4-a128-4f0c-868a-d9582c9ba50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8af8698-4f69-4354-97f4-734329dc94fc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55b1d27-d546-4b80-8b03-127af90bb5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3140b7-e7d1-4219-a606-45c72788f212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6642e0c6-ab5a-4da3-89f8-83413637e262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "386ce50e-c7a7-475c-a027-982739303bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eade540-12e6-4541-abde-590c52aeb65f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5669475-298d-42e0-a698-b2ac526f5df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c1ab28-81f3-489d-a7cb-1f21b78675db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cc261a-5f6a-47a6-a546-b49f76af32a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb55620c-dc7b-4c20-926c-c5e59fe8ceef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01995060-f4e2-454d-aa91-ecaf48bff32a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c9e047-6522-40ba-9faf-d92096f09c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648dbfc5-5167-44c0-870e-65f56523a6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13a32cd-e968-4628-b7cf-f4756ac798b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaf80e2-c452-4c73-90eb-d574636dcafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deeda23-b7de-44f7-880b-352c16da29e1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e99a9e-4e0e-4729-81e9-67797c20f7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182830e1-5b9b-4b0a-9431-94df0b07a171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659aba3f-1404-4e3f-b243-2e029d958d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc066a4d-943a-4468-b284-efbb30dc123b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943b2c9e-ea48-4e63-bef0-338cc9652c29",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6230058-c8bc-4a75-9114-8a1079afc207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145ffee1-642e-4a11-bd71-96306fd34a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bc8715-6129-494a-9548-b9ebe91b08d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb06058-b9db-406c-965c-4cfb18b9e730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1831778-c02f-434e-8758-53818cda8aca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9f2b54-f640-4922-8685-4281cc2d2a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a530686c-0150-404a-a74b-c5db7bc421ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1436c0-c30e-4e91-993f-0def783fc38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "252d0296-55e4-4343-942d-be96a94987ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eac217-574c-4030-8cee-c75577959143",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11ba191-13c4-44fd-abbc-34597c35638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735be106-9104-450a-932a-5e6ef8104596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3491939d-549a-43ac-bedc-ac42f8d3d8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e92fca-b998-44e4-b011-6f538a09dbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797163fa-7b4d-4545-839f-f72a9707d342",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42f8a85-5bb1-4f4a-83a1-97ff9eb26cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd48f4e-48d0-418a-9437-5a77996d3db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49db4c67-8590-4b98-858b-229e4d0258fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff132f5a-1f6c-4006-ad56-edfd300e9fdb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad16b98c-4d3e-4726-82a9-ed64ca6ff118",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a66675c1-58ee-40af-9064-b370b2fd3065",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b056f0de-d786-4bb4-9a37-6f45d3597231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f9c45b-0411-47d1-aa9f-ea9076515c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13185ebb-c62f-4d83-a376-05aaf2a3dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20b3887e-9d68-4abf-816c-1631ebadbb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1227212c-390c-4d21-90e5-76963d81ce94",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2ff211-62a6-438a-8102-298e1771480d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "793a5be2-3d7e-4e55-8e30-9e57977883a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d33e947-10d3-4e44-8c37-10f78c9655ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "414c2727-b6c1-447f-bd2a-09220ca22885"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ace6deac-d3f0-4c22-85dd-d1cabeb92e35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43dc0bdf-ef5c-43d2-901c-c3e577cc966a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7292c64f-b6bb-4b86-8fba-a33b37440d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "777ceff1-ac95-4515-926f-01c90de702da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31ceb87a-1332-4143-b39d-ac3fddacef59",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cdf508b8-9a41-467b-af82-374463c61a88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e42adfff-6950-4376-bc8b-23bb1be85eb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfb85b14-5224-4e88-a162-5330972dd831"
            }
          }
        ]
      },
      {
        "id": "2a61d638-fa03-41b9-9c6c-e4b53a6d6312",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fd5d1175-154f-499c-b099-9c5f67bdcf17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8dac1a92-bd9a-4144-89de-706b96b98418",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3be2fac-ad8e-45d5-90cd-802de8da4360",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fc3470-bcaa-409e-97fc-21d9a26a8578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa88397-dafa-40e3-be80-3a495606c73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638e0e4f-bef8-4866-b538-26f9af9d0338",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adcf5dc-6a18-4474-a5b7-ef3799ee399f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438aedaa-f192-4caf-9474-ffb8486ff2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb5b787-03a8-4c01-8880-4f4e5776be4d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d9b868-89fb-4f8d-acf4-b0184ed6bb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7672bf-66f1-49d9-83fb-5d8c1f5d8170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1fb3bb-0788-4ea5-a43d-ccc954714f70",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c544d436-5d8b-491d-a997-0ec397e8f139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3014b515-661a-4846-a8a0-6b61967405f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ee0c66-c16a-4371-b532-4a87e35c5aa5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a4412e-7ff9-4cf2-9795-a518fed2f9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1766f226-a410-4c9e-8c54-b4fd11cb52c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c654c0cd-c101-4976-9a93-c4c8d3fc22d1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b973b6a4-00f8-4853-8cdd-e82f84c3201b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdaf6c5-4b6b-4b74-9df6-046dc91d85ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd048d1a-b4dd-49bf-bf09-03ddbdd8c507",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4303d21e-2517-4732-a5e2-0af99076eadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417960ba-18e2-450b-a628-2cdcc8fd38a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb94e372-4695-4a46-ac1c-fa8d979a324b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d380b7a-71db-49b6-ac74-16120f3e433b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39803e83-8a0e-4ee3-b563-f4fecad4f772",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22898e8-16fd-448b-900a-39af370e50ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9bfb0ea-3584-49ba-9467-96cbf4ed80d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc94525-79cd-4090-b992-dd0b4fb46b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d89247-fabe-4689-8031-e8ce9e67e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d762ef-fc36-42f0-8ce0-45985fccf489",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe23a88-b24e-4db8-8d07-9bf363a1dacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9e055d-a519-447e-8fae-cbcffd14a03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfeed96-1e8d-4703-a7eb-5d9301c4abff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce1c5bb-8e1c-4dbc-ab6a-a30b4e5a46f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42e77e8-6f7f-4c1d-ac71-35a98c1cdea6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde5febb-1825-460c-983f-cf8ecbc979a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "897274ff-6013-4c24-9183-9eda11d68c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8940256-fefd-4f71-bbe7-3ba708cc2809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c084eeff-1e5a-4d4a-8d0e-997d2651d135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09e18d-498c-422f-be63-d3c8309c4162",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98eaa49-d53c-408d-bdc2-7b464cbe2505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681e63e9-8b9b-4fae-835a-ce1103ef265d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc4c752-6a17-490a-81ac-d7a3af266824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a231fac-bd21-443d-b500-f6fa0a853834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc423ff-52ad-40db-be40-6e9e94e4ec0b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789261b8-0bf2-4b6a-be8c-0047818f9eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3f3c61-5442-4cf1-85db-11acf2582778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3e9ef2-a945-4202-9723-000ac31a8abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44906a0-5245-4d38-8e79-0d5a705aa0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cdb381-dec4-4229-85c5-da242b8b4e0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25f3428-39b8-4dac-8b66-8f0e14807ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b62693-6982-4915-9455-d76c2afa277a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3207dfb5-e7f2-4b4c-a033-472dc25962fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb75d542-833e-4b52-b956-460a29de6288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2bc062-f70a-4261-af25-a1f261dd6357",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2514cc06-917e-48d8-a93d-5e7b83504d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74cc5396-7b52-48db-b0b6-32e1af08bf1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa779c1-fe2a-4572-a050-73559179a936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0059ec3c-079b-4752-bada-0c48963109aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faddb23c-9b4b-4029-b8c8-09c42f382fa3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc1a43c-16f9-4e96-b210-cd34bd7a55d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1177d3-4624-4435-b971-3441ebbb9de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61970b78-6870-4966-916a-8fa89fc5416b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de32c650-8150-4b7a-9606-f9aac31be704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06590313-5121-4962-b310-c28b89921386",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae16cf20-893e-4f9b-8f98-182d3c94398c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e050e9-955d-4daa-8ae3-361b62fc5e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b53bc2f-5a06-4106-96f6-05e5fae8298a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c8d357-83f4-419c-891a-257a286b893e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4a72df-9469-419a-bbb0-4bb8fd0f4c9d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ece338-2f9a-4cfb-b67d-9d48d762f7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac560fe-b549-46a0-b7eb-6390f4ed35c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9506456d-9529-4db3-8f27-1596013b53ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1511481b-6881-438d-8189-b9b2892de22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81261625-8678-4c2f-806d-33c622c38a64",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81221811-ce3a-4bef-98ce-6b7d7d73d020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3ffddd-9691-46db-aecf-0d4f784feae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39915506-80df-4034-ad91-813a4a085ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50748ab-33ca-4eb2-8fde-dd10adec452a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ffd75f-c445-49ff-9a13-d674d699cbe1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec47bc56-f50d-4d17-ade9-3c08c8d34c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaf877c-2062-4047-b857-bcefe6235902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f782b1-d176-402f-924c-b2415b233cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cd23eb-1d66-43f0-a804-19530ae53c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acee7906-659a-44a3-bb74-ce2e71f28992",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa07a9bc-c2ef-45f9-8c17-9d5b9e2d127a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2fe7f0-0985-4e3c-b873-92ab336c8c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b976f2-b66a-4856-9842-8fc92b5ab17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d4c06c-3add-46c9-b334-a668d4cb3df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7471e1d-ec05-4d4e-b7b9-62b4cf82016f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b45636-9531-4f30-8cd4-05a4e5a16fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5546349-fe6f-4d19-8e9a-ede85c50b358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c37c9b4-14b8-4bcd-bb24-4e2dca17043f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36874f7-bbc7-412b-823f-eeb98ee4e3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf81e344-528a-4e81-a295-73d8bf9fcba1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c2a685-8764-48c6-b47e-95c08a632b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afeba58-254d-4efb-b376-dd4662d4a75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819aa720-7973-455f-af10-be0ab5d404c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a91344b-27c5-4de4-82c9-ec590100726b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30c1a9c-bcd2-4376-948d-c7f51ae426b6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec5de7c-5a05-49c5-a63a-8711ff5f70db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bda7d3-9e75-4cf9-b59f-89b12e2b2345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca057645-d132-4540-99dd-2c493742e475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8712d382-e53a-4136-8291-b717985e2072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aa858d-f138-48c4-a6d3-20097844670c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc58a3d-48b8-4ba4-91f1-f9f233c3a0ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c6cb36-3bf2-4da6-989d-ecefc41dfa65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03d0e78-c1a3-47ac-9bfb-4bc1a73a0251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8beb8708-95a1-44fc-8ea7-d936ecab9029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46afdc08-be52-4de9-9c15-395f5fe83e19",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f4932f-7006-4ae6-a5b2-50920be4dc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd6700b1-714a-4285-a22b-e50ce1ec6b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bff0131-5f85-4b18-9b43-fbf76fb4aa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c99d56-a622-4f5b-9be2-3d66151879e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d975fd6-7e34-4075-953b-c3472e6b5fbf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15211a54-6a55-4002-ba56-bb43d787bb5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3517ac5e-7a79-4f1c-8c0c-62deae293d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beb892b-f7f9-4ba0-97bf-c2cf52c34194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a18823c-ad99-4a08-acae-3cf1924fa204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f2bdee-e2b9-4eaf-9e08-765afa92c01a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8297ca95-63e0-4604-b1ba-6d7f365e2cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd8453c-ade0-4f22-b43e-e0832c305554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af5b474-ae8c-45b1-959c-496d509fe34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ad7889-cdd2-4eed-9339-0a8b09e339e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d309f4-cc22-422e-a34c-49ef7a81220a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1615f4e5-d6fe-4c5f-a674-196867d59b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45571a5-ae91-4ff3-8987-e8a11af1561a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e26b9fa-8e6a-41a0-964b-051cf0b38679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e899f8-1aea-41e2-8481-b2cdd4afe1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969a8a8d-c707-46dd-87e4-94392430e449",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cd3aac-534f-434d-9723-69e8891d1e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d6e007-81d8-4870-982f-fe2def7379c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadd00d5-e5dc-4f67-a555-c8e1bc1caa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cbcdf6-5462-420f-9255-ecf2e2176143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b141b1db-1cb5-4731-8c17-2cdf89d60533",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add1a087-638d-47ba-b485-f730253d3438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba03712-9eb9-406a-95f2-522135f1fb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85069e61-5177-46c3-ac21-c880f7444a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5e4965-f839-4546-b677-eb9e652132a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05033458-f3f8-45df-95fa-894c6ac57827",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b92fbb4-654f-4c3a-afeb-2d0a89408b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ffb74a-5ddf-4fd6-b097-0d0ff6130ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ed4bb5-9007-4d8c-a2bc-d95a8537f12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed645f19-f4a4-43f1-9dd5-5a8c1cd2edda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cfa66d-8eac-4e57-8a7b-479d3c0fbc6b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923483ee-a9af-4ea1-a210-8728c4c820a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d0fc42-e295-40ad-bea4-2ae4a1fc51fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9499e61c-f966-4c28-bc12-06e976ce5941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e553be0c-7bf0-4777-920e-bd10460bb033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664d0cd3-057f-4c6f-9f42-060d6099b2cd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bdfe00-ff73-4a3c-a71f-ef78f855147a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4bbd20-eef8-468f-b7b8-d26cc92069a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b983fdea-7296-4b18-a813-4225296b6c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94adb3b9-e40f-4c21-b7ae-8c5bf394ee19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a769b7-abf4-41f2-b6e3-a4f7cd03bea3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f1a8a2-b764-459e-aa24-6112b4e904b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1154cfc-4ae2-472f-8e02-bf2432719895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7382b138-11e6-45e9-92be-5eb93737d0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ceb7a0-81d7-4359-b73d-1a16544e2b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e31c6d-b425-48bc-8177-d5f530645b23",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395b7602-2f26-42af-806d-4c26d36186a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b0c6ae-3356-4b03-a1b8-0176f7efbfc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2741a9c-198d-40a6-9219-8678f1e34577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94953dee-3e23-4eae-be59-678e9d11e88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addd3fd6-d586-41d0-b6ce-0566cad9785d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ff9ec-3afb-4e5b-b4fe-33a842181b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417d1ca2-7bbe-4d47-a25d-a9c077a8e0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb79f85-fa11-4183-9577-392b8de9e5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fea45e-1fa0-4169-904c-31a9f4e6bbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544dc9a6-69ad-414a-a8b3-2ee9131ce3e0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa77bd5-31d3-4f51-8191-f4f61c06fb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7764f893-6093-4be9-9761-b40c73520731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8176d3-e13c-4a87-b227-ce547dac7832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88f8ffc-2115-4dc1-a016-2a2551139ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158e8410-b948-429c-90c1-cbf47f2860e3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83165226-8a3d-4d8e-ab7b-c6b5f1bc19b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c2f22f-26c2-4500-8b44-65ca50a59ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8464b7-f977-4dfb-931b-0175ba73ea19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9099b3d-6122-48f8-a39f-2a984e50ac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4210a35a-ad88-4059-b337-b4318049e25b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f1b82b-8056-49d0-872f-689b0b6954f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f2015d-6f05-43e5-8a5c-7d8dc1ededab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa351d47-af19-4d2c-9fed-7840e55a73a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b56c664-24ed-4153-8b4a-116adddc34d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a664ca0-5483-44fc-ac51-474a6a3bb496",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb4c301-054a-4db4-9e1f-d5915d7aa8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b910ef0-e9be-43ab-a2cd-920d14a4c700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9e73a9-2777-408e-8267-6e6293aae4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394d849b-eb56-495c-8c62-bd81d4cd5695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b105804-e74b-4565-8f6f-f8c08c28c8ac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc35c062-2a7f-42d1-a005-a31e7a41ff39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91bd495-1d84-4b4f-b6fb-da0c4953077a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba06ba9-1e7c-4dc7-a7c4-61092d14adc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aea92f4-3b8b-4794-be97-024aa99e3fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1a5e73-b371-4646-9f8e-e90c74e3d19d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7f5563-4f4d-4a2e-9c5e-a28b6d4c0d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca7224f-af2f-46bb-a38a-4a98e22c785d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730edb2d-e016-4620-a331-d91ab26f17d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0778246-193e-4ee3-bf22-a100a77e0eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb78c906-fb80-4748-9b2b-0e2b33ae59c1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de4237a-42b0-416e-88bb-8bcb9ac4fa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641014bc-fec4-4808-882d-094e28259797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa604c-82e9-4f8f-85d8-54ce192214d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89719c3-5d7a-4d8e-ad31-09e651cfddc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb13b555-3e00-4ea8-829d-03761c22929f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed05ec3-54a2-48de-bea6-91df2c640bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85701164-5335-4432-8e4c-b5c273dfa495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02184724-fdad-46c1-8e60-0f5d02e22cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e57ac0-8288-407d-bc0d-c7dfc7b3a296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13caeba3-fa5f-446b-93b4-d81920cf68a5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9129583-b3ce-4fa3-b1cf-816096a618aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122941fb-20ed-4981-b0f8-65228106140f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3aac28-d707-4bec-96f5-afe738e7275c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38f8756-94b7-48b0-ad0e-8e21fc539a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5a2cfa-a4ef-4acb-bfff-116021e987e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4441a0-9afd-4101-9f0a-c4dbac0827cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0710edcd-1b04-4894-8ad1-680972ac551d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26917c09-55be-4c1a-ac04-dbb082e1dcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b3efe0-2c82-407e-96fd-f79e2a01127a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2f6fac-07ec-4e15-9757-5ea1e072e725",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51db727-79bc-4220-8d88-3ff5046d92c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b798d4-0838-45b4-9c6f-0ed91375c34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f02010-bde9-4601-86e5-1216aec5409c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56abcf86-954f-476c-92a9-42aa5f3359e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca9c5de-7b92-49b3-b50f-7810b02bd067",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff42ac74-1004-4de5-bc04-a40b51425900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94407f8-f2ff-445a-b334-9872087ee5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511c32a0-29a5-43ca-8cf7-af1e93b995b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013e225b-a040-4c2a-8041-0b66eaef01db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf627fb-1131-449b-9fae-33d7466423c9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8f62e5-71ff-4096-9641-63ddec459ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce47d34c-43ff-42e3-b7e1-def203f4369b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f7bc37-b436-485a-9bc8-f5b2a00c1f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d78b69f-0639-410f-ba29-9083b6efbd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f916063-4db5-4697-8e66-ca1f86067822",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd21eab-7fe2-4419-8acd-6b2d0fa7ae79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef22ba44-6f43-4adf-a915-2cc1c4caacb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7f8e6c-cda1-41ed-b140-08d76dd8b229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74adff06-ba18-4397-8f9f-7fcd151d536b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b26c70-1c7a-4875-9c2a-88634cbfdf78",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2959e6d7-12ea-4c9e-86ea-d8f3294e2803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f524293c-cfdb-4967-95a9-7f3034112b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea4eec8-1683-4029-8f35-c4f273317c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec17184-0768-4062-a062-c9b519476931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ef8563-245b-40f3-9e88-6b19b8bce7a6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa0dcc5-7b4a-4b50-ba24-704507b17974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b117e1-5a8c-492e-b199-82c6d192b339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345e0a2e-3145-4c17-a50d-e9000a3fb4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474d97b1-8e50-4bdc-9f22-6a2e4021850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82e1176-529a-447e-92b5-5ee94f5ddce5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b7f90a-77af-497d-8d17-6abbd4b8b220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7498b6-85f2-4c8f-80ca-093fccc60bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f6764-2aae-434d-8342-6745a80942ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3224d5ee-f878-4a29-9ecf-082c4362c125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6634b1e8-6bc8-4df0-b7e2-db59806f6546",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1f763b-302d-40d0-9ef4-7c034bff8514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af2328c-0775-4089-bee8-ec4d6033860e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2d51b8-e6ac-4a7a-9ad2-9f741cc0dfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bbac34-dde3-4736-92c8-bbe70b91d879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04673d4d-d4fa-4fde-83bf-bab230bf8f6f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5048dab8-b498-4b5d-8bf5-d736ebc1e7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fa144c-20b9-4bc5-90b0-e9e698d2e541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb739a4-a1a7-4283-b86d-f232f6d54ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83574594-6f94-4f5b-9ec0-d19017c2ea32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e5eb33-16f7-48e8-acd4-1e895368715d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42927f8b-e38b-4f61-9b12-7ee050a6fb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1441e14-4b60-47a3-98b2-ffa4d97f4fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac272775-2440-42ce-9dd4-a5d13aac2230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93e5009-0441-4dfe-b10b-a87eb37decd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994f6cbe-2946-4b78-a231-34bb7af20652",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5e9a40-887c-42b5-8b03-c87dfbf649b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa276ec8-77cd-44bf-ae61-4811fb7f965e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d386eb-5b18-40cd-93ff-ac12d3f8b6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addc9030-fa8e-43dd-92ad-07a212b3186d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d5c15d-e4c6-478e-ac85-63b9e8ae7685",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea90dde-15c7-48ce-a937-0f6288d3817c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce74b147-cb59-4ab5-8fe0-ae60e2d51a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ace8edc-b497-447e-af7e-c00d3bbf1554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0811deae-3034-4443-873b-7724f85027c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7e5d5b-581c-43ba-8719-9e087620fddf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fa8471-9b31-4c91-85db-393e84dadff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5630366-9b77-4819-ae84-7bb665231d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a7e1ea-7864-4c67-9f0c-8da4d3ea5c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ee42df-de71-4f12-8526-c2a1476070f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e412513-c91d-4d31-a8ef-d4606afe647b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97062609-c1b5-4585-a92c-261629ea1986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec54cb6-b290-44df-9752-c7cf68f9bde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27af1e44-6c9f-4ad7-964a-cca8d31aef7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368c5551-b7a4-4dd2-a35d-ab2cff16dbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770edfd5-d3ec-4229-9241-69a1de1cf24a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10475c68-44fb-49a4-a3c9-ddf1d3e02595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fbf051-da1d-4db9-bc38-a160769ecc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b955b9-4eaa-4acc-ae8c-a8142be5e519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d60ff56-08eb-4fb6-b24a-070d7ed8aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b744a7d7-20c4-4842-9fc7-ac7bbaaee906",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e38d600-7391-4478-9c95-168168b7c2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ad2a3a-81eb-4621-bcee-1e2e4aab958e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61adc316-8cbd-45fe-8daa-28b4771e10ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2b1b96-0e14-4f35-a182-1bd320baa65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d3dc35-0e64-4956-be53-14c047bb5d1c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482ca5b1-db8d-47c7-88a4-2001abd97652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e9b0e2-c480-4f65-b31f-fb27365ccedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c03599-f493-41ec-9f7a-ecd20db4b34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b230731-fbcd-46dc-94ae-65662b7df41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b137875-bd62-4e52-bd43-552dbdf3c304",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65016569-1f5f-4e7f-b4e5-2c1e4a648993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ead9cb-ae06-430b-bfd4-2ffe67ec2907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11ba839-de0f-4846-b125-74efa6e21742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a18b840-261c-489e-a390-8672cfb6c724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b4b293-0ab4-4e19-ac22-a90061015026",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db03939-7adc-40c6-a947-22f91d008aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545b08a2-4903-49d4-aabc-34cfaedb9b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0529c4fe-900c-4026-8308-7ce1ae3ff1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8c5cba-0c86-4112-978c-257665bba781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77941ab-5098-47ce-a1f0-9d9e5713af89",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c88b06b-84c5-4ee3-99ab-72bd554a5220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4ef212-43eb-4aef-9427-acaaf17aee95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fee230-33ef-4403-91bd-a08696339460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e018dde-9146-4514-b6eb-6646e747db18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07af041c-9af1-46ab-88ca-8da58e2a0916",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faabe2e4-5ed9-4083-a992-cad0d16bd418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1efdd115-8813-40fc-8e98-0058fe638a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9917045-a999-40f2-ba28-92ed82b6782d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307877ce-2cc2-4294-89c5-24bb3d22e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d2e312-de2c-46e1-a70d-e93911c02cb6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f0a0e9-9008-4b9f-a64f-79e3aca865b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bc8fb3-f061-4a34-b533-1e8e4080c17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a6631c-ef5a-41f4-98f3-81ff4a7b24e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa733e1-1b7c-41a5-8d49-68a9859961ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf47482-c5c2-44b0-9f83-9ae8517d2ade",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625818d5-0f39-45e1-b91e-e697295e0719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7864068-5e96-4a4e-a105-a0e6186fc2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b25c5d-7858-4659-bdf8-264dbb19f4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ebdf7d-74f0-4549-ba84-c895b2c76f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc45ce66-66d0-4db2-b5ce-b06471f04b03",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0c226b-aff3-4ccd-a75d-a21fcd514b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51847966-c24d-4d4b-b4e1-0dd1b52ae542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3d74e5-e0ab-4c00-9848-ce760d3b8165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce82cc5-10db-4b2f-8e7f-263356bf6df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2734f49a-9415-4095-b32d-aa6d4219aca7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da090a13-0783-410b-9efc-be10e0ef95d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac8c189-e1e4-4472-ba0e-f54c43d19742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806ed465-1813-4433-ade3-b899dc95a475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4050c32e-739f-4c36-a486-26bb09d2d38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fb901e-fd73-463b-91ed-1514fd00a1c7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e152a0-db66-4cf0-94d1-6a033ae4c363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5fc389-b88a-4afa-a72b-860aa73100f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8830b3ff-610d-486a-b167-95a9b65a97c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f4d5b1-4436-45da-8817-cdac984dac32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2f06a8-add3-49d7-a4ae-6c4a98e40adf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc891ea-5043-41a9-83a3-3efb996fb7e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a91119-9d61-4e09-8b91-f8659292b32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70579574-fc40-467f-8f37-587314dc7205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84aa667d-7342-4554-b45f-e64c8e3c53e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53847231-f4d5-490d-a02c-58fc4ebbbef1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eada2797-2050-4a7d-8971-4ab4b3ba1114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2f68e8-d58b-46f7-bfd2-f825053db657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964289d5-eb26-45c6-890f-e8c8847f8f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde8ed05-e87a-4e3a-9f1f-75af23a12185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b436d56e-66d1-406b-a15f-14ed32577caf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed26ab4-96b5-484a-ac4d-f771e9316f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0b8728-2821-4481-a429-e5c3652717e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5e5ede-51a3-4b82-b9cd-e012f45b99d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa0c07f-44d3-421b-ab0a-87116c378813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a499576a-449f-4b78-9d61-2ffdba8a79e4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0e0f77-344b-4530-9201-4a06a2d59e06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258fbbf3-a901-4d11-abef-de5c47423dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917e2c33-d78e-4905-bf2d-0d98ea287985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d2df42-03d2-4cc4-80dd-8a6fd2477533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e57ad30-582a-40e6-b804-c9df379f01ff",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b64c11-d00c-4b9c-aeb6-ad0419fb51ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7443daf6-8a2e-4f6a-93f7-a4b9609da346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e5c21f-8545-4a82-9677-1682ee73b263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abbf9fa-f044-484f-b490-3258a8d9e9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab109b8-2885-40e8-85c3-54436d8b20e4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372cee00-249c-4386-a07e-29d4975fbb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad972c9-28bc-41e3-8722-e4ead8b1a294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d65142-a321-4233-8d33-9a429d1411ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8df9c7-a02a-49a8-819d-c0482afc1764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bef45c-943d-4afb-85fc-b07bf4f169d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcafaef8-9ea6-4746-a765-ca3216d450ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5786612-8ff5-4cf0-9a69-ec59417e1fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a4fd0c-b729-424a-b109-7108b3a98cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d91986-a3d8-4ef2-be3f-5d3411bfba55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6cb1a1-aaa5-4da8-a834-ee1890b660ba",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94474425-b5be-45e7-8093-4a288e42219e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ebc4dc-4b52-4cd4-aff2-9c37811fb300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b46ff8-34fe-485e-9f6c-10a7d3ba6aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c674367e-2c68-48f2-a85e-6982d530aac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d045519-b8e0-4fd2-9b23-f1a71a685d47",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d537ee8c-7f8c-4b91-a39e-060c7cde77dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc281ac-3797-4f72-9bb5-6ea0fcc7c8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa262d6-f335-4668-b327-195cdb5a82b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a249d4d2-f9e4-49b7-bf42-275d61417e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8164feac-01fd-4e56-92ba-eb53ab5b1a53",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ee63f-ff23-49fb-9dc0-eb84c0c70ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae1ef45-e157-455a-ab93-44d721939076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdc98c0-1204-4899-ad27-38da30a0184a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46ef37c-bcbf-49ab-af54-aa753eff4af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbe99a0-73c4-458b-8bc7-df6406500548",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bfa790-4493-4321-b7ec-9bbcad092743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d1e36d-64ac-44b5-b73c-57be0495c9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7365ca71-7b22-4045-b37f-0891990d8e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555f1fd4-6c60-4d72-824f-42ec35d6f694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c356724-d1f8-4a9a-9fe5-ef9901d29f06",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbad47ef-7fed-4a2d-8042-f4dd01c3709f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c4405f-c463-45c1-ab65-7364fcda5405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e46b2a7-8d3b-416d-8c9c-c0673aa377d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b154ea-d6ac-43e6-931f-32fc05e71d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabe3ede-f97b-4210-ae36-d66b36b40973",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3434c6-42fe-447f-b72e-c91416a811f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5408bd89-6c52-44aa-89ce-16d5b359e770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab0fd67-7292-4e25-925a-ded26b30153b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efc079f-fc2a-4e83-a8c4-646a29b10b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3584806-10db-4709-bfe3-0cd4b14c63ad",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256ca8ec-05a9-4555-8f41-f75362d12f21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a28a53b-607d-440c-ae3d-a76e339f867f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972a90bc-171b-4d68-b36f-13dec20caae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a176043-08b2-4073-ac15-4e034ff40094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2609cee2-6509-4740-92af-4f479675ec4f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d64c09a-18d5-4431-8d33-c8938971c7fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406d74dd-3eb8-4749-884e-54ba7bacce1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc7e341-9c09-4b95-a69e-8f4bec38c63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d3bc7f-7915-4956-adfe-31887ab5fedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e42cd6e-6ba4-49aa-8fcb-940fc58b3e3a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d017dc28-8874-41c9-a5e0-60325f60e0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37830556-9c43-4d1d-b896-deb8c533f6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3128dd41-a7c0-4794-b0e9-c350e30a6200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f9eb81-d232-4080-a26e-cf7d21e59370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4114e0-c917-47aa-851c-2dc39d0a8f82",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7339d1a8-65cb-41e6-8acc-973933bceea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931c9afa-92c9-4f99-ae61-0169da9be1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8189556c-f056-44bd-a3eb-c16c6bc1f47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b033020e-0168-4c64-afd4-caedde66fe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e255df1-c6a0-4824-a0f5-ec9a695d590b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2999fb3-bc25-4a1c-9e65-908c9cca07be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff3a0aa-5d49-4df1-be0b-cc6a516f7781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45577f96-2986-4d03-9698-273c7901a95a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1d1506-a479-434b-b7b7-a3d136b44c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf42518-660e-4cdd-8f93-f0075c67f864",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aec25c9-a336-4ac8-97f0-712b27f118f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "794bad3c-f1de-4ab3-8628-813ad3075bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac6b576-b663-44aa-8c61-44f88b0147bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0258c1c-8eaf-4572-9535-63e9c62b142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03576e7e-af35-4156-a58f-bb4310be275c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75f8dc2-9a0e-46f9-8ea9-39bee52df5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80acaedf-5b03-4eeb-bf81-a7a259afdf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d951af7-c0cb-46e5-beb4-be587063bfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bf5dd5-2bbf-4cd3-b82d-5aa02597dc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af44e7c-6cd9-4e26-b86c-9d2e1d82a574",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d449d513-1184-4b17-8a2d-8b7216967ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760d723d-cf4c-4547-a231-71f5267422c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d7214c-4d4c-407f-87d6-b9f762b4bfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa0491b-1f67-437b-998e-63a19e128b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ccffc0-cb02-4840-83f7-3c5c57f6f7c8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20517ac-2db0-4222-b732-26e81e3379a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f20d863e-96f0-4a5e-b8e9-4683f729acba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5971f6eb-e478-405c-8a21-dd3f5389fa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6da7ae-a6d4-459c-9406-25e3d49d6bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974f569b-6caa-4711-8c06-c990cf5bb099",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479f82b8-a19b-4bd2-9411-c72cee1a48d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb30486-f09c-4de6-80f0-98791ed66080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab35ca3-ce8c-40a9-9d22-07ae77013670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5dd096-fe5d-4216-b876-3093538c7890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71202ecc-d014-4391-b7c5-9b39798d6598",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffdd33a-9d29-420d-b299-994c0e9a2088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe8bb01-dbc1-4d9b-af11-78f786ff4c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d76702-044c-4831-a26e-cabe89943aff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb277f1-21fa-45b3-9c07-fa92a6bcbff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93b048e-0420-4d32-b515-dafe43f0959a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afc7a09-5c1e-4759-8ec9-bc997ec2c8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baaf2c32-43bd-4274-9218-95a8839cfac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb034c36-589c-4283-b4bb-aef4ecc6c892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd25a75e-c576-4121-a829-953d3adb9679"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2d6c876-5022-4ad4-8781-cc6a3368b235",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5143241e-1170-4fdb-8ab4-064220f58ae0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24bc95a0-e0c1-4125-8ed7-afe1d8ca8816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adf75acd-599f-4c36-abce-e4cc5a417ad1"
                    }
                  }
                ]
              },
              {
                "id": "02c56c74-fb8c-4769-9431-393e61e62a82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e7248af-3597-44d4-a764-64fdd1173021",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fa822d-9149-4b0a-b32f-2166c4a87fc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7ab4c315-e1fa-487b-bae8-deccc0003399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44d90e1-7edd-4c23-ae26-0319535e178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b774a24-9455-40d7-ad02-c7cee300e382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2965774a-148a-45ab-8e96-b3697ea4f177",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c779e3-5f61-4c7e-9bfe-645b6b40005c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a51560f-82a5-4250-820c-efb5bc22affe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1949034d-23aa-4873-9542-68734072f5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd9acd62-2145-4964-b1a4-e21948e30268"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cb2bd03-df91-4f7e-bba1-587b27d7f707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c32e1961-1cfe-4a4a-ae5b-adc21a6b21ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1aca4d2-c85d-45a5-90b1-2428ab058624",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a66a35d8-79ed-4da1-93dd-8d5de15b9b43"
                    }
                  }
                ]
              },
              {
                "id": "260df6f1-41f2-4945-9a25-38a6af52c8d8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5fd558f7-9675-4cbc-974c-a532decdedf2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005ce772-3c25-478a-b55e-8e0a8041d065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "31acb57b-f567-4bc5-95ac-d188a5dbbcc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a14ee1-0c25-46b4-936b-96ab34968f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579beecd-9e31-4a12-8a57-3b03a28b6666"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "22c78fe5-892b-4904-a554-83a6554e9014",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16f49c61-6109-4109-8791-cd0d48866391",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e5b1627-bc88-4118-83f8-6a7ba33fb158",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6376f2b5-a861-4b3e-a175-b8eb36e78234"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7854a27-2b83-47eb-9d0f-caea40e08ce8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b8d457d-ecb7-4ff7-a23a-5e91d6039056"
                    }
                  }
                ]
              },
              {
                "id": "aad3264d-6c8d-4d6e-96bf-a54f7a27a6f9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a92fd8e-c924-4df6-9858-d513d95af2ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d32a69fd-793a-4b67-80b8-40175f5bdbed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7e2ec9f-2937-4a62-a97e-08230d2a7028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6096da22-36e5-4322-8c43-0d7ddcd24d96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f21fcb58-098d-405b-9777-50a6c28fd0dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7e29cbca-432a-42b9-ab08-f8f4c062e1e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "968d3033-5c9c-4372-8832-410a5ecb5263",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd9d49ec-8835-40a9-98f0-63efd3af2c24"
            }
          }
        ]
      },
      {
        "id": "c76a8ea6-4696-4342-bca4-749655efac6c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fcd53757-593d-45e7-8ed0-8306f46ca15e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a78142ab-618d-4119-b31c-65d3cf8524af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "385925ee-63d4-4a39-81d5-9bc8e952bf3a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30b1e61-46b6-44fe-aeef-3397daa2d613",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "59aacb30-0268-4e83-ae13-e7ff1c68317f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f455d8-a500-4d4f-af77-319bdaf5ee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e936526-2367-401f-8150-e5f0e077399b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ddf786-c275-4f5f-a32b-f3a7a860ea94",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6eb80f-da89-49e8-be34-6a3d074cb2ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9dfd12c3-cc67-4411-9f9a-7a0647f81a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e155a04d-d5c9-4724-ba4e-03d4f87a1a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f18e27f2-0bd2-410d-8a0a-9a09a786e5cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd34a45b-863f-4eeb-909d-2a5604990321",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a50cf01-98e0-42d7-b6dd-3f35c2421260"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa00648e-3469-47ac-8577-aef276315fa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1682e2a-f258-4ee4-9f9c-3b351cfec623"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fba1fb82-9cce-4870-a57b-b831a5605030",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3ca08405-9651-4c03-85fc-7bbddfcf5ac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f8281a7-f8cb-481c-8d12-c5eaaf0f08a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca6c9339-b018-47bb-86c9-cf4a3a0729d7"
            }
          }
        ]
      },
      {
        "id": "2ead40e2-5b90-43bd-b6e9-030c5c713941",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "998fae6b-10b0-4dc3-96a2-a83c7f1b6313",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f94a9e07-0430-4e95-9ab8-8dbb46f14a81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32ddf8fc-6056-4502-81b5-4e39692a9d0e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81685af6-f67d-48ac-98d1-9d18ace11864",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cd054962-d022-49c4-a980-452ab269feef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6322eb4-9221-4017-8858-1d1087318109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7e9beab-625d-4ed4-b7cb-72c033befbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7305b3da-f0e9-4cc5-82b2-ec517aed318d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62b4868-da02-44e2-82dd-35287d31751b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6dca02fd-1f36-4fd3-9512-bac2de9f0506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32238e0a-e4e5-4de6-9e4b-f26c52f3cc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67395b33-ccf6-49a3-bd40-b46f779010ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1b24e54-e00f-4d28-b8ea-cd911aec856c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca170b0e-d8f7-4877-a0d7-c6d4179496cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1b7818-10d1-498c-998c-64865c707368",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ee0f5d7-5178-48b6-9a82-3044304e5143"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddc22418-1ce3-405b-8088-9a5bb25d23a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b1685315-7a43-455c-a3a7-473857d82335"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9abf9567-7e21-4ae3-80c6-703339b6c653",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55adc9d0-d675-45e1-b225-16d07acbf1d5"
            }
          }
        ]
      },
      {
        "id": "87654226-1d4e-4186-9be7-ad3a14c7fcf1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ea37389c-bee6-449f-b7bb-397b3ed7a121",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae3f3644-1514-42bb-81e1-b4b3ea7fa1dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf8a1a91-15bd-4b84-81d1-fddc13168b12",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e0ce9-84ab-4246-9586-3f1d5e24f952",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8e28d485-babe-4284-8f5d-e153a293c74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42aeb9a8-f93c-404e-b5ae-fb588c33750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0000d2b6-63e4-4318-986d-4ff266303e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7a3b6c-d778-4aa8-9ec5-45358fc4d519",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c3b44c-2fcc-4a68-a1ad-2ac4d5824c7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfd47d14-47a5-46cb-89ea-5d5dfa96b634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19542167-89c8-4259-a662-814a920a7861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c30838-eb9f-4044-aa62-9636eb9882fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb3bf50d-be3e-4fd5-be89-8e819404ddd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55cc4a02-eea2-476b-a3c3-129cdb937cb1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6ad9f96-e1c1-48bc-b67f-23436d353ea4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5783f70-4518-46f1-9e6e-e112f51e9f36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4405e6d-258e-4648-82ab-ed8320e3fe66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "723fccb8-7130-4d65-9dd5-80f5fbb3fa40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c999f9fa-4dfe-4064-b0b1-1cc8962abfeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4bb0ce3-fd95-44a8-9a3f-f2655e8e6d51"
            }
          }
        ]
      },
      {
        "id": "de43cfa2-46b8-4774-9a8a-0deb017c0c22",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b29effa-6c2d-43a9-8113-ac576d080e9c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a50a242-cd2c-4f61-86c4-24b8f1bf8bd0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a51ed8d9-5184-4965-8cb2-a9d869173dfe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2623521-e537-43fa-81dc-f98a491c9f20",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79279a5a-8b95-4402-88a6-1c45c8283bfe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 664.853281853282,
      "responseMin": 11,
      "responseMax": 10798,
      "responseSd": 972.8994488369003,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677458491083,
      "completed": 1677458674357
    },
    "executions": [
      {
        "id": "6582cca5-db02-448e-a683-86ceedf1a41b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b627d7ea-ab77-4320-a3f8-caad26a8589c",
          "httpRequestId": "e5f76b83-be28-40f9-8447-3a053ad41fa9"
        },
        "item": {
          "id": "6582cca5-db02-448e-a683-86ceedf1a41b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66748888-ed10-41bf-bee4-159152d5e9b9",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "27a8974c-c6bb-417f-a3d2-47a44e59ab91",
        "cursor": {
          "ref": "822f7738-5d1d-4b6b-8781-a0935dfd91e3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6a1011a8-83ed-4ea4-aa15-855d8c5977d9"
        },
        "item": {
          "id": "27a8974c-c6bb-417f-a3d2-47a44e59ab91",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "067e6fb6-ee9d-46d3-92e2-b5d777820071",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "9da3d292-7b77-4794-98ba-4f7fa09f67e8",
        "cursor": {
          "ref": "99c2b61f-20be-4d2f-bc38-b90489c8b783",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cdf8e85a-dd1f-40fc-be58-46d5e43bbbda"
        },
        "item": {
          "id": "9da3d292-7b77-4794-98ba-4f7fa09f67e8",
          "name": "did_json"
        },
        "response": {
          "id": "bffd172a-e5ae-44f0-a054-eeb55807a21a",
          "status": "OK",
          "code": 200,
          "responseTime": 1392,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fbb3cf-5988-42da-9840-d468b4fecd01",
        "cursor": {
          "ref": "49af6aed-06b2-4e7f-839d-a8a6a9a1e582",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0e0422c-ed41-4a17-b529-b7843c8dac6f"
        },
        "item": {
          "id": "66fbb3cf-5988-42da-9840-d468b4fecd01",
          "name": "did:invalid"
        },
        "response": {
          "id": "7689a62a-8235-4ac9-aa4a-c7e524c5ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fbb3cf-5988-42da-9840-d468b4fecd01",
        "cursor": {
          "ref": "49af6aed-06b2-4e7f-839d-a8a6a9a1e582",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0e0422c-ed41-4a17-b529-b7843c8dac6f"
        },
        "item": {
          "id": "66fbb3cf-5988-42da-9840-d468b4fecd01",
          "name": "did:invalid"
        },
        "response": {
          "id": "7689a62a-8235-4ac9-aa4a-c7e524c5ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93def70-c240-415d-9eee-c8486b92f96e",
        "cursor": {
          "ref": "0d51ec98-12d6-42db-9d6e-d0ac6b390aed",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "24379f4b-3a0c-4204-8ad7-93cf1fe53fb7"
        },
        "item": {
          "id": "b93def70-c240-415d-9eee-c8486b92f96e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f04eb336-fefe-4cc1-b16c-dc64a0eb2097",
          "status": "Not Found",
          "code": 404,
          "responseTime": 687,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb2f08-11fc-4c2e-81de-ab8af6f03d6a",
        "cursor": {
          "ref": "8ea871da-2968-4235-be90-f0ceffe5c4e4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0b7ce3a2-7d35-4231-9a57-ce3dc3b89cf4"
        },
        "item": {
          "id": "25cb2f08-11fc-4c2e-81de-ab8af6f03d6a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d08a733e-12f1-4a8b-9949-795ca25d2c72",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1387,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aaae09-2377-4a4f-88af-5ea388fe58c7",
        "cursor": {
          "ref": "b9f4e311-e085-43ac-9f35-614d94465385",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "672d2979-c0bf-46aa-b1c4-054cb989edca"
        },
        "item": {
          "id": "40aaae09-2377-4a4f-88af-5ea388fe58c7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d4de803d-b3c8-4677-8df2-7de14f9edf25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b110e1-8399-42a4-8731-be652c1fad07",
        "cursor": {
          "ref": "5de67af0-59f8-4737-bf3f-f81ed758ef45",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c35d08e-8731-41a9-a384-313ba5140a7a"
        },
        "item": {
          "id": "92b110e1-8399-42a4-8731-be652c1fad07",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9ea7173c-73fc-4adc-a863-485048ef4e99",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 762,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b110e1-8399-42a4-8731-be652c1fad07",
        "cursor": {
          "ref": "5de67af0-59f8-4737-bf3f-f81ed758ef45",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c35d08e-8731-41a9-a384-313ba5140a7a"
        },
        "item": {
          "id": "92b110e1-8399-42a4-8731-be652c1fad07",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9ea7173c-73fc-4adc-a863-485048ef4e99",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 762,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99804bc-b35b-4db7-9848-d802e41d24d9",
        "cursor": {
          "ref": "44b9027d-1d34-43e9-bc73-f743fc925109",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6bca8366-8c03-4730-87c5-ad765d320914"
        },
        "item": {
          "id": "e99804bc-b35b-4db7-9848-d802e41d24d9",
          "name": "identifiers"
        },
        "response": {
          "id": "06e957da-2677-47a1-8671-dbbeeaf9aa70",
          "status": "OK",
          "code": 200,
          "responseTime": 1212,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91f76d6-98b3-466a-9a21-e7257c0235e2",
        "cursor": {
          "ref": "699ba26a-397c-4a3d-9fa0-2c5344978882",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "382afe62-2a7f-483d-9189-c8363d618c3d"
        },
        "item": {
          "id": "a91f76d6-98b3-466a-9a21-e7257c0235e2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "07354ca0-6f3e-4a27-bc32-9f5c936abd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91f76d6-98b3-466a-9a21-e7257c0235e2",
        "cursor": {
          "ref": "699ba26a-397c-4a3d-9fa0-2c5344978882",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "382afe62-2a7f-483d-9189-c8363d618c3d"
        },
        "item": {
          "id": "a91f76d6-98b3-466a-9a21-e7257c0235e2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "07354ca0-6f3e-4a27-bc32-9f5c936abd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82140c44-f9df-4227-bf83-7b88460c481f",
        "cursor": {
          "ref": "ade2fdc1-6933-4226-a312-94a9e9af7bce",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "46133be9-7d5a-4e90-a944-57635f1fd21d"
        },
        "item": {
          "id": "82140c44-f9df-4227-bf83-7b88460c481f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "457273e1-bc6a-4eaf-8c35-b254b48078d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d68ebba-c3e8-426b-812a-4d7900a142d9",
        "cursor": {
          "ref": "a366f405-5228-402c-a85e-23831e0d4bd9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ee32751d-df75-4915-a6b0-cf05d2c63152"
        },
        "item": {
          "id": "8d68ebba-c3e8-426b-812a-4d7900a142d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "23a35d0e-988b-4d63-9c6f-deafb1fc73a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb96e61-d076-46a3-9c86-3f874a6e060a",
        "cursor": {
          "ref": "e19085d6-4902-43f3-bf09-6562e6568f24",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6b4455b9-e601-455f-ac63-6f28403bf4d7"
        },
        "item": {
          "id": "aeb96e61-d076-46a3-9c86-3f874a6e060a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f516e9d4-1d1a-4a86-9739-b49bf84d9935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e544cb1-269c-4b5d-a5c4-98b0f04a4064",
        "cursor": {
          "ref": "767d5a14-6a79-40f0-bf7f-d6e0c888c57a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c076c9da-a836-4b8d-a302-7b89de324fd7"
        },
        "item": {
          "id": "3e544cb1-269c-4b5d-a5c4-98b0f04a4064",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "96c54a1c-d404-44ba-82ce-1e4c4c4a4eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1233,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44be2d6f-c2f5-4dea-8647-db359cf57a9c",
        "cursor": {
          "ref": "268d5b97-adc3-4d4b-9130-32c1ecef08a9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9417c9bd-38ba-4057-94fb-8be4abde4405"
        },
        "item": {
          "id": "44be2d6f-c2f5-4dea-8647-db359cf57a9c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fcdd7c32-4df3-4a08-b606-3d11ad3607cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1372,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0be88b-5aeb-4430-bd49-7efc6bc851ff",
        "cursor": {
          "ref": "79ac6494-0985-4a5a-acea-da5c58056454",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7cf521c6-8dbc-4761-8f8c-5e66f543f590"
        },
        "item": {
          "id": "cf0be88b-5aeb-4430-bd49-7efc6bc851ff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4485f659-c1ff-4f7b-8164-525a3ed83b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1083,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079e91a1-4847-499e-b0cf-feb8732712e1",
        "cursor": {
          "ref": "a7be2090-49ee-4858-8018-d61303dfcc51",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "30606ae2-a21c-4a14-ac4e-af9bdd1e55e8"
        },
        "item": {
          "id": "079e91a1-4847-499e-b0cf-feb8732712e1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b2f20df3-2068-4040-9af2-d9ff42fde8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6ad708-ff4c-48d1-b088-72d8179d7d6d",
        "cursor": {
          "ref": "2efea01f-a237-4041-859a-5aa900053f28",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ed5ddcc8-ab23-4ac1-a639-84f36591f6e5"
        },
        "item": {
          "id": "fb6ad708-ff4c-48d1-b088-72d8179d7d6d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c563b8bd-b51e-4bb9-a1af-893690de0469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c43d75c-41d0-433f-8ad5-92dc0a2ad342",
        "cursor": {
          "ref": "f8ca65be-6e29-402b-836c-1a0b9d4000c1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c6d0ff93-986e-4032-be1e-ea955500ca46"
        },
        "item": {
          "id": "8c43d75c-41d0-433f-8ad5-92dc0a2ad342",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ceb8c031-8402-4a29-9fbb-fa833614057b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1096,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fb096c-565c-412f-a21e-88a37b1749b6",
        "cursor": {
          "ref": "a9d672f9-610d-4e7d-9af9-65bfdc6100cb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "53b37fe6-581a-4964-97cd-d85ff3eada51"
        },
        "item": {
          "id": "98fb096c-565c-412f-a21e-88a37b1749b6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "433d18b0-f48c-4049-b225-c4883f9ded9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1545ebc-c0f9-4502-b553-2508d573d2ce",
        "cursor": {
          "ref": "dbd454b7-ce80-410a-b9f2-497b06db68f4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8fc0bae2-4901-47ad-a545-f35c54485748"
        },
        "item": {
          "id": "c1545ebc-c0f9-4502-b553-2508d573d2ce",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8e972cd4-6db3-4cb5-8400-8e566493fd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1241,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eadce1-cbed-4319-be61-4e3a09554438",
        "cursor": {
          "ref": "715c95c7-b8f9-4a14-a989-4702bc80b7b9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6f7b4f15-970b-4714-bfa1-0b91e9e7a9b7"
        },
        "item": {
          "id": "84eadce1-cbed-4319-be61-4e3a09554438",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0c21acb9-9d65-4ae6-9d85-234abebe5744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1670,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccbef45-f2ac-42e1-92b6-cb8d09ed74b8",
        "cursor": {
          "ref": "8e580fd7-1bf0-4d84-89f0-86dc0ee59b1f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fc2ae5b5-3e21-4a7e-bbeb-79ad3eb5dbb4"
        },
        "item": {
          "id": "fccbef45-f2ac-42e1-92b6-cb8d09ed74b8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0bc17f1b-53b3-4c87-9b10-341480ea0d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fb1560-3f7a-4776-9995-068403ecd282",
        "cursor": {
          "ref": "db7b12ec-2d47-4dde-aff1-e3aba4ca91db",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7f0dbb5-e3b3-4dd2-bc30-c4fac373d131"
        },
        "item": {
          "id": "59fb1560-3f7a-4776-9995-068403ecd282",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eaf4ad5b-29d7-4b38-aa77-b33c251f0182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd97cdd-7f7f-422c-a91b-7f4b594a6cf6",
        "cursor": {
          "ref": "7cd288df-8bf3-4708-9dcf-81ba4bb1caae",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d727aeb0-f634-44e9-a212-5fc66f28b53c"
        },
        "item": {
          "id": "dfd97cdd-7f7f-422c-a91b-7f4b594a6cf6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ed81159f-0838-4c7b-bcc8-92bb1b7056f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741954a4-955f-42bc-b4c7-58f4605532c5",
        "cursor": {
          "ref": "f816e52f-e22d-47a1-bcc8-09da466142bf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d51aed5d-e002-4b9c-ac06-28a6e6adb46f"
        },
        "item": {
          "id": "741954a4-955f-42bc-b4c7-58f4605532c5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "66069566-8828-4d41-b1a5-75fa19b17b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989e2200-7dac-4b53-8a6d-fcfed7714597",
        "cursor": {
          "ref": "95bf5302-386b-4c1d-a7f1-633093c2664e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5fc6ab21-c778-40f2-b67a-c7f8a978c84b"
        },
        "item": {
          "id": "989e2200-7dac-4b53-8a6d-fcfed7714597",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ed29a8a0-44b4-4e0f-806d-d0308fe85bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ba8b5e-7bf5-48b0-bed6-361612616af3",
        "cursor": {
          "ref": "0915fac8-871c-482e-8a15-2301584b8737",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b4170f2-4854-4a94-a8db-9d2154adcc5b"
        },
        "item": {
          "id": "35ba8b5e-7bf5-48b0-bed6-361612616af3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "62006d41-5c9c-48fe-b238-b6f1bb86b0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8935c0c-234d-4f16-b1d2-19604e028232",
        "cursor": {
          "ref": "4a8ae257-253a-40fd-926a-6f6a422f5f17",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b2917dd7-d484-47e7-a1be-308da34811a4"
        },
        "item": {
          "id": "f8935c0c-234d-4f16-b1d2-19604e028232",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "535ea969-1edd-44c0-a349-4193f6a2c12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f03cb5-1821-4294-839c-719f81bd89d1",
        "cursor": {
          "ref": "b4442e38-be19-4653-a6ab-c4be3a81da31",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f003ff79-8bd3-4efc-9c2e-5fee8153b95d"
        },
        "item": {
          "id": "a7f03cb5-1821-4294-839c-719f81bd89d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6ed9cac0-68ed-4f1d-a3ff-e3f08355d563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0486db93-6c44-48be-8f0d-98f6c315eb94",
        "cursor": {
          "ref": "5e6e387f-81dd-4d07-98a1-9a5491c090bd",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c1e024e1-0605-4946-97bf-17cbc0196302"
        },
        "item": {
          "id": "0486db93-6c44-48be-8f0d-98f6c315eb94",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1d4b5dd0-1aa8-42fb-a913-b2064c373faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdc4d7d-f4b8-4e0e-8615-461c7ccafab1",
        "cursor": {
          "ref": "68d87d83-94df-46be-abb4-eccac246fcee",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "21125552-4ff3-4891-8981-61f4f243ad30"
        },
        "item": {
          "id": "bfdc4d7d-f4b8-4e0e-8615-461c7ccafab1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "daca8a9e-4bbe-4f1d-9a86-34632571c428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b11a94-4de3-4325-8891-d70b169e5d56",
        "cursor": {
          "ref": "3c23ed4b-d5a2-469f-a14b-313aa617eeba",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d038f419-224d-47af-b08e-55d2c8ec0b86"
        },
        "item": {
          "id": "f1b11a94-4de3-4325-8891-d70b169e5d56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "68603218-2343-489e-8d0c-5d41e1c10e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798856c6-cc5a-4d5e-b040-d7e0aa47053e",
        "cursor": {
          "ref": "6a839df9-8fa3-4acf-8142-7c917cc637b7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1c483304-9554-405b-9ef1-bceb1d006ef2"
        },
        "item": {
          "id": "798856c6-cc5a-4d5e-b040-d7e0aa47053e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "614556a0-5ff8-47e8-981e-c49ac8586d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c2d1e-72c4-44b5-9561-9d918dcf9233",
        "cursor": {
          "ref": "ddacb1ea-8668-4d00-818c-ab2dd4faedce",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a516e30d-51e2-41e3-98e8-010ed0231b45"
        },
        "item": {
          "id": "2e4c2d1e-72c4-44b5-9561-9d918dcf9233",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b116edef-bb4e-48e4-aa33-8b090fc0e5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1514f1-809e-4495-8ac0-e406355d6538",
        "cursor": {
          "ref": "559dacc6-dbb3-4778-b3f1-0872cec45222",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c6ab1e1a-45bb-4919-add0-006705f54dce"
        },
        "item": {
          "id": "4b1514f1-809e-4495-8ac0-e406355d6538",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dfeef9f3-e905-4c4b-ace6-f464a808c387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae51e2be-bd30-470a-93f5-af44c8b7d50c",
        "cursor": {
          "ref": "31c8a515-277c-4c80-9ba1-58c28eab06d2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "906738c0-1ad6-41d9-8eec-fa41d6c09d69"
        },
        "item": {
          "id": "ae51e2be-bd30-470a-93f5-af44c8b7d50c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6346cdf1-6ff1-45e3-8be4-140f571a1e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51699974-02ca-4f4a-8f3d-2bf0cb97bd66",
        "cursor": {
          "ref": "56e6873e-8da0-4be3-8f63-0046063c9784",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3486f3cc-392b-4da2-bc89-3bf6b504ac47"
        },
        "item": {
          "id": "51699974-02ca-4f4a-8f3d-2bf0cb97bd66",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5f05ecb6-a7f0-4ec4-8c29-0234cdd24ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9964a9d3-11d3-4a48-8536-9642a8c61153",
        "cursor": {
          "ref": "6f71a0da-5c01-49a1-9630-ddefade92c15",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dcf41b53-3884-4b85-be93-391da98ae7b6"
        },
        "item": {
          "id": "9964a9d3-11d3-4a48-8536-9642a8c61153",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bba4b1f5-9a5d-4f45-bf04-be2a5647914c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a5d7f4-c644-4ccb-9842-ff3f457b59ea",
        "cursor": {
          "ref": "c6f577b6-db7f-4456-9799-eec1fda9347e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fc6cf958-09a3-48a5-81dc-217a393182ab"
        },
        "item": {
          "id": "22a5d7f4-c644-4ccb-9842-ff3f457b59ea",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8637caea-56e0-46fd-b667-944932cc1027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1cc1da-7699-4b08-843e-1438ae2fe524",
        "cursor": {
          "ref": "fa78277d-7535-41d5-a223-cd1116edc39b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "780a2b6f-5627-4037-91f8-c9bc5336180b"
        },
        "item": {
          "id": "ed1cc1da-7699-4b08-843e-1438ae2fe524",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b3ab4ef9-fdda-4076-92a4-c7433dd23da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ff3022-d224-4fcf-84af-f5032e91a89c",
        "cursor": {
          "ref": "dbc449b4-4467-41b9-a091-ccaff4427619",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ea4be977-2eee-499d-89f7-2acd76a3f598"
        },
        "item": {
          "id": "54ff3022-d224-4fcf-84af-f5032e91a89c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9bf12e0a-0ddc-48c5-8bcf-74fa0bbff9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dd4706-874f-4823-a363-84d997f0e32a",
        "cursor": {
          "ref": "be7835d4-1447-4f86-a1d0-b7391f2d4ab6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4f9270b9-3ccc-46a1-b3d4-33c7dc180d89"
        },
        "item": {
          "id": "a9dd4706-874f-4823-a363-84d997f0e32a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7dfa2da4-c0fe-4a36-8a8e-0b05ca11962c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb2caac-af33-4d22-86c4-89985f1632ae",
        "cursor": {
          "ref": "32e599e7-76bf-4b63-b86c-67ab93f8d284",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c4153ac8-230b-4960-ac0c-89667b370e2b"
        },
        "item": {
          "id": "4fb2caac-af33-4d22-86c4-89985f1632ae",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0096124e-e4f8-48b6-a36b-ab1fcedd31bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a1f359-8b12-4115-b1bb-d1ed3d603ef3",
        "cursor": {
          "ref": "f60ec39a-638c-4eff-a0a0-d2edb53314a4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7603bf0-c11b-4c16-b0c4-7a8663458ff3"
        },
        "item": {
          "id": "67a1f359-8b12-4115-b1bb-d1ed3d603ef3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "33eded0a-055f-4982-953b-fe3e60347861",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 724,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b390aed-2a21-403d-af85-7d657d75aac4",
        "cursor": {
          "ref": "39e049d5-88e3-4434-a78e-31af2dc7c3bb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f993ddb7-a4c9-4287-9046-a96ff1b7f079"
        },
        "item": {
          "id": "3b390aed-2a21-403d-af85-7d657d75aac4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "524c0331-a705-4e0f-b619-b32992f1f78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c5285-0a06-4d4d-af4d-dbb0f342d698",
        "cursor": {
          "ref": "5fc46b5f-5e31-4bd8-8762-2ce3cc9e5a98",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2728462e-fedd-47b6-84f5-bc39e3df8560"
        },
        "item": {
          "id": "f61c5285-0a06-4d4d-af4d-dbb0f342d698",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1caeef4-00e1-4af4-8e41-d9087b2eb031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0ff51f-88f7-4016-b714-5a80d2704004",
        "cursor": {
          "ref": "78d6fcbb-619b-498b-9b4d-6a2c9f305613",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4845b334-a41d-43d0-acf9-92f1f8ce70ad"
        },
        "item": {
          "id": "2e0ff51f-88f7-4016-b714-5a80d2704004",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0803e8ac-1065-4752-af2d-a2b53fa0f91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824871de-b508-4196-93ab-ec5a6175f526",
        "cursor": {
          "ref": "e1b30628-6909-4488-af01-38cb5e202e39",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a1f8d937-0d36-4769-a68c-e2b75a433eca"
        },
        "item": {
          "id": "824871de-b508-4196-93ab-ec5a6175f526",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9ec24928-1ac4-42f3-9890-7cab3b52d594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3733e184-c6d3-4b27-b2a0-f2aad3958f67",
        "cursor": {
          "ref": "b1d100dd-9f9e-488b-aac9-a8195735c1fc",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8cf16cda-236d-4ee5-9716-e2f598c60549"
        },
        "item": {
          "id": "3733e184-c6d3-4b27-b2a0-f2aad3958f67",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "96fc02b9-6663-445e-affc-c5c6b4dae63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e455dc-725d-4dad-9938-5a10c75decdb",
        "cursor": {
          "ref": "3ffeddb2-0e17-445a-85b7-0c0a5e1880ff",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d013dc49-41eb-464e-8576-b50628799447"
        },
        "item": {
          "id": "c6e455dc-725d-4dad-9938-5a10c75decdb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1b2a4fa0-8e00-44db-8412-10d2fb2f4589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a42a0d2-695d-47a3-bfc2-0047f58c646a",
        "cursor": {
          "ref": "66b31f0d-9522-48c1-a0a1-1724998a91d7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a28860db-a8d0-49d1-b1c5-ff3e1d725033"
        },
        "item": {
          "id": "0a42a0d2-695d-47a3-bfc2-0047f58c646a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "be0fdaec-ecab-4a0a-b61e-d58b74ccedf7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 689,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4980fb-6e67-4281-8026-a1f0bbc1aeb3",
        "cursor": {
          "ref": "164a3096-f075-46bc-80a5-c487fe85aac8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cae6bc6f-feeb-460b-8364-7f48111c19be"
        },
        "item": {
          "id": "6f4980fb-6e67-4281-8026-a1f0bbc1aeb3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9f670475-e763-4fe4-83cf-6221d11272a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9546b842-fa6b-4190-b29a-106e9511f3b8",
        "cursor": {
          "ref": "a3e6d835-a14b-488b-8c9d-96a406db806a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ad3e9614-9d3f-4675-93df-aa08095f1c2d"
        },
        "item": {
          "id": "9546b842-fa6b-4190-b29a-106e9511f3b8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1da4249d-5bf1-470e-8ddd-fc8929ce1556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7620baf5-dba2-4595-a578-4a049ae11c80",
        "cursor": {
          "ref": "cf6e67e5-4fbb-48f6-a11c-640ace3b1b4c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "72310793-1cb3-4859-b2e0-ba64c866b913"
        },
        "item": {
          "id": "7620baf5-dba2-4595-a578-4a049ae11c80",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "578d3ad1-b5f1-4440-9f38-2dc927ff3bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21649463-181b-4b3d-acf9-9a3dee28c55a",
        "cursor": {
          "ref": "86c3e4e3-6d76-4b70-b4ac-56dfb182587f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e5f5bad3-5c79-4f7e-8364-0e640a9a49c2"
        },
        "item": {
          "id": "21649463-181b-4b3d-acf9-9a3dee28c55a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e4375a18-e1f2-4f53-9443-0c5b12d4bc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79f740b-1c63-432b-becc-c947a6963192",
        "cursor": {
          "ref": "9eb92d01-2cc3-492b-967e-0e33922e65e1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "74e4eac6-f784-490e-ad11-6934e5b3b152"
        },
        "item": {
          "id": "c79f740b-1c63-432b-becc-c947a6963192",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "78d0f306-94c5-4f0c-a7f6-b87e31231ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3841053e-afe1-4049-b237-647a9d5db7b1",
        "cursor": {
          "ref": "986e3586-3bec-444a-aa7e-959f42f5c2d4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2a5c0708-1d71-4810-b750-876300c1da87"
        },
        "item": {
          "id": "3841053e-afe1-4049-b237-647a9d5db7b1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e232a119-41d6-45bd-bda3-38f6d795df34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbde5df-f259-4f37-9a02-7c33bab79c48",
        "cursor": {
          "ref": "e77d7f03-1e7f-45ac-afdc-728eaf15d661",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "195c5971-57d6-49bb-8417-7270f8eeb75e"
        },
        "item": {
          "id": "6dbde5df-f259-4f37-9a02-7c33bab79c48",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "12b23c8c-aa12-4516-ba29-be0cbc259525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcfe555-4f49-4990-acdf-78708da13123",
        "cursor": {
          "ref": "61b1d50e-56ec-43d3-b563-b3f3793618a5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b766391b-5d60-4cd3-bdc1-2878fa5876e4"
        },
        "item": {
          "id": "9dcfe555-4f49-4990-acdf-78708da13123",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6177d36-ed19-48b1-9d66-c452f0f211f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8881d9-e81f-43b4-8451-72b5c98856c3",
        "cursor": {
          "ref": "4ffb948c-6d0a-4df4-be6f-431789ab7c61",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "656de205-51f7-4a55-9093-b47246cf9579"
        },
        "item": {
          "id": "6e8881d9-e81f-43b4-8451-72b5c98856c3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5dfe2edf-86d1-4433-a191-be06403c53be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a623a7a6-3408-4fcc-8248-1ed50a1e2281",
        "cursor": {
          "ref": "6a2e046b-e321-48d0-8b38-419e6dd5533e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "285c750a-5934-4657-96a3-12453b819269"
        },
        "item": {
          "id": "a623a7a6-3408-4fcc-8248-1ed50a1e2281",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ed555d06-44eb-4c21-97fa-1e3075f416fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f951bb70-1540-4149-90ff-fa3a2b6a0d88",
        "cursor": {
          "ref": "fdb3de94-8659-4b82-a5d4-d2e5bb2e1925",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "083b44af-d235-4ae8-ba89-7bf6b557d64b"
        },
        "item": {
          "id": "f951bb70-1540-4149-90ff-fa3a2b6a0d88",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c1bbf9b9-856d-4043-a30f-6194129c0f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84306ed2-0ffa-4bc9-aef1-1535363cd4f8",
        "cursor": {
          "ref": "f7c7567d-689e-449c-a367-1f4f849ae912",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dc69ee68-f44e-4584-8310-73a63e31baec"
        },
        "item": {
          "id": "84306ed2-0ffa-4bc9-aef1-1535363cd4f8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "18e9b847-279c-42de-a56a-64ee51f51730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7408d1-c1fb-4948-828f-15fd979d8f4b",
        "cursor": {
          "ref": "eedc7a7d-043c-41a1-8399-aa7030e7db14",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e2f3c438-8f58-479d-a807-cb2bb967f38d"
        },
        "item": {
          "id": "9b7408d1-c1fb-4948-828f-15fd979d8f4b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b7b58504-6d94-41e1-9124-8cd4c2be8876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4570ce-1a6e-46f1-a14c-ec496ed84e90",
        "cursor": {
          "ref": "ea78014d-40fd-4d68-8cef-de6c52338660",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9efb7ac1-1567-4c59-9cd8-51833c97bdab"
        },
        "item": {
          "id": "7b4570ce-1a6e-46f1-a14c-ec496ed84e90",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d2db893c-4404-4fae-922f-f53d693edd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae4759-7c23-46cd-b3fb-0a68827922d0",
        "cursor": {
          "ref": "21df6801-32c9-4cc6-90ac-f6d42484ae62",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4a4aa097-f4ae-419d-8c54-c4ea91f63764"
        },
        "item": {
          "id": "c3ae4759-7c23-46cd-b3fb-0a68827922d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "abfbb969-a3d2-4437-be16-4c8561bd06d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8597c9-970c-4602-a532-ce458c1f6c72",
        "cursor": {
          "ref": "5c5833d8-b5fb-4643-a894-f34fb22f905e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a358574c-eeac-43e4-806f-cbb5d02396a4"
        },
        "item": {
          "id": "2c8597c9-970c-4602-a532-ce458c1f6c72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "62d30a43-6ec3-4215-a3eb-1da55ed06e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdf915a-3cbd-468e-a145-f31baa9dd92d",
        "cursor": {
          "ref": "b910f008-49e8-4577-a973-20358782bb34",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "70364f16-8f9c-47f2-a24e-1c2593812915"
        },
        "item": {
          "id": "7fdf915a-3cbd-468e-a145-f31baa9dd92d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0a0412cd-37dc-4200-aae5-8fe5f3ff1617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fd2424-0d60-41b7-99f2-4231d993805b",
        "cursor": {
          "ref": "760a0f79-6759-48da-9862-a5fb93e0a015",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "20d6dbfb-42d6-46fb-8c6f-6536cb04aae4"
        },
        "item": {
          "id": "19fd2424-0d60-41b7-99f2-4231d993805b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ad3cb94d-c472-4722-b0bb-92e8127e91f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4016f7-e7d0-4e5b-a4d1-2b6cfae9e722",
        "cursor": {
          "ref": "9879c019-965e-4aff-96bf-0a5dd369420a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ec9c7d20-f3f0-435c-8a75-82ec6e86d52e"
        },
        "item": {
          "id": "ab4016f7-e7d0-4e5b-a4d1-2b6cfae9e722",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "148253c8-63b9-4153-a6e0-21e27ea8c553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f4bb82-90bd-49b4-8ba6-441b7ff5c466",
        "cursor": {
          "ref": "bc6009bb-638e-452b-b1a9-6a06ff200505",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "10957310-c88b-4d86-b928-5964d815074b"
        },
        "item": {
          "id": "07f4bb82-90bd-49b4-8ba6-441b7ff5c466",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f611dd42-9c05-42b4-ad4b-46baeec1857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e835eb8e-6e92-44e6-80e6-8adc8e36d6bc",
        "cursor": {
          "ref": "a77881f2-1aea-450e-9cfa-52dcfe6cbae4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4eca0382-f214-4fc8-82a3-5676790267e1"
        },
        "item": {
          "id": "e835eb8e-6e92-44e6-80e6-8adc8e36d6bc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "01d7211d-4160-4d5a-b13b-5ad95f73589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d30a35b-1aa1-4440-af26-ddc0a23e6a3b",
        "cursor": {
          "ref": "415c8ef0-9a0d-4511-9254-f0495e5ec19e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4b30d829-b33a-46f8-98f9-c9f91bfb6844"
        },
        "item": {
          "id": "9d30a35b-1aa1-4440-af26-ddc0a23e6a3b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d22ee142-e91d-4ca5-8dad-b0fc2f51c88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50a2ef7-65fa-4808-9ae5-1f2ef1b7b1b9",
        "cursor": {
          "ref": "287f8f04-b447-4e18-b54e-869f3f356d64",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2192be27-a1db-48f8-b159-36706dd865ad"
        },
        "item": {
          "id": "e50a2ef7-65fa-4808-9ae5-1f2ef1b7b1b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f57de442-e9df-4ac2-af2d-760ef8335a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196615de-38f1-4f72-a38e-4128aab2626e",
        "cursor": {
          "ref": "2730839b-4689-4b39-a67e-16412f8de90a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8604bd16-0aa9-47a9-8935-0945ada20fb6"
        },
        "item": {
          "id": "196615de-38f1-4f72-a38e-4128aab2626e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ad65278-eba8-49e7-ba7b-bf1a2f859d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6034a365-7492-4271-837a-6ab655c7ffc9",
        "cursor": {
          "ref": "feb5559f-806a-41c9-a366-4fdbde03727b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "96747bfa-430f-433f-bf86-3310ce6b8409"
        },
        "item": {
          "id": "6034a365-7492-4271-837a-6ab655c7ffc9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "68af8a3b-0d42-4ce6-b34b-612bbee136dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3473fec-b548-424f-864a-962007dc9226",
        "cursor": {
          "ref": "6f5997cb-7522-4d5c-87d8-324d55410538",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ac47995e-544e-4d7f-b182-1f0d3bdb177a"
        },
        "item": {
          "id": "d3473fec-b548-424f-864a-962007dc9226",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5062daee-5b6f-4e1b-b7bb-987910ad019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81bb9a4-ad5e-4a9e-b0ca-5dfeb781a12b",
        "cursor": {
          "ref": "ae4ebb1b-9756-4fb1-8674-5634aa583fd8",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "75dc6638-af59-4e1a-bd87-014777e9a440"
        },
        "item": {
          "id": "e81bb9a4-ad5e-4a9e-b0ca-5dfeb781a12b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "58e62643-a471-4eb2-a88d-4cac5318db01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650dce67-607d-4e14-aa1b-5e6d19745b36",
        "cursor": {
          "ref": "2e6372ae-5bd7-4ad0-a5f5-b979b5e79a95",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3c370fcb-f575-47ad-8e9d-438d1b0d472c"
        },
        "item": {
          "id": "650dce67-607d-4e14-aa1b-5e6d19745b36",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "79eaa537-64bf-48b6-842a-7af7024384c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7868e523-e936-4197-b356-53e3b299ec18",
        "cursor": {
          "ref": "7d5de669-11b8-4ea3-b152-1fb6b3d7b9be",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fd395209-b7d2-4798-ad5c-de15c951959b"
        },
        "item": {
          "id": "7868e523-e936-4197-b356-53e3b299ec18",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4a733d1b-6c55-4032-97ed-b9f7c7ca4eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f5b3a9-85a1-4a85-b773-8c322b1ebeb1",
        "cursor": {
          "ref": "89676029-da3e-4842-a847-6b38b63d9e5d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f64220b6-fcf2-4502-9f45-e7d6fa91268e"
        },
        "item": {
          "id": "b5f5b3a9-85a1-4a85-b773-8c322b1ebeb1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4ece7c45-ee39-4f67-952e-b50b2252947d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2f50d1-3c6c-47d9-8fd2-4180b259ea83",
        "cursor": {
          "ref": "28ff6952-9b7c-4be8-9ac3-4ff9818d0f75",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "26b293df-affc-4eef-93e9-587fdb172044"
        },
        "item": {
          "id": "8c2f50d1-3c6c-47d9-8fd2-4180b259ea83",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "00d9171c-b312-4d26-884f-d1067b805999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e79c2c7-b319-4175-8a69-b6cb229c92be",
        "cursor": {
          "ref": "2aead87a-49ea-4bfc-aabf-88dcf47e7acb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7344a14e-115b-4d70-9361-eae22f8d608d"
        },
        "item": {
          "id": "1e79c2c7-b319-4175-8a69-b6cb229c92be",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "12f7b9ce-78e3-41bb-bf94-0fa6ad1785b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24386aa3-181a-44a8-956b-d6b063953764",
        "cursor": {
          "ref": "a2b2252f-aba3-49fd-8e23-fd0bf7136c8d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "16938907-a099-406d-84a3-fd1c07f24495"
        },
        "item": {
          "id": "24386aa3-181a-44a8-956b-d6b063953764",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ad37974e-2818-48e7-b4c7-48de3eb628aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b6ac6f-1a3f-44a5-9a81-6380cc65275b",
        "cursor": {
          "ref": "a63b5118-7849-42ac-99e4-9134d959440d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0c4e4651-fd4f-4056-8529-31fe25758299"
        },
        "item": {
          "id": "d4b6ac6f-1a3f-44a5-9a81-6380cc65275b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "abba239d-a45e-4158-b963-a4d4ef05e2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccc8365-8297-4100-8aa0-72100cc84ea8",
        "cursor": {
          "ref": "0f573f68-6721-46cb-bbbe-397a0915783e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eef4dc8f-c2c4-4211-a76a-807373d63fd2"
        },
        "item": {
          "id": "6ccc8365-8297-4100-8aa0-72100cc84ea8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "96f78e01-2f7d-47a9-86e1-7cde8802908e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0592eae9-d9d6-4684-bc09-1b193ce25a56",
        "cursor": {
          "ref": "6df75664-263a-4c8f-8f03-7a1a37ae671a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b4cab524-9035-4b41-8c7f-77a1c9eab940"
        },
        "item": {
          "id": "0592eae9-d9d6-4684-bc09-1b193ce25a56",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1a90fc1a-6307-45fe-bd4f-d70867404b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b54188-b911-4bd0-b23e-fcee19e5d6ab",
        "cursor": {
          "ref": "4e061e1b-d883-4e7a-9c08-16dc9c9af963",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "78e60be3-f939-438a-b50d-cba2539622df"
        },
        "item": {
          "id": "e9b54188-b911-4bd0-b23e-fcee19e5d6ab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "889268c1-941f-455f-9461-951ca511bff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b23649-b47f-4bc3-b74b-8ea8e9fe9c8e",
        "cursor": {
          "ref": "0e78cc21-7fc7-4111-b2a0-9d7c675ccbb1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7d6c7fc4-bf26-4918-bfc5-7d11daa3758e"
        },
        "item": {
          "id": "66b23649-b47f-4bc3-b74b-8ea8e9fe9c8e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e107b2de-1095-4438-bc23-6f4622566331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aecf11-adae-4da5-991b-6f5d9ed0e729",
        "cursor": {
          "ref": "9dad9bad-77b5-4f63-a2aa-61c0637563f6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6d23a22a-10ad-4d23-acba-44f1c76278a0"
        },
        "item": {
          "id": "96aecf11-adae-4da5-991b-6f5d9ed0e729",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9669133d-6857-4600-9bfe-73c0f605f51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841483df-be33-4881-a42d-afbdff0da59a",
        "cursor": {
          "ref": "d12f1d13-c3ba-485d-9078-02fdd3cd7e62",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c2246fd8-fa83-4cb7-beb6-1527028b127b"
        },
        "item": {
          "id": "841483df-be33-4881-a42d-afbdff0da59a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "05f09919-5a30-45ba-be6f-1980379f5be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdd7adb-2e6e-4e07-9107-c23f4d4ea8ad",
        "cursor": {
          "ref": "0033ff24-b29b-4b7e-83fa-2758ad2d3f46",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d13fe8c3-a103-458e-b653-f215bd14956f"
        },
        "item": {
          "id": "bbdd7adb-2e6e-4e07-9107-c23f4d4ea8ad",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4f35c960-ca1c-4939-85dc-04b1add3c435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4b37d-875c-478f-b337-9c6357a11914",
        "cursor": {
          "ref": "eb5bc90f-38bb-410f-9d25-a42de926b78d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "edd268f2-4520-40a6-891a-03aeaf3670c1"
        },
        "item": {
          "id": "86b4b37d-875c-478f-b337-9c6357a11914",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e1257aae-79d4-4f41-80e6-7b7bc0b3eae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a66395-826d-41ca-9e8c-d2718e4d75be",
        "cursor": {
          "ref": "86942601-f9b3-405a-9131-2fccf7a60540",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "80612121-9f20-43e7-9faf-60b96f6504c3"
        },
        "item": {
          "id": "b6a66395-826d-41ca-9e8c-d2718e4d75be",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0b41b490-16f7-4a6d-bd96-1cdd518efb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f300b7c2-ba58-49f2-bf2b-5c63fd8dfc14",
        "cursor": {
          "ref": "5ba220d4-b237-40e5-a3b5-780c10db65b2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "235a4393-1c73-4643-90f7-d5f45d726676"
        },
        "item": {
          "id": "f300b7c2-ba58-49f2-bf2b-5c63fd8dfc14",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2b8a8a11-78d6-433a-8455-6569147ad444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1280bde2-f4b5-4847-8703-934e7d636389",
        "cursor": {
          "ref": "aaa89057-52bf-4c6d-b296-ffe771dfdef0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "52e29467-26fa-4622-885c-bb7ee6d030d8"
        },
        "item": {
          "id": "1280bde2-f4b5-4847-8703-934e7d636389",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7ca32a75-f0b4-45e4-8de2-8008348cbc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5478de16-0af1-4c4d-b18f-721c4ddfb365",
        "cursor": {
          "ref": "51ded2b6-4104-4675-b506-9436f011a388",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ee8fbfcd-8933-4a8f-a65c-86ca6fc685df"
        },
        "item": {
          "id": "5478de16-0af1-4c4d-b18f-721c4ddfb365",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ededfdff-20ff-49a1-bcf0-2ab7d79fe15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2866e2-2ae2-421f-a422-337a7adccfa3",
        "cursor": {
          "ref": "a1d55c1d-6971-49be-bc6a-df7340794886",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9b6d2076-360c-43ad-8e5f-5019111863e4"
        },
        "item": {
          "id": "ec2866e2-2ae2-421f-a422-337a7adccfa3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "346625e8-a737-41cf-9242-6a309d750488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530c304e-4229-4f0e-8c88-5ad0b7b5d316",
        "cursor": {
          "ref": "7a9ace57-d6c1-435a-ae00-b355884614fd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f33b7cb8-edc1-4ce8-8e8e-3163f3af8045"
        },
        "item": {
          "id": "530c304e-4229-4f0e-8c88-5ad0b7b5d316",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a30a53cb-571e-43e3-8d53-98188bd60ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5a349f-a5f4-496f-8980-f13f52babd2f",
        "cursor": {
          "ref": "cb9a5d86-aa7f-45e2-a154-eeaa5c4d2004",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3e79214f-282b-47c9-b4db-88eda2816adb"
        },
        "item": {
          "id": "2c5a349f-a5f4-496f-8980-f13f52babd2f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1d511f0d-1031-4167-86db-e12af3977346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2f2d43-2e96-49e3-b069-7b837c2bfc2b",
        "cursor": {
          "ref": "005dd801-f26c-4a9f-8bda-a2a3aaa4f8bc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fd4c58ff-823b-430b-9760-40860b9668cf"
        },
        "item": {
          "id": "4e2f2d43-2e96-49e3-b069-7b837c2bfc2b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2d623f2c-04cb-4d27-895c-288ae21cdec4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9421b060-6561-4e77-a686-08af34d861a3",
        "cursor": {
          "ref": "aef5e7e1-84ff-4f79-b6b0-0f97149a1748",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "683849c7-013c-42e3-b627-ddbe09e2d9a0"
        },
        "item": {
          "id": "9421b060-6561-4e77-a686-08af34d861a3",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "430f9fcb-31f5-41d4-a5ae-cdb815f671b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 582,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab74747-2258-45c9-9fbe-e9b46bce048f",
        "cursor": {
          "ref": "93c164d0-6bd0-48a3-9adc-e8c5225711b8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9add34ea-f3bb-4fa5-a18e-ea95a5e19d64"
        },
        "item": {
          "id": "8ab74747-2258-45c9-9fbe-e9b46bce048f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "443aaf08-09f1-4e6e-9996-b3cb9acb793d",
          "status": "Created",
          "code": 201,
          "responseTime": 4650,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1004c1-ba6c-4412-86a9-f27b2e467977",
        "cursor": {
          "ref": "8568eff8-dc13-43bd-8164-9e541b9ac504",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1952c60e-b931-4b88-b615-f6d18fa97603"
        },
        "item": {
          "id": "eb1004c1-ba6c-4412-86a9-f27b2e467977",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d982bf2d-6f53-41e5-b653-df73b911698a",
          "status": "Created",
          "code": 201,
          "responseTime": 5678,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a111197f-c5c7-400b-b379-9d948b9ee0ef",
        "cursor": {
          "ref": "aef1ff57-38dd-4918-ab1d-99aeed760fac",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ab9dba6b-c9d6-4c86-98d8-cb6c94f0fe14"
        },
        "item": {
          "id": "a111197f-c5c7-400b-b379-9d948b9ee0ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "750328cb-d34f-4d86-b672-d9de04533c6b",
          "status": "Created",
          "code": 201,
          "responseTime": 6228,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95d0793-cc26-48e8-a653-ceedab280dbc",
        "cursor": {
          "ref": "6fcfcd6b-ed38-45e8-bc8d-5d9079d4addd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "af662523-28c8-464e-9d34-e97c8f2aa072"
        },
        "item": {
          "id": "f95d0793-cc26-48e8-a653-ceedab280dbc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b0457375-6e0b-4ea6-829e-bf224d6a94ab",
          "status": "Created",
          "code": 201,
          "responseTime": 7627,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "003fd2e9-3062-4376-8ad3-ca09bad3cda3",
        "cursor": {
          "ref": "35f69d94-476e-4a01-a68a-f7792a3e348e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e9e2c7a0-3da8-4c57-bb43-582948480f9f"
        },
        "item": {
          "id": "003fd2e9-3062-4376-8ad3-ca09bad3cda3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "22e59939-7f33-40d6-9d94-2f48278612b3",
          "status": "Created",
          "code": 201,
          "responseTime": 10798,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdae44e6-0f16-41c4-b894-83b5b51f4004",
        "cursor": {
          "ref": "3ab7716d-2116-43f8-8ca0-61212b456aa0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "af9224ec-b729-4b9f-818b-825a5b125b6f"
        },
        "item": {
          "id": "cdae44e6-0f16-41c4-b894-83b5b51f4004",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c7fb77e-cffe-4b69-90c3-b585fd5a58c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdae44e6-0f16-41c4-b894-83b5b51f4004",
        "cursor": {
          "ref": "3ab7716d-2116-43f8-8ca0-61212b456aa0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "af9224ec-b729-4b9f-818b-825a5b125b6f"
        },
        "item": {
          "id": "cdae44e6-0f16-41c4-b894-83b5b51f4004",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c7fb77e-cffe-4b69-90c3-b585fd5a58c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7246416e-49f8-4383-81a4-a78750b12835",
        "cursor": {
          "ref": "82e675c6-9712-41a3-8b82-31b2a23c92b9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9fea3ef0-79bf-4329-bc92-7e7103430eea"
        },
        "item": {
          "id": "7246416e-49f8-4383-81a4-a78750b12835",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ad4f4776-2113-415b-8b0b-8b27dbaa6945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ace604-841a-4354-b39e-f341fbdc16fe",
        "cursor": {
          "ref": "da7c7568-86b8-4f5d-bad8-18d227890def",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5dde1d9b-87fc-4c02-b068-995978ff37cf"
        },
        "item": {
          "id": "e4ace604-841a-4354-b39e-f341fbdc16fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d86b0dd2-8497-48b8-a3a2-d133fd6f2a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641e4f1a-2d09-45b3-8cfd-5aab5fb0bc75",
        "cursor": {
          "ref": "ff619e42-7ac4-43f7-bbe0-c14786acd574",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "323be956-c5ff-47c2-9e58-98efe1ef6459"
        },
        "item": {
          "id": "641e4f1a-2d09-45b3-8cfd-5aab5fb0bc75",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9c3ece6f-2dfe-4a4b-8c8e-8b59bf6e91e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00087be-c5ee-4cb1-9568-2da5d5cf5992",
        "cursor": {
          "ref": "328841dc-252b-4e93-b022-4b1a7f3a120f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "060c2f1d-1964-4427-8be9-6f87bec3be95"
        },
        "item": {
          "id": "d00087be-c5ee-4cb1-9568-2da5d5cf5992",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fe52ecd9-ec35-4e83-9228-e086f45d61ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d9fae0-46e2-4166-8fa0-01c0bd33b48b",
        "cursor": {
          "ref": "8873e5b3-b4b5-451c-8a05-7ba72045da29",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a007a927-c47c-4b9e-aa92-157fc999c449"
        },
        "item": {
          "id": "d2d9fae0-46e2-4166-8fa0-01c0bd33b48b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "70de6749-39ce-4b67-9792-1cbae2e99a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd52bd-a25c-474f-8348-fd7a27c8d51a",
        "cursor": {
          "ref": "9967da39-fbc4-4fd9-ad7c-c41304a6d7c2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7e2c879f-9316-4fdb-a5f8-4a93221c2bb3"
        },
        "item": {
          "id": "c2bd52bd-a25c-474f-8348-fd7a27c8d51a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff8e256e-1528-42fb-bde6-841e7c7d9a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb84986-1a54-4f9a-8db0-d095428ed2d5",
        "cursor": {
          "ref": "7e9b5def-c616-4fee-91be-ca61a3e0a41e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "df9513a1-ad6c-403c-b665-f8f80ca6f822"
        },
        "item": {
          "id": "bcb84986-1a54-4f9a-8db0-d095428ed2d5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2abb7af4-1f13-4bc0-b5e1-7f0ec9d6e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dcfd64-a745-4f1b-b28f-5b8b40a29b79",
        "cursor": {
          "ref": "894b3d0b-f08b-4a07-abb2-a88ff7cfe1f9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "02afa6f7-b9d1-4651-8a87-be1ff945e444"
        },
        "item": {
          "id": "c3dcfd64-a745-4f1b-b28f-5b8b40a29b79",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3a7fc9c6-4074-4917-be62-f8308cbb8904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0ae82b-fbe2-4840-a16c-556f5fdd34a2",
        "cursor": {
          "ref": "5bce3e90-2718-413a-b6bd-40b8470130b3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0073a23b-9fab-4687-8d08-9867cd5871ec"
        },
        "item": {
          "id": "1c0ae82b-fbe2-4840-a16c-556f5fdd34a2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa873789-156a-40b0-8b6c-9d8b0686d833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ea0dba-a6a7-46ce-b075-ce23a3bda98d",
        "cursor": {
          "ref": "0f3cfa11-2441-4537-a920-f831e17226c1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7dedde71-871f-4fcd-9749-6c72a428e6ce"
        },
        "item": {
          "id": "16ea0dba-a6a7-46ce-b075-ce23a3bda98d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "79155409-070c-4bdc-93f8-130533d80920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1380b8ac-7018-4c16-bfc1-ee7e8e80c8db",
        "cursor": {
          "ref": "ab0c4b37-1ad1-4bed-93db-f9aac9c5ec8a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5d1e88b6-ba0b-455e-a692-4577cc3dee3d"
        },
        "item": {
          "id": "1380b8ac-7018-4c16-bfc1-ee7e8e80c8db",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8fe489d9-86d1-4686-a342-9e4272e3face",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cfaade-e752-4d93-82d2-d18b9641b1f6",
        "cursor": {
          "ref": "ae858f0e-4942-4dce-ad28-84987d44e823",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "997f11ff-0972-4905-bd77-be35a9929a3d"
        },
        "item": {
          "id": "73cfaade-e752-4d93-82d2-d18b9641b1f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "18746987-689b-4464-b93a-b2ef38b3c597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a6fb62-c965-4cd8-9a4b-363dc51690df",
        "cursor": {
          "ref": "d7251b6a-47e5-425a-a218-9ee90429405a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a0cc6ca3-fc85-4d52-8266-720037dcf4bc"
        },
        "item": {
          "id": "13a6fb62-c965-4cd8-9a4b-363dc51690df",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "33c89f67-b234-4654-82db-919587537233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b048e6-6bcf-4d8b-917b-1db810f076c1",
        "cursor": {
          "ref": "e1ed6737-4333-4ef7-8bf7-3b260ccaea50",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b6847568-c549-4b48-abf5-92867252fadf"
        },
        "item": {
          "id": "c7b048e6-6bcf-4d8b-917b-1db810f076c1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b98ab7b-9b11-4ad9-b595-593baad2277f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ade464-096a-4d37-9205-9e69f2988329",
        "cursor": {
          "ref": "dd8643c3-cac4-411a-95fa-10f3f287ff43",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4c306780-b46b-49fb-8491-839fbff82b22"
        },
        "item": {
          "id": "e4ade464-096a-4d37-9205-9e69f2988329",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a045c0a9-a69b-4a86-be8f-d3e93e7d6c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9b9e34-0f92-4d01-99ea-c074c34fa268",
        "cursor": {
          "ref": "1d1737c4-e2b8-4678-ba30-287b8ca6f266",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f5795e15-a9ed-4f15-b530-5f36aa5e8d0d"
        },
        "item": {
          "id": "df9b9e34-0f92-4d01-99ea-c074c34fa268",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ae51e181-fd7c-4aa1-a8ef-5e0397ce7030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717ead31-65f2-4fbd-9811-7498febcf822",
        "cursor": {
          "ref": "bc8e7dd3-7df4-4eed-a91c-1b8b6d3ad1e5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "656d759d-4928-4004-88c4-4abbd07061a0"
        },
        "item": {
          "id": "717ead31-65f2-4fbd-9811-7498febcf822",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc3258a4-f7cc-4377-a4ba-4887aee39f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a08305-09c4-4619-a8de-2e139c5b3b21",
        "cursor": {
          "ref": "ae57ec4a-25a1-45af-94cc-618360eaef8d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "26cf690e-0ee7-40cd-b7c3-938b512f98e1"
        },
        "item": {
          "id": "d7a08305-09c4-4619-a8de-2e139c5b3b21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1af49438-1b6b-4a3b-a381-5101732126ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e95f59d-37e2-4656-b0f4-ef3c76910c68",
        "cursor": {
          "ref": "c0ce115b-8e32-40cb-a74b-a07c25f96286",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "685ebb22-b394-4110-8152-5596c590f218"
        },
        "item": {
          "id": "8e95f59d-37e2-4656-b0f4-ef3c76910c68",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c56ccdc4-db4e-4338-8c97-d55de16bc5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b42433-0782-47a6-a04f-e73b039b9c23",
        "cursor": {
          "ref": "cdc5e799-d758-4c24-8f2d-33492922ef8d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c317094c-6be8-43dd-8c40-12797a44ad58"
        },
        "item": {
          "id": "a9b42433-0782-47a6-a04f-e73b039b9c23",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27f6ae0b-eb87-449c-9c37-28253f497a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda221b7-eaac-4cbf-b560-1c0344429b07",
        "cursor": {
          "ref": "02d6e0ea-3b8e-4c8b-8261-9f09f2e4e3b9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "25da551d-f9b5-4eb5-a5ff-6bda56fb68ae"
        },
        "item": {
          "id": "cda221b7-eaac-4cbf-b560-1c0344429b07",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8c1b7f0b-8211-47da-81fb-defd7151f2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08b055c-4a94-4839-ab76-38893c3ba061",
        "cursor": {
          "ref": "a029c74c-5398-42b6-8f43-f38226d30e10",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6c341fd6-7ff4-41b2-9cad-f76bf0d1ee90"
        },
        "item": {
          "id": "a08b055c-4a94-4839-ab76-38893c3ba061",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10468729-8d00-4156-a0c5-eaeed63128db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1becdb21-7a35-40f3-b716-ad8fe6c31d83",
        "cursor": {
          "ref": "76faf96c-d588-4efa-9545-e55536c0b8a4",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d5aa315-e4ad-412f-94e7-1e1224232d55"
        },
        "item": {
          "id": "1becdb21-7a35-40f3-b716-ad8fe6c31d83",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "031114c6-9537-40ac-8611-70311dddeaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8af8698-4f69-4354-97f4-734329dc94fc",
        "cursor": {
          "ref": "9e40d7d1-6512-4d6f-9923-d747fc537d7b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "39e3f007-a86a-45bc-b6c7-d46ca2f55e28"
        },
        "item": {
          "id": "d8af8698-4f69-4354-97f4-734329dc94fc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "df368758-7507-4777-a3ce-455d867ccc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eade540-12e6-4541-abde-590c52aeb65f",
        "cursor": {
          "ref": "bbf22f3b-5f3a-4479-9d66-264c57df2b64",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cd7cc128-a4c8-41c9-8e20-38afec52ec93"
        },
        "item": {
          "id": "8eade540-12e6-4541-abde-590c52aeb65f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b630d0a2-c425-4e9b-8c55-fd6caaeb8c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01995060-f4e2-454d-aa91-ecaf48bff32a",
        "cursor": {
          "ref": "b34635e6-02c8-4b8c-a74d-e6fc5dbbd1dc",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "33c5a2f0-0d37-41a2-876b-808c6affc95e"
        },
        "item": {
          "id": "01995060-f4e2-454d-aa91-ecaf48bff32a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "abc579a0-2d35-45ea-b5e7-4d5a699d8216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deeda23-b7de-44f7-880b-352c16da29e1",
        "cursor": {
          "ref": "5b09bfac-fe33-4f81-9988-6600c644430f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "128d5312-5b5a-4657-92d7-613aadc0f1ef"
        },
        "item": {
          "id": "0deeda23-b7de-44f7-880b-352c16da29e1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d8beb211-138c-4c23-ac51-af6301a69a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943b2c9e-ea48-4e63-bef0-338cc9652c29",
        "cursor": {
          "ref": "ecfd8ec8-264a-4947-9b2b-53020bdd54e8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e7c9a14c-d417-4bc8-b73c-88b6f8d3673a"
        },
        "item": {
          "id": "943b2c9e-ea48-4e63-bef0-338cc9652c29",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1f4a59dd-958e-4884-8dc4-c8a327e751eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1831778-c02f-434e-8758-53818cda8aca",
        "cursor": {
          "ref": "9e78a059-4cea-412b-88b4-3f605546da8a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fea5e84a-3f6d-445a-a745-386ef69dce11"
        },
        "item": {
          "id": "c1831778-c02f-434e-8758-53818cda8aca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0ed61fa1-9c2d-46ec-8201-7fa29ae8d1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eac217-574c-4030-8cee-c75577959143",
        "cursor": {
          "ref": "d2af478f-202b-433b-b271-e8185458315a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "945ed27c-1399-4ae3-9273-88ff2637f63b"
        },
        "item": {
          "id": "14eac217-574c-4030-8cee-c75577959143",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8b04ff59-3639-43df-b99c-f727a8a5bf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797163fa-7b4d-4545-839f-f72a9707d342",
        "cursor": {
          "ref": "0c9fb798-e72d-4060-8643-a7fe0c3021d4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "738f567d-0373-4655-935e-661c081b67f5"
        },
        "item": {
          "id": "797163fa-7b4d-4545-839f-f72a9707d342",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "19be98cf-3eda-499f-aa5f-63b70dc6cd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66675c1-58ee-40af-9064-b370b2fd3065",
        "cursor": {
          "ref": "8129daa3-c005-439a-9eea-277459b99b91",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d5a83e6c-088a-4e2e-b271-4d75a05f0284"
        },
        "item": {
          "id": "a66675c1-58ee-40af-9064-b370b2fd3065",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "249e6de5-e5e3-4bd1-b0a2-b3ab60ead34f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1227212c-390c-4d21-90e5-76963d81ce94",
        "cursor": {
          "ref": "c273979c-7875-4cfd-8dc2-2809cbe4db61",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b7e11f12-8d44-493d-b166-d298f1f69652"
        },
        "item": {
          "id": "1227212c-390c-4d21-90e5-76963d81ce94",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "dac1b8df-ae25-4326-b429-a674d7c284a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3be2fac-ad8e-45d5-90cd-802de8da4360",
        "cursor": {
          "ref": "19ef750d-57d5-420c-8ea9-f48575e57d7b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5ff43abe-aa42-4dc8-beff-06166202c917"
        },
        "item": {
          "id": "e3be2fac-ad8e-45d5-90cd-802de8da4360",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7b9c26d4-b2a7-415d-b266-e1ad66974da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3be2fac-ad8e-45d5-90cd-802de8da4360",
        "cursor": {
          "ref": "19ef750d-57d5-420c-8ea9-f48575e57d7b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5ff43abe-aa42-4dc8-beff-06166202c917"
        },
        "item": {
          "id": "e3be2fac-ad8e-45d5-90cd-802de8da4360",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7b9c26d4-b2a7-415d-b266-e1ad66974da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638e0e4f-bef8-4866-b538-26f9af9d0338",
        "cursor": {
          "ref": "f2448c82-f694-4aa3-a04d-3960f5c8e883",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7faafd6a-fdff-4603-8457-e2152dd7fcd3"
        },
        "item": {
          "id": "638e0e4f-bef8-4866-b538-26f9af9d0338",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "22e2a222-73d0-408d-8598-f8faf3f1f11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb5b787-03a8-4c01-8880-4f4e5776be4d",
        "cursor": {
          "ref": "538516e0-0fe1-4160-afa3-a5b95639f5e7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "457811cc-0486-432f-8b0d-fd01b3796972"
        },
        "item": {
          "id": "1cb5b787-03a8-4c01-8880-4f4e5776be4d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9af67a16-0a96-45e2-acb1-e1c4cc8c7c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1fb3bb-0788-4ea5-a43d-ccc954714f70",
        "cursor": {
          "ref": "7324113e-cc7a-4732-a11a-8f8ee0ea8b5d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1f639417-bdf8-46a8-a62c-d6a4b7053d67"
        },
        "item": {
          "id": "0b1fb3bb-0788-4ea5-a43d-ccc954714f70",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "09751566-eb54-404c-9ebf-06271e28085d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ee0c66-c16a-4371-b532-4a87e35c5aa5",
        "cursor": {
          "ref": "3fc0cef4-f01a-4321-b40f-78ce3494d016",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "695d23e3-453d-4099-b21a-bcd87a4636b1"
        },
        "item": {
          "id": "a1ee0c66-c16a-4371-b532-4a87e35c5aa5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bef9b11b-0831-4f6c-95f1-919d99113810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c654c0cd-c101-4976-9a93-c4c8d3fc22d1",
        "cursor": {
          "ref": "02238c9c-b167-4479-9a15-915426bbe2cf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "841c509f-95cf-42b5-a5be-81acf6ef73d6"
        },
        "item": {
          "id": "c654c0cd-c101-4976-9a93-c4c8d3fc22d1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2dfd69ea-9b27-4dca-aa56-da8df7d54bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd048d1a-b4dd-49bf-bf09-03ddbdd8c507",
        "cursor": {
          "ref": "4c1dada5-a6c3-4d3c-b688-6fa52635dd37",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fc6a61fd-280e-4c43-963b-863e59b7c6a8"
        },
        "item": {
          "id": "cd048d1a-b4dd-49bf-bf09-03ddbdd8c507",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a4a93675-c7f3-4409-aa35-d9f523e7168a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39803e83-8a0e-4ee3-b563-f4fecad4f772",
        "cursor": {
          "ref": "b9beb137-cca4-440c-bff5-2f29bc403b1d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "04c494a2-1334-4268-a1a4-b70e9d7616c3"
        },
        "item": {
          "id": "39803e83-8a0e-4ee3-b563-f4fecad4f772",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5c41a617-9f4a-4f22-981f-0e679009eaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d762ef-fc36-42f0-8ce0-45985fccf489",
        "cursor": {
          "ref": "ee898cc2-6b81-4b01-a494-114577dc6d13",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c42830ed-738d-4fa5-a1a6-33bd3d33ec1a"
        },
        "item": {
          "id": "c0d762ef-fc36-42f0-8ce0-45985fccf489",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ecd81d1b-575b-42cb-813c-40e30ef8b28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42e77e8-6f7f-4c1d-ac71-35a98c1cdea6",
        "cursor": {
          "ref": "6a3fd71e-ca2d-4ddd-ac97-301ea165b44f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a4c6bbf0-d0c1-4777-b2ea-bbb9b25bbbe3"
        },
        "item": {
          "id": "f42e77e8-6f7f-4c1d-ac71-35a98c1cdea6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d27daaa7-e34a-4be4-b1b0-abd2cbd93173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba09e18d-498c-422f-be63-d3c8309c4162",
        "cursor": {
          "ref": "942accc8-788e-4f1a-9b0f-c07c7fb410a4",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1f7eb100-6c72-418d-9fb9-24f661efeebf"
        },
        "item": {
          "id": "ba09e18d-498c-422f-be63-d3c8309c4162",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9f12e8d1-d596-46a5-a1bc-adfec799aefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc423ff-52ad-40db-be40-6e9e94e4ec0b",
        "cursor": {
          "ref": "f4df73a1-e87a-4fae-b3bc-902261f09fc7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dd203b76-89a2-4a53-9494-fe8d0eb32536"
        },
        "item": {
          "id": "3fc423ff-52ad-40db-be40-6e9e94e4ec0b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7c70c84f-bc1f-4b9e-96af-cf06067210e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cdb381-dec4-4229-85c5-da242b8b4e0c",
        "cursor": {
          "ref": "1201bfd6-b5d2-46a1-917c-16735f5977a0",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "59e34b08-d4d1-4c57-8332-94f0f51f8f2e"
        },
        "item": {
          "id": "06cdb381-dec4-4229-85c5-da242b8b4e0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b305a1ca-523a-44b7-929a-b893d98d8ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2bc062-f70a-4261-af25-a1f261dd6357",
        "cursor": {
          "ref": "e5a8dd04-37fe-4398-9994-536a1c8a64b9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4369848f-ab22-4fd1-985a-5572475bf88a"
        },
        "item": {
          "id": "cc2bc062-f70a-4261-af25-a1f261dd6357",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bf6da194-0548-449e-9430-be03e95bb7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faddb23c-9b4b-4029-b8c8-09c42f382fa3",
        "cursor": {
          "ref": "036b8d03-1d4a-4005-8dc9-c901929a79ca",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6697b9d5-d084-4e7a-a38e-030cc1144a34"
        },
        "item": {
          "id": "faddb23c-9b4b-4029-b8c8-09c42f382fa3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "38570fee-75b2-4a04-9374-c5991d638515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06590313-5121-4962-b310-c28b89921386",
        "cursor": {
          "ref": "46fcbf1c-3d43-4544-be56-1b6f3ed5cc68",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9243f928-17a2-4c87-a09a-51d9ed3d8ea4"
        },
        "item": {
          "id": "06590313-5121-4962-b310-c28b89921386",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7f59c6e8-4069-42a9-821e-5f51ade9d332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4a72df-9469-419a-bbb0-4bb8fd0f4c9d",
        "cursor": {
          "ref": "923bfd64-b341-427e-bae5-662b49f4b4d4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5c268de7-be9d-4a66-b9b3-1d66687d4add"
        },
        "item": {
          "id": "da4a72df-9469-419a-bbb0-4bb8fd0f4c9d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ae02c80f-2df0-46e2-aaad-14100afeaa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81261625-8678-4c2f-806d-33c622c38a64",
        "cursor": {
          "ref": "6f0d2a88-390a-40a9-8c51-c63f7eef5b9f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "96018c50-bec4-4a5f-ad22-637bf9776917"
        },
        "item": {
          "id": "81261625-8678-4c2f-806d-33c622c38a64",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1ad98a1c-10d7-47de-8508-9010d994be21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ffd75f-c445-49ff-9a13-d674d699cbe1",
        "cursor": {
          "ref": "0e61f55d-5e1e-4050-8767-a4d414b2f02c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cf7dae76-a965-42f8-9c6a-3b99ac0c66d9"
        },
        "item": {
          "id": "13ffd75f-c445-49ff-9a13-d674d699cbe1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "407fb2c3-3587-4c2c-a419-60750a8b7f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acee7906-659a-44a3-bb74-ce2e71f28992",
        "cursor": {
          "ref": "9160684d-c3b7-45ed-9791-b9c031b48695",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e8202901-eb1e-40eb-b58a-9ec4a46195d8"
        },
        "item": {
          "id": "acee7906-659a-44a3-bb74-ce2e71f28992",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2e1a1ae6-ba1f-474e-a28c-cddce985ab0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7471e1d-ec05-4d4e-b7b9-62b4cf82016f",
        "cursor": {
          "ref": "f63539e8-481a-4697-ba5b-d318089f137a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "75b37ac7-a187-43a5-9fec-318fe227c2fa"
        },
        "item": {
          "id": "f7471e1d-ec05-4d4e-b7b9-62b4cf82016f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5d67b35a-4491-4ebd-832b-60f34f83e67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf81e344-528a-4e81-a295-73d8bf9fcba1",
        "cursor": {
          "ref": "a4958eb8-1abb-4bbe-b629-e16430754154",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "90327b79-10e0-4846-b0ae-a3d0b205e388"
        },
        "item": {
          "id": "cf81e344-528a-4e81-a295-73d8bf9fcba1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b55cb465-71bf-456e-98da-8cbe94629fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30c1a9c-bcd2-4376-948d-c7f51ae426b6",
        "cursor": {
          "ref": "e462b64e-9287-4e79-af2f-1dd32f9c4e19",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a64d7811-6f00-43ba-ac78-47c60c6a8d12"
        },
        "item": {
          "id": "c30c1a9c-bcd2-4376-948d-c7f51ae426b6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e9509c02-3971-4826-82c0-5ddb81d160e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aa858d-f138-48c4-a6d3-20097844670c",
        "cursor": {
          "ref": "7e54a209-2502-4ae0-a2ec-3bb73fa28f9a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "888935f7-8b09-434d-9c9b-9e4460480fdb"
        },
        "item": {
          "id": "d7aa858d-f138-48c4-a6d3-20097844670c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ebfd6ea8-c27b-4365-9ea7-900d1996c6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46afdc08-be52-4de9-9c15-395f5fe83e19",
        "cursor": {
          "ref": "da5e75d3-ef9a-4f09-923e-4b9d809632f9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "56e8dfce-2163-44e1-a09d-7df2d18473d9"
        },
        "item": {
          "id": "46afdc08-be52-4de9-9c15-395f5fe83e19",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b263322a-09c5-4ebb-bd05-29486a61e7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d975fd6-7e34-4075-953b-c3472e6b5fbf",
        "cursor": {
          "ref": "b153d472-7145-431e-8e9b-5bba3cadaca7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2e37d32-6036-4daa-b73e-66924182b4e3"
        },
        "item": {
          "id": "7d975fd6-7e34-4075-953b-c3472e6b5fbf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1838a9f3-6335-4607-a642-538ecce3ede2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f2bdee-e2b9-4eaf-9e08-765afa92c01a",
        "cursor": {
          "ref": "c7d7ab86-4b77-424b-b4f7-e9e3aab81648",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c4412857-9933-4122-b54e-462baded883a"
        },
        "item": {
          "id": "40f2bdee-e2b9-4eaf-9e08-765afa92c01a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b4196ff6-5996-4c82-9094-989867e59b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d309f4-cc22-422e-a34c-49ef7a81220a",
        "cursor": {
          "ref": "18e40cb9-1e28-49e7-9c46-6d7887e6939a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "de5df67a-6eea-463c-b23a-278a74848a6b"
        },
        "item": {
          "id": "28d309f4-cc22-422e-a34c-49ef7a81220a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ed5fa8e5-c124-418e-8852-454f603996b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969a8a8d-c707-46dd-87e4-94392430e449",
        "cursor": {
          "ref": "4ee855c2-0797-4230-be7e-0e37280e325d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0edebc71-8187-4c2b-9754-d50f1ac9e3e0"
        },
        "item": {
          "id": "969a8a8d-c707-46dd-87e4-94392430e449",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "65424af6-7660-4efd-ad32-5027426de291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b141b1db-1cb5-4731-8c17-2cdf89d60533",
        "cursor": {
          "ref": "a5e03416-658d-4a1a-a039-c09d92fc5b83",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "045ce948-16ef-46b8-9a22-49f01a24c8dc"
        },
        "item": {
          "id": "b141b1db-1cb5-4731-8c17-2cdf89d60533",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f7782410-6320-4c18-b11d-bd6c3c01572f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05033458-f3f8-45df-95fa-894c6ac57827",
        "cursor": {
          "ref": "a9fc5c68-7efc-41f7-b7eb-5d2cd6b08c3f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c05a3748-b1ff-4c39-98cd-04c5b557f65d"
        },
        "item": {
          "id": "05033458-f3f8-45df-95fa-894c6ac57827",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6399db3c-b2f5-495c-a0c1-d168b332055c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cfa66d-8eac-4e57-8a7b-479d3c0fbc6b",
        "cursor": {
          "ref": "eb22ad87-31a0-47db-9a9d-f7b2933e77c3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d5cbb314-b6a3-4f98-842b-184b1bfe92c1"
        },
        "item": {
          "id": "d4cfa66d-8eac-4e57-8a7b-479d3c0fbc6b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8bc4dc1f-1435-4f97-874e-81edf3b32175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664d0cd3-057f-4c6f-9f42-060d6099b2cd",
        "cursor": {
          "ref": "4dbfa9d9-ba79-461b-a580-ea6f7199a5ac",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "22924484-775e-4d4e-87fc-3072a1cd1f47"
        },
        "item": {
          "id": "664d0cd3-057f-4c6f-9f42-060d6099b2cd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "55734e4c-7306-4ec0-a92e-0c3b3dae9d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a769b7-abf4-41f2-b6e3-a4f7cd03bea3",
        "cursor": {
          "ref": "61c59123-638d-433a-aa96-75d503fcde6f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9e77ae6a-baf8-4dd7-9057-91d49e9d1247"
        },
        "item": {
          "id": "a0a769b7-abf4-41f2-b6e3-a4f7cd03bea3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "384a7fb2-56e3-48dc-9de2-e01535f1e3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e31c6d-b425-48bc-8177-d5f530645b23",
        "cursor": {
          "ref": "51428848-d8c2-4e73-9a2c-5b54c89da832",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ef1b8541-39c1-48a6-beb6-ae35c66802f2"
        },
        "item": {
          "id": "32e31c6d-b425-48bc-8177-d5f530645b23",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bcd73e7e-9e1e-421d-8b21-9504c437dd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addd3fd6-d586-41d0-b6ce-0566cad9785d",
        "cursor": {
          "ref": "a4212b39-142c-4d3d-b23e-5a646df25211",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b557cb5c-99e1-4974-99dd-1c9237aa4a22"
        },
        "item": {
          "id": "addd3fd6-d586-41d0-b6ce-0566cad9785d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "93dd25a9-e931-4ca3-b41c-166814e01713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544dc9a6-69ad-414a-a8b3-2ee9131ce3e0",
        "cursor": {
          "ref": "20b6e811-e9e9-44bf-8308-8214b467684f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d05d8cd8-7602-42e4-aeac-2a7e13817384"
        },
        "item": {
          "id": "544dc9a6-69ad-414a-a8b3-2ee9131ce3e0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "847c86be-b1bc-43c6-a290-1a4bb9f4eca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158e8410-b948-429c-90c1-cbf47f2860e3",
        "cursor": {
          "ref": "1357faa7-c69d-44a6-97d9-50a3c4ebedb8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "595fb004-4a3d-42bd-b591-b90aae1e3e9a"
        },
        "item": {
          "id": "158e8410-b948-429c-90c1-cbf47f2860e3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7252fa83-b2b7-495f-b848-d6ceefd4f684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4210a35a-ad88-4059-b337-b4318049e25b",
        "cursor": {
          "ref": "d43f4d48-2de1-4975-a4f7-4070e73d4ed6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4addddb0-5cf1-45f4-a0a3-37bae7fd7da2"
        },
        "item": {
          "id": "4210a35a-ad88-4059-b337-b4318049e25b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "10c40ae5-b708-426b-a817-1e89a68cd2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a664ca0-5483-44fc-ac51-474a6a3bb496",
        "cursor": {
          "ref": "5d4dba7c-d483-4886-b3aa-4edd8842979f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f1f2f776-b0b9-4ebc-96ec-477353136d81"
        },
        "item": {
          "id": "9a664ca0-5483-44fc-ac51-474a6a3bb496",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9e5757f8-7e43-4c6e-a1a1-937f9d3108b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b105804-e74b-4565-8f6f-f8c08c28c8ac",
        "cursor": {
          "ref": "5678d8fa-f5d2-4841-9049-acc6f9715694",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1ef5b9ee-215f-4078-8ae7-d39d04b6ae46"
        },
        "item": {
          "id": "9b105804-e74b-4565-8f6f-f8c08c28c8ac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9415220f-5aac-446e-b8fb-4422245f1c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1a5e73-b371-4646-9f8e-e90c74e3d19d",
        "cursor": {
          "ref": "0135ce76-3813-4c8d-a655-59cb0793adbc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "443097bf-2c31-4870-8a21-0171f135e32e"
        },
        "item": {
          "id": "0d1a5e73-b371-4646-9f8e-e90c74e3d19d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2e213f9f-6c51-4959-bbee-d86ebe54303c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb78c906-fb80-4748-9b2b-0e2b33ae59c1",
        "cursor": {
          "ref": "c062d44c-8cf5-4fd1-810b-ec0c9d869fb3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "578ce5cb-119e-4660-a058-d48126aea5ba"
        },
        "item": {
          "id": "bb78c906-fb80-4748-9b2b-0e2b33ae59c1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3ba755c9-98b2-479f-bb0b-d001f8e1fd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb13b555-3e00-4ea8-829d-03761c22929f",
        "cursor": {
          "ref": "1e60fc06-9023-4049-ace5-3c434d0bc230",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1b630b0f-c297-49fc-9f4f-72f99de0342c"
        },
        "item": {
          "id": "fb13b555-3e00-4ea8-829d-03761c22929f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "85251d95-135f-49d0-97e4-50944bcb47ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13caeba3-fa5f-446b-93b4-d81920cf68a5",
        "cursor": {
          "ref": "33eb18bb-dbcf-46ee-90fb-4f25abce2dcb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "44d03f23-526c-4fea-8d43-337c1c90ee26"
        },
        "item": {
          "id": "13caeba3-fa5f-446b-93b4-d81920cf68a5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e31d633c-18d7-46ae-b7ab-2932a1cb36f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5a2cfa-a4ef-4acb-bfff-116021e987e0",
        "cursor": {
          "ref": "e1d20fd4-bd40-43d5-8a1b-a5842987d289",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f89108a7-46d9-47dc-bc28-7e66fb628b76"
        },
        "item": {
          "id": "9a5a2cfa-a4ef-4acb-bfff-116021e987e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "36a9d901-c1db-4bc3-959f-d6182b5ae175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2f6fac-07ec-4e15-9757-5ea1e072e725",
        "cursor": {
          "ref": "56156631-834e-4cf9-90d6-ff456e47dcf1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d7c7d5fd-c881-441e-be10-8bf4a80413dc"
        },
        "item": {
          "id": "5a2f6fac-07ec-4e15-9757-5ea1e072e725",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f29dae3-b921-40ae-86a6-206858797c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca9c5de-7b92-49b3-b50f-7810b02bd067",
        "cursor": {
          "ref": "cfe6dea7-e7c8-4486-a69a-d12bdd8b2809",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bd4ec8f2-29a5-4ea6-988e-1afa44584d36"
        },
        "item": {
          "id": "eca9c5de-7b92-49b3-b50f-7810b02bd067",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "425ee7a9-6d88-44bb-9df0-1e1cbc39dbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf627fb-1131-449b-9fae-33d7466423c9",
        "cursor": {
          "ref": "5dc7413a-e41a-46a4-be58-338a71b2ebd0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0522846b-b926-4a5c-9487-5f05c36686cb"
        },
        "item": {
          "id": "0bf627fb-1131-449b-9fae-33d7466423c9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a21a3292-739b-4b33-a163-7a03fc6b1235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f916063-4db5-4697-8e66-ca1f86067822",
        "cursor": {
          "ref": "2753a99e-f90e-461c-96ab-391b80b4396d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "766cba5c-91f7-488a-ba58-f84f6d4244dc"
        },
        "item": {
          "id": "0f916063-4db5-4697-8e66-ca1f86067822",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3ca1cd3c-9ff2-4b63-ad66-7567c937dac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b26c70-1c7a-4875-9c2a-88634cbfdf78",
        "cursor": {
          "ref": "e03095dd-5d46-4e49-8f1a-3b96a3806f5c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fa70cc26-4597-4c56-9dda-6a4b4f634436"
        },
        "item": {
          "id": "84b26c70-1c7a-4875-9c2a-88634cbfdf78",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "39043b4d-346b-41d6-a94c-534f6a22b054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ef8563-245b-40f3-9e88-6b19b8bce7a6",
        "cursor": {
          "ref": "9d0e1d31-91ce-4995-892b-b0168e58a662",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "edc372fe-991b-4533-9081-b01e9357e6f2"
        },
        "item": {
          "id": "20ef8563-245b-40f3-9e88-6b19b8bce7a6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f5fe6898-9a14-4acb-bf04-9d986ddf4924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82e1176-529a-447e-92b5-5ee94f5ddce5",
        "cursor": {
          "ref": "c8cdf97e-2542-4479-887c-a274a7b02f09",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d00ee476-ba3f-4521-a703-c19501dab90b"
        },
        "item": {
          "id": "d82e1176-529a-447e-92b5-5ee94f5ddce5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9c9c90c8-685d-4927-915c-fe0f8fc06c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6634b1e8-6bc8-4df0-b7e2-db59806f6546",
        "cursor": {
          "ref": "98570384-dc9c-4b90-b6c5-818edb31fa38",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "23d28c2a-f976-44dc-a89c-1a1a97b6a470"
        },
        "item": {
          "id": "6634b1e8-6bc8-4df0-b7e2-db59806f6546",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a1ba3b63-974b-4826-b644-11aa61b4fb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04673d4d-d4fa-4fde-83bf-bab230bf8f6f",
        "cursor": {
          "ref": "cdc7f4df-dfea-44ef-8955-9af55b676643",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ecc7ad7d-a897-457a-a3de-ff4cd10f114e"
        },
        "item": {
          "id": "04673d4d-d4fa-4fde-83bf-bab230bf8f6f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3790cc9e-a031-4aa0-8838-a4b8bd72c5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e5eb33-16f7-48e8-acd4-1e895368715d",
        "cursor": {
          "ref": "2ed3a2ae-db77-495b-8e9c-156c227a04b8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "250412e1-150b-41ae-8115-6a1d50f26fad"
        },
        "item": {
          "id": "29e5eb33-16f7-48e8-acd4-1e895368715d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b822538d-2526-4d66-89fa-75b911647d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994f6cbe-2946-4b78-a231-34bb7af20652",
        "cursor": {
          "ref": "34470ce8-7377-4321-b952-12b6b4df4a6e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4b85842e-c160-45ea-9b1d-d31b42b3628e"
        },
        "item": {
          "id": "994f6cbe-2946-4b78-a231-34bb7af20652",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "11286937-b78a-401b-b24b-76210be14634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d5c15d-e4c6-478e-ac85-63b9e8ae7685",
        "cursor": {
          "ref": "f27957e0-c90f-4866-99a6-bae6f73baf83",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ff831ff-42e6-4e2d-ac98-ca3660ef9db7"
        },
        "item": {
          "id": "82d5c15d-e4c6-478e-ac85-63b9e8ae7685",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "26f18f12-e9f0-43c9-93f0-6095f9df98f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7e5d5b-581c-43ba-8719-9e087620fddf",
        "cursor": {
          "ref": "e2c6617e-4ded-4ff4-995d-3f1990a71efb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0089b020-8a85-4342-b358-7709e1d24c03"
        },
        "item": {
          "id": "ae7e5d5b-581c-43ba-8719-9e087620fddf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b904195e-b414-4994-92c2-8e9223957fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e412513-c91d-4d31-a8ef-d4606afe647b",
        "cursor": {
          "ref": "72cc069b-ee15-45e9-93aa-ec19c55abe92",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5c9f63bb-84d4-4e00-ab7f-ef80b81ef8df"
        },
        "item": {
          "id": "4e412513-c91d-4d31-a8ef-d4606afe647b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c9109277-eeee-4001-8d4e-248a06fce4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770edfd5-d3ec-4229-9241-69a1de1cf24a",
        "cursor": {
          "ref": "1ad6d177-3db4-4993-987a-fd9922b48cd2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fb56ef71-01fd-4d97-a973-ae5e167ccd47"
        },
        "item": {
          "id": "770edfd5-d3ec-4229-9241-69a1de1cf24a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d1f584f-e6b0-4139-9738-b010bf14d394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b744a7d7-20c4-4842-9fc7-ac7bbaaee906",
        "cursor": {
          "ref": "f45c7554-4d01-4371-8654-76122c0cf17e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fd223d02-6210-40b6-9979-685ff0fc1bce"
        },
        "item": {
          "id": "b744a7d7-20c4-4842-9fc7-ac7bbaaee906",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bd7a0928-9cf9-4454-964c-a4af7b5f83bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1101,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d3dc35-0e64-4956-be53-14c047bb5d1c",
        "cursor": {
          "ref": "08fbdae5-bd35-4c58-ad98-2302906f4069",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e39d458a-ef26-49db-b7b4-2c9e28c18cb8"
        },
        "item": {
          "id": "e9d3dc35-0e64-4956-be53-14c047bb5d1c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "97a709fb-bb58-4bf7-9bc6-0aad46e3ae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b137875-bd62-4e52-bd43-552dbdf3c304",
        "cursor": {
          "ref": "5d840c43-49c0-4739-b5f8-12861c1bda63",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c7e68014-cbcb-4375-ae9b-45358e55578c"
        },
        "item": {
          "id": "9b137875-bd62-4e52-bd43-552dbdf3c304",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "80301df8-e17c-4eb8-9471-15b94921317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1153,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b4b293-0ab4-4e19-ac22-a90061015026",
        "cursor": {
          "ref": "b61efa4e-b491-49a7-88fb-fdd63585af42",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0728c0c4-f3cb-40a1-ba9e-714041329880"
        },
        "item": {
          "id": "74b4b293-0ab4-4e19-ac22-a90061015026",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "23f15687-a1f4-49df-829a-edfd09cbd413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77941ab-5098-47ce-a1f0-9d9e5713af89",
        "cursor": {
          "ref": "066c3be3-eaa5-4d65-b8a7-daeaf439a038",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7f572e23-c35a-4121-a187-e573e875c6e5"
        },
        "item": {
          "id": "b77941ab-5098-47ce-a1f0-9d9e5713af89",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ede9f58-980c-447b-93d4-ac37a7a3e821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07af041c-9af1-46ab-88ca-8da58e2a0916",
        "cursor": {
          "ref": "d3e84fd8-4aaa-4f9e-9a84-83f8837dfe31",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7aae84a9-4736-439f-85c3-72672bdb6f78"
        },
        "item": {
          "id": "07af041c-9af1-46ab-88ca-8da58e2a0916",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0fa38f93-05fb-4466-8079-a38710679ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1200,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d2e312-de2c-46e1-a70d-e93911c02cb6",
        "cursor": {
          "ref": "07653528-0780-468f-a5c2-4971ae76fa52",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e32b0ba-303c-4d12-83a0-18969f965301"
        },
        "item": {
          "id": "09d2e312-de2c-46e1-a70d-e93911c02cb6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9b84b2f-4a50-499f-9f00-d9e3ba15c9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf47482-c5c2-44b0-9f83-9ae8517d2ade",
        "cursor": {
          "ref": "97e7ab92-a26b-4adb-866d-10009f6e2465",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "33419886-aae9-4bca-932c-84c93ae41c5c"
        },
        "item": {
          "id": "7cf47482-c5c2-44b0-9f83-9ae8517d2ade",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "63822589-9770-418a-9cb0-4f3b06532fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc45ce66-66d0-4db2-b5ce-b06471f04b03",
        "cursor": {
          "ref": "5238b223-eeaa-4860-b3fa-5683ab8293a2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8ec06c7c-bb68-4896-ad9b-10895b1a8f11"
        },
        "item": {
          "id": "cc45ce66-66d0-4db2-b5ce-b06471f04b03",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6d649666-c6c6-462e-8e32-6447af2b1123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2734f49a-9415-4095-b32d-aa6d4219aca7",
        "cursor": {
          "ref": "b9fb08c0-388f-47a0-b490-a00552be0876",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6d662ba7-5093-454b-871d-d297b01473a3"
        },
        "item": {
          "id": "2734f49a-9415-4095-b32d-aa6d4219aca7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3588eb43-2706-4eba-a504-59366fce78c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fb901e-fd73-463b-91ed-1514fd00a1c7",
        "cursor": {
          "ref": "c7543705-bf6b-4aa6-b264-366f14e33044",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cbfd7f20-0a4e-4ca3-a563-f4ec2ffaf3f9"
        },
        "item": {
          "id": "a8fb901e-fd73-463b-91ed-1514fd00a1c7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5e299c3b-76dd-413e-97c0-e121b52c0877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2f06a8-add3-49d7-a4ae-6c4a98e40adf",
        "cursor": {
          "ref": "50b36a13-c6d8-48c7-8c0e-7bbb5a9c18cf",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "68337cde-1515-4876-aef7-9eeb38f81dcb"
        },
        "item": {
          "id": "cb2f06a8-add3-49d7-a4ae-6c4a98e40adf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d4abce89-77a7-48b1-940c-b606fbc0859f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53847231-f4d5-490d-a02c-58fc4ebbbef1",
        "cursor": {
          "ref": "1ec5ff08-3092-45d3-81bf-61e77ec29cbf",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d8f14cb8-46c6-4cc5-8c63-a7979f46f7ce"
        },
        "item": {
          "id": "53847231-f4d5-490d-a02c-58fc4ebbbef1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "34a8967f-0b1d-422d-ae0e-e07ca9e9a140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b436d56e-66d1-406b-a15f-14ed32577caf",
        "cursor": {
          "ref": "33925451-9ab6-4b93-beb7-3518158ff669",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f2a6658e-3d79-41cf-a6b1-d358850818f1"
        },
        "item": {
          "id": "b436d56e-66d1-406b-a15f-14ed32577caf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "34b4b1c1-65be-446e-a9ad-fb778784e45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a499576a-449f-4b78-9d61-2ffdba8a79e4",
        "cursor": {
          "ref": "60eaa020-7ecc-434a-b640-86acfdb695c4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "55e65d0b-910c-41d3-95c4-df0b2df8da88"
        },
        "item": {
          "id": "a499576a-449f-4b78-9d61-2ffdba8a79e4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5c8f64ac-81bc-404f-a899-7e54af116864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e57ad30-582a-40e6-b804-c9df379f01ff",
        "cursor": {
          "ref": "a1cb9eb5-5b52-485e-96e0-3f6e74e633b3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c77dd2c3-ca7c-4fef-87e5-334eb7f80160"
        },
        "item": {
          "id": "5e57ad30-582a-40e6-b804-c9df379f01ff",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7c5abf29-77f4-4a02-96bb-74b6846ec82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab109b8-2885-40e8-85c3-54436d8b20e4",
        "cursor": {
          "ref": "ad462bda-fb73-44dd-a4ad-5710bed67de0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "34cf60a4-31ad-46be-94ab-775a43b138ad"
        },
        "item": {
          "id": "6ab109b8-2885-40e8-85c3-54436d8b20e4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a0819944-a238-41b4-a256-23921ca24652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bef45c-943d-4afb-85fc-b07bf4f169d1",
        "cursor": {
          "ref": "75b762cd-d934-43d4-b255-5dc2960e2425",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dda41492-2382-4eb0-92bb-896989759bb2"
        },
        "item": {
          "id": "07bef45c-943d-4afb-85fc-b07bf4f169d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9d34845b-eea2-4307-93f2-1e960d450b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6cb1a1-aaa5-4da8-a834-ee1890b660ba",
        "cursor": {
          "ref": "f6a81dd6-acd1-4f25-851e-3bb3c64bd6a9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d8710b41-06fc-410c-b50a-17b887144a8c"
        },
        "item": {
          "id": "ba6cb1a1-aaa5-4da8-a834-ee1890b660ba",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8897c5e2-1897-4421-b27f-2a29e985369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d045519-b8e0-4fd2-9b23-f1a71a685d47",
        "cursor": {
          "ref": "ee71655c-f68b-4963-9f66-3f5ff6670152",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dbf4ec6e-4b27-45c1-b144-9d97f0a0d9f0"
        },
        "item": {
          "id": "7d045519-b8e0-4fd2-9b23-f1a71a685d47",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f6a5922-2c6b-49cb-b283-e3d7aa091e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8164feac-01fd-4e56-92ba-eb53ab5b1a53",
        "cursor": {
          "ref": "d5f1d840-2827-4f8d-a9b1-f57070cfd0da",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a5886df9-abf9-4243-b97f-86fdd9340d6f"
        },
        "item": {
          "id": "8164feac-01fd-4e56-92ba-eb53ab5b1a53",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6a960235-a65d-497e-9cfa-5b3acc5bb738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbe99a0-73c4-458b-8bc7-df6406500548",
        "cursor": {
          "ref": "6d22b9a7-d5ff-46dd-8ae2-641caf4e91ec",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e44a68f7-9cbf-468e-a15b-b4cc367d95ed"
        },
        "item": {
          "id": "8fbe99a0-73c4-458b-8bc7-df6406500548",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce0afe30-9492-446b-a463-a6e2470e4178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c356724-d1f8-4a9a-9fe5-ef9901d29f06",
        "cursor": {
          "ref": "0ad03358-a337-40e2-9dd3-e24895b89578",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f5f04190-65c8-4417-bddf-36fd5645fdb7"
        },
        "item": {
          "id": "9c356724-d1f8-4a9a-9fe5-ef9901d29f06",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ed651b48-5513-4baa-a042-26b7e92e67cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabe3ede-f97b-4210-ae36-d66b36b40973",
        "cursor": {
          "ref": "8cde14b5-48b8-4549-8a65-bce29a4edefe",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "74d60a8d-c58c-46d9-9fb2-f403614d05ee"
        },
        "item": {
          "id": "cabe3ede-f97b-4210-ae36-d66b36b40973",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "542dd0fb-51d1-4b83-83aa-175aad4b98a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3584806-10db-4709-bfe3-0cd4b14c63ad",
        "cursor": {
          "ref": "ce756030-540f-43d7-acdb-adfbf5641065",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "03097bf4-4f00-452d-aa9c-c830eb5fff6b"
        },
        "item": {
          "id": "e3584806-10db-4709-bfe3-0cd4b14c63ad",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5cd30b11-bd64-4e4a-870f-99389c35399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2609cee2-6509-4740-92af-4f479675ec4f",
        "cursor": {
          "ref": "95edab0b-4c05-4bdd-bec5-7631612cb822",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8701d14d-42df-4c29-8db3-4230fc8fd1b4"
        },
        "item": {
          "id": "2609cee2-6509-4740-92af-4f479675ec4f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bdcfe5a3-5040-491d-afb8-8f80458d3360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e42cd6e-6ba4-49aa-8fcb-940fc58b3e3a",
        "cursor": {
          "ref": "362d93bd-18a3-4bd0-886f-7eeb2d8d9101",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "592458eb-29a5-4a41-afb3-1930b48d8659"
        },
        "item": {
          "id": "0e42cd6e-6ba4-49aa-8fcb-940fc58b3e3a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0c84a838-bf6f-48f1-b22a-81b82261f3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4114e0-c917-47aa-851c-2dc39d0a8f82",
        "cursor": {
          "ref": "55a40b92-f5ad-4fd3-9a9c-cfd233abe48a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8b222dd2-c467-4dd7-86cf-6cd44ab8898a"
        },
        "item": {
          "id": "2d4114e0-c917-47aa-851c-2dc39d0a8f82",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ac81100b-fbb6-4d44-836b-48b5b74b1f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e255df1-c6a0-4824-a0f5-ec9a695d590b",
        "cursor": {
          "ref": "e33e1934-7538-4a2f-9cef-d39ea0792d81",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2fad4165-e1f8-4402-a2a2-6804e9407e04"
        },
        "item": {
          "id": "2e255df1-c6a0-4824-a0f5-ec9a695d590b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "429b717a-e442-4e2e-81a2-9913608ffa0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf42518-660e-4cdd-8f93-f0075c67f864",
        "cursor": {
          "ref": "98931b8b-a1b0-41a7-aabc-d24a361cb52a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4bbe9226-f155-400c-97ef-0f9723ed0604"
        },
        "item": {
          "id": "bbf42518-660e-4cdd-8f93-f0075c67f864",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "976abb56-499c-488a-864b-00255d1f52f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03576e7e-af35-4156-a58f-bb4310be275c",
        "cursor": {
          "ref": "a7739862-2f04-4538-b9b8-af17c26db251",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fdc27461-a3df-4e11-9b46-9df610e37e3b"
        },
        "item": {
          "id": "03576e7e-af35-4156-a58f-bb4310be275c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bb9c1586-6048-45ff-bef0-094fce4d2bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af44e7c-6cd9-4e26-b86c-9d2e1d82a574",
        "cursor": {
          "ref": "47e97cf4-5bef-4359-80fd-7bbea81d07c7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c0d9c759-ab16-463e-87eb-840233da04a8"
        },
        "item": {
          "id": "0af44e7c-6cd9-4e26-b86c-9d2e1d82a574",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ef36b2c6-b61d-4d35-9f37-650547736839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ccffc0-cb02-4840-83f7-3c5c57f6f7c8",
        "cursor": {
          "ref": "87c8208d-9976-40e3-96c3-7b543b0c9530",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "133a6d4d-df14-4d60-a77b-eb9e05724f0a"
        },
        "item": {
          "id": "20ccffc0-cb02-4840-83f7-3c5c57f6f7c8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0c506d16-f9c9-4b9e-ae02-57a1aab4a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974f569b-6caa-4711-8c06-c990cf5bb099",
        "cursor": {
          "ref": "c401dff6-d7d3-4d5b-a6fb-c99049a167ea",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5a85f77e-827d-42bf-97b6-6521c60fe6a7"
        },
        "item": {
          "id": "974f569b-6caa-4711-8c06-c990cf5bb099",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5da00b43-32f0-4d56-8727-6633c477b79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71202ecc-d014-4391-b7c5-9b39798d6598",
        "cursor": {
          "ref": "0ff43e1e-5b49-4e0c-ad51-ee5c6ab28ee1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6ebca1fb-3f7e-4c3c-91ba-1f9b0de12839"
        },
        "item": {
          "id": "71202ecc-d014-4391-b7c5-9b39798d6598",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cf582f3e-0068-4381-ab46-2be201032675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93b048e-0420-4d32-b515-dafe43f0959a",
        "cursor": {
          "ref": "eb711141-6d28-4ce7-aceb-aa9b94234597",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "00daa2cd-1ef4-4bf1-ba31-c28d303fad42"
        },
        "item": {
          "id": "c93b048e-0420-4d32-b515-dafe43f0959a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e87c48e-3277-4741-8489-6a23949a84c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7248af-3597-44d4-a764-64fdd1173021",
        "cursor": {
          "ref": "068f9391-a466-4b84-9af4-ffb9c9fd809a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6420d704-a1d5-441a-ad6a-cfdc8168ae21"
        },
        "item": {
          "id": "4e7248af-3597-44d4-a764-64fdd1173021",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7657c50e-71df-4801-b9cc-38601e12df86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2965774a-148a-45ab-8e96-b3697ea4f177",
        "cursor": {
          "ref": "b69d914f-c0b7-49c5-96f8-a347c60f92fc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3ad8bda5-93dc-43b6-94d8-c01246ca38bb"
        },
        "item": {
          "id": "2965774a-148a-45ab-8e96-b3697ea4f177",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f8d2d066-76f6-4e5c-83c8-2576e3f2ac26",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 361,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd558f7-9675-4cbc-974c-a532decdedf2",
        "cursor": {
          "ref": "c04758b9-1a63-4c83-877f-eb1224a2f6b0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d45883c-dfdb-42ea-80df-a6fe15061357"
        },
        "item": {
          "id": "5fd558f7-9675-4cbc-974c-a532decdedf2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "60b3d993-dcc4-4b23-8f3b-8947b0a0beb0",
          "status": "OK",
          "code": 200,
          "responseTime": 392,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f49c61-6109-4109-8791-cd0d48866391",
        "cursor": {
          "ref": "af039163-e134-4c44-910e-680abbf6d49a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e2f0362-b9ca-4937-9c60-0458b2188898"
        },
        "item": {
          "id": "16f49c61-6109-4109-8791-cd0d48866391",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b873bc76-e7d3-4ac8-9ebf-20316fa7afc0",
          "status": "OK",
          "code": 200,
          "responseTime": 1761,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad3264d-6c8d-4d6e-96bf-a54f7a27a6f9",
        "cursor": {
          "ref": "e1c38037-c7e0-4ef3-bcc9-25d6e2f8914b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e4e65651-b2ba-42c1-b751-4299a4e426fa"
        },
        "item": {
          "id": "aad3264d-6c8d-4d6e-96bf-a54f7a27a6f9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6528304c-d622-4607-9d5d-c16a640fed01",
          "status": "OK",
          "code": 200,
          "responseTime": 1748,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "385925ee-63d4-4a39-81d5-9bc8e952bf3a",
        "cursor": {
          "ref": "1630d498-57d1-4c7b-a65c-3092596dc9bf",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6fd5cdce-37e1-4f5e-ba51-224bed759837"
        },
        "item": {
          "id": "385925ee-63d4-4a39-81d5-9bc8e952bf3a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00566f5e-2109-460b-bf76-cd5613fd03c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385925ee-63d4-4a39-81d5-9bc8e952bf3a",
        "cursor": {
          "ref": "1630d498-57d1-4c7b-a65c-3092596dc9bf",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6fd5cdce-37e1-4f5e-ba51-224bed759837"
        },
        "item": {
          "id": "385925ee-63d4-4a39-81d5-9bc8e952bf3a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00566f5e-2109-460b-bf76-cd5613fd03c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385925ee-63d4-4a39-81d5-9bc8e952bf3a",
        "cursor": {
          "ref": "1630d498-57d1-4c7b-a65c-3092596dc9bf",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6fd5cdce-37e1-4f5e-ba51-224bed759837"
        },
        "item": {
          "id": "385925ee-63d4-4a39-81d5-9bc8e952bf3a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "00566f5e-2109-460b-bf76-cd5613fd03c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ddf786-c275-4f5f-a32b-f3a7a860ea94",
        "cursor": {
          "ref": "cc9b6799-65f6-4d19-99a7-147e18425a57",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2466f391-41f4-4eaa-9455-a8ca0cfde8d0"
        },
        "item": {
          "id": "25ddf786-c275-4f5f-a32b-f3a7a860ea94",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "aa5fb92c-a7cb-4be2-b56a-9a979fbaab46",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 333,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ddf8fc-6056-4502-81b5-4e39692a9d0e",
        "cursor": {
          "ref": "827dcce4-3d46-46c0-9a12-ae7d738b60e5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3c6be364-028f-4e68-9fb8-bd0958fedb95"
        },
        "item": {
          "id": "32ddf8fc-6056-4502-81b5-4e39692a9d0e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f7ac778e-5a8c-4632-92ce-26af32747581",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ddf8fc-6056-4502-81b5-4e39692a9d0e",
        "cursor": {
          "ref": "827dcce4-3d46-46c0-9a12-ae7d738b60e5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3c6be364-028f-4e68-9fb8-bd0958fedb95"
        },
        "item": {
          "id": "32ddf8fc-6056-4502-81b5-4e39692a9d0e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f7ac778e-5a8c-4632-92ce-26af32747581",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7305b3da-f0e9-4cc5-82b2-ec517aed318d",
        "cursor": {
          "ref": "8c515669-f38a-46b0-b6e6-cd689fce8638",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d1725a98-e092-414e-aead-e14880ec5bea"
        },
        "item": {
          "id": "7305b3da-f0e9-4cc5-82b2-ec517aed318d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "95b455e8-18cd-457e-abbf-c5e0f8a18320",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8a1a91-15bd-4b84-81d1-fddc13168b12",
        "cursor": {
          "ref": "e22400ee-4e77-4acc-baf3-7b49e55e5726",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "236b6872-35f2-42c5-84b6-3f1a603dc573"
        },
        "item": {
          "id": "cf8a1a91-15bd-4b84-81d1-fddc13168b12",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe12c9d0-a556-40cd-9c2b-8331e56714c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8a1a91-15bd-4b84-81d1-fddc13168b12",
        "cursor": {
          "ref": "e22400ee-4e77-4acc-baf3-7b49e55e5726",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "236b6872-35f2-42c5-84b6-3f1a603dc573"
        },
        "item": {
          "id": "cf8a1a91-15bd-4b84-81d1-fddc13168b12",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe12c9d0-a556-40cd-9c2b-8331e56714c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7a3b6c-d778-4aa8-9ec5-45358fc4d519",
        "cursor": {
          "ref": "19f2e0be-5ed6-4d2d-99d1-c890e87ffc29",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b18a2c3b-d224-4274-8a0d-5777a08787ff"
        },
        "item": {
          "id": "7e7a3b6c-d778-4aa8-9ec5-45358fc4d519",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8b12ff9b-d90b-4c7b-82c6-f0328641968a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 566,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}