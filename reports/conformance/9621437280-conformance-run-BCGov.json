{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6bc00c6a-8599-4259-9d5e-18d2fdabaad4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "41ef72ff-e09d-4193-bd8a-6e4cfaba18fd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbcbb30a-a10f-4fdb-aa97-d2998708afff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e1edbba-4e1b-4482-8cca-1687badc53a5"
                }
              }
            ]
          },
          {
            "id": "70dcb1fa-8eed-411f-a6ae-c9aace9d5348",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2e9dc56-7095-46af-8326-c50ee1480580",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "507c08d9-951e-4a8b-bd42-6a209cdd09f0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "327f83b7-1453-4c4e-bb2c-f9d2d68a0407",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "328850d1-cebf-4560-90f8-b4e4b7613319",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7a04df6-9abf-4ed9-9c9f-005c273d9f3f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c5136fa-6645-48c4-9db6-6cf5a4ffb985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "690b8653-2bfa-4cc3-87cd-f3f98d24a0ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a05d3895-db84-49b3-8547-9cf953b500d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb9c4e64-8ab5-487f-acde-8a28bb84cf61"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e757f5f9-7954-4de8-b471-deb99f74c39f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c0e68b6-ce1d-4c8e-8357-180a557c49da"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b953651-fc0b-4ec4-9819-760864432c0b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a005d493-c1a5-43bd-a749-ef37dfa2ecf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02424a13-d68b-454f-8170-229d2880f485",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c89eee8-9279-4027-845c-ee53611e6563"
            }
          }
        ]
      },
      {
        "id": "218d1592-4fcc-4687-b4c0-22a5b217c4d0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3148b18f-6333-4749-a374-4c57cee9c2e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70f9eeb0-c4a1-4251-8c36-19e86153f151",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "083a27c1-fcbc-4aff-b9f1-2272bccdd209",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b10f5e-cb6f-4234-ac9e-37a8fa9a015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86492be7-dc00-46a7-be12-bae58cdc75d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8048ae-d44c-4f2d-9902-a79f0a419d85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706767b8-4ffb-416f-b756-1387c2c0cc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c095186-0906-4f01-b1d7-8b554f8dbec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5fce09-c5a6-403e-ac50-6fe33f8c1d75",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fea77c7-d8fb-4e88-a90d-5f8f0abdaf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45ccc042-4f8b-4ff5-ac2c-db31f0ac9d5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be4c0be0-e791-4844-b0f5-9f8fdc624239",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de2380a2-2866-4550-bc9e-10dae7be35e1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0ed803-08d2-449d-ae07-6bd723b82be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aeb57346-5e03-468d-8514-bf3cd1d7824b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66bca91-0440-4d3c-9475-f4907a7676fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f496994e-62c0-4e99-9eca-ba196621bc49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "93f2d168-4004-49e1-a35c-d1e914326311",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8d2bc67-bfc8-47d9-bf00-f4cd976c863b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4ff5ab6-5ce0-417b-b990-4d879edcb847",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5cf1a06e-02a9-4e27-96ca-380761d3e6b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d40c403-6928-4867-a38c-dfdb22baeb5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ea1b8068-07e5-4527-97b1-8f469ee6d6c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78dcf0ed-03be-4ced-b641-21b37e04aef2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d28f1617-8807-4560-8b7e-539d359fb6f9"
            }
          }
        ]
      },
      {
        "id": "4331e729-c89a-4202-8be0-7c2fe249c30a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "354be819-45bc-4eaf-b8f1-0f40b3b53b63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43388bc7-bd1e-48d0-a088-b0b55cfd5e73",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "48ce4378-3074-468d-aa96-9f1b48f5696c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb2531b-472f-42b9-a3cc-95d2d76a57fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d12e076-4d45-4b33-ab9b-ae0265ead7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a89715f-39e5-447c-a759-ff1bb6a4c40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "315d2359-80db-46a7-a667-a807e992a77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7066b1-3a94-416e-b4d6-0d63b9dfcefa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb15d5-0349-4ccb-a6c0-593f767a2910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a7dab2-5ab2-4457-9b92-09fc3e3e71f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ade8078-9df2-49de-928a-ffb9d0d3ed37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34082a78-6e12-47b1-a4a6-861623e5fc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a86c735-13c3-4b68-9641-7787f4cdf35c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d15aa9-4a3d-4791-baa1-2e2ecc2d91f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86dfe28-59c1-44a1-b47b-3a7615b820bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8e691f-d232-463a-bb46-1efaf8f973ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ec87f3e-9e7e-4164-9794-41fcfe3b8a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea31e7c7-6401-471b-b92a-792e0c1b4155",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d967ee-e22a-4949-9a4c-600368f35e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffa4d0b-819d-4b7c-8a20-85f973d6e479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4a63c3-46f8-4831-a25f-6aaa4b6a7d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cd1d887-55a4-44a3-8b5f-047d704b1eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b7c6b3-561a-4ee1-95f6-33db7edf9bd8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6be6c6-e785-4802-a89f-f4b72ff83bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c967ef-7e5e-4a91-919d-bfb18ccf201a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f7c35f-6d94-41f6-83d8-d9476d7cb510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1607dd16-08d5-43c4-89c3-854cad536e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b28b7d2-22df-4246-a1f4-01b771872d7d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0548fa1f-3a17-41eb-ac98-af69eed7be47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99c64e2-b681-4a87-98a0-8dfcbdf1500c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d48fc96-6509-43ca-93fe-151ac419a06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e025743-e4cb-4b98-a261-adec03d32eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070906bc-f042-4733-8eee-5ee5665875dc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec78a436-9be9-453d-a7bc-04313a236b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b96d2ba-3ae5-4a82-a620-c9381aba5495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3caf12e-8982-428f-8d45-a1fd5e6d4b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96e0d73f-9842-4d6a-b503-5170a71113b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a29a3f-3ba2-437f-8c65-774a6b7d5228",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bb80f9-d8b7-4ea3-990a-170bf0c660f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f229683-e043-47e5-89f1-5d30cf27b9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4022e34c-8b53-40df-9539-bc2def34b563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "610974f6-457f-4187-8da3-62aeddef2d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27df083b-497c-49a0-8f73-a24e373d97e9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfff4f6-f6ae-46d1-ad72-7b38a02e4f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044e77e6-d2f7-4f8c-a651-94299bb371e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5975c3c-6468-4c38-b798-035d304fc7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "230f0984-0422-4abc-ae0c-9a2526e8ecf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fc400a-ccd3-43cb-8236-ee0be3ba731c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc66aa81-8944-472b-8f3d-a83fe24a2be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228bc355-fe05-4ff1-bb1c-d20b56f975a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cab21ba-dc6c-4a29-88ab-e0c45e52cb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c8e6a7e-b1e9-4c63-9eeb-85bbc751d5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9191254-dfc8-45b9-aa6c-e17d2894611c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359826ae-5076-4290-a2be-00ae0ca4f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001b63b5-5c71-415f-aa36-4db862914ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846257a0-b96f-4207-b8a9-c7ac28df2a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f197cc4f-a29b-4329-97ae-85e3537ed491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec959df-ed9b-416b-bbce-b7a631e2dfff",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746288b1-378b-48cf-9201-905a2cb481d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32807e70-987f-4144-9973-747e5af959cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901eade1-3b6d-428d-a393-207904931e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8293ce-32fc-45a4-b282-9b2070296294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f6b872-6c50-4ce4-9981-f2010c6889e9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bfc476-253f-473b-b1f1-bb738fa130bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b9cc9d-e67d-465f-aef8-fe92b7650480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eef93d-fb44-47fe-adc4-534e7f463199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e05d5a6b-0843-4f56-bb42-9c2e4267f66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb3e8d-7038-4d2b-bcce-59a977da045b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae79016b-e78b-45d0-a8ed-be0905e89db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1094af5-32d4-4207-946f-6c7bab28c709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e05dc6-3110-483b-ae03-764ae625529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c24ef6f0-c0b4-4808-8e42-e7eef04a7f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2596118d-5667-4b4f-bd55-8660d581536c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52612174-2c27-4373-8151-855883623437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef642adc-458c-4c86-8ea4-6cdcf55b1efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df43d5e-4a00-4b04-b6e0-144434103b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "922b0b45-ee81-401c-bd6c-e680e53efa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f5b6d8-e0b2-4455-a55e-aac5bf389830",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619741fd-a9ee-4246-ab9d-f71e20d1e7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884d0449-dd26-4c24-a927-660653cfcc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbabbcb-b17e-4034-a5f1-0db035d91c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e913d2a0-4951-4ed7-a96f-5afb7e35b0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960b0e65-4704-47e0-b0d6-7e85d4844e63",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be76bda4-e069-4b95-afb0-b4a7e1e4556f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0655a7d1-a431-42b0-8208-9abe898676d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282e25cd-0bec-429a-99d6-64b4e7163803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d96b9af-8690-4c3c-9476-f137c4600727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c933ce-1201-4c67-9a5a-0ff8ce23d647",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9cdedf-0308-48dd-b931-e495d0fc7f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a71085-960b-4076-87c2-7e947e9e5fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fc6107-9789-452e-848a-f20c027f3f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "63063f34-61e0-4aae-bc81-cf8c745660bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68a9f85-2007-48c1-902a-10eab3a3af93",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5b6f41-1147-41f5-bc6d-96638209856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6f8550-7238-4ade-afde-53bb581892bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebe2c73-fda7-4b4e-8baa-281056300a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac504c15-5012-40d9-bbcc-28afa91a1347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c395d8d1-00ab-4a48-9c14-22d679920d78",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95404e36-fea6-4788-baa8-7c41bab5ded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e956c6-b74f-45fa-915d-36504e8cd80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97732642-faf3-43e6-b3f1-57c8d0e12a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6555f2b3-874f-4e54-a71f-fda0665f11a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c92df56-9cc1-44ec-bdb2-2341184cbac3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434cb2cd-dd6d-45b8-aad4-5f70d872e81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04b95d8-61e0-490f-a73b-64d0568cd5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ffbde5-802f-45f1-90c4-f5f667788bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7009355b-99fb-496d-ba92-1f249d8424f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2e779e-4fd1-4896-8ccd-83441c9701c4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfdad34-be55-43bb-9abc-8c19e1ce72e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078c264a-0711-41e9-acb1-358ca43f385b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d108557-0f43-431c-9e31-903e34317afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9799218-3907-40eb-a39d-24051bfef9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9803ee-a565-419d-b249-eccadaffd24f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f95e58-9312-4f5d-bb79-c87f5c1846f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449053b0-7185-4d03-8eb8-e61c469f3a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185a57c0-65d9-40e0-9324-0c1febe0dc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50cb3bc9-76b7-4b1f-901a-6953972eb970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84500d61-0e32-4ac9-b276-bfb8da3470ab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16589ace-a4d1-4ab3-a78a-85dba6d1116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b365768a-ff64-4dca-a9e5-6a0e61f2472c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62cddc2-6ee9-4680-a62c-5e0abab89f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f87ccf2-112e-435d-be35-11ee10af8fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663d5914-96bd-4f77-b6f8-d3d06c173ed7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938f0b52-380e-496c-9908-fa3fab6e467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90845245-ad02-4df8-9a57-6a3048c3f7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8246b553-b8e6-439a-b13e-8113b13de9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60578321-ff47-4b5f-9add-7c8cd339bb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de49459-7aa8-49e6-811d-ef7e0198bdc7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812d35f1-7395-4e96-a964-b03810a3bcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72eba6dc-e021-4254-b3f8-6585cc97d70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c93d4a-060c-4d5e-8218-cd5124192f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1dea27-1dd7-45a0-8aa9-e2c2c4ee93a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7b1d5a-4a24-4b37-885b-48baf875b03b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f753286-1439-45be-b71d-0ea0d851a09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e4f12d-d0d3-4c95-bfd4-7ff3b1a9f045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c5ac71-294d-44e7-8eaf-d9eb41578925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6910be-5b41-4c83-8ec4-86d476a1cfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b2610e-d8e2-4d36-880f-fa8e4670d768",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6287d0-60c1-40bb-a3e5-38a742b32612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f143d094-4128-4011-a311-c712c4726278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb7a975-201a-4f9f-bddd-95a22702d083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e3663b-bdeb-4a05-a7ff-ce851930d114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e2584b-759b-4761-88c6-daaa488a5157",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e104161-ad1a-47ca-8e82-77544dbfe3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95a2bf0-f9fb-401c-806f-a7d7314d3188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c36a66-43e2-4851-b772-4eeb55040397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbe09a1-6f06-44ef-9e80-dba197c41539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2381e03-edd3-4dde-af44-2535e6742e5d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb54309d-663c-4794-9654-06e19cd1e316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44fe119-6491-4aaa-8fba-09d449cd0471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41f51f8-e4ae-49a6-ba72-4203b14614b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a922cdc-eb1f-443f-aaf4-5a20ff4e6898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcc3ed3-5765-4ff2-8165-4d5e343c24a9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187b1665-f163-41cc-b7d6-bd3bd06eab20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3bd905-a3c6-4d00-9d72-8b47b2b32d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3d027a-71db-48aa-8c9a-ad31fefa5653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f7acf3-d0bd-4559-8f7f-8eb903af9f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c4518a-ac33-4e11-8d59-23ca99f97c98",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7de8ef5-27d1-43d9-84af-1a97ffbee127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1564b5-c3ba-49f6-ae14-a6dafb12e5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf64ad7c-b5c4-4985-aff3-83da4560103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1072388-4605-4476-a8dc-cd3712916626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c987b6-ddae-4b5c-849c-b5209b17a073",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11beef60-7b91-4f06-82d6-a6a139ddb63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e734c25-f0be-493e-bfb7-bf506e8d4e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0032630a-6f30-4423-9700-c8d4a358af64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca04e92-8608-47b2-bec7-978384ea3d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9512e7-db23-493d-bbdd-b0b894016b03",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bf1afa-0fec-4f7c-8fca-7a05633dad7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53db27d-1fae-40fb-b738-1dc7f590a9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b58fb-f911-4e87-ab3f-36835c78d619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e922b9e8-7124-4956-a951-22d48fe4757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deac1cfb-c771-4c09-aa79-c893b61bac99",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df3424d-78e5-49fa-9ca2-d406d6b77759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49eed9d-984e-40e5-81f3-b5e5e2113590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeace01-7cc1-4660-87f0-568d02d2a943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f851225d-740f-45a3-a24d-53f3584bb3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950ccd72-bb0d-4ebc-afe7-1ebbe6a15490",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1633bf-60d2-4d3d-a62e-c3aa807c3e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2717aec-f9d7-418b-8f43-a046589de987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e80a7-c9fa-49f5-898c-be576249e6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f81274dc-4f85-42a7-bab7-ac431432c65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eda1dd3-6156-4d20-b743-7edc6edf0fa9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc09c5b-247f-44f7-91c6-e5a335e91d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad725392-3700-4196-90f5-daca8cb1e866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d7787c-93e7-4446-9ae2-508c90116365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8da3b4-ffad-4dee-b2d6-75de45e643b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2266cd-cb92-4516-bd7b-d542f08f8dca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddf09e1-7fca-4ab1-a327-ecc91123a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff4b07a-83f2-43f8-996e-73e9e89fdc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5073106-a5aa-43af-ad7f-bed6fd4bd36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc12e3dc-408c-4332-9bc8-23a6a8f1c43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06884bd2-6887-4a82-9993-2a877033801c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06f6d15-4082-46d4-b643-d3137099c485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a402d75-a1c7-41f2-a4f4-167842e25f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc4ebb3-e686-4b44-a726-267e659989b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2da53316-9c95-4853-9991-184cb22de642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9a825e-4949-493d-a28b-3bea97ff6a87",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6066c7e8-4de6-4052-9992-0f686599dde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae87d67-ded0-48b3-9616-033de29af279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd99edf-7159-48c3-ae3a-66787de8a7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f3fe92-20df-41d3-b66d-16e459fffa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6389c8d0-2988-44ae-95a8-dc1f7ea84aad",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27e757a-82b0-49f3-8e07-007c1237b5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f3e6be-6d26-4cb9-b595-6707b759ca4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d168bc9-3ea9-40ec-b0b8-4be0a55b4e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f360c3c-1104-4369-9952-c2fea5ee3419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b129a58-deda-43da-bd79-25ffb9497590",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383c045f-0672-4472-9c8e-f813230c9ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97d2f36-e799-43a5-aba3-0d758ed830e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75ee265-48cc-4d9d-9061-5bdc740c0f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0dfa0a-cf4c-4b5e-bccc-cdf21d49346a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f8f31f-cb7f-46a2-8541-af3594582827",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa14f760-d43c-4ebf-9ba4-65e1c0871ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3604d73-8f0a-4302-8a90-edb11491257f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70243343-f711-4c8f-ac18-af59401f51b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea71042-8c7f-49db-8b92-9a8269f65a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6566582-4345-4d6a-93d3-cb320376db25",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540fe5f8-9af3-4b53-b766-78d27a0ed929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c021ee38-b8f4-41d9-a295-5e7d08a6e049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c77d3b-09b1-49be-b5cf-f2480d3783f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f155faf9-716d-410a-a0bd-903a2742ed31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b62bcb8-1eb5-4373-a2f1-c5d7e94b1c6c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f938b32c-73cf-4fa4-a1b4-1ff1ebd0e776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d507e75-c82d-4aae-8025-87e83a8a7ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69763d9-4201-4c79-9af8-a14345c3433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95614b86-0f0b-43d7-ac0e-20951c604b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a5771f-63d3-47a9-8fdb-2ee6514246be",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca740dec-d4fd-4072-b1c7-5eb63fbb84f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b3991b-df7e-4dd3-af8b-78b3f7b4c082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a892d546-0a89-40e1-83e2-5652bac471b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5b8c9c-28a7-4a46-aee4-3dfd12967f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34009eb-8f72-4277-886b-c52207cc0350",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6347226d-47cf-49d4-942a-e6074b426d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3df5306-e338-43b4-901f-1596fd85d816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b507a5c1-2a13-49fd-9415-c33acb65d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7e830a-00b8-4ec8-9e7c-8429a63b49e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad13a8c-5d3d-4a4a-87e6-7f529ab3b13f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ae7663-92ad-43f4-9aec-58aa34300cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11d584a-5fe3-447c-8a88-e32f9ca1a40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f89fa7-d988-4e1e-afd6-f003d547097d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9869c10e-b384-4d88-81f2-65b26206eee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909118ec-40d5-496e-99a1-f5d67367cfc6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253abcb6-aae9-4f4d-a411-85b1547bf403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defd5de5-86db-43ae-9fac-8d6caa55ca09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e91f1a-45da-4ee6-bdbe-28607a831b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05e25cbc-2c62-45c1-9317-a30aec0f8951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752928f2-3b81-4e38-a61a-f7377ac6e85a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeb836e-f25d-4f80-86e5-98681050db36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a21568-9e81-44e5-9715-c3fe84e28554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe64fcf-0afa-40d0-ab2f-be5b3d0b8bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0225521a-37d7-4fed-b6e5-b211939ccf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d06782d-166b-476c-9069-7750f6a5eeca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256c4079-d9c6-486d-92ae-c9b6758a31b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a371401c-591f-4035-a9e7-63ccfc881041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31081df-b59c-4885-9d1c-ed056a52ad2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b52edc8-5990-4f7a-a07f-60109e618637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6067b05-bcf4-48af-996f-71ae23d9ccc9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a15155d-187e-4e11-b1c4-e543c5fc56ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0238ec-478c-4ae0-8ed0-b0a59587e8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89af6ed3-119f-478e-8d63-023a5f1f9df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d8f8ab-6264-4e33-98e3-8dc506a0816d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bfaef7-f7fc-437e-ae04-f0f4f4fd1b1e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f50a13-f5ee-474d-9b77-1f173e74cc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff52e396-e1f0-4dc7-9890-162b0742ac92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a07ed7-9827-40d3-b3ca-21086d3deb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf31e06-e14a-4208-b3ee-4ecd2af921a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2225e5-5373-45a6-a53d-bacf4529b2ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f613fd0-cda8-4af4-bfa2-f8f27754caaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adf0897-71ba-45ec-b19e-e53872400e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b39188e-c22c-4dcc-bd34-4679199dd5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08529d0-965e-4c28-a22a-52da5afa153d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b2089d-cd95-40b1-97bb-4e8cf1206785",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42922c1-b472-4273-bc2e-6412ea9c6c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f38ccf-f20c-4a70-961d-178fd71c109e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9524b75-752c-4a93-a10b-dfdeb8521854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b5b57a-146c-461a-b5a3-fa4986145b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed433db-1388-4458-8437-3e977dfad595",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54700ea8-23ca-4ab5-bc49-963a143304d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230eeb76-d434-4dfa-8f06-e4409c709a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e64732-1900-4ab2-897b-d01032068303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0660a6-c783-4493-bcd8-965dee6860a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d4f884-cc77-4e6b-ae66-6671107cb443",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f90898-e7a5-4b65-bfd1-6a7df01b4af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969ab7c1-603a-40dc-833f-f8e4b87cd27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d88ac1-9899-4204-8c9a-0ef1e6374d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49452f9a-d792-4df4-b417-2bc773fa9626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26727ce-bbd2-49a7-afea-96213f41df7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a38fa99-fce0-45ba-8176-dd17b8b7a60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262d52c4-eb9c-426b-b566-ea245eeef397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c656ac6-0fa2-4a73-a5b2-7afe698959c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec0e42e-b28a-4765-a01a-e0cb536cea04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c31857-f99b-4556-9ed5-76081bcff7d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7919cedd-a61c-43cc-853f-fc14ed665ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9036995c-749a-4959-8b0e-239848c1770c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0774419f-937c-40c9-a95f-267e32d848db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "501b5647-bee9-4d49-aea9-d0ca537f29b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3addb5-a307-488f-9237-b77095fbe670",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65af1ae-cd7f-4ec2-b952-408eb2809dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640c6869-3087-47e8-b6e1-f0780e9c3538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b3af7c-eb3c-494b-99cc-6d69ddb9526a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "18657bad-8cc9-4f26-80a1-ed7138a3d8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728c464f-56b4-47ea-a38c-03d5af5a69bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0192e2-c35f-4d2e-a42d-48830e779d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544a5ab8-3d6e-4565-aa24-df950d93a4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a4cc76-4973-4dcb-be43-ce0b75622ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1031cb-d5b9-4833-a574-39ee4ee06ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b537c76-f867-43b5-8617-3814b2b1d5fb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff73e0d3-be9d-458c-a667-1f1c6c768b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b18e28d-2308-47cb-9012-26558364ce38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc798f9-4345-425c-ab08-b64f9c6d9a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0054bb-3f29-42b8-9e50-f4139d225fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ee127f-43de-44a6-940e-b60a1ddec690",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d1a843-16fd-4651-8ca2-e3f5c50831ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3864de02-4564-439d-ae37-30304c11f9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd677fab-117c-40bb-9dc2-8fa86845c361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c06a52-5925-4271-83b7-98cfc9d70df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec26a46c-3e10-4d97-9c25-2099ecb7284a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9958122d-2d06-4635-b0a8-b7a68c3fc27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2e8e10-85ed-4bfc-9912-b307ffbe085f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1799e4e1-30e1-4eb8-a6af-0eccf1a87b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44147177-6715-43ef-8b1f-d2b0b09bb43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c1881d-af80-4302-a017-cc4906a83d9a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf07fd5-5348-4665-bc46-6efab15670ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a27941-fb37-4aaa-8009-04649d7b54ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d0ceb8-5be7-4c19-b562-312e57f2c8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8717c97f-e652-4d1a-a3c3-48638ea2922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ef0fab-beca-4156-98a2-0d2902a148b1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed049c6-1047-4df3-a8c3-a60cbb149467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299c1f24-51c6-4b5f-91b9-759bc164ccbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0453060b-fe24-495e-9d09-1c33de06329f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e93000c-48a0-4acd-be99-eb39f64ffbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab9cf8a-0be3-4520-ab8d-34ae208d6a4c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21b225a-2672-4788-a5ee-c3b32c612384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2527aeef-34a2-4840-a848-907c034c4995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48657ea8-38ae-4a02-9984-282c10960890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b01207f-5227-41cc-9335-646982dbd96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55e69b9-18b7-4c4d-84f4-9d480ea8cfee",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6960c0-affc-4228-bcb0-97f357c74214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b04e89-c1bc-48e1-b2f4-731885c3dce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164f56cf-07d1-4132-8448-d309b98b1a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c751bb2d-47b1-4f87-a248-10601c7b3eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7da5206-b895-4bb1-a646-7bcd3f9ed640",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a93ecf3-5220-44fd-acc1-2a17e06bf68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb252450-bb48-4262-9a6f-baa085c98b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dac9aaa-8162-4567-a589-2553c3966c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0564da84-6aee-4410-a644-e6992339482a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c59fb3-bbd7-482e-8c4e-60c05e59b9ea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371a792d-cc80-4860-9fc1-8e48e9847ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a955530f-eac2-4e92-a7ad-d081e36f0069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261bf9b3-3863-4721-a81d-b4af4a8db728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69583ec3-b0b8-425d-96a1-582b42c980b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d72812-f61a-402b-87e4-fdb586a28a44",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577fd9fa-5dde-4b56-a264-2556e14122b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a005d131-b13e-4181-8652-7af0db57be7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4499c3e0-5f3d-4f7f-b49c-4e3f112aea4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e2ee65-e047-44f4-90c2-32ba3bb3f583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9228209e-0dd0-4f54-9eb0-71f59175812c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebca487-2cf5-4b0f-989c-731cacc407ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffb9922-8d54-4a5b-959d-ec22f94011bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb19118-df90-47a2-820b-5de938b92048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64da0c3d-6519-44df-aacf-2e60261f4272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3411d64-5c0e-4cf1-9959-dbf23a9cbabe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352bd50b-4bb9-4795-99b5-59525cd73a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f593bc43-a6e3-4afc-b15c-bd2737074f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56c7666-3e64-4343-9a96-ff3e9977fe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81f7194e-2236-449d-bf68-b2ce29913005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0ca773-53fa-4b60-813d-2e5b46e64524",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3d03b5-ad48-4369-ae2d-74f6ca3483bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34986a6c-1436-42f1-81ee-9b4ab9c17a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5acdebc-50ee-4e6c-9877-7c9fa3fc9410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0326cb37-8c3c-4645-81a8-1b5202c248b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94667de-4388-4e1c-a716-a086836fb6aa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbfc70b-9fdc-428f-8069-d940b3d26b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b5f1af-772e-40af-bba6-8480e5cb4ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58286ee-211c-4922-b9a4-9414020dc03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55206ec2-cc0b-4d55-8df3-82614a73c316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8b7189-5fe7-41c8-93a0-32b9f578730f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb3765b-8766-4810-a064-2cd4c122d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83fad60-abf1-46a6-b203-25ffec923149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277e40ac-dd5b-44ab-84a8-1dcb56db4c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f6d7d1-f387-4a01-ab01-14815d5df7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418c38ba-d2b0-486e-b93c-686d9a5c188a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd04991a-0780-4e33-a30c-be36521fa310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8452eb9-d81e-4cd8-a036-706623df81ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9a3eae-77f4-4dde-a816-a887576b7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3968217-94e7-4af0-9444-bef3e89a7882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bfc6cb-51af-4a25-8239-27c470a271a4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34cd0fb-32dd-4bf4-a9f6-f4ad40391865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05d0eae-be3a-4bc3-b87d-da2d9ac55108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb59b12-2a70-4eeb-8101-3d3cedfe73d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0357735b-7683-40c2-9eb9-1e939e197ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfb29aa-b318-4689-a4d6-fcd1a1a84068",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab44606-814b-4b2d-bcfb-770396c1def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9f857f-1c73-403b-84b1-4b68c9b8fdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce519af-3be7-4fb2-860d-98e8baececbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1ff3be-e54b-454f-9a8e-5bba78d3b37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc07053-926e-41e6-8093-50a820cda82c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a6bbb3-b104-4715-abea-5672e591f0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ada4dec-a50c-4ca7-a8fc-415189207f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b221b0b-b02f-49ee-9f2b-59b9da135693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2639aa-4c76-426f-97f0-6a009fada790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43704a3f-5a08-43d2-9162-523e5e3440a2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede2d65d-4eab-4066-8c37-596f1ab4527e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8acc7a-3782-4b03-88db-a6d5bd073606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797a8fd8-f299-49e7-89a7-0dd8e368e20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd1a25b-cf02-4828-a018-53ff76af9642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98cece3-5c8f-4292-a811-d61e3faab7ab",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05642171-d0e9-4dbf-8d14-bf5cbd0a358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17f92ee-584c-433a-bc04-6cca0f5a6cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5059f5-8f02-465c-9560-505fc52a5d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1487fb-f66a-48db-a24e-ec61d04965af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5206b6-d992-43d7-8c66-5aa7e76712bf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecc7134-eb1e-427e-b29a-0ecb7b248569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2505f0f-7ab9-44fb-88b8-3371f1bb9847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6df75c-6b0e-4ddd-b112-e0472a5ed67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "463c0250-029e-4fd9-91a5-56d9bcf967ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce230b3-13c0-4f0d-bf41-ffbfef161590",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646f899a-0425-46d1-9e8a-bfcb5b228c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94da396-4bce-4e74-a80f-3f0b064e3d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fffed8-6688-4503-b3d2-c9ac8c92df6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f37dc3-db25-4570-a1ca-405b55899afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89c5cfc-3a6a-4a22-bfc0-287e445f684e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af4a45a-0662-44dc-838f-a15eb5e0686a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8b3e2d-b723-4a08-b4b5-995b1779c6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56667a4-72a9-4b41-a330-99864805d380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2273776-6ee6-4b6a-8de0-ff6217bcc206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0b92fb-e01d-490a-96b6-e3cd9a1a06c8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ba3f73-9cf8-4350-99fb-892eed1c760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4342ca-9889-4c33-95b6-e99bd5367c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913224b0-85eb-47dd-8f2d-e92fbb77efac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "204e8169-559b-46c6-a8ee-70c0c15e7cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0921aeff-0bf0-4332-83b7-673e2e508886",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19a81dd-451d-4882-9551-ce60969b10f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea857d52-a65a-4225-a955-f0b5794ef1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4c26d2-55d4-40d3-8ca5-3d085f0cce67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4828d49-7ac0-47f4-bfed-b014f64a22f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a93f28-2f0f-4c89-8a7d-9efef202462c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b866163-6a73-446f-9eec-ad9087e58c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff805e90-b9fc-4eae-b86a-1ce7fe06582f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27e75d-7e5e-4ffd-ae34-db2b090dc48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6da8cf7e-0fd1-456c-97bb-d9f29ce5ecd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb30c05c-c5f0-4795-8135-c726cbe5912a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a309a7c5-6ac9-4bd2-8567-66d3497715e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455dcbc9-f388-4d29-9e25-aa9906f37bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b755ab3d-0bdb-43d4-93e2-52cfa8bd34e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "722d0d76-6161-4f23-b0a6-e2356ae39112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7628a9c-c2b3-40d4-8e13-30a147ba5745",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ad1e18-6ed5-48fa-8c0c-605b43656c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7713e36-f79d-4b08-873f-f1df1dfde619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c641e1-3960-47fe-a6cb-b6ed1d0f55e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9acc86-007c-4ff6-bee2-0d9066f29136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b21712-12f6-4687-bb8c-38aef3760763",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4778bc6-f6d0-40c2-83ab-c21585fdce55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487b314d-d521-48e4-b8ef-1f239e4aa1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa52a30-d142-4825-b07d-1bb13285db47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d0f8a9-8733-44a3-99ff-362dbd91149d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12db419b-b18f-4a87-a05a-17e51cbe1a59",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112873e2-734e-4b7c-9e6e-00d8d30bec64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a7bcf753-0b22-4cdc-a6ec-8180e1a40542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7fd1e8-4953-4ad1-9664-5e3fbe700095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9d0b4e-de62-4b8b-a96c-f6a60402c101"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "858fa487-a676-4ced-a3d1-e8f1b3ec9a73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "925f55ec-482f-4782-8d5c-05bbcba4b789",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d093d4b-0b4d-4c7b-9df2-a2a543b9bff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5906fe19-730f-4140-9034-95311e148ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a2017f-5322-4334-bff3-cf45c6794ae7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a7732bd-57db-4c1e-af32-d91432bcc281"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90b3a754-bb44-40bf-a5cb-69bb652ad529",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7bee752-f871-47c7-b543-7c4ed12fd758"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36ea56f0-aab6-47d2-8305-cb7e2780003c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cb470ef-37ed-4d7d-8e72-2f7d3930318e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9820fb28-70b9-4af6-8a01-8576e9f55a67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c58c2ed9-7fdf-4fbd-bcca-6bbbebca3859"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddd4cb0b-2030-4edf-afc5-c07695f35afd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c9acc2b-0174-43c6-b002-f60bef2622ed"
                }
              }
            ]
          },
          {
            "id": "72e95e47-2ffe-49da-881b-873ffd66d365",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4560ffc6-612d-4b3e-9001-e835f4abd557",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5ee914a3-0ce9-4d78-b103-5a06289a913f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2f2ba3-0265-4d00-a645-9034a0169b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "01aecf3b-9006-42f5-aaaa-cf48426b1434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06fda69-e671-4001-9975-16e320c62307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc113cd-393e-4bfd-84cb-d5bcea561664"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a447590-5d52-426b-a96c-97d67e8e55a6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7739adb3-474e-4ea4-9841-60852d6eea44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7e3a47c-79b9-45c5-8d1d-e4a67ebff6a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffa995af-e893-4cdf-a593-8bde11d92a58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9c83825-e2c3-4858-ac63-28a9a55eb885"
                    }
                  }
                ]
              },
              {
                "id": "deb4ae06-22c2-4519-896c-1edc76bb368e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "760c6445-2396-4fc8-a610-fd69e25fd913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed6fa277-5723-4cb5-84fe-28f142f33710"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c70062b-01e5-4fa5-a561-133858bf47fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5b48f8f-4199-4664-9e2e-065a195d1914"
                    }
                  }
                ]
              },
              {
                "id": "a947e09b-336c-4446-8f39-581725102e1e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f764479a-7f44-4783-a964-d69abe95fbaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af130006-2d94-4af8-bc74-8db840c1fb92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05d90110-1424-470e-b93e-2d30c7771bcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7255dff3-8dfe-462c-b799-e82a594b6fa2"
                    }
                  }
                ]
              },
              {
                "id": "2bd41490-9c8a-4050-9af0-38b64b1038d9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f549f953-013b-4027-9cb3-93f36ad7bb63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "509b870f-3c32-4409-b2e7-4bbbefef81f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e76f4dd1-1b00-48d8-906b-62beebba1992",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "74a9c39f-a878-4468-af41-6b530bfd5ec4"
                    }
                  }
                ]
              },
              {
                "id": "cf323c54-71bb-4cd3-807c-ac9e9eae09be",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d49a8eb-e329-47d8-82c0-e245c167d382",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2103a1b-0004-4459-a577-395abb10f5aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20039b62-7005-4467-a324-cc4b728a5133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c71956d3-d446-4ca5-b7aa-d7e2cd5eabad"
                    }
                  }
                ]
              },
              {
                "id": "dd195b7e-cc00-45d9-be57-b1da7b3d3dba",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3762f85-5254-4109-9f05-1e22f05a7779",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "085808a0-b179-4c79-96e4-1cc79d4bfd2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03e8dd87-4682-4489-8719-1bbd4c66a768",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db90260f-4cfa-4a6b-8081-457c9a3651ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e25664de-b3be-4c9d-ad69-2c34021cf2a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f481ebb1-ba1f-4da0-8063-fea59fe650da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "be7b6ae4-05ce-4d09-acf3-8c7585da2ea2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16990a54-c5a1-494c-a69a-4f302b1b6903"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cccdc71a-f7d2-4900-a684-0be39eba795c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f2f9a5e0-306f-458c-9cf9-2a2703abdf82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a99b8bb9-d836-49ca-9ef5-270ce6ce01cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8791e837-f1d5-4eb3-992c-a01c527d65c8"
            }
          }
        ]
      },
      {
        "id": "0e08ca79-3d39-42c7-887f-492b95d67ec9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a9081dea-f6bb-42b6-9313-ae299c6cfcad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d935744-26cc-4b54-8b38-91d0df619294",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "562399b0-b9e2-4e31-9617-86ebe4955014",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563bc15a-16e4-4ef1-a93a-cc7af3c73878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e2856e-ec78-42fe-a7bf-d3ba6ada8b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de703c8-2d22-4bc8-af76-4571113a6a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4177b200-1688-4a96-b724-a1ec910f1be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241776e4-1550-495a-a83a-19eb8c1642c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c589c419-2381-4fc8-9702-676b601d2888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2c51f1-a496-4cd6-9c56-c953b264bab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7c3a23-ff7a-4918-87ee-83bb22d8c4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90efd552-6410-41d0-9fab-46b737070ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373b9568-94e9-4bba-90d9-7665c2bd671b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b3d981-0f4b-4347-a4e6-83d07de3030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ae7a3c-1141-4a3b-b2df-1c1fe6e7a14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8100af6-cb8f-4568-a44a-5bc7d8b26821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62133f0-cf7d-4471-b94a-949fd732d19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51ee495-2fce-4a80-bff7-5c30b1d6c724",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134b95b2-bbdc-4c4c-baca-b27808053a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb25931-2a03-41c9-a448-ce5f7956fe03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9e53e2-f3f9-44f5-a931-824e40b1260f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6022955-380f-4e90-898f-21bc0eff1177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7110d7a8-685e-40c2-86a5-7bdd0b717ebe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb1e0e1-ac3d-49c4-87fa-f0ab70505f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d72f84c-e2a9-4a6b-a350-fee3a08e3ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b6b42f-3371-4b64-8cbd-b2b7bc402d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19ecb9d1-344a-46cb-a4de-999a51f07981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d75ac87-b255-4280-96ec-a9aba34ff570",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9344b66e-fc0b-4634-a38f-3322b5195cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b85c930-3549-49ce-be41-240f9e67a710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ee9e57-84f7-4ba8-a4e4-15848d128c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1317a40c-bad4-44db-8f91-cb0308ee4503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299093f8-2f2c-4212-983a-7a23b716c2ac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93840f8d-a9ab-4f6f-bff4-1130a876285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d9c7a6-5c05-4617-aea9-373d7035e2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef119de1-584a-4432-95e8-bc89d82172ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a044be88-47c9-41f0-921f-e2578dd0ff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee25a03-631b-4d51-8c73-75ddfa0eb8d1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff2a1e2-d98d-47df-bc03-e5aa22b36ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062215ac-9e6c-4be0-807e-cd609ecbbd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e15bc2-09de-4b66-86d6-dc34ce7c4e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbce576-7c1d-44b6-87dc-e62d7104c25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108c7ef4-f012-48cf-abe8-c9afbf239952",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d693803-7510-4691-805e-b2bf571cdcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae066d3-ddca-4e43-bf73-819d9cd4eb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34825922-2a82-44dc-a8d1-69fef137a546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9d073b-6126-4f35-b0e0-784ed4a18da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07080a61-67be-4f3f-aa85-5f16e7d89fce",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f658e84e-4783-4e9e-a198-ded72d1165c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a52388a-7b50-4ab7-9320-91463bac1c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bcfe7d-d6e6-48fb-8396-5988ce6c3e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23baa63c-fb42-41ac-9453-4067fe8f9d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0997949-ec2f-4c73-828b-88f32622cec0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3548606f-704f-46b0-9330-260b47fa8eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d755d3d-7fbd-4dc5-9d5c-b48cdcc33374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc01769-b627-4242-b795-906e2ad07d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdd7e09-dd07-4fa6-a045-cc8cb64f834a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e3f6c0-8af6-4443-9740-c01492351c92",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd459a7-7767-4512-8fc7-95867366939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a47124-42fa-416a-9a1e-1fc2fc937e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b620e8c9-0744-4530-890b-5ba81218b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e89b6d4e-bd49-4c9d-b740-3c9a42d64ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6968424-d0db-4cee-acde-f95b661432b8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ef109a-0b72-405c-8957-9a63be057e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b08ca2e-371f-44bc-a303-93a98ff8afde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92914ff8-e064-4f46-84a5-f5c38cdbcfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "337dd0d0-ab01-4cbe-9e14-5ace79b08a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3622e3-466c-4f3c-b0a3-f014d283fa2c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073926b4-c93c-42db-8b50-aca9060778f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf3628c-0e65-4443-ba98-5d29beff97f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef4d745-4018-43f2-8b16-3630fe39bc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b043d85-25df-43bc-8ea2-bd33fc876ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1428794-499b-432e-ad1a-3f32c353ffcd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b6b3ef-86ab-42af-a92c-d46d6005777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0ec455-a1a8-4d8d-93b2-f0c65174ac8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a71ceee-920d-4462-a135-06416503701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41e0528-7c3b-43e8-adc4-daa0ce8252fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a362c4-9c6d-4572-bc68-46d3f911e413",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c01d31-dd83-4e01-b756-5c6fca47ba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45065c13-55bc-44c4-9c00-05dd4649c42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201faf49-6da4-47fd-b148-fef0840f12f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a2e6cf-3e81-4b5b-a11d-88eb8144617e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebbc6d1-4029-49bc-adcb-8b3a41b36988",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf061e01-7f7a-447f-a734-262d4eff1ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9ba0ef-61fd-4835-9230-693c71b70826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9401c351-f0a9-4873-8d2c-429fa003d447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9b9bb0-3fea-4793-bcbf-bb1a4ff740b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b86912-bf93-4c80-ab2b-1ee34981fab4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba42ba7-e07a-4643-8fdd-22aac8724565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74c2209-483b-4f58-8b94-f6d85be71791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd58598-37d5-4863-b349-20fdf3f6d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a79fc574-e6c7-48c9-b575-138f0188acf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea3e29-de89-41f5-b8fb-0eb2568bd577",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96109986-f1bf-40e1-85a6-f4d6708c897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ea6d70-3b5e-458c-b275-94dc9f992068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df99574f-43c2-418f-8082-969307757f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "843d2e0b-1ebf-47c7-9f81-6a1069781f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e527e499-ef3e-4a2f-b4a9-73da652162e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51cbffb-d2d0-4340-9344-dfcef3e57dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063ced3a-fbf1-47cd-92b1-a94f76ab33ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76c6af0-4fed-4060-80ca-1c10baa99160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cfe55c-6a3a-446e-a9dc-702fa3139e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7d6e64-4898-49ec-bb4c-1fae6d40014d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3974724e-025b-4708-ac0c-4bc385b071ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88a0905-8753-41eb-bdf5-93e7f7a35e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86571177-49d8-47d4-a6c0-72045358c10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a43e72-554d-4215-b492-75a057c40d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601ca57e-7206-4e6c-a948-e7a234c9144a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e0a202-5a06-4fb2-9b9e-517a5ffe55d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596e060d-958d-4efb-8060-63aaf8a475be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9499913-5b5b-4753-9d16-a7536e873466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac4289e-df2e-4941-8a5f-78948ce26b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f75b56-7291-442f-9e9a-8d1c38addcbe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c08ad0-ba0d-4aec-8d28-3ad06c44e805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6041ee49-a2a6-4357-8300-e264d30c6bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b22f49-a355-4189-977e-45a3348ea6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d08d77-76cf-4b4d-b02b-3032e6654023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d5293c-97fd-495c-8c21-1131358eea9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c153dea2-8d6a-4d1f-8460-8a35651cf4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79518d0-e7e0-4cce-97b8-bf1e2a4e25a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b662eb-a327-477e-acd9-c80099f0ecc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c774bb-e261-4e73-bdef-93a65aaaeed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ec5921-22aa-481f-b938-cd328fc2d679",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61830480-126d-44b6-873d-04c05a53e421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00ccbfc-6387-4bff-bdca-e602402319ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b38a065-def1-4dd3-b2a3-b2d19c45a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fb001c-72ec-49f4-9048-15b9c60b134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84415ea6-9dce-44be-ad41-1b16217540ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10205046-2df6-4957-9287-97e52a087a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e25dc82-be6c-4679-906c-11d1f0d13003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5e2ac6-8aae-4f34-9409-52f94526005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0069294d-7b66-4882-ab1d-b317e7794a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d940d472-c6ca-4dde-860b-2f387ccdf374",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b557c8-d1a7-46f0-a50b-e050b04733f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9611c252-54d7-47ef-a7af-eea802621f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06415f1f-caae-4194-b1b0-ef9cc1535d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7a88c6-24c0-405b-9790-cfc1f5841405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d73da-697d-4bad-a629-86bfeef4fd6c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b58ec0-f481-4bb1-9a2f-7a69c56971fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d793b370-06c1-4a72-a39a-55a6578e392e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2e2e9c-9fb8-4edd-902d-5429446c82b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8de96d6-ce7b-4197-a4ff-3e08eaeaa43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fccaf8-8f06-45ad-bd7d-670bf07ad903",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2a71a2-b0d3-447b-860c-9f448515265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c55683-a897-4b09-9305-d2dc644d742b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24776a34-f18e-4177-acd7-3e636cb0f692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0dafa7-75a5-4559-bde4-df1093ed9f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3a9e2a-1018-4e87-80d5-adba4ddecd06",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df2759a-49f9-4fcc-8eed-d29cae9f5e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97303baa-b95b-405e-aa94-0caa6cbd75e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9edd18-cb47-4525-bfbc-99f3be5371b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28624be8-25c6-4407-91e4-75d2c09cc976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48625e20-1c0a-47c8-8d4f-edf2b47198ee",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7825c32-1155-4e9b-bdb7-8eaa5d05f7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30bfead-4221-4c7f-aa31-26afef6a9b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2652d7e-65c1-4ebf-b526-2dae3d63afda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fabec6a9-a1ed-49d6-91e9-4b3142f9e5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b95d55b-a8ee-4ec4-b5aa-6493cac83ed4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224ee61a-a7d3-4eed-93e7-dfbb3d2ba605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98575de8-d0af-4dd7-978f-1964dabc4d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c3bd2b-6e2b-4172-921e-eee10b2b7025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9002a751-1823-4c6e-9627-ab9762aae4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27fddd5-48e9-471f-b1d5-bd8eec9c4924",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8594e0b-5d82-4cfd-bfad-20df58f9d115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ac49bc-4eab-4c77-8758-d775aa55f846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e52422c-fedb-40c8-b955-a245fb1b9fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a43d850-6b66-4fea-8f5e-1dba9bd2acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0772dc4b-0647-4bc9-8f87-7c04a9f5de20",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f693cd-c496-4207-a2a1-3447ea66bbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a569d9-5964-45c5-8b96-6be7ccc67829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e95f356-bf44-4140-8f5a-545a67eed88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1beb5e0-09f6-4cc7-8252-a5f7746a9c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f0ff5c-c1fe-4f70-80f1-d7db6a30a6f9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39616131-34c3-4510-b6c8-caf77983bcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f2a89e-0b03-4af0-952b-7d4e274db595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436384ce-687a-413a-9521-0b57c47613e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40a623f-bb83-4b0a-ad52-80bfbb7e46a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c39ac05-f59b-43fa-99cc-7b04875a875f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984f3c28-ebe6-4e28-8be9-18bcefae7549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69c9725-31e8-4a19-b30c-a852b18c0db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b753b319-0925-4b51-869b-d876cb4b8c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f02143-9e99-4441-9f1d-472aecc9837c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef2f845-63e2-493b-80b2-e3a0423cd027",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7396422e-aa3b-4339-a18a-256d7d444e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807c3b96-e6f5-4165-b468-58ce9d29e614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7183b45-cac7-4730-af95-8b5978ec8816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95255b0-7fb9-42f9-bfa4-b480198f19c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99f97756-ef20-4030-b7a0-f90f1e388a1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "692b599e-1cad-4565-a0fb-32a783eb5c91",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e219e88e-2675-49ec-bc53-f34f5214f693",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11b71377-7fa9-4e95-99c7-2630790ac3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1eb047-1c79-40e2-8b36-e33445b263ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb432579-0142-48f5-aceb-9c204fe88363"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f506bac-67da-4808-8eec-492365118f24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c877f86-f19f-4ee9-8691-84cc160b2ce3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5f32cd7-accd-4bf2-ae82-d531d4f45bfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59ea378a-4131-4cd6-be48-d8de3f205676"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db2e2933-708d-4635-96f3-26c01dfe984f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27597e17-a05b-4e7e-bbd3-0e08829796e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62e96eef-c929-4924-948d-86d47ba66e3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de143f9f-6e8f-421a-b0ef-8722a2ee88fd"
            }
          }
        ]
      },
      {
        "id": "875ddac9-593f-4fe2-aadb-df517258a2fb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f1b81e66-3467-4d5b-9dfa-8b5caab65dae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40bb0c10-844f-4ec8-86cd-0484656b4a3e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc617bc7-3b74-4f1a-9e32-9f03e4585f73",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba868d2-e7ed-4836-9b95-cfbec27f6d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a326faa-f89e-40d0-992b-9a6565003911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54db8899-f4e0-40a4-8af4-0917adec2801",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37bcd38-beae-45ac-be32-ee79ab8d493c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50e202e-b1ff-4862-9087-6f61b82e6cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6712428-629d-4744-919f-9da3b0d1c771",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aa4995-e9b6-4fa9-8270-14a94c64848d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc6b1dd-e31b-44f7-af33-ef659e919b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3339589b-53bc-4f5a-89bb-5b36cd7f4a67",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ab9e1a-3777-4640-a2e1-ccbcd615667e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7738ea-4084-4e9b-8f77-e2c5663d7487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a9060a-d6f6-4dd1-9a89-ccb92aeb171f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf1aa8d-b8d2-426b-abcb-20a6f466a5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95cefd1-ff84-4514-9360-4128d4b3f89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56c398b-51c7-47e3-8dee-60628306713c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2745e27a-574c-41ad-b900-fa4780797c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed3086f-bccb-4408-b4a6-8aebb316a103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8acca8-9e66-493f-8881-8394928fc5d9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9a6cb6-ff5f-4f42-b00f-96e10c515683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91ed2ef-dbfe-4470-8ea4-e9eeabb6db61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2ea849-c0ba-484b-ae10-3f1947291d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347c47ea-66c1-4d21-a451-6ea329a1e3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dc420e-bc43-4575-b9a5-cefb48768b0c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fd78e9-a778-4d42-8b49-ac61b7e35c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8a15b6-3cd7-4c11-b2cf-c8c77f947965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3f8139-c93a-4d07-913f-1b4a822454b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fbf8f7-4fb1-4db3-aec8-cb1d8970862c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b338c5a5-8175-44c6-aa07-a1be054d7a81",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4258fba9-4e82-4c0e-b8fa-d1a8082a603a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741660a4-1c91-46dd-befb-6f93e1a13fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392d34ef-ab1f-4741-ad40-60f1d0850596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01600a5-e735-465d-839b-33516c174360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60af1f75-3ea6-49a8-af77-7e5002acd343",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eacd0a0-9ad7-4384-b0c2-eafa588c77bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12606d57-1fa4-4de5-8f7c-2dfaaf11ce78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79cbec2-8a81-4884-9320-cb2e6b52a1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe5934a-f8f2-4477-ba4a-c9ab5987aa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe405dca-9346-4ee8-9d55-caff9cacd796",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47577d89-4f31-4e81-8922-749844d77f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bbabdd-899f-4d62-91b5-d666f1df0464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e2c1e5-ac6e-4c9a-a729-2566db07a78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22bda44-feb1-4aaf-8bb0-fc998a4b19a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cb1a45-7740-4402-97a4-4e7624af3549",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528b8cdf-511e-4b32-b44c-a5ff515a9b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f4a417-5763-47d5-b6fb-36717e97698a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67af4da3-9451-4e5c-a35d-fae000d7e1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d21f12-7f99-415d-b11e-d6ad751885a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c1fda9-763e-4667-840d-54c14a68ab28",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407fc7e7-340c-41b6-ae41-7d4398f7d434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c818884-6234-4335-8285-afb8b3033deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abed983a-48da-4e0d-b8c8-26a8eb9fc52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16404c0b-d970-4e0f-b72f-44113233fd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505ae2ae-ca18-4dfe-815a-721a114dcb84",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e083ed7a-e6f5-4f12-ab8a-203e117936bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9df07f-fb0f-46e3-9b6a-f0824366912d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92df73e0-e768-457e-906a-07406764a46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e71bf1-e750-48ae-bd5f-596647287439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e458b362-f2f5-4b47-8230-610e0cf69896",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb56f4d7-ba88-4423-9a9c-185fcb1f6a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd2a3cd6-de06-49eb-81c8-ef041b5dda80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33be985d-f58e-4f8b-8357-87320ea8486e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3553b6de-1eec-45ca-b824-dfb339010087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d02e9ad-788f-4b68-8a55-cdc104190f06",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3df96c-37a0-4537-96cf-bc6c7fb3a650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494cbf88-d035-4b12-9b05-f6e33a72af83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e874bacb-895b-4d53-a792-1f60856c160d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a2514b-98f0-461c-beea-57f0c0c3466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f6117e-8652-4d8d-8d0c-b5e7a255f17b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587e44ac-d5b2-46df-90a9-c29a6ff370ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a47bdc-862b-4a9a-8604-abcda806e52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228244bf-6644-4425-b6fd-40863c7ae5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49171255-f9d0-487b-92bf-915290dd9c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf7682c-875b-4dbd-bf10-eec44bd3f56d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20039388-ed0f-452a-834e-7b9c1a05c4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fa5dc6-9704-45b1-b930-4cbd740f167b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1990a956-fe3d-43d7-9347-3df8d975d119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9f65ae-1cae-4b34-a25c-71c0ae939e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9061868a-7c16-4377-8de6-910a00e7aeb7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a673c4e8-7489-4484-86ca-01e4bc66ff64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3d995b-ac55-491e-bf44-b965edebcaf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6af765-bf02-42f4-bc26-8f02648b6d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d6b335-e363-4aba-a239-cc74adcfaa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baac65d2-0f42-4fac-8c52-29513a5f7e62",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dc02c0-998a-47f7-8fa8-4311dbd30787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375d6d9a-6202-4a06-b091-b940cb18bce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0dc00b-d394-4785-85ec-5425abed9356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5230d235-0db5-4092-8bdf-649759900801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe64e1a-cee7-4d7e-b915-e7911928ab52",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043585d8-8a51-4bca-9995-dbd757195371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea47b09-52d2-4f6e-a5cb-aadca606ac99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c3edfe-583d-4f0f-9fbf-b3196f2bd627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ee8389-5ce9-4923-a19d-003106e6dbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df86ab4b-0697-4633-9492-83387a5fa087",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d67f38-fc15-4c42-bb8a-1d81c88689af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf66c10-705f-42f7-ade4-9c18f332f561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d6f4d-dd44-40cc-8454-3707c2305884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63b6fd4-6931-4725-98a2-edf696e9bc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3757c400-5c71-429d-9e7a-273bea014d5b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d62adf8-5912-43d6-a2c3-64a13f653e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b2bd36-66e4-4233-923a-948ab7a522e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf13a9af-a38d-4987-b5dc-80abf8cf08ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b132ec8e-6a78-451b-b579-fcc01fcd6d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d32c3c-b2b9-48e0-a7c1-979c8e77d216",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6d224f-7bca-456e-8d0f-6a232082d565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c49743-76a0-4819-80c6-ee55c47eb878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29658dde-0bd1-4960-ac2c-a85a0012ead9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490ed169-1242-4d22-a69f-d0fe3339b5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5627fe93-6226-4b1a-ac0c-1e3e41344f16",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4042c68b-3390-4a4d-95aa-8e569a9698e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32682bed-0f7d-4b3d-a4ef-0dcc8a6ce390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7478bdf2-6465-455c-9a6a-16c5a4fa8877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2dc4cf-1928-451b-a2d0-5719cffc292e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11de9753-ee2e-4552-be51-689b87cabb20",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faad8fd6-f88c-4cc9-89b9-df28076dc742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7dca46e-fd58-4c8e-8bd4-055e93fe8748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9ae442-3f73-4e7e-837e-1213176fbfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7e43e9-9c19-47e5-855a-fc1ca9c679ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da09982a-d6c7-492e-8c2c-286991b91755",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfe0c57-29ae-4bf2-b1ea-6a0576363884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878b82a9-6aad-4c07-bb95-a6b0831eb4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a991a66d-16c8-48f6-9b05-c20a909bff6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a01f28b-ac48-4ae7-8bf8-85f75dd43c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184cf688-d1e7-486a-8037-6dbebe7cffce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc132ec-4da0-4869-bbb7-f605c278d063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2c655d-456a-4f57-a13a-d9bbb142803b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10add82-b28f-42ef-83f6-26f03eb6d898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ba2779-2acc-4afd-9bf2-34efeedff558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba76763-28b4-47b4-bdb7-19d8776a8d44",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911a904c-0077-4f9d-8ff8-255033a55d9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db97cd30-e45d-481a-896d-2c1858d9b45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede7686a-181f-469e-8859-ed32ab03f1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827a2efe-b849-4517-8607-749bb55f2fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4955ad-d846-4f10-b68b-57db6a4b13d5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9cc46e-5bd3-4407-bee0-59f44dafb072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e6d883-eb33-4b18-8c60-a198ab1fa4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6da3006-02e2-4cab-80c8-11899cae17a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec6baa4-1800-4cfa-8423-dc516c968371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d9953a-5860-4baa-afc8-bb6ad5d0c9fb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fddec2d-5ba7-4c49-a4f7-d8c482120e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcb70d24-d056-49d7-9ec1-066d9ea5ace8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416dc526-b757-4e3e-89b0-9c5f84e61813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6001d98-46a2-4482-8c72-55f21d19801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b595b3-8aa9-4812-8632-72574d821218",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f487228a-0464-4be0-886a-5b11b5585e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfd8cb3-ebbe-4d0a-86aa-5bcee0c43e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b132f552-b378-4ae7-86f1-85e90b3ba8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7502c4d-9ebe-4a96-82d9-c6e804496dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d60577d-3d70-4c73-b7f6-6e08970f4d86",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95b03c1-1dd3-4b30-8327-d638f43572e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033fab28-88d6-462f-addc-2fc0f5172d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35d45ce-96da-4c7d-a6c4-168096a40ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acf972c-0cef-4acc-aff6-3fd549f804a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba69938-f5ee-4e99-a35a-5ef8333f5cfe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3362894-cd91-47ed-aa26-100df53f5526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f80ea64d-74ed-4ff6-aee6-e613e39fc074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fbe445-52d0-4f70-a349-56e0dc18afdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2b0ee9-9c46-4c9d-8c8e-822ee1d86afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba5f82b-21bd-4afb-aeed-e8db1b9b3945",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482282e4-1846-4156-a0e3-ec239a6f3b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d5fb1f-ef89-4bf1-b598-a070775e78f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c337e8-278c-41af-ad61-b2b705466f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0077f834-62d0-4cde-aa0d-a8bfb01e8213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f5cc74-b5c7-467e-b5dc-b9367a3503da",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767672d2-8c4d-4e3f-b0ee-4b6002d9c5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54bbf70-75d0-4bf9-8bb4-1356509db4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde511f6-9a3e-42a2-a7d2-97f8529b4ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fb9c2f-c41a-41d4-8b79-d04b375bac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f594ab-1212-4a59-bf9f-7685fbd25054",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ba092a-811e-4528-b23c-29ac1aa4ef41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12783256-e77d-482d-8c60-64e61bc11814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a7a1fc-b878-44df-8d9b-9f74c0b8268e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40b23ba-913e-420a-8454-7a03a1255c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d85e7a-4e1a-41ef-a4bf-28e28c7307b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794f43ac-e12c-400b-a7e2-eb6c80a82d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759be760-5b5c-460c-a3cc-39868436a3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b2ffcb-0cb1-4d4c-9a9b-c972861e2662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ea2127-bb98-4a5a-8a43-85608d78a526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecb6159-6248-44f2-9c1e-e10bcb5b8122",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956a2354-97d2-4106-ab9e-2cc6b3dd2629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e494ba15-26c5-4ef2-b55c-99bcbc9c150b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2143fd-1b45-49a8-84c4-6dd6ca3aeda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efb95dd-8236-4f00-a023-07037a6955c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ca81f6-1955-43ca-ad59-1d2155ad33de",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec50b3dc-f470-4271-ba03-b3b3299f4753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5ad4b2-d27f-4e62-b121-a1c391765acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec41b19-75b4-4a5b-80a5-198e77ae7361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1dcf0f-9fdb-4944-9a04-98a3cc2efb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a76fe2-13ea-47db-a7b1-c8df9de2e886",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadb6fed-e9d1-4d67-add8-16d67792e8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64a1da0-227b-46e2-b2f7-211dd5cc0baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d953289-08c2-4163-b288-8386b77fe406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1000ca60-349f-40cd-b7dc-2ab4047a029f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b00e07-f72a-4bc8-afdf-8a2428f75bfb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeb9c4c-e506-49c5-9607-abf2911173eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d2ba9d-c895-4082-95fe-7fb46cf919d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8616dc2-c696-4ea1-93e4-672faa9767fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5dc935d-5309-4da7-8079-0007ac250072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76e8ba8-1332-4430-8f96-bbb8651b7f44",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ecc96d-fd51-4025-a19a-cd0f7976156c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8419b806-5ec2-474e-ad15-e2936b105607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356c9201-09f1-46b1-bf9a-32a678653347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78675539-c5dc-498d-b425-202174d0b7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789ccb92-3ec7-4afd-afae-bac21e69a11e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad2df9-28fc-4f52-ad3d-f58cafd7ccbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd10eb8d-ed03-46ea-80ec-f021bcfda690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a955a9c0-9342-4b3f-b612-e7d58974fa89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7593f43e-2508-4c69-8cb7-e89f2d4916b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6820f32a-3b0f-4a11-b298-6411061b3127",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3197e86b-38d2-49d7-a740-676126c23bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726795a6-0390-426d-b713-7288d521aa8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd28b95-e8bb-420f-ada9-21b68dadd0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97051e17-295f-4b0d-86b9-9b32359fc574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f24cb6-a39d-44cb-a826-c68d892c0c68",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b1202f-5d76-4252-9253-d03d286ab36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3d3caa-e476-41da-ba01-02d54e493bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a255bbd7-0c58-42f6-8b2a-84e0b58943dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22100a87-795e-431c-ae17-0130f2c09741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5cafad-17f8-4171-b5c0-fa6602abba29",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2829f84f-2bb6-4bfa-9ce2-dfd4ed5f9497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c5fcda-7926-4f12-9f1f-f37ced71607c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec65eaf7-7377-4335-9039-50333581b94d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc5c115-117e-4bae-8f41-b0bff52fd5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6525d4-00c4-40df-b8f8-235a8a5ed28b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56935065-5e25-456e-b068-3723bbafe9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737f92ee-b286-4d54-acea-673cbd801e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef70b04-e390-4b90-92e6-a0b816b11b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1c824b-dd48-41d3-a361-7c40b65d9601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a64cbb-132e-4757-b782-ab38bc119d66",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f9e386-6290-4142-b338-2f38f1a0f79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79c82e3-2e3b-4b41-8427-f3a359d1fab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6972273-4a86-49d4-b7bb-b95bdb0bbf98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056e8a4b-f69f-4f68-a39f-34194ac7f8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bdbdf5-4781-4969-89a4-439312d60314",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce46c063-de25-442d-8358-3f60bec2e063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7688d702-d2b6-49ec-9eb6-be128fa49963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5555a5b6-beea-4f96-9ac2-046bd73ad766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14105bad-43ef-4341-a2bc-a768ece39fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da8ae0a-c5f2-471c-a9d5-4556c81c3a86",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2025d57a-580c-48c9-8168-6386b76b3695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8817c94-fcb8-45dd-80d5-7cf9fb384b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f66b1a-6372-409d-a868-043aeaed789a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210957d9-090c-437d-8d6b-ed7a5f5a368b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11559da8-d4bf-4aaa-a74e-d86e399417ca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c08aa2-4548-4b0f-918b-ea015f05d7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49677e33-7db8-4fe2-a719-937a7d2120bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7746ce6-f20f-432c-8945-1e79f8065ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e311439-ec29-4054-89cb-a325cbf19d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b4bd3-05bc-4f89-a644-3e0917056f9e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc9628e-0a66-4784-a315-c240ada340f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef29b3cb-47cc-4f82-bdf6-9e72a310b98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ea29b-4dee-4050-8349-aff9dcbd36e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583b64a6-93eb-4748-bf38-6cad5e89ef4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28ff4ee-e4a5-48e1-943f-545006cfb306",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8d5529-f938-4339-8a40-26bc4a53e419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7e0429-69f5-465f-a36f-b4c387e85ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322331a1-bfdc-4158-a310-2871bf9a8e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0076fcd5-f0d9-4e21-876f-f291b3bcaf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103bbc6-19df-4315-b198-a3d66ca6e01e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4964a9-026c-426e-956e-9485fb8f79d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c62d6f-c6d7-4511-bfbf-f1d858e756e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2b806e-b583-44fa-9f4e-9fd53e6f91f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c922147-5683-4827-af6e-1a74e7209227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47b725f-2deb-41b2-af26-7f835c1e07d2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4901c0-5ab9-4976-922f-cbe6c793c78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3e20e8-0892-41eb-b323-645b78e71dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b471a7c-1fd4-46ef-b343-7342d6590b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7f4526-fce9-4232-9419-90f202990268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e731561b-723c-49d5-89c3-f380b20dee20",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47a3dbd-3aab-4ea7-9141-4b5242b8ebde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ba01a6-2d2a-4b15-982f-029c95e9a51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c35de0-be43-4296-babd-1fcc2a821fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f27109-19eb-4ee4-bd67-5d94293581c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00595f55-d42f-4d8c-b29f-317a25dd7032",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a85eb4-5434-4171-bc0f-9f1e8d81e2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3e6026-939a-4d83-972f-8e192562a67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4675cfc5-bff4-42e9-8fab-2516ac97f4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510d7f12-15cc-4b44-b860-5bac7040323b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c519fb-10b8-4b9a-bb7d-618f2bcdb09e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03898966-bb10-4dc2-9a30-4c2c31d76e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6585a1a-a274-4f7b-9507-5f3aedff13fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66617886-a8e7-4acb-ac29-a6a026f62246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129a7ebc-75f9-4129-9f78-e7fcb4be0fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b5745f-26f5-4619-b4fd-d1fa7d1ea0f3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2499d22-fba9-4631-b4b8-0b313aec0e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7ab1da-d8bd-4a82-accf-22a5580f16af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69961b85-2efb-4ade-937b-0e8da167e530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc44039-0b76-4035-9f16-9ac913fc4b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ee56e7-012f-41e8-b666-b080a0b438dd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de0bcec-5a93-4c99-8c15-18c7e6596f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff007823-3746-4af0-a72b-2b84bbfbee74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054e19eb-83bd-4e2a-b406-065dd16e4d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddbaba2-a37b-40c7-8882-1a058648c563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269b7dd3-4959-485f-a361-b70047167ecd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82396723-aece-421d-99a2-b203b1b188df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609b02a7-d9b9-4296-b219-9dca0d4864ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e94fb8c-1bd0-4b29-b8f6-7187a8f99741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741abade-2622-483d-a492-61dd15a57db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69af781f-60cd-4d10-bb54-dbc7ef631978",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d7de21-0641-4d23-bcb7-cdaa959b2c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb0adf0-e2ac-48a7-89b8-91b7e9809ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d12ea6-e5f9-4364-a2e5-bbc55beb5de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abec4faa-4701-4d90-80ea-1ebeb2577380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d542fb-0716-49d6-a969-a0bcb4823c1e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9c288c-99d3-4a71-a04b-5751649cec2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceed7b36-a12e-407c-b6f7-c22fd2df6548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96dfd78-f47a-43ca-ad4d-8454638be798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9738de-902c-456f-97b9-a1b19c2ae8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dfdb3f-7647-493a-9f79-79c1614cc50e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8047e5-605a-421f-8abb-a4285631d82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e19129-16dc-4631-a0a0-fb06c0d27b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dec4e2f-657f-4594-9167-ed0d5f22fe0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de07d914-585d-4da1-9af6-eae5336c16ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c567e5d4-a35d-4cdc-bd7c-da53d13139b2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2192ce07-98f8-4f1a-b971-765c0d0a2d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d348f362-2439-4b79-8402-5443bddda07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f072051-a4aa-4ed8-8497-18b43b3d642c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1914d7-cc15-4d40-8456-1e24ec479b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fa5162-9e02-4bb7-8335-15395a16d208",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce67a0b9-ad8b-4d18-8fc8-a1971523490c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a32fac-b58b-4500-b921-2f78a7977ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6551e36-558c-4c35-94dd-f856cef3231d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc08f4b-5fb7-492e-b0e7-e60179b73057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914ce912-aed7-43af-9510-06500cd61a51",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce952a8-3c5e-4955-8b57-2a9c82b00c0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b4924d-a22c-4889-a173-34ffe1106f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29366c9-0257-4b97-bd53-10e4e1256e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e63f395-64c6-4a1a-856d-a700738bbff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a706dc-a0d5-4a3e-808b-d5c851884868",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb3d2ff-d6cb-47d2-87a7-dacbd8c772e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc9e91d-f430-4753-9809-425c2e9fe6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bb1018-bf45-4df5-898e-f3bed4c104df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64b6130-469f-49e0-9b1e-0d4308d4158f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac1d63f-7df1-415e-864a-eee050ad3995",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491dd757-8d30-4bde-9182-a2e8f5a3c708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d8e9b6-a36a-4d31-a0a3-cdf4679e898b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608c358e-0473-42b8-9cdd-baea15a9a950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd138db5-16f4-4409-a6a9-f02ebf87791f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6ed619-5b8c-42c7-b7cd-d364c582dfdf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb20a46f-989f-42b9-ab74-e2cdf03c1f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50c3e97-a581-4ca3-bf1a-f8ea7e7c2d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff71394-3a40-412c-b9bf-c04ef39cea5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf02d6f7-8d27-4db2-bffc-ae1db6f8cd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c978738-15e4-4905-863e-b62825b3da51",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917f9d7c-6242-4710-8544-5a3e290fd4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f72f23-9257-4cb1-8543-c9e1d5569bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eabd2a-f794-4808-ba9e-b95d1d6629ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcd4582-e80c-4578-9a43-f45af9f44bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a9dd6b-827c-4983-840e-c76e685bbb01",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77899c3e-4277-4f8c-87e0-4522c4a32864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84101a9-87af-40d9-b38d-f31c359f1611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd68fa5-ff6b-4995-9c0a-6ec7b0a7810d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dc6cdd-cbd1-4f22-9cf3-20926ad48a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d552f627-73f9-4eaa-ba14-5a1b9a434c9e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4aaeb9e-cd94-4ae2-bb54-2715a1c4c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10bc143-d046-4575-9b52-5247e4763777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1b0ba1-be77-4de5-8730-e5a002735532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecab767-0fe0-4d4a-8072-5f590405c6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991b3ffe-f207-4821-9cae-579ea1071d06",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ff8e1d-a6ff-451d-9193-f6c210596bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262d925a-5eb0-4acf-9a77-89bcc3a25cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b22ab42-5559-4d52-bb1c-5cbcbafc5134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b364463f-fb1d-4a12-b3de-e979d4c44be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213d7b79-0748-460f-8ce1-b0f403b83fce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bd0c24-2b17-470e-9dc4-a60315bcd5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e3c272-d1ed-4b35-b794-f189ebe193db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eea1415-bb64-4967-9fc3-f289939b1925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ae121f-e105-47d4-8dab-db22d85ada49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacefa13-8023-4bc7-99fa-3a7b266e6476",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58979bf8-cc51-489a-9c37-25af265dd815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba7dbea-6c6c-441c-b6a8-1cf348123c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7699eb25-efe6-4ef2-8508-865095e7eb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d37a3cd-4f4b-4c57-ac96-79670f790f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fac958-67fe-476b-9841-8b8b838a8b05",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323c3511-20c7-43c8-9d5c-3dae2322dbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a840a172-ec1f-404d-b9d3-5b8350861271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632bf016-c202-4d44-bf38-fd4b78dbd1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24d5320-4caa-42eb-9415-0fa7e914ba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7348a2-23bc-41eb-80ab-e71322a248ba",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeccfd2e-ce06-4919-9c30-6f421d9b1afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3174cd06-76ce-4f07-a545-5e65c35aa91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb3a1ef-f967-4d6a-a351-e83b55b9d581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370dc445-2230-4396-9256-de062b8990ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973698a9-71ce-4426-aff7-d8d386be6d34",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504cfa6b-9fb2-42d2-87a4-85efedadfa2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f8c4cb-cae5-4e71-b653-28310040fdb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b67d30e-feb1-4cc1-923d-ecbd2db545d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9756dc75-3706-494e-ae3b-3e4eabd8109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7025bf-00b5-4168-969f-103e6d52c103",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86007939-b370-4231-a6e1-a2d9693c7934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9745d3-3715-4c2f-b15f-f6977d8e276a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1028a855-5e20-476b-b12e-04b2a94bb078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4970896-b383-4c69-8b65-db22375cb1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea3dce1-2ca4-4576-887f-aef66dc74560",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2b04d9-6079-4437-a37b-e3ed0245a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ed89a7-4788-4132-8bd3-255a2280d2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b9a423-323a-4566-9434-09ad4ad1de17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e1900e-35a6-4e9a-83c1-81789481d008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dd2b79-e1d1-4fff-bb0c-a4ba15a5864f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f11c5b7-aefc-463a-b86d-35d2ee2cfd50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e29357-ed0e-4e52-af70-e1a81c502906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecf4c8c-c1bd-4416-bd96-14e1a112cd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce3d9c2-409e-4fe0-8199-da2d48a1f894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7289b3-9328-48dd-9fb5-3d68dc705d16",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7287eb56-9b64-46dd-b007-118f17151706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a35879-d3f5-4bbb-a44e-c22a16d0b541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35070537-caf0-4364-9f5d-9c1d226f54d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d099b6d-8e87-4bd3-8421-1d79ccdc517f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e1de45-3816-4295-a57a-160eb9ea53a7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9837e-7e70-438c-89a6-ff4bd3984d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4775011-ab54-4702-a5ad-8aa003aaeb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f650d88-2d21-44a9-b885-820d8c83846c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa7c9f3-5cbe-436b-974d-7aa95c638660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c2bc0-a270-4124-9045-6e9fe0a749c3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4570d54-84e7-40b9-9d7e-66a3eb5fda15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6c1879-b1bf-4d51-9f14-a60508654965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ae36af-a16a-46c0-a0d3-486340f394ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9aa16ce-dfb8-4986-8ea6-e086c13292db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6be459-2aab-4467-98e7-9df512949d03",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0e9811-a71f-4e0a-8c40-bd3fdf445622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c23b02f-2708-47a5-aa1b-7771fbf49e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2371f099-52b4-4ff9-aeaa-c7e852093ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb8c7bb-7ece-453b-910a-b0ffbd6c7dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088f7a49-81ed-4ef6-935b-ae78b7f34577",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f723e5c8-be7a-4eae-ae59-9182de9c99de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bacbf4e3-2ae6-4ef0-a3d2-d424a3a62662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70927171-06ea-49b8-afd8-7271ff0fc07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611a244d-9cd3-49ec-aac5-a25b4dec5627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca28218f-86c6-4537-aaeb-ca21d6e3f564",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7545dae1-cf4b-4f60-87a7-21f329cfa54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8bf60d-0a6e-44b3-9891-de0af788d8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c2d591-92ac-4adb-a6ca-7ae598ab17f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a8cf39-830a-440f-8f3c-2e5be911e838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004fa581-30eb-4de4-bfc2-0b4060139c58",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10aad92-c313-4d34-9436-0867a2a4d070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89152632-7aaa-44b9-82eb-90d9c1c93055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf67968-40ea-4355-aa77-691dede1e3dd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73fa846-80e0-4d30-b7f1-9404bd578ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dae68a4-3ebc-4ec2-8625-e5c10bac0437",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eff17c-e680-4ef3-bacd-9b8b4572fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b614a2-0de5-40f8-9ad9-f17ad9fd2a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b090c441-cdde-48ca-9679-9a2c6e30e96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cd34d6-e778-41f2-8fe3-5beab72b5988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235cb0d1-59a1-4929-8d87-16117f9f43e4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a657000b-ee9d-4456-942c-4018ecadbcf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5faeeef0-de02-480b-afae-a258b04da852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e8d0ce-3af5-4629-a8b3-97f5de055420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb54ecf-eae3-468b-b5c6-33a14397a598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f304cb3-9ac6-4f35-81ed-8d3b91196be9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1391b1b5-83e1-4a06-b585-8f34bc75552d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30555ae7-2313-4016-b14a-d65f920d9da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64834c5-466e-4717-9042-778c2604db5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322a0b05-7170-49ce-acd8-dbe81e1c5f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01c67f3-a70a-4972-8e35-ab228b857852",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a467d7-7678-49aa-b8f0-e8153df69815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51eaea24-d5cb-4771-96b3-869db9968c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02c0b6c-dc67-4b07-9533-e637831b8776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6ee94d-05c5-405f-8a19-b4e55e8fd067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3562e92-5438-49d1-8656-22f0b6cb70f5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc52eb5d-61b6-4c03-b5e2-1184abf7f863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da352060-2b50-417c-a30a-bbc1025cba9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db14ddee-3ed9-4179-a1ee-4bb3b004f7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb2957e-4603-4447-afd9-3f291f1583db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970a65b8-0cd8-42ea-b7c5-95f12c29533e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b743fe5c-eca6-4cac-8f64-e145fcee38d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276331a3-8751-4418-90d9-e48347e0bed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fba8e0d-567c-4105-a5ef-fd20fb64c8fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ea9ea1-a806-4fff-8970-37b6cc5b31c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d946e72c-9e17-48ba-9d0d-bfd0c815450a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589cd9aa-4846-400e-a6e5-39ffd7d12324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9092833d-33e6-4ab7-bdeb-edd908dc6b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1faa481-2d2b-4b32-b2e1-4aeae6448836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68fb678-f5e2-46b8-804f-b2a4734ae02a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "464669f7-a539-4bbb-b22d-e219c0f1b3c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "059326a4-a496-4e10-acf4-0371f61f88e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d86f7e5b-f514-4e57-bebd-ea02bf07d099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2dd176d0-b362-4baf-9bfd-00503e822e0f"
                    }
                  }
                ]
              },
              {
                "id": "fdb3eb8d-651c-440d-84ba-e54bbd62a4c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9b72214-df26-448b-9256-1746215778f8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb601a11-d950-4f67-8388-9425f5fde03b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8b22e799-aa44-40df-879a-33510e4c8e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b47b2b-b062-4d58-8a81-b1f173f6cea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b7b80be-1873-4b9b-8e5d-a9ae527adefb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cfb53d6-616e-48b2-a899-70ca2f696faf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b4cb3a6-3e29-4dd4-92ea-054c04fb3fb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a11e1962-4c00-49bd-afbb-5b2125243d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40e5d63b-7feb-46c3-a066-2021d72e0cea"
                    }
                  }
                ]
              },
              {
                "id": "2c79b861-adbb-496e-9f69-4904e6ad2cff",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "81421ba7-2bb5-4613-84a0-9d2c51b88031",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db28e2b6-c81b-45da-b017-c515076282be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0791e136-cbc3-4710-bc13-6f03eebcbc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9bdcc-43ec-4159-868e-5f5666d7b1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3d4b24-254a-407f-bbbc-224f5ef24f54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83e762ce-b077-4f6c-8bd6-c90bb8f5db93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a01eb0b-0ff3-4f36-bbd5-7daf41e1edba",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdb066bc-4b79-468b-83c6-fa8497da907f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec0357d5-e436-473a-850a-e0ede16ccd88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b378719-6046-4fe4-9ad2-f23ba19d988f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad7a974d-1b2b-4f70-885e-69be6ffa1daf"
                    }
                  }
                ]
              },
              {
                "id": "bf032cf5-a4b1-497b-abd1-f0a5f947996d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "936721ec-ecfc-4d59-a874-06cd2ee5c6ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0f23a98-5026-4d25-a4d1-585dc254a1db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "500113ab-8a53-44e1-bf85-97c68d429221",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc2a8bcd-8543-4760-8de0-a50757f87ee9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5cae42f-1c21-4f9a-a9eb-4e22c0ffdcaa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e6d3f8cb-466c-43a6-801d-c62840a44b8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10055b19-b970-484f-ad38-3396fe4f991c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67785ac0-68e1-4af6-871e-65ca1c37080c"
            }
          }
        ]
      },
      {
        "id": "8ead5567-0335-41e3-8244-074865d8279e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f0403adb-b85a-4f0e-81e4-2ad7b7877639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "697d0725-db9f-477c-a471-904feea9a8d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4176e917-4bcc-4ad1-a89d-c638dbdc8353",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbc26d3-1369-4e50-b85d-f3cb9732bfe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2789c40b-81ff-488b-805c-2abca8810bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a786ac-0e05-4616-a407-23b97a7a3f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0b4379c-6f6a-44fb-8420-ead58cf01a20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015764d2-e21f-4017-97d4-4a43284b3343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcf28c85-dd5d-4f76-a8f3-7d70828b4ca4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82abfc8d-c8db-4c1a-a188-33c4e57fbeee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b772b1f0-0dee-4169-8242-5d7a37f70caf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81ebba34-433c-4667-9fd8-fe6905e8c5d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4e300a41-c2ae-4357-bf45-3381da8faa27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c27ba6cf-1876-48b6-aa67-9ef7647bfcd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f4c1076-bc08-4dbc-87bf-f9615a10fe79"
            }
          }
        ]
      },
      {
        "id": "3bd4c03b-315f-464c-9e1f-6460c91cfc22",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cefc3fa9-08d1-40d9-a2ad-3d0eab012f69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82a7fc88-11e4-475e-b0ef-a63b7a96e171",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b42e5b23-8ffd-4048-be3e-61debd822ef3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4adf14b-5130-4138-ac3d-23da72d79919",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11995766-8f05-4907-86e1-84c174d3ec5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb75723-a01a-49f5-b0bb-7684acc13918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1742d53f-73bf-417a-a416-66c4b220cd78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21dcb67c-3c82-42d4-85b1-006731f3b698",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27927f5e-3ef1-4a90-b8f7-2500849ed41a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "280686bd-8d29-44cd-9f40-e82917d8c6c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e97fb20b-93d2-465d-a03c-57a83885ec90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9a5f832-a295-4da6-80c7-0a071bac27c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74fdfcc5-54b0-4f7c-b976-368a9f80a5b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f62b3caa-ccff-4046-81f6-97dd81417927",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e307560d-afc3-4bf0-b6d5-588c5a2a3dde"
            }
          }
        ]
      },
      {
        "id": "959cf76c-8783-4521-a921-d9156c4493fe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b881013c-73af-4ceb-ae41-ef4a972b32de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bbb5b95-fa2b-44a7-8f19-3992181d5600",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51a7a06a-5ce0-4344-a244-41bf0c88cf95",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ef38d-c564-40b2-91ae-a5bc52519b0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a14ed56-106f-418c-a8dc-d4889bf60328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb2f246-2ccd-4b44-af48-35e7f71649cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d36d674a-ca32-4774-806c-9e42d2cb1154"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9036e557-dfc2-4eae-9388-635ac9df4bd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cceb3728-c962-4fe6-a1cf-8bbef9575ed0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c3413ab-f490-4c2e-9cf0-7a1e9158b39e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5eda770-5094-49a2-9023-f7cbc0e9f7d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e291ec9-79f2-415a-8326-862672781ab0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfbe468c-d69c-40e2-8e62-bf6fd5b42944"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3df598d8-68d6-4062-8bb9-472991103ae4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8784d399-8a70-422f-949d-fc7142a9e772"
            }
          }
        ]
      },
      {
        "id": "4f633800-78ec-43ed-b554-39cf03c56731",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bc1f725-94d9-409b-9787-380007728005",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "215c8ed8-0741-4347-a5f6-09ec1c1fb8b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e8418ecb-448b-42b7-b295-f1dd82e4c328",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f3a8f5e-d506-4b47-9ec0-4beb6fe9ba21",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e657a43e-d0c2-4195-9c67-470c9708f8f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 300.0912698412697,
      "responseMin": 20,
      "responseMax": 8398,
      "responseSd": 1241.447534036397,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719016659568,
      "completed": 1719016743712
    },
    "executions": [
      {
        "id": "41ef72ff-e09d-4193-bd8a-6e4cfaba18fd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "98758c3f-e114-42d9-8b81-b776a694705f",
          "httpRequestId": "816b74f3-7a29-401a-8ade-aa35db32af82"
        },
        "item": {
          "id": "41ef72ff-e09d-4193-bd8a-6e4cfaba18fd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d798778e-f55a-4ec3-ac64-4a65f5edba89",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 0
        }
      },
      {
        "id": "70dcb1fa-8eed-411f-a6ae-c9aace9d5348",
        "cursor": {
          "ref": "4bbb5c5b-1bc6-4cfe-9f9e-6e3121c0d448",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3cd756a7-a071-4227-aa6a-b9fea99b6b30"
        },
        "item": {
          "id": "70dcb1fa-8eed-411f-a6ae-c9aace9d5348",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "12fbe3fd-6b59-4d27-a843-a7fc43d90354",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "e7a04df6-9abf-4ed9-9c9f-005c273d9f3f",
        "cursor": {
          "ref": "c26ae056-a346-47a6-a868-3633d61478cb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5e464d08-1135-495d-91b4-fcda98c6da27"
        },
        "item": {
          "id": "e7a04df6-9abf-4ed9-9c9f-005c273d9f3f",
          "name": "did_json"
        },
        "response": {
          "id": "e3c1fc5f-386c-46ab-9675-9ec5570583d5",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083a27c1-fcbc-4aff-b9f1-2272bccdd209",
        "cursor": {
          "ref": "e44e2b98-21d6-4252-b2ea-5b427d494fad",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91a4ae6a-7918-4b04-9777-707424b79a2c"
        },
        "item": {
          "id": "083a27c1-fcbc-4aff-b9f1-2272bccdd209",
          "name": "did:invalid"
        },
        "response": {
          "id": "907f0f9e-206f-43bd-9ef6-e3aa6bf259b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2068,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083a27c1-fcbc-4aff-b9f1-2272bccdd209",
        "cursor": {
          "ref": "e44e2b98-21d6-4252-b2ea-5b427d494fad",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "91a4ae6a-7918-4b04-9777-707424b79a2c"
        },
        "item": {
          "id": "083a27c1-fcbc-4aff-b9f1-2272bccdd209",
          "name": "did:invalid"
        },
        "response": {
          "id": "907f0f9e-206f-43bd-9ef6-e3aa6bf259b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2068,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8048ae-d44c-4f2d-9902-a79f0a419d85",
        "cursor": {
          "ref": "a0671bdd-2174-445e-9dcb-cbb06d3d9bee",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bd7bc86b-cead-4db3-920b-2d9715b8f3cb"
        },
        "item": {
          "id": "1d8048ae-d44c-4f2d-9902-a79f0a419d85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "60cf0947-aef5-4413-afcf-998b3631081f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2345,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5fce09-c5a6-403e-ac50-6fe33f8c1d75",
        "cursor": {
          "ref": "810a34fa-3182-4ea4-9149-29466d70e25e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "238410df-3b8a-4646-a21b-47792273d7ee"
        },
        "item": {
          "id": "0c5fce09-c5a6-403e-ac50-6fe33f8c1d75",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9120275d-9932-4a7e-969a-a6267fc250cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2289,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2380a2-2866-4550-bc9e-10dae7be35e1",
        "cursor": {
          "ref": "5e616689-a065-4e39-baca-c9fadcb5980c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "14d8a9f1-d838-47d3-a9a7-0f2be8fe90e8"
        },
        "item": {
          "id": "de2380a2-2866-4550-bc9e-10dae7be35e1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0fc3dc82-a4e3-4e3f-83ee-58e6d39e5d9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d2bc67-bfc8-47d9-bf00-f4cd976c863b",
        "cursor": {
          "ref": "bc1a6470-3bfd-4c6f-8e05-85da556c5a5f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "347435f2-d0c6-41e2-8131-8b15d1c86e80"
        },
        "item": {
          "id": "f8d2bc67-bfc8-47d9-bf00-f4cd976c863b",
          "name": "identifiers"
        },
        "response": {
          "id": "a3b3b455-e982-4ea7-ab43-1f295328ee21",
          "status": "OK",
          "code": 200,
          "responseTime": 2428,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ce4378-3074-468d-aa96-9f1b48f5696c",
        "cursor": {
          "ref": "e228739e-1759-4dfb-8bb2-a8cfb1403166",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "29705bb7-44b5-42df-90cd-77a3f9c2edc2"
        },
        "item": {
          "id": "48ce4378-3074-468d-aa96-9f1b48f5696c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea7233ad-8ad4-44f3-a830-5ab8c056fa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7066b1-3a94-416e-b4d6-0d63b9dfcefa",
        "cursor": {
          "ref": "3530fa55-9057-40fd-849f-14bbda0a66b5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "407b8862-dc2e-4e0a-922a-364505fdd006"
        },
        "item": {
          "id": "af7066b1-3a94-416e-b4d6-0d63b9dfcefa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d7b4d8a5-3a63-4c91-b112-69bed28b8c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a86c735-13c3-4b68-9641-7787f4cdf35c",
        "cursor": {
          "ref": "95fca06b-dcac-4861-b907-9e3334d7a277",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "72a1d82a-a5b8-4a46-a08c-0a2b79482d12"
        },
        "item": {
          "id": "5a86c735-13c3-4b68-9641-7787f4cdf35c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6fc05868-136c-4e24-9832-33b6f8a2cc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea31e7c7-6401-471b-b92a-792e0c1b4155",
        "cursor": {
          "ref": "55d45c3a-1b3d-436a-8624-6bd17eb6e167",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7bc37ef3-f8dc-438c-a576-5126a39c499d"
        },
        "item": {
          "id": "ea31e7c7-6401-471b-b92a-792e0c1b4155",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7a736a5c-0134-4bed-84ba-88aa7e414ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b7c6b3-561a-4ee1-95f6-33db7edf9bd8",
        "cursor": {
          "ref": "9b81d883-0f0d-430a-8f0e-5479ef94302d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "727b8a4e-b566-436c-8dad-23d9500dcf7e"
        },
        "item": {
          "id": "b9b7c6b3-561a-4ee1-95f6-33db7edf9bd8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3d32be8d-d931-44ef-934f-1075b0df9db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b28b7d2-22df-4246-a1f4-01b771872d7d",
        "cursor": {
          "ref": "5b96f3be-1765-4b42-ab1b-7c5539b316f1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "90c1f478-c252-4622-a31c-731b48a7b034"
        },
        "item": {
          "id": "3b28b7d2-22df-4246-a1f4-01b771872d7d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6edcfe61-8641-4438-a181-cd8adaef436a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070906bc-f042-4733-8eee-5ee5665875dc",
        "cursor": {
          "ref": "04186e74-8fe1-47c2-89be-ccab2704b3a8",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "54e303e5-ca38-4ef1-9932-36a3c5572fce"
        },
        "item": {
          "id": "070906bc-f042-4733-8eee-5ee5665875dc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e1c67bf4-eae4-4e6f-9bc3-bc12a5f42da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a29a3f-3ba2-437f-8c65-774a6b7d5228",
        "cursor": {
          "ref": "a2ae4420-1071-4504-b332-ac138bdb957c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e6304d8b-875b-4b7f-b5ad-1c633997d7dc"
        },
        "item": {
          "id": "a0a29a3f-3ba2-437f-8c65-774a6b7d5228",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "236905c8-6cf1-4823-ba62-3f3c1634c8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27df083b-497c-49a0-8f73-a24e373d97e9",
        "cursor": {
          "ref": "643c0f72-4d1f-4d48-a4a0-6497260986d1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0dc25afc-efc3-4e0c-b272-d7e53530f83b"
        },
        "item": {
          "id": "27df083b-497c-49a0-8f73-a24e373d97e9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a025d342-5b28-4054-b18e-12af02eefc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fc400a-ccd3-43cb-8236-ee0be3ba731c",
        "cursor": {
          "ref": "49da58be-894f-4353-9c55-c15f294eef8b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1af6f82-c041-4077-9eaf-dd704ca5b625"
        },
        "item": {
          "id": "c1fc400a-ccd3-43cb-8236-ee0be3ba731c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "44775adb-bfff-4a18-b85f-8ede16822b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9191254-dfc8-45b9-aa6c-e17d2894611c",
        "cursor": {
          "ref": "004ca61e-39c7-4fde-b807-387ce34f944d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fd01714e-6147-4de1-8db5-d6f042cb4419"
        },
        "item": {
          "id": "d9191254-dfc8-45b9-aa6c-e17d2894611c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b316dbd9-e9fb-4b00-9f4a-cc8075cada1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec959df-ed9b-416b-bbce-b7a631e2dfff",
        "cursor": {
          "ref": "7f63b7e5-d53d-4ca3-965c-b6ade62e9ee4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a98e8f91-5298-4370-bb66-3f7d5999d0d5"
        },
        "item": {
          "id": "aec959df-ed9b-416b-bbce-b7a631e2dfff",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "86d418af-c4c4-473f-b127-236ebf4b1ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f6b872-6c50-4ce4-9981-f2010c6889e9",
        "cursor": {
          "ref": "19fe38b3-a278-4037-8713-30038093fe91",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "40e72051-0058-4301-b4d6-84cb1cf31b00"
        },
        "item": {
          "id": "15f6b872-6c50-4ce4-9981-f2010c6889e9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "12430cd5-e9e6-4758-9502-926879f1e1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb3e8d-7038-4d2b-bcce-59a977da045b",
        "cursor": {
          "ref": "5c1f971f-b899-4e5f-bf37-bc28abcec4ad",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "57caa99e-2440-40fd-a949-83ee2c32899d"
        },
        "item": {
          "id": "4cdb3e8d-7038-4d2b-bcce-59a977da045b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "06e9c095-3c38-4cef-af6d-82d64731559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2596118d-5667-4b4f-bd55-8660d581536c",
        "cursor": {
          "ref": "4507b2df-a292-41f2-a77d-7be0186c6de5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "27437e6a-02f2-4220-8479-747a980fd65f"
        },
        "item": {
          "id": "2596118d-5667-4b4f-bd55-8660d581536c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "52a0d1de-1a53-46aa-918b-382b0becd39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f5b6d8-e0b2-4455-a55e-aac5bf389830",
        "cursor": {
          "ref": "2f981f1b-c05e-4a95-82d9-496f77368c6f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "84dd852b-7790-4007-8119-4287480cf4d2"
        },
        "item": {
          "id": "22f5b6d8-e0b2-4455-a55e-aac5bf389830",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2db2657b-825a-49ec-824e-19f3895bd733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960b0e65-4704-47e0-b0d6-7e85d4844e63",
        "cursor": {
          "ref": "f4a47b75-4dee-4bb9-bddc-f23ec67408d5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad876daf-b754-43a0-b4af-dd7a9625cd59"
        },
        "item": {
          "id": "960b0e65-4704-47e0-b0d6-7e85d4844e63",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9568ed07-ea21-4c93-b696-0df14d698f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c933ce-1201-4c67-9a5a-0ff8ce23d647",
        "cursor": {
          "ref": "8399a13f-b6c3-487a-8d1c-5b8123d57906",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2a2ab382-8ad1-4587-a929-6b6fc3ea091d"
        },
        "item": {
          "id": "e7c933ce-1201-4c67-9a5a-0ff8ce23d647",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1f5d8432-c9d1-42c1-87f8-ab19affba64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68a9f85-2007-48c1-902a-10eab3a3af93",
        "cursor": {
          "ref": "8764174a-27aa-44a6-b89e-4c4d72bb8ef5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f84916e3-77b7-4c55-8ad7-f3b0d7181bc2"
        },
        "item": {
          "id": "a68a9f85-2007-48c1-902a-10eab3a3af93",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b48f839c-b27e-481b-9940-0873c9aee0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c395d8d1-00ab-4a48-9c14-22d679920d78",
        "cursor": {
          "ref": "72630803-4a65-4c30-ac73-9b696229eef1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "736a7240-29e6-4ee0-9a9b-9ba6dad4796d"
        },
        "item": {
          "id": "c395d8d1-00ab-4a48-9c14-22d679920d78",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "250049e3-b59c-4bbe-854f-86004a8d90ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c92df56-9cc1-44ec-bdb2-2341184cbac3",
        "cursor": {
          "ref": "3fe5fb96-0c0b-4437-a6f3-18d479304e2e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b2355199-f564-4aa4-be6d-14301181796f"
        },
        "item": {
          "id": "9c92df56-9cc1-44ec-bdb2-2341184cbac3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d36e0442-acc3-44c9-b6f8-ae43e895c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2e779e-4fd1-4896-8ccd-83441c9701c4",
        "cursor": {
          "ref": "76584f1f-fe4a-4195-a337-74087f5955d1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "648daf62-45ce-4d20-889d-4a252fe20a9f"
        },
        "item": {
          "id": "ed2e779e-4fd1-4896-8ccd-83441c9701c4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5fd1ded3-2e57-43cf-8d1d-854bb90af867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9803ee-a565-419d-b249-eccadaffd24f",
        "cursor": {
          "ref": "7174a7e7-365a-435f-b23c-9548456e29a6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "334db276-9dc0-4fa6-a2da-9e0da5531127"
        },
        "item": {
          "id": "9b9803ee-a565-419d-b249-eccadaffd24f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "96653c2b-7bd8-4d65-8c22-1b80586ca85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84500d61-0e32-4ac9-b276-bfb8da3470ab",
        "cursor": {
          "ref": "9b189d27-6fc5-4327-9946-f0eaeaa7c5e6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4e59c698-a1a4-4485-a05e-002733c446f5"
        },
        "item": {
          "id": "84500d61-0e32-4ac9-b276-bfb8da3470ab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "292eb0e8-09d2-43b4-ba90-441f09ef7b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663d5914-96bd-4f77-b6f8-d3d06c173ed7",
        "cursor": {
          "ref": "bcd51de7-64b1-47a8-aaa0-1c9ad46427ba",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dabe570b-d223-45d6-b406-f698ffb2f7fc"
        },
        "item": {
          "id": "663d5914-96bd-4f77-b6f8-d3d06c173ed7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "630ca66e-a550-4d2e-b75f-1efd89959260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de49459-7aa8-49e6-811d-ef7e0198bdc7",
        "cursor": {
          "ref": "38758950-766c-46c6-bd34-10597aefacc9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "015fb9b6-b26a-4634-86fc-01dc4c0fa401"
        },
        "item": {
          "id": "1de49459-7aa8-49e6-811d-ef7e0198bdc7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bdbeb0cc-c930-4e6d-b666-384b907d65ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7b1d5a-4a24-4b37-885b-48baf875b03b",
        "cursor": {
          "ref": "ea508da3-f0f7-412a-86c5-59276fe45597",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bee6464c-958e-42b8-a3b4-713e59d07919"
        },
        "item": {
          "id": "0d7b1d5a-4a24-4b37-885b-48baf875b03b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ece5e672-f15c-4c84-adc7-78248245c0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b2610e-d8e2-4d36-880f-fa8e4670d768",
        "cursor": {
          "ref": "fbbce764-91a8-4fbf-8041-96feb5c3319f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7c5f26f0-02d0-4f10-9cdd-a00accfeb36f"
        },
        "item": {
          "id": "d1b2610e-d8e2-4d36-880f-fa8e4670d768",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b0430986-d6da-4165-a323-fda200491486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e2584b-759b-4761-88c6-daaa488a5157",
        "cursor": {
          "ref": "a8f4f019-1a35-4f89-90ed-af84ee9447fd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "690043dd-25c7-4666-9745-6a27cc4cc11f"
        },
        "item": {
          "id": "50e2584b-759b-4761-88c6-daaa488a5157",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9895d387-d227-4fc2-974a-acd499cf2778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2381e03-edd3-4dde-af44-2535e6742e5d",
        "cursor": {
          "ref": "9585bcab-a09b-4fe0-b0c0-cc8d8d00074b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "917c3eda-5d7c-45c4-bfa7-240946b826a8"
        },
        "item": {
          "id": "a2381e03-edd3-4dde-af44-2535e6742e5d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "16c2e26c-3f54-4cbe-b539-04338800670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcc3ed3-5765-4ff2-8165-4d5e343c24a9",
        "cursor": {
          "ref": "582047df-10c7-4d05-addd-a6438577a608",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1ee32b07-5a78-4a49-8d2c-8f0b20392da8"
        },
        "item": {
          "id": "dfcc3ed3-5765-4ff2-8165-4d5e343c24a9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a10731e2-f820-4436-9734-900ef181455d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c4518a-ac33-4e11-8d59-23ca99f97c98",
        "cursor": {
          "ref": "6c621dda-7f1a-468f-8f08-d26eefc089ee",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7dc859ee-9c01-4e9a-ac55-8595a83a4bc9"
        },
        "item": {
          "id": "16c4518a-ac33-4e11-8d59-23ca99f97c98",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "350a6c29-9cc8-4b17-a4ae-a40c84056930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c987b6-ddae-4b5c-849c-b5209b17a073",
        "cursor": {
          "ref": "4ecdc31a-a449-4f8b-bc2c-a5e77b9569b6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a9e56180-6db6-4a06-bfaa-f015e2c02a5b"
        },
        "item": {
          "id": "16c987b6-ddae-4b5c-849c-b5209b17a073",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fca2ce66-7a4c-48f2-ab2b-696b504fec6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9512e7-db23-493d-bbdd-b0b894016b03",
        "cursor": {
          "ref": "aced3d65-f777-4976-9206-e47b269d9b29",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "317a58ee-e7b9-4b7a-ab3a-ce7d42cf30a3"
        },
        "item": {
          "id": "de9512e7-db23-493d-bbdd-b0b894016b03",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9ce4ba39-1236-4e70-b147-bd3c1536f470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deac1cfb-c771-4c09-aa79-c893b61bac99",
        "cursor": {
          "ref": "2b08c0c4-e5d1-4159-9816-78f1b2dae4c1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "63a022af-3d73-46ff-a668-c2ea924f92d8"
        },
        "item": {
          "id": "deac1cfb-c771-4c09-aa79-c893b61bac99",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "20b2e5aa-520b-4ca8-b272-499cfca096c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950ccd72-bb0d-4ebc-afe7-1ebbe6a15490",
        "cursor": {
          "ref": "056a45e0-9050-4d35-b0d1-b9dc0bc932d7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ce6d638a-c996-4715-9529-2b491a124976"
        },
        "item": {
          "id": "950ccd72-bb0d-4ebc-afe7-1ebbe6a15490",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e60337d3-e8ae-466d-b04e-ea54a9019e16",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eda1dd3-6156-4d20-b743-7edc6edf0fa9",
        "cursor": {
          "ref": "2743282d-a5fb-4028-a078-bae100a5d310",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4733223b-d534-4204-bfe2-ada01ed488f2"
        },
        "item": {
          "id": "8eda1dd3-6156-4d20-b743-7edc6edf0fa9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0e7d78f6-3b56-428b-a45e-b0d6fda7f690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2266cd-cb92-4516-bd7b-d542f08f8dca",
        "cursor": {
          "ref": "a209a914-479d-4b9d-9908-e65b033c3206",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "614ce477-e5a8-41b4-8c1f-c97710132a6f"
        },
        "item": {
          "id": "3e2266cd-cb92-4516-bd7b-d542f08f8dca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ef209132-224b-49e5-aa6c-2b3343aa4e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06884bd2-6887-4a82-9993-2a877033801c",
        "cursor": {
          "ref": "41a125e0-1026-4ca2-bf5b-bcb5e74285ba",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "987d98ea-a7e9-47b8-9bdd-b90d77fc545d"
        },
        "item": {
          "id": "06884bd2-6887-4a82-9993-2a877033801c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "24a6e40d-eab0-4bd3-8156-01a27c3406e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9a825e-4949-493d-a28b-3bea97ff6a87",
        "cursor": {
          "ref": "53f8f328-1081-4d02-bcfe-9a6e2dfeca48",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "483f90f6-9498-4288-8462-92df1204a212"
        },
        "item": {
          "id": "cc9a825e-4949-493d-a28b-3bea97ff6a87",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "84ffa4a7-16f8-44f3-9546-feb5352e9139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6389c8d0-2988-44ae-95a8-dc1f7ea84aad",
        "cursor": {
          "ref": "87d28c4e-3197-434f-8e3b-8c577e3c4ab7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aceeeafc-2cf1-43aa-be44-ae6cea6b2576"
        },
        "item": {
          "id": "6389c8d0-2988-44ae-95a8-dc1f7ea84aad",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9c722b6e-fb1d-4b6e-9ffe-afe3d3d2181d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b129a58-deda-43da-bd79-25ffb9497590",
        "cursor": {
          "ref": "8c470808-3842-4dcd-846e-e406fad5d3eb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f51ea676-8147-4b50-a55b-0004398e4f69"
        },
        "item": {
          "id": "9b129a58-deda-43da-bd79-25ffb9497590",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "70ae75f3-9bbe-4e4e-9aaf-e804f265b33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f8f31f-cb7f-46a2-8541-af3594582827",
        "cursor": {
          "ref": "f25c077c-9cd3-41ba-a0a2-1c19963f7c9a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2006c5b7-6472-45b7-b7cc-1f1770451c0d"
        },
        "item": {
          "id": "69f8f31f-cb7f-46a2-8541-af3594582827",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5a5c1a78-389a-4ece-b6c1-a286bdda8376",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6566582-4345-4d6a-93d3-cb320376db25",
        "cursor": {
          "ref": "a3849d2f-f534-483e-901e-6e82e694582f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "201303da-23d4-466e-944a-e36df18c412f"
        },
        "item": {
          "id": "a6566582-4345-4d6a-93d3-cb320376db25",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d0f8f13f-e007-4d2a-819c-ebf0d810a8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b62bcb8-1eb5-4373-a2f1-c5d7e94b1c6c",
        "cursor": {
          "ref": "8f46822d-ea47-4861-bc66-da15b8b47911",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bccb4a09-fded-4b36-99cb-a340b8e20571"
        },
        "item": {
          "id": "0b62bcb8-1eb5-4373-a2f1-c5d7e94b1c6c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4ec1dbd6-af4c-478a-ba55-cb19bf8a7d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a5771f-63d3-47a9-8fdb-2ee6514246be",
        "cursor": {
          "ref": "858a84e3-b96a-4c92-a2e1-f3160bd41160",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3710a82e-6bf1-4da7-8817-88bd77a2fa30"
        },
        "item": {
          "id": "f5a5771f-63d3-47a9-8fdb-2ee6514246be",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f3dae090-d0be-4faa-8319-bc637054f1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34009eb-8f72-4277-886b-c52207cc0350",
        "cursor": {
          "ref": "5ce768f3-56c7-4405-bb1b-18f980df6cbe",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "65675d37-4e6d-4386-8d8f-97b28b34227c"
        },
        "item": {
          "id": "b34009eb-8f72-4277-886b-c52207cc0350",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "db22d4ae-7c90-411a-ac21-0dc17c126de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad13a8c-5d3d-4a4a-87e6-7f529ab3b13f",
        "cursor": {
          "ref": "887ee58a-0c72-4749-97a6-344a6e48fe3b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "92a82eca-a26a-4f63-9109-acf2a2389534"
        },
        "item": {
          "id": "dad13a8c-5d3d-4a4a-87e6-7f529ab3b13f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2bc54730-ee60-4ec8-ab5a-c20390ad5168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909118ec-40d5-496e-99a1-f5d67367cfc6",
        "cursor": {
          "ref": "a6ef40fc-8e9a-4705-b826-26dc302a9fbe",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2507581f-3d14-486c-921a-71f2a11e0b87"
        },
        "item": {
          "id": "909118ec-40d5-496e-99a1-f5d67367cfc6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "36a82873-d102-4581-a287-52d9f6baf0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752928f2-3b81-4e38-a61a-f7377ac6e85a",
        "cursor": {
          "ref": "356951a8-32ee-43f5-a73d-1766c027f325",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e8985a1f-308b-4f1f-8f2f-91a543216953"
        },
        "item": {
          "id": "752928f2-3b81-4e38-a61a-f7377ac6e85a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "259865cc-d144-4b21-ae87-a4877c3f39ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d06782d-166b-476c-9069-7750f6a5eeca",
        "cursor": {
          "ref": "febed5dd-7081-4933-a841-463a77d61c2d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2539cfa8-f728-43f4-ba04-32c67f5f3bb0"
        },
        "item": {
          "id": "5d06782d-166b-476c-9069-7750f6a5eeca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8a21bf31-c314-47ad-8453-bb16649e09f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6067b05-bcf4-48af-996f-71ae23d9ccc9",
        "cursor": {
          "ref": "3ffca472-3e42-450d-bc67-53f1ca170f5c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7dc485b6-a3b6-4869-9082-8a3154dc90ef"
        },
        "item": {
          "id": "b6067b05-bcf4-48af-996f-71ae23d9ccc9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5702effa-842e-49b0-83f2-22a342593f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bfaef7-f7fc-437e-ae04-f0f4f4fd1b1e",
        "cursor": {
          "ref": "0d1c9236-65d3-43f5-95ea-566837fb5b75",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e75ec9c0-424a-4230-87e1-c73ef625d311"
        },
        "item": {
          "id": "e8bfaef7-f7fc-437e-ae04-f0f4f4fd1b1e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d84dbefb-e96b-4e67-8aeb-fe8d66762961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2225e5-5373-45a6-a53d-bacf4529b2ca",
        "cursor": {
          "ref": "cc01927a-adbd-4f05-8ad0-f21014946b20",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6985b31f-5cfa-4c6c-a016-413e854571a0"
        },
        "item": {
          "id": "1a2225e5-5373-45a6-a53d-bacf4529b2ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "52832dc0-e7a8-4bb8-8a56-c1c4a654352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b2089d-cd95-40b1-97bb-4e8cf1206785",
        "cursor": {
          "ref": "997a08f3-68ea-43a6-9e99-33e76c6ed55d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "564b1ab0-c370-4bbc-9b68-d8fc0b18e161"
        },
        "item": {
          "id": "89b2089d-cd95-40b1-97bb-4e8cf1206785",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "64d18611-8a1c-47e1-97c9-4ba4cbd38ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed433db-1388-4458-8437-3e977dfad595",
        "cursor": {
          "ref": "cef4f1e5-487c-4521-ab44-416ca6c8c490",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "867dbe4d-af5e-4990-a936-db3ec8a31da6"
        },
        "item": {
          "id": "0ed433db-1388-4458-8437-3e977dfad595",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ad5e8090-190a-4d12-9c8e-013bdf1bfffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d4f884-cc77-4e6b-ae66-6671107cb443",
        "cursor": {
          "ref": "cd394d0a-337d-49ce-9500-6f56d0de8da9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "aebbf888-c237-4dad-9ee4-353bb1a358d8"
        },
        "item": {
          "id": "37d4f884-cc77-4e6b-ae66-6671107cb443",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "49104cf5-1805-4eab-8d5d-de8e3df7c794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26727ce-bbd2-49a7-afea-96213f41df7d",
        "cursor": {
          "ref": "8c44fcbb-df88-41e0-9f66-0d002de16126",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "599bfcd8-261f-4226-8cba-4a6d6820799c"
        },
        "item": {
          "id": "d26727ce-bbd2-49a7-afea-96213f41df7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9c838312-f093-4119-80b6-18d873e0b457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c31857-f99b-4556-9ed5-76081bcff7d5",
        "cursor": {
          "ref": "0d78ec8c-f7c3-4937-acea-d651133d897f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9cf35222-1bb5-4a1e-9f8e-701f16dfc009"
        },
        "item": {
          "id": "22c31857-f99b-4556-9ed5-76081bcff7d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ece08ee4-ddc0-412d-9adf-cc8ecb560288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3addb5-a307-488f-9237-b77095fbe670",
        "cursor": {
          "ref": "b3594bd4-47da-42f7-820e-61a0d093f4f2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fba32170-2440-4a9a-b013-e39af437a2db"
        },
        "item": {
          "id": "6c3addb5-a307-488f-9237-b77095fbe670",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8619be98-594b-411f-b3e9-b54fa2f81380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728c464f-56b4-47ea-a38c-03d5af5a69bf",
        "cursor": {
          "ref": "d5059c5b-72cc-4557-9ed7-b99acf56b327",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81662f3b-041f-4972-9656-a23c57a9a3ee"
        },
        "item": {
          "id": "728c464f-56b4-47ea-a38c-03d5af5a69bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fcc7b565-6494-4ef0-87f2-92f836757e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b537c76-f867-43b5-8617-3814b2b1d5fb",
        "cursor": {
          "ref": "efb17065-9ddb-477b-992a-2a557ff41fc0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "945b3763-269b-47cb-8f8f-4f5750d0322b"
        },
        "item": {
          "id": "8b537c76-f867-43b5-8617-3814b2b1d5fb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "19323e01-d33c-4bdb-b348-e6d2b6c1b94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ee127f-43de-44a6-940e-b60a1ddec690",
        "cursor": {
          "ref": "5770a928-952c-4fcb-9ecd-8d4aac8cd19a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "205317ee-6131-49d3-bef3-924e5d7eed5f"
        },
        "item": {
          "id": "a4ee127f-43de-44a6-940e-b60a1ddec690",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bb2cb6fe-fb97-413a-93d1-05a09d7f76be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec26a46c-3e10-4d97-9c25-2099ecb7284a",
        "cursor": {
          "ref": "352a2384-d884-48a2-980a-1f363f569c7f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b9a44e85-bc72-406f-9255-3780ecdc2845"
        },
        "item": {
          "id": "ec26a46c-3e10-4d97-9c25-2099ecb7284a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0f848384-481d-4549-9492-52b676f055f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c1881d-af80-4302-a017-cc4906a83d9a",
        "cursor": {
          "ref": "e83e40f8-cadc-4cd7-ad4c-3504b21d7e71",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3b38ab4e-fc5f-462b-a12d-f4fc6121ef21"
        },
        "item": {
          "id": "28c1881d-af80-4302-a017-cc4906a83d9a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b6f9f11f-57b0-4a4a-865c-a22dd4c603d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ef0fab-beca-4156-98a2-0d2902a148b1",
        "cursor": {
          "ref": "330affbf-a2d7-4f7e-927f-821f9bf32204",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "02eac5f7-5c90-441b-9e9b-1c416f9c92a8"
        },
        "item": {
          "id": "a5ef0fab-beca-4156-98a2-0d2902a148b1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c7166ee5-e4a9-493e-968f-701b021e4d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab9cf8a-0be3-4520-ab8d-34ae208d6a4c",
        "cursor": {
          "ref": "33454a4e-0402-43c3-8a13-5059f4ca50da",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5648042c-07b8-4e3e-a75e-70b23a4cec23"
        },
        "item": {
          "id": "bab9cf8a-0be3-4520-ab8d-34ae208d6a4c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4eeb8005-471f-4e23-8784-dafa222d4dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55e69b9-18b7-4c4d-84f4-9d480ea8cfee",
        "cursor": {
          "ref": "4cf4de66-358f-452a-aa6b-5e012deb2da3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "24c0e8f9-12c8-4ef7-b43b-31cff0fbb37b"
        },
        "item": {
          "id": "d55e69b9-18b7-4c4d-84f4-9d480ea8cfee",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d20d948c-7ce4-4d17-b18c-71fd95bb187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7da5206-b895-4bb1-a646-7bcd3f9ed640",
        "cursor": {
          "ref": "ff946984-9dcb-4921-bcb6-35b225b534b5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b54f1d46-cb79-4599-bf37-fda5ec12908b"
        },
        "item": {
          "id": "f7da5206-b895-4bb1-a646-7bcd3f9ed640",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4fc40832-eb04-4402-9c6b-4c24f388a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c59fb3-bbd7-482e-8c4e-60c05e59b9ea",
        "cursor": {
          "ref": "a2720ddc-8adb-489c-bef6-be18f67cb6c2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1e22d10a-124d-4801-84ec-fd43310f73af"
        },
        "item": {
          "id": "a1c59fb3-bbd7-482e-8c4e-60c05e59b9ea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c34fc00c-1322-4b6b-b92b-6be20ca6bc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d72812-f61a-402b-87e4-fdb586a28a44",
        "cursor": {
          "ref": "9ca14b79-347a-4d11-9c44-6fa263c5049a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f2e4cfd9-ee1a-43d1-8093-9db981aeeda8"
        },
        "item": {
          "id": "e4d72812-f61a-402b-87e4-fdb586a28a44",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cf692041-206b-404c-a8f7-10c91e99db62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9228209e-0dd0-4f54-9eb0-71f59175812c",
        "cursor": {
          "ref": "af8af033-1694-4ad1-a173-c217276c9bd6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6a828c27-b67c-4ac1-8a4f-42478039f355"
        },
        "item": {
          "id": "9228209e-0dd0-4f54-9eb0-71f59175812c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8824a759-61fe-43b5-b09b-d65315e31fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3411d64-5c0e-4cf1-9959-dbf23a9cbabe",
        "cursor": {
          "ref": "e46fd601-8fcd-409d-a41b-772f0b961731",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cd99faf5-8f23-4fbe-8dee-aed0fff3ab08"
        },
        "item": {
          "id": "b3411d64-5c0e-4cf1-9959-dbf23a9cbabe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a062551c-1a4f-4b77-9cc2-dd9a5f1b2c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0ca773-53fa-4b60-813d-2e5b46e64524",
        "cursor": {
          "ref": "cf84a307-2c08-4046-8a0d-c548953146ab",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d18d93cb-818b-48c7-a42f-42a84b31f967"
        },
        "item": {
          "id": "af0ca773-53fa-4b60-813d-2e5b46e64524",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2c055040-2e8a-4108-97ec-b5e3406bc457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94667de-4388-4e1c-a716-a086836fb6aa",
        "cursor": {
          "ref": "2097a1ad-903f-4b9c-bfab-4e900a237f3b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0f526dee-a8a7-4841-8310-49e3466fafaa"
        },
        "item": {
          "id": "e94667de-4388-4e1c-a716-a086836fb6aa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "637a7213-c1c2-432c-b198-60a8ba294f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8b7189-5fe7-41c8-93a0-32b9f578730f",
        "cursor": {
          "ref": "7acaf809-b0dd-4cea-81f9-1491e81c706b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bc2e4a15-8b53-43d8-8a80-5083e3a23f1f"
        },
        "item": {
          "id": "aa8b7189-5fe7-41c8-93a0-32b9f578730f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0554c0e4-6754-4383-93c6-60d54f97b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418c38ba-d2b0-486e-b93c-686d9a5c188a",
        "cursor": {
          "ref": "14a1cce2-fd82-4daa-8a5c-041bf20e81e8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "404f7ef6-ea50-4214-bb5c-6037363bbef5"
        },
        "item": {
          "id": "418c38ba-d2b0-486e-b93c-686d9a5c188a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "992b1e57-d8e8-4674-acb0-91f251cde84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bfc6cb-51af-4a25-8239-27c470a271a4",
        "cursor": {
          "ref": "4538ca27-324d-47fc-a036-2b4bb1257230",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0a4b9500-259a-4046-ba58-e09326749fef"
        },
        "item": {
          "id": "77bfc6cb-51af-4a25-8239-27c470a271a4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d02af30b-dd55-455c-8afc-09f5c6de5d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfb29aa-b318-4689-a4d6-fcd1a1a84068",
        "cursor": {
          "ref": "7a5102a1-b579-49b8-9205-dd3741b953bf",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f7b4161f-e854-4b58-8fef-fd53128b1def"
        },
        "item": {
          "id": "cdfb29aa-b318-4689-a4d6-fcd1a1a84068",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4bfa60a4-f55b-4b43-9f0f-f81bcb32759b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc07053-926e-41e6-8093-50a820cda82c",
        "cursor": {
          "ref": "5b03635b-a88a-4976-9011-8130caee15c5",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b2553453-cf15-4df6-9627-dbbbd8c672b4"
        },
        "item": {
          "id": "ebc07053-926e-41e6-8093-50a820cda82c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7f5bda93-1cc8-4172-ae1e-28b2dea66fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43704a3f-5a08-43d2-9162-523e5e3440a2",
        "cursor": {
          "ref": "70d63927-59bb-42a5-b403-0abac6e83786",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "86477167-f72f-4426-9e5f-97d984a1c28c"
        },
        "item": {
          "id": "43704a3f-5a08-43d2-9162-523e5e3440a2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "10811c1f-25e9-4ac1-ac10-7035016cd9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98cece3-5c8f-4292-a811-d61e3faab7ab",
        "cursor": {
          "ref": "01577deb-b34b-40c2-8cfa-d759cee8b444",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "259ad0c8-369c-423e-86a8-34741880a30a"
        },
        "item": {
          "id": "b98cece3-5c8f-4292-a811-d61e3faab7ab",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "59f4d9b7-aa3d-4954-89e0-7680055fa74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5206b6-d992-43d7-8c66-5aa7e76712bf",
        "cursor": {
          "ref": "e6457a58-6fcf-47f6-ab47-7a27d579d6fe",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "44859f1d-81fd-4859-a8c1-d0a5f19091f4"
        },
        "item": {
          "id": "3b5206b6-d992-43d7-8c66-5aa7e76712bf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9982528d-5c8d-4ceb-bf1a-d641d6dd5bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce230b3-13c0-4f0d-bf41-ffbfef161590",
        "cursor": {
          "ref": "229cda49-3d51-4a6e-9b4f-ed14b64bdc21",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "325b88d4-a612-4f64-b0f1-14054fd54be0"
        },
        "item": {
          "id": "4ce230b3-13c0-4f0d-bf41-ffbfef161590",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "43840c84-76b6-44d2-8c9f-33012a8a55d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89c5cfc-3a6a-4a22-bfc0-287e445f684e",
        "cursor": {
          "ref": "aa174299-7798-40ca-9bde-59d9d55d0aad",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "858397f5-d42d-47d0-81ca-b100d06d9bea"
        },
        "item": {
          "id": "e89c5cfc-3a6a-4a22-bfc0-287e445f684e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e965f309-1a28-4849-9bf0-f3d34482ce0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0b92fb-e01d-490a-96b6-e3cd9a1a06c8",
        "cursor": {
          "ref": "914c1645-9a3f-4c1f-871f-e502ab7f010a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6234ce04-d00c-4b65-99ba-d2850a12e072"
        },
        "item": {
          "id": "de0b92fb-e01d-490a-96b6-e3cd9a1a06c8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6918d26d-6e63-4325-83e1-7477d9266ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0921aeff-0bf0-4332-83b7-673e2e508886",
        "cursor": {
          "ref": "6be51956-44d3-4ddd-b948-b6cfc8a241a8",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "430bccd3-8184-4263-8b9f-777b659ca4db"
        },
        "item": {
          "id": "0921aeff-0bf0-4332-83b7-673e2e508886",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "45384cd0-2ade-486c-bea5-2f9a608604cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a93f28-2f0f-4c89-8a7d-9efef202462c",
        "cursor": {
          "ref": "446df3b3-f441-4a4d-99c8-310c743c4da2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "41ad8dcc-f161-48b4-bd6a-c275f9fec26e"
        },
        "item": {
          "id": "12a93f28-2f0f-4c89-8a7d-9efef202462c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8be1db21-3180-4663-8f00-8cde54d4ab18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb30c05c-c5f0-4795-8135-c726cbe5912a",
        "cursor": {
          "ref": "21c96324-13c3-48fd-bd89-a532eca17610",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "26e17ccb-0e76-4c3a-96f7-2b20284801f7"
        },
        "item": {
          "id": "eb30c05c-c5f0-4795-8135-c726cbe5912a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2e93dae8-809e-4c99-a7d1-0616009651a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7628a9c-c2b3-40d4-8e13-30a147ba5745",
        "cursor": {
          "ref": "1399292e-7d4d-4acd-b924-3109789e16b3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d4804a3b-2a44-4047-8861-b75e09b498a1"
        },
        "item": {
          "id": "e7628a9c-c2b3-40d4-8e13-30a147ba5745",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c83b7dab-6b09-439c-9742-0ef4432b9a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b21712-12f6-4687-bb8c-38aef3760763",
        "cursor": {
          "ref": "7f8a1082-3376-4bc3-8fe4-46e17e5eb5cf",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a2f5f613-5014-45d7-878a-bf2835b480c0"
        },
        "item": {
          "id": "98b21712-12f6-4687-bb8c-38aef3760763",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e58a121f-0448-41e5-b281-bd11f82500d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12db419b-b18f-4a87-a05a-17e51cbe1a59",
        "cursor": {
          "ref": "48ffa89e-ab9d-41bb-a65b-50a94823ce25",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9ef82a97-df7a-48aa-ba76-4c39d8e1e03c"
        },
        "item": {
          "id": "12db419b-b18f-4a87-a05a-17e51cbe1a59",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4e79f966-bfc1-44c8-b7f8-aaedc47d6248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925f55ec-482f-4782-8d5c-05bbcba4b789",
        "cursor": {
          "ref": "e99bdb7c-79c1-4408-b03d-e93a1e315165",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "962f608b-b7f3-42d8-8f16-ecaadff8b310"
        },
        "item": {
          "id": "925f55ec-482f-4782-8d5c-05bbcba4b789",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9a6a1ce7-58c0-445b-ac93-8f3f6a54fe0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee914a3-0ce9-4d78-b103-5a06289a913f",
        "cursor": {
          "ref": "292c9502-36ee-48cc-9059-d57923ffd183",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1a7ccd1e-2d66-4df6-97ed-36a8c07eecac"
        },
        "item": {
          "id": "5ee914a3-0ce9-4d78-b103-5a06289a913f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "264c7f3a-43a7-45df-929a-d3cf438907cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7a447590-5d52-426b-a96c-97d67e8e55a6",
        "cursor": {
          "ref": "5a96fa9b-d18a-42b1-9d79-5e35d43b7099",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d735815f-3eef-46e6-a888-94d116e5154d"
        },
        "item": {
          "id": "7a447590-5d52-426b-a96c-97d67e8e55a6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "95dec1a6-4958-4ee1-ac6e-65660fd9f462",
          "status": "Created",
          "code": 201,
          "responseTime": 8398,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb4ae06-22c2-4519-896c-1edc76bb368e",
        "cursor": {
          "ref": "71bbb844-fb18-4be5-b0a8-9312d09306c8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7b9737b3-8b9c-4af1-b531-663a11019011"
        },
        "item": {
          "id": "deb4ae06-22c2-4519-896c-1edc76bb368e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "58a4084a-01f4-40a9-8487-f61130aea093",
          "status": "Created",
          "code": 201,
          "responseTime": 7834,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a947e09b-336c-4446-8f39-581725102e1e",
        "cursor": {
          "ref": "a1214ffa-93fa-44c5-9d9c-ba2bb42fb9f3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4300d8c5-05c6-4176-b90f-1741182fad11"
        },
        "item": {
          "id": "a947e09b-336c-4446-8f39-581725102e1e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9c24b149-c04d-4254-9aa8-68bd7dc6476e",
          "status": "Created",
          "code": 201,
          "responseTime": 7964,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd41490-9c8a-4050-9af0-38b64b1038d9",
        "cursor": {
          "ref": "400af732-b00e-48b4-80ad-f3ff676a8880",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "53b34072-3d52-4fc5-9de0-75023b259c9b"
        },
        "item": {
          "id": "2bd41490-9c8a-4050-9af0-38b64b1038d9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5a19b28d-3c71-453f-97e3-b712af10cda2",
          "status": "Created",
          "code": 201,
          "responseTime": 7531,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf323c54-71bb-4cd3-807c-ac9e9eae09be",
        "cursor": {
          "ref": "905d05f7-a43c-4526-affd-b9a97824d10b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "720f1c02-7b05-4b69-86cc-1a60dd0ff84f"
        },
        "item": {
          "id": "cf323c54-71bb-4cd3-807c-ac9e9eae09be",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4200fa8e-4cf0-477e-b26b-e109bc2805d3",
          "status": "Created",
          "code": 201,
          "responseTime": 7796,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-22T00:38:36Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-22T00:38:36Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dd195b7e-cc00-45d9-be57-b1da7b3d3dba",
        "cursor": {
          "ref": "a2376ab1-357a-4cac-942f-bb139afa1b10",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "89130627-5676-481e-9607-e5d019314149"
        },
        "item": {
          "id": "dd195b7e-cc00-45d9-be57-b1da7b3d3dba",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8bd13c1a-1c4d-412b-9931-5e6d926977d2",
          "status": "Created",
          "code": 201,
          "responseTime": 7517,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562399b0-b9e2-4e31-9617-86ebe4955014",
        "cursor": {
          "ref": "b16169f4-1de8-46a4-b7e5-ed202ee245f9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "989337e9-3098-4544-a7b4-6b14b817912e"
        },
        "item": {
          "id": "562399b0-b9e2-4e31-9617-86ebe4955014",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2fb274d9-0dc0-41a3-8b7d-aa0b9282743f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241776e4-1550-495a-a83a-19eb8c1642c6",
        "cursor": {
          "ref": "bc09930f-6981-4a0f-8a57-1595ef15bf38",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7ff11e15-4ebd-40e6-8e8a-798da8472acd"
        },
        "item": {
          "id": "241776e4-1550-495a-a83a-19eb8c1642c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "286c9f16-fd28-49aa-b598-96cce52c801e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373b9568-94e9-4bba-90d9-7665c2bd671b",
        "cursor": {
          "ref": "e38bdd75-19e4-45ec-96f4-77c6f8d0b093",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ff067cc6-573c-43b5-84fd-77e4456255c1"
        },
        "item": {
          "id": "373b9568-94e9-4bba-90d9-7665c2bd671b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "54963c52-bd5d-471d-b72c-239925833555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51ee495-2fce-4a80-bff7-5c30b1d6c724",
        "cursor": {
          "ref": "abd2a6c9-08a4-480b-90c7-6c7f99370264",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e5139a0f-e3fc-4176-9f5e-e74c117a873a"
        },
        "item": {
          "id": "e51ee495-2fce-4a80-bff7-5c30b1d6c724",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9f109af9-2a22-413c-b139-dfa554ddae07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7110d7a8-685e-40c2-86a5-7bdd0b717ebe",
        "cursor": {
          "ref": "e674e104-b01e-48f5-9686-d02d7a48aba3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4139e811-5a3c-4452-b325-c594ee8ce945"
        },
        "item": {
          "id": "7110d7a8-685e-40c2-86a5-7bdd0b717ebe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "94d3dc29-fbc0-40f6-b197-fa84a3b9f254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d75ac87-b255-4280-96ec-a9aba34ff570",
        "cursor": {
          "ref": "bc76d474-114f-4c56-98e7-4654b8409d18",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "67695638-7a4e-4f5a-9770-19ec184b4117"
        },
        "item": {
          "id": "8d75ac87-b255-4280-96ec-a9aba34ff570",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c7aa181-f66b-4a88-9f4b-02a6bece57a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299093f8-2f2c-4212-983a-7a23b716c2ac",
        "cursor": {
          "ref": "85740168-122b-4e60-8af3-a85008d0e519",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2173b240-77a0-4ad1-9b19-e6182149ffca"
        },
        "item": {
          "id": "299093f8-2f2c-4212-983a-7a23b716c2ac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "171b520a-c42e-4e80-900a-3bebe3b5e16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee25a03-631b-4d51-8c73-75ddfa0eb8d1",
        "cursor": {
          "ref": "7617b5bf-1682-40b3-b342-2b5d66f75c39",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d39387b-f92e-4b0c-a985-814849b77f54"
        },
        "item": {
          "id": "aee25a03-631b-4d51-8c73-75ddfa0eb8d1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a241271e-a89a-43b0-8bb6-6bf14667aec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108c7ef4-f012-48cf-abe8-c9afbf239952",
        "cursor": {
          "ref": "6168744c-1de1-4534-9b64-6252b96dfb43",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7fda3d31-916e-47b8-a7c3-9a02ea158c5b"
        },
        "item": {
          "id": "108c7ef4-f012-48cf-abe8-c9afbf239952",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d526d97-fd13-4640-b9a6-eac74d66ec47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07080a61-67be-4f3f-aa85-5f16e7d89fce",
        "cursor": {
          "ref": "8cc35768-ad21-40cb-8995-501811bf01a8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5f6d3ba3-e4ae-4ddb-9dd9-7f97b131538c"
        },
        "item": {
          "id": "07080a61-67be-4f3f-aa85-5f16e7d89fce",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eea41711-674e-48f9-95f9-5ce1143abc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0997949-ec2f-4c73-828b-88f32622cec0",
        "cursor": {
          "ref": "5bbf1f33-9144-439d-9dd8-33bd6dddca7a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dd3cd399-c77c-4042-99b9-cc46f7ff249e"
        },
        "item": {
          "id": "b0997949-ec2f-4c73-828b-88f32622cec0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7d1e1ea0-950a-4946-a70a-e2796ec014b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e3f6c0-8af6-4443-9740-c01492351c92",
        "cursor": {
          "ref": "00c6c0a6-260b-4b4b-b458-fd001ee3d99b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "166b0fe7-045b-4ed7-9bd1-c666723eef21"
        },
        "item": {
          "id": "39e3f6c0-8af6-4443-9740-c01492351c92",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ac577c0c-f470-4f76-a1c6-8da51f6c4a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6968424-d0db-4cee-acde-f95b661432b8",
        "cursor": {
          "ref": "a5453ecd-610d-4e17-b7d4-10ca827c44b2",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b6ab611c-542f-4532-9bdf-43044388927c"
        },
        "item": {
          "id": "c6968424-d0db-4cee-acde-f95b661432b8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c8c4f12f-95a8-41f9-adec-cda9b32ab8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3622e3-466c-4f3c-b0a3-f014d283fa2c",
        "cursor": {
          "ref": "5cfc0f45-52eb-4b0b-a631-a68b620d7ceb",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a4316e7b-0928-4329-b606-a4e1589ce656"
        },
        "item": {
          "id": "8c3622e3-466c-4f3c-b0a3-f014d283fa2c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e229027-1ac0-4cfc-b2be-faa5057db0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1428794-499b-432e-ad1a-3f32c353ffcd",
        "cursor": {
          "ref": "cc2ed780-faf5-4ca8-8518-5eccd607b4fe",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "197de56e-0c2f-4916-9c71-7c990f65fce4"
        },
        "item": {
          "id": "f1428794-499b-432e-ad1a-3f32c353ffcd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "afbb4666-c81e-4744-a6cf-c9e9ce7780ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a362c4-9c6d-4572-bc68-46d3f911e413",
        "cursor": {
          "ref": "d2e95690-fc5a-4550-8362-9fbe4169cedf",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "abfdc3ba-d062-4c3e-b744-76acfd7ebd5f"
        },
        "item": {
          "id": "c6a362c4-9c6d-4572-bc68-46d3f911e413",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8b54790-1a89-45cb-868a-26210950dd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebbc6d1-4029-49bc-adcb-8b3a41b36988",
        "cursor": {
          "ref": "f73b7a69-585e-4653-b1ca-b0cfe4a31768",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ec755032-0d69-4482-8d00-b8fe3bc38cc2"
        },
        "item": {
          "id": "eebbc6d1-4029-49bc-adcb-8b3a41b36988",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04bf4001-88f8-49a0-8bfc-898af2d6b01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b86912-bf93-4c80-ab2b-1ee34981fab4",
        "cursor": {
          "ref": "bcf4cc88-e35a-4890-85e3-a95d340288f8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8a6cef63-719d-446b-a16b-bf94dc76669e"
        },
        "item": {
          "id": "c9b86912-bf93-4c80-ab2b-1ee34981fab4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "64a36ffe-a752-4e79-8a82-b200dcbf07fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea3e29-de89-41f5-b8fb-0eb2568bd577",
        "cursor": {
          "ref": "fa2853b3-f38a-4a7f-9344-30a1fd64aba3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "09ebaa28-55de-4f03-8cfc-d5eb28af7e45"
        },
        "item": {
          "id": "eaea3e29-de89-41f5-b8fb-0eb2568bd577",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "930cca78-0a56-4d7d-8c43-f6a299d91ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e527e499-ef3e-4a2f-b4a9-73da652162e8",
        "cursor": {
          "ref": "e9cce408-34b4-4175-9cc4-1a9eff5adc63",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "44d206ec-1160-45f3-99d9-118bda25a021"
        },
        "item": {
          "id": "e527e499-ef3e-4a2f-b4a9-73da652162e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1298a34d-71b0-4646-b39f-e14dcf193ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7d6e64-4898-49ec-bb4c-1fae6d40014d",
        "cursor": {
          "ref": "76d93863-fa67-469a-9c30-bc4bb2414f63",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cb1e0485-eccf-45ce-91d7-451e7b1a9297"
        },
        "item": {
          "id": "9b7d6e64-4898-49ec-bb4c-1fae6d40014d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc022130-7fc2-48e6-80b8-c39ab24ed56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601ca57e-7206-4e6c-a948-e7a234c9144a",
        "cursor": {
          "ref": "271fd729-5080-47d0-8560-9043022d845f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e291e82b-9e77-4bb6-84ba-497ca2697c34"
        },
        "item": {
          "id": "601ca57e-7206-4e6c-a948-e7a234c9144a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "56c8bbd5-064b-4b87-8657-fcd527c9e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f75b56-7291-442f-9e9a-8d1c38addcbe",
        "cursor": {
          "ref": "dea4e11a-cbc6-463b-adf7-6fe74fcee418",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9de8fc2f-ed7a-42d4-bce7-18b235090c12"
        },
        "item": {
          "id": "a8f75b56-7291-442f-9e9a-8d1c38addcbe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "637ea1f5-9e09-4898-89b7-56380c856733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d5293c-97fd-495c-8c21-1131358eea9c",
        "cursor": {
          "ref": "5107c644-0c12-458b-ae1b-15e1e597fd30",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3eaf4b43-4b15-4bd0-b9d8-3ad2fbd336ec"
        },
        "item": {
          "id": "e4d5293c-97fd-495c-8c21-1131358eea9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d81b2e06-7b9b-4dce-b501-fb92e8f1b0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ec5921-22aa-481f-b938-cd328fc2d679",
        "cursor": {
          "ref": "9de02011-df15-45b4-9b1f-0c3ade069d32",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b477ecb4-3de7-4200-b86a-d90079aeee71"
        },
        "item": {
          "id": "c8ec5921-22aa-481f-b938-cd328fc2d679",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "40a6f975-c523-4d87-ac91-43a25c4a46bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84415ea6-9dce-44be-ad41-1b16217540ba",
        "cursor": {
          "ref": "072e7fb9-89d6-44fd-b58d-f933346c01d7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "273fb8e9-7957-49d3-8b7d-7cbd49c943ef"
        },
        "item": {
          "id": "84415ea6-9dce-44be-ad41-1b16217540ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c83fd4a2-e644-47f9-869d-7071042b1bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d940d472-c6ca-4dde-860b-2f387ccdf374",
        "cursor": {
          "ref": "66abc8a6-2d7d-4b52-be2a-af2ab4064c25",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "16141df9-aafa-4d3b-8ca5-2b26192b6be4"
        },
        "item": {
          "id": "d940d472-c6ca-4dde-860b-2f387ccdf374",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e415e311-9095-498e-a3f6-2900a4d400af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d73da-697d-4bad-a629-86bfeef4fd6c",
        "cursor": {
          "ref": "efb57eea-12bc-499d-92d9-efc72736038e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "abf60d75-8239-4865-b471-9e79f6dd48ae"
        },
        "item": {
          "id": "541d73da-697d-4bad-a629-86bfeef4fd6c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "16c83272-0bb1-4a4a-a65b-e7507ee0f138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fccaf8-8f06-45ad-bd7d-670bf07ad903",
        "cursor": {
          "ref": "84b19d8e-ddb1-4271-9a28-4368444c15a7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9ba2c62f-14d3-4632-951d-0390816f6a6e"
        },
        "item": {
          "id": "34fccaf8-8f06-45ad-bd7d-670bf07ad903",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a3807dc4-b540-4dd2-9507-34ddde29c86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3a9e2a-1018-4e87-80d5-adba4ddecd06",
        "cursor": {
          "ref": "819736b0-515b-4151-b059-05bf51ec6bd2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e5e62b37-67f8-40d6-a991-54d96610a995"
        },
        "item": {
          "id": "5f3a9e2a-1018-4e87-80d5-adba4ddecd06",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7d2495b0-f5c1-4ee0-ac4c-50b159f869f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48625e20-1c0a-47c8-8d4f-edf2b47198ee",
        "cursor": {
          "ref": "bfb3f77b-0bbf-46b5-8b5a-273d3dc750d8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "23ba2c51-3fcf-4380-817c-b6906c4f6277"
        },
        "item": {
          "id": "48625e20-1c0a-47c8-8d4f-edf2b47198ee",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "07673f56-6fad-4f37-b54d-f5b8630a1247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b95d55b-a8ee-4ec4-b5aa-6493cac83ed4",
        "cursor": {
          "ref": "e98258c7-51a6-4db3-bc89-8999fe1f2d48",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "75614374-8c1c-40f5-8ca7-b975371f93a1"
        },
        "item": {
          "id": "8b95d55b-a8ee-4ec4-b5aa-6493cac83ed4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0b2d0b1a-cfb2-4afa-b6ed-b88796969ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27fddd5-48e9-471f-b1d5-bd8eec9c4924",
        "cursor": {
          "ref": "7974b5f0-5747-4a60-a6e5-f0c717a2e72f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2ae79b70-d8d4-410e-bd7a-1d73c72b8117"
        },
        "item": {
          "id": "e27fddd5-48e9-471f-b1d5-bd8eec9c4924",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "921cbecc-a6d9-436a-bbd2-0cc932d68d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0772dc4b-0647-4bc9-8f87-7c04a9f5de20",
        "cursor": {
          "ref": "f0a6218a-eadb-4f76-a7cf-6c02a9ac211e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e2bcfbcb-94f5-43cc-ba83-7c84b76aae18"
        },
        "item": {
          "id": "0772dc4b-0647-4bc9-8f87-7c04a9f5de20",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "39887d55-82d9-474e-bd71-73f8d61263d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f0ff5c-c1fe-4f70-80f1-d7db6a30a6f9",
        "cursor": {
          "ref": "b7a63a23-ab50-40a6-9fd0-9224af212d21",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "77e3dc24-f23f-456f-8df1-541eee47b997"
        },
        "item": {
          "id": "92f0ff5c-c1fe-4f70-80f1-d7db6a30a6f9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "06a9d91a-0ad0-4922-b70b-0fe0b885fc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c39ac05-f59b-43fa-99cc-7b04875a875f",
        "cursor": {
          "ref": "a296b8d8-3835-41d5-b9aa-d1752934e80f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4677e02f-68e4-42ef-8c7c-24a101baccb6"
        },
        "item": {
          "id": "3c39ac05-f59b-43fa-99cc-7b04875a875f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b1d1e362-8f7b-4820-8a7d-a79c15213e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef2f845-63e2-493b-80b2-e3a0423cd027",
        "cursor": {
          "ref": "f65225f3-38f4-461a-a79e-471718c28f54",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bfbbb5e6-14a1-4979-bb2d-d962c1aa3d0a"
        },
        "item": {
          "id": "5ef2f845-63e2-493b-80b2-e3a0423cd027",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "258dfadc-c3bf-444d-8836-7b5eac66888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692b599e-1cad-4565-a0fb-32a783eb5c91",
        "cursor": {
          "ref": "74b5d395-30af-48e0-98a7-31e808b55073",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "479fcdb2-638b-49fe-9a2c-299ab7a5d60c"
        },
        "item": {
          "id": "692b599e-1cad-4565-a0fb-32a783eb5c91",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5579236f-0419-43a0-b318-4f13dce08158",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc617bc7-3b74-4f1a-9e32-9f03e4585f73",
        "cursor": {
          "ref": "83d9572f-6892-4591-845a-dbd2ce5b11af",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "35f50226-83cc-4495-965e-ea2cf3e286f9"
        },
        "item": {
          "id": "dc617bc7-3b74-4f1a-9e32-9f03e4585f73",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9cb64b64-5d63-42b3-bcf7-a79c9c1789e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54db8899-f4e0-40a4-8af4-0917adec2801",
        "cursor": {
          "ref": "0eeefe5c-e864-4a64-93af-6c872320e8ed",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c7c0637a-7850-4790-85ff-dfdca90b89c3"
        },
        "item": {
          "id": "54db8899-f4e0-40a4-8af4-0917adec2801",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "62ca553c-3796-4d04-9aa4-e71483658c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6712428-629d-4744-919f-9da3b0d1c771",
        "cursor": {
          "ref": "30b22076-238b-49f5-ad4a-38beb0e95b9b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e62815d5-1134-46aa-b80d-0d2b7584679f"
        },
        "item": {
          "id": "c6712428-629d-4744-919f-9da3b0d1c771",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ddb1e201-ab94-4a76-9f2b-dcfc6d02c9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3339589b-53bc-4f5a-89bb-5b36cd7f4a67",
        "cursor": {
          "ref": "f7d9432a-9dc7-4f89-a6ff-838fa1bb448c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f510babb-0f2e-4232-a1f1-d64ea74fc8f4"
        },
        "item": {
          "id": "3339589b-53bc-4f5a-89bb-5b36cd7f4a67",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7a67b361-6f7b-4759-96b3-4fe9cb1710d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a9060a-d6f6-4dd1-9a89-ccb92aeb171f",
        "cursor": {
          "ref": "21102790-f556-4bec-9aba-6181a554c9aa",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bf148899-583c-4372-9f11-b9fe418021bc"
        },
        "item": {
          "id": "44a9060a-d6f6-4dd1-9a89-ccb92aeb171f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "411c38cf-f649-4086-96ef-9097ec8d8c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56c398b-51c7-47e3-8dee-60628306713c",
        "cursor": {
          "ref": "f6a6b657-f90e-4a44-a30d-4448d0126622",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5bf9f489-9f62-4765-ac2e-e874f5911ad6"
        },
        "item": {
          "id": "c56c398b-51c7-47e3-8dee-60628306713c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6599da42-5d04-4c1d-83ff-60534f697892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8acca8-9e66-493f-8881-8394928fc5d9",
        "cursor": {
          "ref": "a1fd2eee-8e41-4e89-b683-e05f5f78a2f8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "534fd997-5bfc-436f-bf6a-a0006896d4dc"
        },
        "item": {
          "id": "8f8acca8-9e66-493f-8881-8394928fc5d9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "327f49f0-867d-4568-8126-a4c068e54fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dc420e-bc43-4575-b9a5-cefb48768b0c",
        "cursor": {
          "ref": "0b00c688-f3bf-489f-ad93-71f10c9cf092",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "065ed9eb-4088-4a80-8d55-a30bd9b1c917"
        },
        "item": {
          "id": "c3dc420e-bc43-4575-b9a5-cefb48768b0c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "32ea048e-7654-4a85-8ecf-a7e596fd7e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b338c5a5-8175-44c6-aa07-a1be054d7a81",
        "cursor": {
          "ref": "dab29328-015d-4099-aef2-e2501cc23cd1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3c057355-7585-48ab-a0f1-ea0c9f07235f"
        },
        "item": {
          "id": "b338c5a5-8175-44c6-aa07-a1be054d7a81",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8c7886ee-4fea-44f1-ba97-42eaf37e015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af1f75-3ea6-49a8-af77-7e5002acd343",
        "cursor": {
          "ref": "60445400-6209-4953-88bf-37aeee163d26",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b60d65b4-9d73-44af-9123-f329a079bd8d"
        },
        "item": {
          "id": "60af1f75-3ea6-49a8-af77-7e5002acd343",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9d76d12c-e748-4dfc-96e4-7e137b719eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe405dca-9346-4ee8-9d55-caff9cacd796",
        "cursor": {
          "ref": "dc54ab9b-a031-4536-9930-215fe8e69ca1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "88a69f5f-934b-423f-b7a5-e98cd51d411e"
        },
        "item": {
          "id": "fe405dca-9346-4ee8-9d55-caff9cacd796",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9ff5f277-a738-4670-b514-2d19a640ee4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cb1a45-7740-4402-97a4-4e7624af3549",
        "cursor": {
          "ref": "6716c392-3e88-421a-9116-f6adda9c0c1b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c349dd46-cf6b-4738-8248-2e2215de18a0"
        },
        "item": {
          "id": "27cb1a45-7740-4402-97a4-4e7624af3549",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ec085b5a-ac53-4105-af81-76101fd02ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c1fda9-763e-4667-840d-54c14a68ab28",
        "cursor": {
          "ref": "6a0ac388-9859-4d8f-8107-ccf4038b8488",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "87ef3d04-f5ba-4d32-92c7-bd7404b64b7b"
        },
        "item": {
          "id": "28c1fda9-763e-4667-840d-54c14a68ab28",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e734d4c-f2e1-4a6b-9220-1b78384c7482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505ae2ae-ca18-4dfe-815a-721a114dcb84",
        "cursor": {
          "ref": "214fe5f6-bd57-4522-af50-8f5d25ca4608",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c4d21196-37cc-4702-9ae3-e933bcd07ed5"
        },
        "item": {
          "id": "505ae2ae-ca18-4dfe-815a-721a114dcb84",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e99291f7-8796-4260-a790-32fcb812e7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e458b362-f2f5-4b47-8230-610e0cf69896",
        "cursor": {
          "ref": "baf46832-e406-41f6-a54b-0ccef977183a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8dc530c6-2e7e-4877-a0f0-86d4a9061e37"
        },
        "item": {
          "id": "e458b362-f2f5-4b47-8230-610e0cf69896",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7ed326f8-96bc-421a-a022-a90d07dbce6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d02e9ad-788f-4b68-8a55-cdc104190f06",
        "cursor": {
          "ref": "1f08ac48-a343-44c7-b6c1-afbefe01dd9e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "23ac96e2-f7ed-4eca-a874-2b5c8df20974"
        },
        "item": {
          "id": "0d02e9ad-788f-4b68-8a55-cdc104190f06",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b0ef0628-87df-43d9-8927-00173b6fb298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f6117e-8652-4d8d-8d0c-b5e7a255f17b",
        "cursor": {
          "ref": "ae447de5-b2f4-442f-ad96-f2afabfb6cd5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bcb6a81d-c093-48c3-a8ec-0d7f181ea031"
        },
        "item": {
          "id": "22f6117e-8652-4d8d-8d0c-b5e7a255f17b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f253c82e-2160-4a91-8d75-1badff8a50bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf7682c-875b-4dbd-bf10-eec44bd3f56d",
        "cursor": {
          "ref": "a90e6e73-8b07-4062-8f5c-128a132e4d34",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bab2a66b-e86b-4de2-aa32-47b294797dac"
        },
        "item": {
          "id": "6cf7682c-875b-4dbd-bf10-eec44bd3f56d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "594076d8-21b2-47ac-ac0f-3dea9684d95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9061868a-7c16-4377-8de6-910a00e7aeb7",
        "cursor": {
          "ref": "bfce19c3-9d39-4c71-8b90-ba52a7b8fa1f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4628b26a-06f2-4ceb-acb2-a9e23780c713"
        },
        "item": {
          "id": "9061868a-7c16-4377-8de6-910a00e7aeb7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "abd58b36-869c-4911-9bf5-e99266c76a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baac65d2-0f42-4fac-8c52-29513a5f7e62",
        "cursor": {
          "ref": "84819bf8-0a5b-4b70-82d5-ef91494abb1d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3b711352-fe9f-4b62-9b9f-518d27a6ba0c"
        },
        "item": {
          "id": "baac65d2-0f42-4fac-8c52-29513a5f7e62",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cde53373-a1ba-44d9-af0d-01c332a0727e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe64e1a-cee7-4d7e-b915-e7911928ab52",
        "cursor": {
          "ref": "42bce5d9-d1a0-4a09-b314-56d6b7c59a3a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fdb1e00c-c019-4b06-9382-05a5a99de8c8"
        },
        "item": {
          "id": "9fe64e1a-cee7-4d7e-b915-e7911928ab52",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a2904b85-67e0-452c-b7cd-4bf8b386453b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df86ab4b-0697-4633-9492-83387a5fa087",
        "cursor": {
          "ref": "61e654f4-65a5-47fe-b4dc-6c6e70d843a9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "12e7aee7-0c2a-4d95-866a-0d69c7d0232f"
        },
        "item": {
          "id": "df86ab4b-0697-4633-9492-83387a5fa087",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cc25423f-cbad-4586-b1c3-d010c9484407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3757c400-5c71-429d-9e7a-273bea014d5b",
        "cursor": {
          "ref": "38954a5f-1cf1-464f-923e-268efd4a7d8c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "913f3cbd-5864-45a1-937b-e761fe8acb5a"
        },
        "item": {
          "id": "3757c400-5c71-429d-9e7a-273bea014d5b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "39b76bad-dcb3-4106-95d7-b1973c2439d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d32c3c-b2b9-48e0-a7c1-979c8e77d216",
        "cursor": {
          "ref": "0d4fdf0c-155c-4a4d-aade-3dd0652bfa5a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "877c1691-8e6b-4d64-a48e-8a8f15d229fa"
        },
        "item": {
          "id": "c5d32c3c-b2b9-48e0-a7c1-979c8e77d216",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9d523669-e9c1-4260-ac6f-e92350425489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5627fe93-6226-4b1a-ac0c-1e3e41344f16",
        "cursor": {
          "ref": "6f45be4d-1718-4054-86f8-926e3ef4a62a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "471040d7-01fe-48ba-aa77-c98599f814c9"
        },
        "item": {
          "id": "5627fe93-6226-4b1a-ac0c-1e3e41344f16",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "db83eca9-3eda-4666-ab53-46da6edfacc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11de9753-ee2e-4552-be51-689b87cabb20",
        "cursor": {
          "ref": "26a1a4a7-f806-47f3-81af-7bd77254d657",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "abe1f3a0-3009-4ce0-8d9a-503a466446e9"
        },
        "item": {
          "id": "11de9753-ee2e-4552-be51-689b87cabb20",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "457edfde-0a60-4211-bf63-a1d03560d406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da09982a-d6c7-492e-8c2c-286991b91755",
        "cursor": {
          "ref": "97271395-7044-4e76-b9e0-c8258cc1c63a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "87ac26cf-ba3a-48f1-9a58-f50a84d48722"
        },
        "item": {
          "id": "da09982a-d6c7-492e-8c2c-286991b91755",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "59f45099-e62f-4f4a-978f-d9f90abc8be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184cf688-d1e7-486a-8037-6dbebe7cffce",
        "cursor": {
          "ref": "e5ff488e-7ba7-4087-b9be-7a7bd696a8fe",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e73201e6-21ea-4953-b3f8-4acef3ee422b"
        },
        "item": {
          "id": "184cf688-d1e7-486a-8037-6dbebe7cffce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6269f91d-d5be-4ce9-9b2b-fe1bddc138fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba76763-28b4-47b4-bdb7-19d8776a8d44",
        "cursor": {
          "ref": "db887563-16f6-4406-8f50-ce909399eaae",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1578f73f-e952-45d7-a7b3-974b0ba48020"
        },
        "item": {
          "id": "fba76763-28b4-47b4-bdb7-19d8776a8d44",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1b29ba07-12e5-40fb-9abb-2f0f0eb7a6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4955ad-d846-4f10-b68b-57db6a4b13d5",
        "cursor": {
          "ref": "f1af50db-fbf6-4462-8b52-dca3deea2f36",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "32a8dbe9-bf06-4755-ae86-aa01cf7d1783"
        },
        "item": {
          "id": "2d4955ad-d846-4f10-b68b-57db6a4b13d5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d8f33e0e-db21-443d-8450-969160f5434d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d9953a-5860-4baa-afc8-bb6ad5d0c9fb",
        "cursor": {
          "ref": "e5e1898c-fb5c-48df-acd6-5dd528e95fc3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "38085582-6d96-40db-bcfa-7abc6222f78c"
        },
        "item": {
          "id": "f1d9953a-5860-4baa-afc8-bb6ad5d0c9fb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d6df8fdc-684c-459d-8f3a-322a8122cdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b595b3-8aa9-4812-8632-72574d821218",
        "cursor": {
          "ref": "e52ca56c-65fb-45a4-8618-636196729e72",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7c14eec2-4fbf-4223-890b-c49fd8227b44"
        },
        "item": {
          "id": "89b595b3-8aa9-4812-8632-72574d821218",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3fdc0eef-971c-4e9e-bda6-959ee2dcde0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d60577d-3d70-4c73-b7f6-6e08970f4d86",
        "cursor": {
          "ref": "022efda5-26b7-4ec3-923c-06421a756478",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "47328d7f-e274-4ea2-8e34-ecd464a4818f"
        },
        "item": {
          "id": "7d60577d-3d70-4c73-b7f6-6e08970f4d86",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ce064b21-60d2-4d90-9483-39befa34f5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba69938-f5ee-4e99-a35a-5ef8333f5cfe",
        "cursor": {
          "ref": "d722be01-fe42-4cbd-8b88-4d6fcd44e4fc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "74471c2c-9082-49fa-9423-c024981c618f"
        },
        "item": {
          "id": "6ba69938-f5ee-4e99-a35a-5ef8333f5cfe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ce11f859-dc87-4ece-9517-75e44d8a7733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba5f82b-21bd-4afb-aeed-e8db1b9b3945",
        "cursor": {
          "ref": "620900dd-2dc5-4cc9-a233-6ef054e19bb5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "47e0735a-cea8-49d3-96e5-a0a41479ab25"
        },
        "item": {
          "id": "aba5f82b-21bd-4afb-aeed-e8db1b9b3945",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4960a5b0-b5dc-4112-8265-375e698cb7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f5cc74-b5c7-467e-b5dc-b9367a3503da",
        "cursor": {
          "ref": "7439c40f-3335-4b0c-8f65-5115866f1287",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a1025ae3-2490-4888-924b-5a5161e3cdd7"
        },
        "item": {
          "id": "d6f5cc74-b5c7-467e-b5dc-b9367a3503da",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6317bf0f-791b-4d9a-b830-a7ed68af4be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f594ab-1212-4a59-bf9f-7685fbd25054",
        "cursor": {
          "ref": "fc7fa97b-2b51-479f-95d0-ad24531ede76",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d2541417-0843-4fd4-aa28-2c2d5dad6a71"
        },
        "item": {
          "id": "b2f594ab-1212-4a59-bf9f-7685fbd25054",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8284fc03-b9f6-4897-b820-6dadaa9b3237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d85e7a-4e1a-41ef-a4bf-28e28c7307b1",
        "cursor": {
          "ref": "36c9517b-39bd-4e6c-8a5a-765d0d29b408",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "79985aff-9be4-430e-af5b-427b0d1a773a"
        },
        "item": {
          "id": "c6d85e7a-4e1a-41ef-a4bf-28e28c7307b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a8beef9c-6f88-4000-a5d5-c05305c181f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecb6159-6248-44f2-9c1e-e10bcb5b8122",
        "cursor": {
          "ref": "6569fbf2-fcff-4ef6-9a47-50a39e71d942",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "15dae91e-1b75-4245-89d8-21d2367a60ed"
        },
        "item": {
          "id": "4ecb6159-6248-44f2-9c1e-e10bcb5b8122",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "85e8d341-5a50-43eb-b4f0-71a821f0d0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ca81f6-1955-43ca-ad59-1d2155ad33de",
        "cursor": {
          "ref": "5b1fb847-e6a1-42a2-baab-82b4976bacd6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8047e771-5afa-416c-8e67-5b3cb6cbc399"
        },
        "item": {
          "id": "f0ca81f6-1955-43ca-ad59-1d2155ad33de",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f13d6f28-0fa3-4bcc-8751-711c7c1b8fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a76fe2-13ea-47db-a7b1-c8df9de2e886",
        "cursor": {
          "ref": "de67b869-b2df-4497-b0e7-10e8e6a25b5d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0b4954aa-b596-428d-8a3c-9b7e61c817f0"
        },
        "item": {
          "id": "c1a76fe2-13ea-47db-a7b1-c8df9de2e886",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9c715c6b-6282-458e-a5ca-ac61ae874410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b00e07-f72a-4bc8-afdf-8a2428f75bfb",
        "cursor": {
          "ref": "6be68d27-d2f5-427a-93de-5ddeabfffe0f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ef713fce-c61f-4e34-b8d2-f899497995fb"
        },
        "item": {
          "id": "36b00e07-f72a-4bc8-afdf-8a2428f75bfb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2a60a04b-d435-47db-8707-065436f2667f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76e8ba8-1332-4430-8f96-bbb8651b7f44",
        "cursor": {
          "ref": "e49151c7-5c98-4117-ba1b-223cfb374d69",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a1b1b5a3-df6f-404f-86cb-f50b82d13368"
        },
        "item": {
          "id": "f76e8ba8-1332-4430-8f96-bbb8651b7f44",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d95ecea-7653-4d9f-b770-ea0e479a989c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789ccb92-3ec7-4afd-afae-bac21e69a11e",
        "cursor": {
          "ref": "53f2bfd2-cc23-4c6f-90c3-638fa55cdd8d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7f810905-9300-4e4e-9991-9494c27ace6b"
        },
        "item": {
          "id": "789ccb92-3ec7-4afd-afae-bac21e69a11e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db8b127f-4f8c-4685-a47b-44298636d932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6820f32a-3b0f-4a11-b298-6411061b3127",
        "cursor": {
          "ref": "666410d4-23bd-4670-8bd0-5407e93c62ec",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1d594f8e-f30d-4637-b780-615a663b7c35"
        },
        "item": {
          "id": "6820f32a-3b0f-4a11-b298-6411061b3127",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6cfd55d2-d07a-4203-bdd1-c4e1656a5074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f24cb6-a39d-44cb-a826-c68d892c0c68",
        "cursor": {
          "ref": "9b2d4d57-aa5b-4e63-a2bb-f6f19a5db3b3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "51cd4f16-1698-4f89-a1cf-ee556e141b7e"
        },
        "item": {
          "id": "19f24cb6-a39d-44cb-a826-c68d892c0c68",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5761bd2b-3b66-45e5-941f-c079256648de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5cafad-17f8-4171-b5c0-fa6602abba29",
        "cursor": {
          "ref": "65db7ef9-ebce-4ddb-acaa-ed9b99e655ab",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "52a50243-499f-4f4d-9fd1-9c059857101f"
        },
        "item": {
          "id": "0c5cafad-17f8-4171-b5c0-fa6602abba29",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f9b380fd-533e-4c91-b3fd-e093e3e7d248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6525d4-00c4-40df-b8f8-235a8a5ed28b",
        "cursor": {
          "ref": "ad95a864-dcf4-400e-9141-8d13df84dc09",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6fc85e2b-4707-45f2-b419-42b06c5177e9"
        },
        "item": {
          "id": "6c6525d4-00c4-40df-b8f8-235a8a5ed28b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2023cac9-6145-4674-bac1-89e6d9f7bf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a64cbb-132e-4757-b782-ab38bc119d66",
        "cursor": {
          "ref": "817fc925-8559-4a77-9c91-e4bfaf1755f7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6ad32143-ed2f-481f-be8b-943fbbda2ec1"
        },
        "item": {
          "id": "52a64cbb-132e-4757-b782-ab38bc119d66",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5694a5aa-71a8-4094-9277-a9772ebc0e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bdbdf5-4781-4969-89a4-439312d60314",
        "cursor": {
          "ref": "37dd5f93-33bd-4aa5-8069-b5e864b3bb42",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ba355ee1-da62-4340-b1cb-b997dea28536"
        },
        "item": {
          "id": "65bdbdf5-4781-4969-89a4-439312d60314",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6fa97cd2-0677-4f58-9405-36b159ed0d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da8ae0a-c5f2-471c-a9d5-4556c81c3a86",
        "cursor": {
          "ref": "f2ff4ff7-4076-4b7b-8c36-fed2be3e8903",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "88cd152b-ad98-4147-9d5f-b27813274e65"
        },
        "item": {
          "id": "1da8ae0a-c5f2-471c-a9d5-4556c81c3a86",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b7a1d19d-9e1a-4f96-9618-55b910e307af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11559da8-d4bf-4aaa-a74e-d86e399417ca",
        "cursor": {
          "ref": "1e41ea9d-fdd2-4c1a-bc8b-9c667eee9188",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c6b9196-5808-4059-91e3-53d9ad38e4e6"
        },
        "item": {
          "id": "11559da8-d4bf-4aaa-a74e-d86e399417ca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7555627e-d3e1-44e5-a3e7-10d3c7b34ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b4bd3-05bc-4f89-a644-3e0917056f9e",
        "cursor": {
          "ref": "a4ec47b4-19ef-4fbf-b789-8f02223982fa",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2b655348-ec11-4c79-9426-d162cc4adba6"
        },
        "item": {
          "id": "b64b4bd3-05bc-4f89-a644-3e0917056f9e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ecc7d3d-90b0-433d-9307-dbee0573a663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28ff4ee-e4a5-48e1-943f-545006cfb306",
        "cursor": {
          "ref": "18cec5ae-f73b-412d-910d-4a88e8a87748",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5adbe2d8-f72e-41d3-88f4-fa3728072120"
        },
        "item": {
          "id": "d28ff4ee-e4a5-48e1-943f-545006cfb306",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6d4fc861-69a2-4bd8-aa2d-1677e02783a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103bbc6-19df-4315-b198-a3d66ca6e01e",
        "cursor": {
          "ref": "83ef4306-b113-4367-aaed-928af73cbc2a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "86a6d25a-d0da-45a3-b4ad-00290fdcd4a7"
        },
        "item": {
          "id": "1103bbc6-19df-4315-b198-a3d66ca6e01e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ddb45623-742e-4ffa-8e7e-bcb9fe873f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47b725f-2deb-41b2-af26-7f835c1e07d2",
        "cursor": {
          "ref": "5263d625-c774-4a94-b511-c54805dd6a48",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "413a30a2-72ef-44e0-b80a-bdf6b431d70b"
        },
        "item": {
          "id": "e47b725f-2deb-41b2-af26-7f835c1e07d2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3194f4a6-a2d3-4c64-93ea-f8ecbe0bd012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e731561b-723c-49d5-89c3-f380b20dee20",
        "cursor": {
          "ref": "7c8c60c1-6bd9-49ee-b6bb-ea6ac1176f61",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8cb25752-0d33-44a3-ad6e-be3af6b4f6cb"
        },
        "item": {
          "id": "e731561b-723c-49d5-89c3-f380b20dee20",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "35463c11-344e-4ec8-9289-d30c73450332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00595f55-d42f-4d8c-b29f-317a25dd7032",
        "cursor": {
          "ref": "f8cdfd3c-a2bf-4213-89ef-b13abe92ec8b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "68843aeb-4f6c-4ace-b2a2-7740f8c683e5"
        },
        "item": {
          "id": "00595f55-d42f-4d8c-b29f-317a25dd7032",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f991398a-caf1-4515-a69e-a1c459e6f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c519fb-10b8-4b9a-bb7d-618f2bcdb09e",
        "cursor": {
          "ref": "6137c4a0-ce06-46d7-bfb2-78b2266a5fd4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ff09e125-0fdd-433d-bdbb-307df8716448"
        },
        "item": {
          "id": "38c519fb-10b8-4b9a-bb7d-618f2bcdb09e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8a5f543c-84ae-4c86-946d-a627ffb9f9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b5745f-26f5-4619-b4fd-d1fa7d1ea0f3",
        "cursor": {
          "ref": "be9ba7c6-2b33-4561-ac6c-b5b3e7f25149",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a61e4ca4-9070-4fea-85f1-695655434755"
        },
        "item": {
          "id": "18b5745f-26f5-4619-b4fd-d1fa7d1ea0f3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4d038ced-4084-4d97-a4ee-3cedebb29a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ee56e7-012f-41e8-b666-b080a0b438dd",
        "cursor": {
          "ref": "89488fa6-a262-4922-a01b-1ac54221c2ea",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f30d9e87-1974-48ce-929a-0463b2f8a090"
        },
        "item": {
          "id": "f7ee56e7-012f-41e8-b666-b080a0b438dd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7d83252a-ca3d-482f-95a3-3933bcbcdb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269b7dd3-4959-485f-a361-b70047167ecd",
        "cursor": {
          "ref": "048b930b-eeb0-430d-ad79-aa117380d321",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "08f688b7-d805-4672-bf08-eac5443b6ab6"
        },
        "item": {
          "id": "269b7dd3-4959-485f-a361-b70047167ecd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "67ad1d58-b917-455f-a4ce-dc9e11391cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69af781f-60cd-4d10-bb54-dbc7ef631978",
        "cursor": {
          "ref": "6e739949-6be5-455a-a730-d1b26ecd338c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "382f08d2-0dc3-42a3-94c5-2e55461934f0"
        },
        "item": {
          "id": "69af781f-60cd-4d10-bb54-dbc7ef631978",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ebf1a291-da3a-4ae0-a44c-73c0afbf1f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d542fb-0716-49d6-a969-a0bcb4823c1e",
        "cursor": {
          "ref": "6d0832fd-1a70-464a-bee8-987bfed75adf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4979deff-638e-43f1-a8d7-ed6bca38b625"
        },
        "item": {
          "id": "c9d542fb-0716-49d6-a969-a0bcb4823c1e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d187f138-a79e-42b2-bc81-edf07b722bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dfdb3f-7647-493a-9f79-79c1614cc50e",
        "cursor": {
          "ref": "8e118476-aa6d-431f-98bb-b736ba92c8fe",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "99a0f4c2-ed4e-42a9-ad33-46c3e85535ec"
        },
        "item": {
          "id": "69dfdb3f-7647-493a-9f79-79c1614cc50e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f0f7f45d-a006-4522-a974-eea138f2dc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c567e5d4-a35d-4cdc-bd7c-da53d13139b2",
        "cursor": {
          "ref": "96e4d9b6-0e90-400a-b768-8a3cf1b021e4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "69ca7a9e-cff0-4aa9-b152-c7115fc91c87"
        },
        "item": {
          "id": "c567e5d4-a35d-4cdc-bd7c-da53d13139b2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a5262621-3dce-4e95-9ce5-01f581217a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fa5162-9e02-4bb7-8335-15395a16d208",
        "cursor": {
          "ref": "183a35d9-0b91-45ad-8c6b-ae6bdaba1aa7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a0f7954f-b088-4258-8581-5344b8b1fbbc"
        },
        "item": {
          "id": "d0fa5162-9e02-4bb7-8335-15395a16d208",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2a8b99f7-1d1d-4e0e-8a04-593c937cb0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914ce912-aed7-43af-9510-06500cd61a51",
        "cursor": {
          "ref": "7d2e21f1-880e-404f-ba76-2e973d8ef639",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "17e8d4f1-9828-43f4-a34d-025958214aba"
        },
        "item": {
          "id": "914ce912-aed7-43af-9510-06500cd61a51",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5d043509-da90-4862-8db6-cf4499b32c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a706dc-a0d5-4a3e-808b-d5c851884868",
        "cursor": {
          "ref": "82117a3f-52a2-4c8f-b588-22d9cc890986",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ffef356b-7581-4b13-9939-83d77f9f9595"
        },
        "item": {
          "id": "01a706dc-a0d5-4a3e-808b-d5c851884868",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0e94fab8-4f39-49ba-a8ca-d79bb63120c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac1d63f-7df1-415e-864a-eee050ad3995",
        "cursor": {
          "ref": "ecb589cf-91dc-4851-aba7-e8fb56bc2331",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e2b068e4-1c10-4016-b43d-b5d51f732006"
        },
        "item": {
          "id": "8ac1d63f-7df1-415e-864a-eee050ad3995",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9c0f5164-2b7c-4a5a-bc13-99509d69ef72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6ed619-5b8c-42c7-b7cd-d364c582dfdf",
        "cursor": {
          "ref": "6e60fedd-4915-47b4-8ab2-aacc5ad0ff6e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "09ac00e7-bd0c-4bc5-8929-78243072f607"
        },
        "item": {
          "id": "7c6ed619-5b8c-42c7-b7cd-d364c582dfdf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3b407695-d1a3-4912-a792-c2a8461c55b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c978738-15e4-4905-863e-b62825b3da51",
        "cursor": {
          "ref": "d000114a-d7e9-4e1b-8259-d1ade0ced1a4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c13911b-aa3d-4912-b4a2-fb50bc9f1203"
        },
        "item": {
          "id": "1c978738-15e4-4905-863e-b62825b3da51",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9f1f0577-123b-4581-8c09-229c57c274be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a9dd6b-827c-4983-840e-c76e685bbb01",
        "cursor": {
          "ref": "70628d39-4a0d-4b01-97a1-64110284b68c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "489b816f-47cd-46aa-88eb-df7685842f16"
        },
        "item": {
          "id": "85a9dd6b-827c-4983-840e-c76e685bbb01",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d5186a48-b935-4dcc-bc49-ec9caa53989b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d552f627-73f9-4eaa-ba14-5a1b9a434c9e",
        "cursor": {
          "ref": "b6800f32-5110-45d2-9503-2b8d82df2f3a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ea19b93d-fa41-49d6-94be-0c3a23169b2d"
        },
        "item": {
          "id": "d552f627-73f9-4eaa-ba14-5a1b9a434c9e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef738792-a4a5-4fa5-b95f-50c621a33e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991b3ffe-f207-4821-9cae-579ea1071d06",
        "cursor": {
          "ref": "0ad36989-96cb-443d-a580-987ff0422440",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e583d42f-f5c4-42fb-acb4-28d72fbcbfc7"
        },
        "item": {
          "id": "991b3ffe-f207-4821-9cae-579ea1071d06",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cb3b4b16-8af5-4361-878b-5c223f643da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213d7b79-0748-460f-8ce1-b0f403b83fce",
        "cursor": {
          "ref": "7b14a06f-3153-4d50-8e59-591ff47c49b6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "adc00613-50e9-4b63-836a-006bd544bf9c"
        },
        "item": {
          "id": "213d7b79-0748-460f-8ce1-b0f403b83fce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ccc0ff64-ff28-43c2-a01d-7c1a2a739242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacefa13-8023-4bc7-99fa-3a7b266e6476",
        "cursor": {
          "ref": "b4d3b154-a694-4fe3-96c2-a07824ae1c8a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "29181166-f1a1-40e3-a87b-cbf4bd984dad"
        },
        "item": {
          "id": "eacefa13-8023-4bc7-99fa-3a7b266e6476",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "377cc480-c008-4155-a535-b1909c68557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fac958-67fe-476b-9841-8b8b838a8b05",
        "cursor": {
          "ref": "400bd0a6-c190-4e3e-9306-f06ce42d3f10",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "00be95a3-0897-4998-b63c-94a42892c32d"
        },
        "item": {
          "id": "59fac958-67fe-476b-9841-8b8b838a8b05",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7df08a1b-3a5e-4752-82ca-5788cd7607fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7348a2-23bc-41eb-80ab-e71322a248ba",
        "cursor": {
          "ref": "44cef145-3714-41bb-992d-c2102cd869a5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "17a3d59c-a320-4ef5-9cb6-37bac3b805ae"
        },
        "item": {
          "id": "ce7348a2-23bc-41eb-80ab-e71322a248ba",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9bf0561b-5370-49e2-ab48-dd9a18a60d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973698a9-71ce-4426-aff7-d8d386be6d34",
        "cursor": {
          "ref": "1bb638d5-5cdf-4cbe-9d04-5fdcf7192d2d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e45ba29a-a376-46b3-86b5-a0034da52649"
        },
        "item": {
          "id": "973698a9-71ce-4426-aff7-d8d386be6d34",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2c1e6552-f4a1-490d-851e-d648dcc41919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7025bf-00b5-4168-969f-103e6d52c103",
        "cursor": {
          "ref": "07d75f85-5b50-4fc9-8cee-aa452b4d7aa0",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5df12ed2-2371-465e-b5ac-9fd650d5a7d8"
        },
        "item": {
          "id": "8a7025bf-00b5-4168-969f-103e6d52c103",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b796d7da-7f86-483b-971c-48d4161e3ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea3dce1-2ca4-4576-887f-aef66dc74560",
        "cursor": {
          "ref": "aff27b53-37c9-4716-9f93-abb9c4e52ed4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8e5301ab-b69f-49fc-9dd2-36000b9fce31"
        },
        "item": {
          "id": "0ea3dce1-2ca4-4576-887f-aef66dc74560",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e6ea5131-3016-43f4-b4dc-a4246ce5d98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dd2b79-e1d1-4fff-bb0c-a4ba15a5864f",
        "cursor": {
          "ref": "cf854c52-0acf-43e4-9842-2b77e16dd260",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f36d9485-df64-4136-930a-f315b7964410"
        },
        "item": {
          "id": "83dd2b79-e1d1-4fff-bb0c-a4ba15a5864f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7b7e2a58-3410-46ed-b680-65d84b591fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7289b3-9328-48dd-9fb5-3d68dc705d16",
        "cursor": {
          "ref": "e61ff8a9-aa44-4bb8-a471-190771990e0f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ca1cd208-168c-4cf7-b4f2-d6a5142bcdc1"
        },
        "item": {
          "id": "0d7289b3-9328-48dd-9fb5-3d68dc705d16",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5f52c544-5628-4c76-9734-dd5aa43b9cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e1de45-3816-4295-a57a-160eb9ea53a7",
        "cursor": {
          "ref": "686bc411-6272-42da-88bd-2f4873639a76",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6126b031-9ec0-49d0-b2c0-e3e25f951920"
        },
        "item": {
          "id": "f3e1de45-3816-4295-a57a-160eb9ea53a7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "15a72001-1e3c-4df5-8e24-0d14823a06a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c2bc0-a270-4124-9045-6e9fe0a749c3",
        "cursor": {
          "ref": "25bfde77-474d-4845-9f67-ab4793c3a3c0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e3ca14ba-4f87-41fb-8212-ab3e15da6479"
        },
        "item": {
          "id": "630c2bc0-a270-4124-9045-6e9fe0a749c3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e2771964-1a02-4ee2-b411-8f0ea9337a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6be459-2aab-4467-98e7-9df512949d03",
        "cursor": {
          "ref": "e9fb0e12-3098-4da7-bc6c-0b3d9d3d9c22",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4e0b0e54-89ac-44d2-835b-e0c885e95795"
        },
        "item": {
          "id": "7c6be459-2aab-4467-98e7-9df512949d03",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "caf9cb8d-1db5-4cd2-a4de-7d5a132a0e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088f7a49-81ed-4ef6-935b-ae78b7f34577",
        "cursor": {
          "ref": "c5a726e7-443a-40c1-bf02-bc0435391c70",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ca398fb-c14a-46e2-823b-06877b8e23c4"
        },
        "item": {
          "id": "088f7a49-81ed-4ef6-935b-ae78b7f34577",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "70e593da-1e19-4aaa-a4d2-1da76a82fbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca28218f-86c6-4537-aaeb-ca21d6e3f564",
        "cursor": {
          "ref": "62a9814d-2e67-4c46-b44d-e62130301cf9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c24fe3a0-7ef7-494e-bce4-03efc16c3dff"
        },
        "item": {
          "id": "ca28218f-86c6-4537-aaeb-ca21d6e3f564",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a261ee7-649c-4ec9-a286-a41b573314e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004fa581-30eb-4de4-bfc2-0b4060139c58",
        "cursor": {
          "ref": "aae9e653-aa2b-453e-8ec0-047e1b6289b0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d25a6f72-6527-4de2-afd5-b8d704833bcf"
        },
        "item": {
          "id": "004fa581-30eb-4de4-bfc2-0b4060139c58",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "22d18906-e2e5-41e6-95e6-4006b3209a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dae68a4-3ebc-4ec2-8625-e5c10bac0437",
        "cursor": {
          "ref": "f83c797d-b39f-4518-860e-6130cb145e4a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "832048ca-ff25-41a7-9c0a-e5bd565cbeba"
        },
        "item": {
          "id": "4dae68a4-3ebc-4ec2-8625-e5c10bac0437",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "95658a91-9ceb-49fa-8259-43da611cdc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235cb0d1-59a1-4929-8d87-16117f9f43e4",
        "cursor": {
          "ref": "28a2871f-de77-441a-9a88-cea71f3cb84b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c4ab043-58f7-435a-ac66-31fd3a9f3afa"
        },
        "item": {
          "id": "235cb0d1-59a1-4929-8d87-16117f9f43e4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7191d668-8b21-4b50-bdd0-9e924d7cf7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f304cb3-9ac6-4f35-81ed-8d3b91196be9",
        "cursor": {
          "ref": "ddc6c12c-0878-4c18-8c9e-c1f6e9d75693",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "74aa7140-e90e-42d0-ad4a-0ac0b37343d8"
        },
        "item": {
          "id": "8f304cb3-9ac6-4f35-81ed-8d3b91196be9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fee9cc06-9e5d-4f1e-9b13-73c5d23562b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01c67f3-a70a-4972-8e35-ab228b857852",
        "cursor": {
          "ref": "8d0b2ebd-9101-459c-85d1-c3f03e388d75",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7ae368c6-580e-48c7-9946-5405cf295fcf"
        },
        "item": {
          "id": "d01c67f3-a70a-4972-8e35-ab228b857852",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eb80f018-1db9-4f8f-af0a-2a6d3af52eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3562e92-5438-49d1-8656-22f0b6cb70f5",
        "cursor": {
          "ref": "515cb857-5de4-49ca-b407-ee1d8320dfc7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "782f14c7-9ec9-468c-beba-d7d6a37cf3ff"
        },
        "item": {
          "id": "c3562e92-5438-49d1-8656-22f0b6cb70f5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "21c1ac56-66e4-4f14-9a56-5320760d511a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970a65b8-0cd8-42ea-b7c5-95f12c29533e",
        "cursor": {
          "ref": "cc5568b8-374c-4ab9-9f54-dbbc4896bc98",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ec3e06c7-e645-48a2-9a13-6ee40fd4df32"
        },
        "item": {
          "id": "970a65b8-0cd8-42ea-b7c5-95f12c29533e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "915a36ae-e229-4daf-8878-f10600909f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d946e72c-9e17-48ba-9d0d-bfd0c815450a",
        "cursor": {
          "ref": "3cec7735-0003-403a-ac02-fa59556f8d6d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ec23549e-5d85-4737-b6d0-1894db1d8d99"
        },
        "item": {
          "id": "d946e72c-9e17-48ba-9d0d-bfd0c815450a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c9f9eeb4-0479-405d-8d4f-e9400af31b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b72214-df26-448b-9256-1746215778f8",
        "cursor": {
          "ref": "95abdae5-f842-49e5-a39a-e05ea8881754",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5b601d7b-b0b3-48ea-bb13-dcdee58be4ad"
        },
        "item": {
          "id": "c9b72214-df26-448b-9256-1746215778f8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "34cafaa3-5d01-4643-878c-4c0c16d223ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81421ba7-2bb5-4613-84a0-9d2c51b88031",
        "cursor": {
          "ref": "4066e2c8-792d-48db-b037-a845004dfc9a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0e2924e2-127e-40ef-9bc2-fb76034dc01f"
        },
        "item": {
          "id": "81421ba7-2bb5-4613-84a0-9d2c51b88031",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "11fe65c3-becd-48b0-b6ca-ffd167151b93",
          "status": "OK",
          "code": 200,
          "responseTime": 2367,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a01eb0b-0ff3-4f36-bbd5-7daf41e1edba",
        "cursor": {
          "ref": "d055bd81-a703-476c-83f2-52ab6448aec9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cfe251e9-e079-4b8a-a486-de2a18c9fb95"
        },
        "item": {
          "id": "2a01eb0b-0ff3-4f36-bbd5-7daf41e1edba",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bb1b562a-277e-456b-bf5b-87221f59d3de",
          "status": "OK",
          "code": 200,
          "responseTime": 2847,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf032cf5-a4b1-497b-abd1-f0a5f947996d",
        "cursor": {
          "ref": "30a72c1f-6f1a-4cd0-a32a-adc2a9a1ef04",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c982a0f0-5f2c-4b46-b61b-3d0b9e32ed13"
        },
        "item": {
          "id": "bf032cf5-a4b1-497b-abd1-f0a5f947996d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "54a2549a-d746-4712-a209-1f4ec1ab4156",
          "status": "OK",
          "code": 200,
          "responseTime": 2554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4176e917-4bcc-4ad1-a89d-c638dbdc8353",
        "cursor": {
          "ref": "0e3c8098-3207-4152-b907-d6ac484bea8a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "84268edd-f6a9-44e2-9b88-e72570bdc182"
        },
        "item": {
          "id": "4176e917-4bcc-4ad1-a89d-c638dbdc8353",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d481e56-09fc-4739-8ef7-5e37292c744e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4176e917-4bcc-4ad1-a89d-c638dbdc8353",
        "cursor": {
          "ref": "0e3c8098-3207-4152-b907-d6ac484bea8a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "84268edd-f6a9-44e2-9b88-e72570bdc182"
        },
        "item": {
          "id": "4176e917-4bcc-4ad1-a89d-c638dbdc8353",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d481e56-09fc-4739-8ef7-5e37292c744e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42e5b23-8ffd-4048-be3e-61debd822ef3",
        "cursor": {
          "ref": "6809927f-0e9c-46d8-a15b-c829643146bd",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d4bb71b5-bfe7-4e96-9661-6acf7be91928"
        },
        "item": {
          "id": "b42e5b23-8ffd-4048-be3e-61debd822ef3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "81a56c52-ee9f-4fc7-9385-c62abc4a2a3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a7a06a-5ce0-4344-a244-41bf0c88cf95",
        "cursor": {
          "ref": "3fcd4790-a251-41ad-9b3e-e2407a6c4421",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2bddc66e-9580-4b91-b341-cab8b5b8450c"
        },
        "item": {
          "id": "51a7a06a-5ce0-4344-a244-41bf0c88cf95",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "37dd18d3-3053-4dd5-9e80-96c5587ac507",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}