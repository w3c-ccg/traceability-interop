{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b856ec18-65b6-4bbf-9f0b-5479039c0e2f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6c0ae24c-bf2a-4c53-b53a-1a75d76072db",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71c8d968-4271-4ac4-bb89-14ef1bab691d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d74e69c2-73fd-4d99-b88e-48863f7a4155"
                }
              }
            ]
          },
          {
            "id": "c6952344-389a-47a6-b456-f19a6a73651b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9edb8fe5-4f9d-4d4f-be47-4f3b47d58f51",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0e53be0-8a7c-4a35-b1f3-febd2b895d20"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "49c80238-78f6-4b3e-b7a7-9f849745aa53",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b2b1421a-493e-4ff0-b162-ad539b812aae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c4f9fed-7152-4829-90d8-a10d5632c664",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8f62060-95f2-41a4-b2dd-7934144bdfb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2397800c-50ab-4670-a343-eb59de7881e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebf2a435-289d-46ad-a267-d0ee170000b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9901b8d2-59dc-46b6-aec4-00445287eb56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "905d4fc3-7795-4802-ade8-f39fb79c7a8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a265b2c4-0f1a-4c0a-9fe5-fa1b627a45d8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea90070e-8bc2-4f1f-a50c-5d48e9537ed2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e3b685e8-3f04-41e9-a7f1-666fc2ad3ca8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "552fcd8d-3efc-4026-a018-8052580008b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ab4d5e9-bfb8-496b-a776-ec257394f77b"
            }
          }
        ]
      },
      {
        "id": "f875d9d5-c3d9-4d24-bc2c-19c27b57cb80",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "58f44672-4271-4def-a968-4909c514e117",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7813e2f-2615-4574-8573-658d286016ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f4e455d-ce44-4ab5-b631-2db3154e3b7c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0881ba65-d57c-4a20-aa61-eab5ab9116fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fee76d10-75b4-4bff-ad97-8d7e64a5d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44de810-f7c7-4f48-9ac1-1fc4beb4fe88",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a7ebca-8234-429b-8052-e54a6e25c321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bb5b701-7593-434b-b356-25b882182849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe8a415-3e84-43bf-aeb7-ad7b175d9400",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7593fc8-2517-4f9c-899c-bed5095a6776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f78d4df8-0598-40e1-ba97-16e01ef78c9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13a07577-19f2-4d79-88c8-87ccf321b99e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "520965b8-b8d5-4863-9b60-4081b2d25f4e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d097fcb3-a695-4bea-a054-b0d626ca237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b090f03b-0b38-48cf-ba7c-378bda76fd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d20632-04a9-441a-9aee-c4f96ad5f4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f617a51-f783-4629-9748-741e74acdcdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10b17f74-3f1b-4ba7-97d1-a06e7c39a26b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa9413fa-7fa7-47ee-a006-607054aee20d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fb87324-deec-41bf-96ee-0287499c3372",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f15647d4-c894-429a-a0fa-50d60c199fe2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "006d3197-8b9e-4394-995e-53173ad9fee2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "911a599e-4f3d-4f73-9660-379bbfe24d8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3fbd8cb-2d58-4dfc-91a5-a4dd408ac1db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1738edd6-dcbc-42e6-a569-f15358f4441f"
            }
          }
        ]
      },
      {
        "id": "82f09db9-2040-4d4d-9d55-91c8c728166d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "339f66be-6e28-4faf-b179-31daa3a18cc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16fb0921-f748-497a-b3b3-758862b910df",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6231fcd4-9318-4f06-ac48-7bcacd251132",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9c7ca2-5a77-4d02-a7df-2a753d590170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d6eb4f-b726-4358-a4bd-d4e900a9ee69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9460de0b-c229-41a8-8f2b-4f43a42defa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d86d0f3-9797-4a2c-9fa7-b8bf325a8f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db6d086-9e16-4991-b186-6e3b08b2573c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc84da4-a0c7-464d-bda2-6f4c9514951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1348baf-8de0-4912-82fc-2786527c0633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deb983b-13fd-402a-bf89-94b4da759874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17a734ea-c27c-4e58-8494-22aaf860d397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2558cf56-f671-4637-ad3a-ee7826ae34ff",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9e6fe8-256d-4369-b984-61899e100655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cc9eec-fd55-4ac2-87fb-5a84363367bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7990d77-b1c1-4947-bf6b-27d0bd6e224c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47a6a792-bdc0-479f-892d-97a9b5b80abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c8cde9-5fd2-4a13-b23c-53a0a60528c8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d04879-c468-4545-8b70-2a776c5f1ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1164ef3-a74f-4fa5-b332-52b3105ef0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6936a24-e1fd-4b45-86a4-bfc39f409cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "104d1a17-28f6-4a1d-a673-7826ec14e6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec307b0-9f6e-48ee-b3ac-71675c75eba5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d849cc-149c-4b3d-aa14-eab875cbe6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c8037a-c3a9-4d5e-af6c-719688e21c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9336df97-9678-401d-a125-43344226cd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cff37aa1-3c7a-491f-b60c-2fa93e57c464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30ff920-8c67-473e-8bc8-61ca58bf501b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d9a2b5-1c3c-4cc9-9baa-37d1d4f09f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b561914-dd6d-48b6-91ac-088e7ec6ab72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac30dac-99ee-4d73-8809-b7e6e527919d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69c4e51e-8e8f-4cbf-952c-9df01dc409e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b2c74e-c7ee-4b0b-afda-b9bd559d93d1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c3db39-107f-40ec-a600-216dfe280319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c895a4-05fe-438f-945c-d42f104173e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc583a8a-669e-4e65-8737-71f51a010fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b2a4e45-2373-4d1f-adbc-f086877a23d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca31cc96-9bd8-457c-9616-a8fb0295f57f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0640e9e9-c12e-4e41-bcca-6ccffdd36c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b427be-fcae-4e59-be5b-1c78b1e001a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270c80d9-9ce1-4195-9e9d-e8663a3d6c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "663c4b35-dea4-44ac-90d6-fba1fbab37e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3396ef-cd0e-4275-8fd4-716980f77234",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2c5719-7659-4b14-93d1-3af0bd0839c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6114ff42-b6f8-40cf-b833-13849ee98c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1575b910-cf3e-4e93-a09e-70ee1ae50ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab35afa0-d919-4648-ab5f-53a49bc2ead0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54d22ff-17d5-457b-8ad5-71688f226fb3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f815bbd-e830-4cc2-ba69-a49a992cefe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fddc900-f854-4d43-950b-75c8dd9a2280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff764e5-e1f9-4609-b9ba-c5d689865bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072d99d6-20a6-4648-aa4b-85cfdbfcf099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297ae21c-84d6-41df-8441-cf8685ded665",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204781df-d152-4322-a672-e206145c9eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cb1b4f-882d-4c56-93ba-5cefdbec319e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35109d1b-b7df-48ac-8e92-3a2b34c42e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "351e67f3-a988-443b-93d2-f76bd1888e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fded34ff-ccf0-4fd8-9be9-a94208d81cf7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830612ee-de76-44f0-996f-bf9a3d6f5f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6066f2a5-dffc-4a04-a62d-8282ae9185ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0795448-12b2-435b-abb2-841e9f53cd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24d8e690-38a2-44d4-91d1-9ed5ae7e6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ff1889-c27e-4a21-b1cb-ae307ae1195f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054a8618-81a1-4d60-ad2c-27bb38735fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ade2db-1f58-41c0-bf9a-52ddd213a055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c29950-aa24-42d3-bdd8-95538dc809bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e102562-3ae5-4fc0-ac2e-61d7baf2c2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d9228f-3b2b-412e-8733-8882c52621b5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38687bfb-3d3f-4958-b3ad-2f180296d003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8001e10a-850c-4f63-859c-f23615c02ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6b20cc-80e8-4e14-a478-45e32085e0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb3d429d-b470-4839-9b8c-db797d514bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b61f379-2d8d-41b2-ace8-688ccd6b45f7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32af2b2e-0f53-4062-8d83-d3b9dadfa6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69b2553-ef9c-4a56-95fd-797aeff5cbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf2b72e-8a67-4a58-bfed-5981b330d123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a71df91-5a9f-4446-9263-ac14feff83b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a534d365-e1ff-478c-9a82-bcd720bd5278",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ac267f-99df-413d-bad6-825164e4a79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc5b8f3-aa85-4715-a378-00756fa09000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d34c839-6a51-4852-b898-2be8640d484b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "696084a5-d680-491f-8035-45e4bd259582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506d7598-3705-4e56-be66-8ed2819bc5a5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257102e7-1cd2-4505-aff4-b0d561429976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0761d7de-3194-41f5-bb46-4a77d5ca0ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088c4694-04d9-431c-9acc-fb733af49127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37b68d18-9e6a-4123-8ed1-81810cc3d63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2b6692-31b4-4d7f-abe8-a189c8ada693",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3bd170-98af-42db-a8c4-d1cb265cb849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d450389-9e94-4cbd-b42a-9834778299dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78deeaab-02c4-4f5a-8b6f-673e706e5cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8fa53f-4f54-4357-adcd-289a28b78425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9b80ad-c961-4a84-a3a6-f1faa1202fcf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19484093-7ad5-4484-8aa9-c4a7ea17fa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be517d7-b541-40a0-a02a-c06d0dc248b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e90ed4b-51eb-4495-9cfa-1123f19dccc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "574060b3-bd0a-43be-a026-2adb8cafcb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99f1e6e-733e-497a-993a-5d2d784de5e6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4929ce10-198d-48d5-befd-9739a3319f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4174511-05ad-41e0-b650-bb401dfcfbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61232abd-4e62-4cfe-9db5-8c8e7197d53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8fe487-9646-4233-8509-0604284a638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7d130a-a9e6-4739-bcb4-859e1a6c377a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a9036f-f186-4520-8780-47365c374781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00230b02-fbc2-4bff-9bc1-6421896ed953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6341b9bf-abad-4d6c-a136-52e1fce26049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "379e2554-a80e-4e91-8b62-f6a8fb953241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac44b46-f66d-4fa5-a407-4a7c260a7447",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd96ad2f-81fe-40db-ba8f-6d3eff4f9df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa1f6c0-e54b-4ead-8861-d9551064c2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a49b1a-6fc8-4e2f-a9f3-de5c5621b859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99e1a02b-67c1-4ebb-9440-2f9da7204498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5ced6f-2ad3-4b99-aabc-412c93e814f0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8198f7e7-c0e5-4790-8da3-ea15a16cda90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a2b145-c018-4fb9-84d2-695e6727086f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9209da-72dd-4b68-a617-8e78490025d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c151981-a025-4210-9d0a-b3e556727db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851ab8fb-20e2-4f2c-b558-238c36ba1606",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc82673-5d64-49cc-8f34-daed488a2ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a318e601-ff16-425f-8637-f476ac1e18b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32051216-655b-4efa-87d7-ed9829c3414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d793d2-2254-40d2-a763-200141252977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a921b2f-9476-418e-9f22-f064090b4f1c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65fdbd8-bc9a-400f-9183-d33eb2734dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838db3f1-5797-4a5f-9819-c04f3cdef64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f876a0-e43e-402e-b9cb-b316436f8d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa18164f-b301-4816-893f-136f2605d071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b41e33c-ebbb-44f4-81e0-9ee1b94a4343",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff03551-115e-443e-b770-352a1cbd438a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a6ed2a-3733-4c71-a2f0-8fd54fbb78f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e5766e-6eb5-4509-a525-66d74435d61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "766ec7fb-beac-4a6d-bb0f-d5c9e7e728cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d096e25-984a-4436-9fc6-56a9bd2da8f8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae1a971-1920-4476-83b8-8c319e5f29ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e60a802-877e-4878-9e11-e0f09296e36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc68e2b4-1476-4461-8b0a-242bf088cce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4a7cdf-e4ce-4714-90a5-6a6a1effbd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe4775-5fbd-4442-a947-d9c6b5f68de7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d5e915-cc4b-47a3-913c-1cba5e74f8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ad7001-b690-4834-a2a5-57c4e9562c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd71f4a1-ce59-4ba8-82bf-a5c9858c2989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f87bd5da-1c2e-4c95-9288-b56e70c27121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807442b9-05ca-4eba-b6ca-d5b881225ace",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dca1fd-6525-4a2c-be95-47af36ed42b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04980594-e576-447e-9a59-67a42a67138d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dbdede-6cb3-41fb-ab21-909ebf04a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c84ab24-86d0-4219-845b-4c5871c70561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444d64f3-be48-4e41-a7ee-d8bf6026de90",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01f0343-c11b-4cc7-a263-acc49f783f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f64d2f3-9bb7-4d59-90b0-e644124dbc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fddc30-d797-4f61-b4e4-ade25d66fbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dc8545-cee8-4d5c-bb2e-cc11c7f7fa85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18be203e-314e-4597-96af-3aeb865505e0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b33269-4701-49bf-bda5-4148a32dd040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424a6970-b121-4373-8658-5e695dac561d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afc845e-cb1a-42d2-97fe-1feb32d5b92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e81ade-2169-4be3-ab36-faa5a0bd4e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d71c8e1-e048-4335-b259-77a63f4b2282",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a82f1dc-0d01-411a-a843-15f9ce8beea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341fb9a3-7e17-442c-91f1-723bfc91eef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b6a71b-d47d-4b84-8d38-a0a5af7134ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e5482e-48db-44e7-899d-1729c9771ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0607c562-8ede-42bc-b47a-d297e77cce1c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bde190a-dda7-496c-bd39-3535ab85cf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4820ed82-866d-4b79-8c73-0ce8214c3b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f956e9df-c8ae-4a4a-8063-365274dfa5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe063fc5-fae5-4d95-acfd-8ae2eb732c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ee16db-eecf-478b-88eb-1ff3ab749657",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cd2908-30ce-4847-b203-a9430ae6941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7f5a70-aadd-44d9-a7bd-64e6997563e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47d7253-ce5a-4e6d-bd49-1295e47422d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c6fccf-382e-488d-a8b9-28f1c6f8e839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eccab58-c011-4abc-a7ac-cf81353e4795",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0b8740-55da-4880-b706-1a81c25775a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2e82e3-815b-4f68-8b53-4881e2523faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d68bba4-3d14-4cda-9bd0-ca37b09a672a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "db45ee64-677c-467e-b1f9-6c19834ce75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5685cea-a401-4bac-9994-4ac75647dd0d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5dae84-6140-4dde-9a91-573072b96f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "528a559f-f6d5-4547-b2c5-8e2572af9ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a492c0-b157-4697-b3fe-cb053ac98bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe19be4-4257-4e5a-9409-98a90c1027af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674402aa-43b1-4a0a-8895-a3395525ccdb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904bc63b-a3bc-444b-aef8-d703592feab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce11607-b255-40a4-92d3-26d0cc839fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d263fe26-7c3b-466a-b67e-070f6dd0c110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6512a3c7-2805-41a2-88fa-07497281093c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63125078-4f2f-4a6e-bb9a-0ad233d961ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ed01e8-5503-4a90-871d-afb43b92d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d206b46-7a3b-4f3d-9460-158ebba881b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1aacb99-18e9-4c10-9078-f5b7c6475be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a77036-ffb6-4ed0-b964-cdb6917a2ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541d015b-49fe-43e3-ab0e-3fc001bd938c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed34afa-8191-410e-9b6a-a63a8cc8f57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690695fd-406b-4a9d-bcb8-da8a32df6c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f205eb-5543-408b-8be8-99089fba1554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d6bdd1-dd2e-4aed-b17c-a0bf3e2b7092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131efe0c-1e40-4185-8b1f-1986af3591c9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f427d3fc-a89c-4206-996d-e63ac417bd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8234e88-4537-499c-b116-d57bf9bd3633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8844bc0b-44ad-48eb-995c-ae9646c74216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e45f9e25-77e2-428d-ae7f-6fd22ecc6b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977fec46-934c-4a08-806a-f3fa9582ad54",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ecf328-2ee9-4545-823b-d5d213d347fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e90e154-0e88-4649-8c23-dd8537287425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3faa60-da32-42da-af6b-6d8e750effa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64f4c70a-772b-46d3-b76c-62f558c79862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcf9021-b7a0-47d3-b5d7-2290455cc555",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f4e2d-1a47-4909-91bf-52f33c408152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00866dd-983a-417c-b7c1-54d1364d37af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5d1ffa-963b-4d37-b812-4f384f6a6544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d449d7e1-f881-4acd-911d-c305368a7300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c4d15f-778d-40b3-8a31-1a89ef6d25d9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ca43d-7ae9-4439-9f20-bc02b3dc6ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c885bc0c-1baf-42f3-b75b-0013970b194d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af213469-4bf3-448a-81e0-c3ba389f2374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0acb98-b484-484d-80ef-8fc7656db48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fe8f2c-f0a7-40d4-8c65-9ac24170dda3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d3bd0-44ca-4124-96c7-86ed8f293af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e62f12a-9f93-478d-bae4-58f35433e8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b72033-678e-4d18-8ca1-337a3dbd9973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5115fd-1503-4727-a7b5-221ccd095c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b140087-04eb-404f-bd75-85a5e0af428c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fc94ce-173c-49d8-81c3-a9a97b0f3e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4340041-5270-4dcb-a18b-6c901fae34cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0974cfa2-72b2-4184-867f-8dff08f8e358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e810b40-6e83-4612-b61a-e7725b06c14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1500c48-407e-4be9-a1be-1eebfa5c73f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe2c76f-936b-4112-bd3d-c5f0b19f020f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7ebee5-9a64-4189-9eea-97679833cbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc7cf35-1709-4069-9ea8-17d2c4592ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97581376-4506-4304-bd08-8c6c7c38b8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a09aaf3-c86e-4905-a2b5-a55695b0e66f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ea408d-4bd3-4f96-80c6-27e7c05c3b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a8c825-1881-40c7-9b60-3ce21c12ff54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab88e9d-2edb-4fab-8749-4b4dfef3d645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1a6cc8-4da0-485a-a0d1-a6be3bca61a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72df16c7-59cc-48b4-b95b-97e49d0b0b68",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060c774d-7bf0-4d54-8773-6e5ebef4fd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2d1ffc-d966-420e-a593-65ebf5a6ae5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f4912-cd37-4c0a-afd0-81dc7b1423ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfeaaee-6c4f-42f0-9525-79fc5249b55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b5e4ca-dd9e-48f1-98f2-16b4c92f728e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddf3275-d75c-4ae8-85f1-577b192fabad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f054d7bd-67bf-4035-9e15-9cb15a1ceb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b82e15-f958-4e56-8839-14c7257c84c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0358b5-6174-4077-acc3-a1d95cabca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3e9457-408f-43d3-9f75-ec025b0086d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f183a0af-9501-4b93-adc5-d59dedac9f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdf99ea-df44-4d2c-adcc-17e420046916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aac4595-ab28-429f-b486-cff20501225c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6706c8-9cc1-477b-ae67-e8ee97ebd4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a22352c-e4db-4151-a906-5a3e835f9020",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1496177e-6d80-4d98-a817-8c31805308c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5f4707-185a-4991-9681-f836ba532002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bc45a5-f0b7-420b-a646-18d7a0190168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "83f8a51c-0a81-4169-9870-cc4f1b06c744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1620e025-6fa0-48ea-b94b-b9024cc3d619",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcffaf6-2c23-42ff-9a32-0644675e8ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aed227a-0433-4ca9-abcf-775bbc55fa36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36071064-62e7-4069-b506-53204e87a2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "680fdb04-46d6-496e-bea2-c1aec5dbe83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957270de-e3d3-4396-813d-52a6420fd481",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbcf8a3-f5a5-4220-85a9-f0160e208396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2f6503-ccd9-4a01-b2be-014927e8586d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0ef609-aac4-42a2-a9fa-f9ed4b0f6a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "852b9ff9-6641-47bf-a483-ee3fd017a85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc957e52-4bab-443d-aa9b-74d7eb7dc173",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0726afda-e6ae-49f9-96e3-91b4bbdce68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1f96a2-ca23-4e21-82d7-ef298a80d35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019b0422-862d-4952-9339-3a61493ae783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44eeb844-23df-4c29-89cd-f714ccf8b333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e55b8f-f72c-409f-b518-70fce8b0a51e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d193946-04ed-4841-a8f8-19fa565b85b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50854a09-f087-4e33-87bb-caf536ee5fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0afb57-f449-4054-a899-ab0aca033d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf103bd-6740-455e-b442-d748b93cbdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d3851c-51e5-4921-98d0-78a9837bece1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5e2492-7df7-4390-bdb9-b8b3b12b7200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f493cf8-4d86-4c95-bb97-32dab1dacbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40042814-ea0d-47d6-95fd-2f383eea6a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "43385866-5ff6-474f-9a5b-4dcf96016506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e27e3f-a3e1-4b55-8abf-49a4b23a9ce4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff7eb12-1df9-4af9-b9bd-4784b34ab146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b231b3a-164d-4a1d-925d-a06e8a8d7592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4cd8cf-0b04-4ae5-9349-b7e6c9e47159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49e3bbee-574b-48dd-80e7-49cae91a4579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5a97ee-39a3-4dba-89bf-7fbe0eb4884e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0224ed3a-3a37-4b2d-89ee-b8cb6d9aca27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185a4250-9243-460b-ad0e-d67fd69e95ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71fe31c-c8ac-45cc-8b46-0ec8dce679f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf97aeae-9a86-4bfb-8b4f-4006f46d5c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4582bfe-9147-47e4-ace7-bebc4071dec3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eda0d6-bd1e-404c-b4b9-bfd2263ffded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76de654a-08a8-4b6a-9eab-3fd9284fab18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed4215a-b9d9-419b-b2fd-92d0a5b4d1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77bbbfb5-10d6-4a25-b737-946ccdcfefbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69dc738-34aa-4e78-98a2-e81a77fd6531",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3037b0-72d8-4c46-94a9-4316ca0b287e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c593edb4-45f5-41cf-91ba-56e8558f228c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5554fcac-c91b-41fa-8063-0f62d5d47e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b652d1-a955-42bb-9e88-0453d2381aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28753a3-b432-4149-8454-6e2e48703487",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eef045-9e8e-4785-87ed-e96294178088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082293b1-2ee2-4317-8bd0-0b454414ff15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7594237f-d5c0-4110-ba4e-7bd016de8359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9315366f-4796-486d-94d8-3858337461d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b14a83-784c-438b-b671-7a907c2384fb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2b62b7-7a5e-4063-a75c-8a4dc41ec853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e56434-a79b-4233-91e9-1034db5f749c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fcb916-5030-437b-aae0-a381180fd1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ec0ce7-2d95-404b-8a49-9544a1bc7136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba22b343-8191-4b1a-b8d3-1698cf93cb12",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5bcc04-deb3-42cd-838b-7e672afe2ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f615735e-801a-4ef9-92e7-6fe1f2d4ed6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b4d017-7c35-463d-a73a-ee42b10d1956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "06bb45e9-ce0c-491c-ad7e-9fa85b4c65ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d98536-7a99-43a2-a397-02f881b78559",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44deb56-505c-4f14-8a31-d23ec4842938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b911c0-5c1f-4c30-b684-7b9afe0c8f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b0e421-8a09-4989-8450-8a55f55d1d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2393764-f4f9-4d12-969f-04a2839ee86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee656c6-6fb7-425f-ac9a-d4b7a8472006",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fc7cc3-a7a9-4729-a388-926315e2847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f9ccba-8d5a-4df8-933e-8868e49e7cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ec05c-8e45-4ca0-9427-ecb96f067b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60906cb2-cc1a-4c02-a58f-a594bc63fda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc33bdaf-7e9c-43f2-94a8-aa609fd720fd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007e377f-56c9-4b4b-910a-649627eeef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98faedce-1a09-44d0-837e-5d8c48df49a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032c88e0-a25e-47f2-8176-a72c395181f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a25d981-a441-4faf-a92a-cd0183a30b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43bab90-81bf-4dfb-bb68-3145569b8394",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81c6ee8-60e0-4d75-ad77-20a1a9863090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f454ab4-0085-4376-bfb9-f26bd29cc2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987a35d7-c256-4e84-9b81-c007622456c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4267d964-24d0-4854-9d12-81aca522990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c9cc96-8e3f-45de-be90-697fd63e3eca",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee1edae-22d4-43a4-b525-c8a0baf8e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312ccb1d-61b4-46f3-b84c-455fe56e7bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e59ece-2a8c-44d2-af2c-89459aa7283b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed35739-69bd-4d89-9d7c-b1dc83dddda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11dd6d3-092c-4052-994a-2d6b136bb2cf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2502a7b-2aa0-4609-b95e-2458f3c65369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cc723e-4585-4143-b445-b0d5fbfc87d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1deea1f-d970-4895-a6ef-d950a42844b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a41872d-3dfd-467f-acaf-3bbe70559d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3afb887-0d7f-4c57-a536-f2f54d3f058c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9f123e-c85b-4aea-b629-8ac57bf01906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8565125a-373d-4548-8978-d0151554ab9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac943903-770d-4173-945f-04abf60ef426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "069bc84a-1e82-44e9-a010-aa73fb4aaf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306d0b3f-8e4e-4bc5-8c78-673265f27d65",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6f0e63-5834-4133-bbec-a0403d4b73e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc03f31d-2bd7-44cf-9a3f-6671a0206b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1623b776-5316-4362-9b71-8a1423230add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d874e66-a9fe-4b55-bb6d-cc1668580958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a56108-47a6-49fe-b00b-19546a94b2c6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02a95f-6e22-4fe7-994a-88e8f976a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bd25a9-64c6-4de0-ad03-88e42527ff0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274bf6aa-d504-4996-b4ee-63cd3b608278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd5a0b2-43bb-4fc9-9966-77a01d06d3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88ef8aa-aa7a-4624-a8c4-f6ad081a182c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bb44e9-2445-447d-b272-390aa334539c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a46a54-b056-47e7-a75a-29215efc28e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcec5a0-edc6-4c2a-a3d1-bb9ec285e2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eab848d1-078e-444a-8d78-a716fd6b2caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4466a347-252a-418d-8ef1-1b3dc73f8f50",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27a9a25-18c9-4b5b-9ec4-f73b1081d073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96dbfd0-a27f-4229-94c0-527adb70d2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f601d6d-c11a-48d4-bbd8-b998663180c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc4fac3-773f-4fda-a06b-97e09b76f8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b5eba6-4385-42f9-871d-988c62f425bb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120d57fb-2e8f-4076-8aee-7e9e76cae23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e53efb5-a591-49e2-ab01-02b470c38d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c88f63-4b52-4669-8eba-9e9f3671dce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c716ce-ba9a-401a-94ed-b847666db69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e134193a-29a2-4f4b-8d27-1660728e3fcb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8954bbb-ae0d-41f5-a183-f07cdabc6fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c5d98e-dfcf-4828-bf12-76086590b677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fd4086-52f1-4526-b78e-9d0965e35927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe76435-1923-42c1-9d9a-ec8aadc87d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ccae57-216f-4230-987f-185729780453",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b34449-00b2-4d18-aa33-732bc02c4e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75038759-4ff8-4fdd-8c9f-28303023a843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fdfa40-4971-4071-8f1d-7a4d34c4e8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef19f50-a892-49f7-990b-8b7e4ae0633a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f05c63-2a4b-42f4-a0ab-6b434379c1b9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5f7863-6038-4ea8-b417-0cef618ecb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530c527b-2483-4fd4-8fdf-89e41e0e2f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8eb2712-54b2-4b7c-a8f7-b06e958401b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70caf35b-b1dd-499b-9c86-bf16e7b95983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97165d6-9390-4d12-bd06-b532806b9f0b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64e2910-13c5-481b-b48d-0ec9ee3e37d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fc8205-1fa9-452a-93cd-c81719a3952b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6d6228-328d-4435-b572-a2c9d0e5e382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc56548-700c-4ea0-a39e-6602155f55fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bef13cb-3db4-4986-a445-0fec35aa3ab9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b42e8bc-619d-4817-b404-cadc54ec8f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5351e795-607b-45d3-b345-e44c772fcde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179e978f-04cc-4ac6-9d73-c379cb064e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f034348f-f180-4af4-b089-a32f11289e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0086dbfe-d670-4a48-b8b6-3a31b6be94ce",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbbc013-7a54-4c6f-98d1-185ac89dfe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35893cd-a9e9-4086-96ce-93e6c0146539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c89d8c-9c2c-4382-b27d-d1ac9d1bf093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe024d7-af3e-4e32-adca-441fb831acd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b4ac59-a27b-408b-9a56-a7a7a27a749c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beacf936-000a-4e85-976e-36b31d45091d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ceee742-bd17-4009-bda3-bc59e3896b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9906c835-9018-4ef4-999f-49a14c928cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d771f80d-c8fa-4930-9f2d-1e4ea7fe6ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30866b6-ce38-4927-8ccd-e69213e77976",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30161943-d826-465f-b5bd-df7c06c37305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf2041a-8945-4b48-8491-9d5541ee38d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5fa2d0-668b-470f-97b1-17a11c96fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3468b2f8-c078-435f-b3a4-b720d0dfd42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31783639-ed2d-41c7-8b78-35e4c055fcff",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002aa52d-c380-48f8-8b5a-d0ea9e5af74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35204848-0740-4321-bea0-acee0b9f728f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ed8d9b-fc3b-40e7-a0de-02f147cea7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3440d952-54ec-479e-899a-9d13336d6487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909c2dd7-a74d-4447-9738-305539af8032",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5d7331-b540-4091-8604-32b49fb2b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e47365-67e4-4220-b0e6-f67cd5627308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4640f390-4350-4e18-8962-c99836747a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91f18b21-e39e-40ab-9de6-1b7b0f5ca9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54224d5-87af-42f5-8304-5d773fee5858",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b8e50e-0099-4830-ab7c-6eca8d6b5966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f3598c-b55d-44ab-9602-0e5ddd2839d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbf4c4e-f49c-4a95-9a3d-1387b395e872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15c4aa0b-e386-47b4-b8bd-728f3f6a5326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f83a12-8d18-4cff-b8ab-7d1b3cbe33ec",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93de4b14-8ac3-4542-8a75-896611fb2125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd38c64-be32-47fb-b260-6c10ef263f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29fc11f-fe58-4072-87b2-2c7d317e0001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "359e96f3-d87b-4d13-b578-dc7cf0ecce6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367967f5-3486-473d-8e23-ae71ba44fe6d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef33a4e-21e7-42be-9dbc-ff8f9a131551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db451a7-0a01-4dab-90c2-5a81145c6d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c473710-af7c-4059-badb-6eda9fc415ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0faf05ee-d82e-415f-89a9-ecd5361d80ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae6d442-c576-4600-a459-2ba07b3f33e6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2aba48-162f-49ae-9c76-b4ba7080f626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3c629a-92b8-4537-af84-fdeaf5f9f7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7787d6-873f-42e5-a7f5-9800c2cffd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfd64e5-75d1-486a-ab58-a93204bd9091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e91045c-d4f0-41d5-8a5a-dc119b5884a5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d78c8a9-9f42-4f3b-8fc7-a52bf61bb379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff13e9ad-ab6f-4df4-8114-1b977733b11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98ae855-490f-444a-9e71-54794569d6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de3ef326-21e1-499b-a54b-670941c4a4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2ce652-40d9-4c16-8b41-994f67381cc1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f5503a-515a-4c3f-978a-42f44a1f398e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743af5fd-6d18-450b-b59e-0d63604c6e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f3f26f-3ae5-4610-b1dd-100ad5afdea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "50a11983-4551-4175-bee6-594360420838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045459e5-6671-4dbe-ae4a-f7ed07392f2e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c465e24-725f-4c27-9ed2-abc31d63c68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b4ba0f5b-1834-4969-970c-97d72e305c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339b1d92-c52d-426b-9409-cd8af0c1e3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d34edc-b4c8-46b5-bd10-a982e70dc71d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "051401fd-757d-4b57-931e-a0609a79e887",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9228867-ac31-4772-bcf9-b4e7c576b31f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43191cb5-4f74-4886-a456-e62e1ce17587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16a02885-044d-4ae7-96e4-74928b85ecc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d874205-6a6e-4406-a83a-5fbb711c978a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "542f0dad-526d-4d91-8b9c-03c46fcc67ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f9e9f4c-3972-49c6-bf1e-ddba50cdb5c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e0ae913-8471-494f-9bef-dc375c95feb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0efb4464-243d-4d75-873b-042338299edc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87ab9e5d-35d8-4eb8-b397-f4f15cbf36fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e38963cf-d1af-4dcd-8407-5234468c724b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f81c8ac-65d3-462e-b4c2-96606ea71427"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e00ff7eb-76c2-4bc7-a7a9-3504eaa75363",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdb76176-e71d-49ab-b9a8-d72c4af6cab2"
                }
              }
            ]
          },
          {
            "id": "c66974c5-1806-494c-aae9-ef867ac21200",
            "name": "Positive Testing",
            "item": [
              {
                "id": "234cbb8b-c101-4da1-a267-87e17e50823e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d4de2031-7f54-40ff-bc3c-dae4d14ba709",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa2dad3-9dfe-48fa-992a-3dd52c7480c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0be70042-d020-4649-93d2-3cabddbfece1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae231718-d65c-4c15-ac6d-93c75688689c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a374b600-7d8e-4365-9b0d-d4c61e004666"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a5f9221-b5de-4684-bd95-009ba9436421",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f6dbaa1-8fab-4c26-9e48-9df11c727640",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7a946fa-98fb-418d-b164-5371d7fdcfdf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7fcb7f5-2516-4b2f-ada2-a0fd43a2d851",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fa8cc65-159a-4d0f-af0a-b417e81b76fb"
                    }
                  }
                ]
              },
              {
                "id": "6c322af8-7018-493e-8c32-fe5ba43aa0af",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7a42773-524b-43e0-9bd5-5cdd25fe5fd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12462be2-392c-416a-8a95-2cf010dcdc20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e6c8427-93b7-4ce1-bf1a-444ffcddc5ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "edaf21c7-c285-491a-816c-f50a5786067f"
                    }
                  }
                ]
              },
              {
                "id": "b376ddfd-5d61-45fc-8d3b-725d81cc8091",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f64259b-73b5-492b-aae5-b1206ec7f0d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d5bb9d6-cb7b-42a0-a782-e2644946ba72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a56cbcd-cb3c-49ba-bf95-81c48660cedd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0189a58-24e4-4f7e-856c-b3a7a762294e"
                    }
                  }
                ]
              },
              {
                "id": "ca0aee6c-9d47-4644-8045-a661b8895132",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc6164b0-7d9d-4e57-94c4-17c4d9cc3bd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "307a7bdd-0773-41e6-8009-bdb39e6c5f28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c93e4fb0-74c1-4777-91f8-bc52e217a3ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "499d54e3-9123-4111-bedd-391832b75672"
                    }
                  }
                ]
              },
              {
                "id": "6ccb91f4-9a26-4b53-9112-897d54da49e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75539f7e-2d8b-4219-a19b-6317cf9f70c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de7c534a-9be1-4dc0-9bc2-bc9c0188a888"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1677676a-cd74-4942-9c90-9d98617db65d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e0a7b279-678e-4375-a694-3a28b94cd3b5"
                    }
                  }
                ]
              },
              {
                "id": "bb46ce96-1f6c-45a3-96db-db3fd7b3006c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3fb4705-b6dc-483d-a9df-df6db1821222",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f671b1af-1e8a-41ef-8036-65673181a203"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b4d5817-7e49-4cd1-a485-9d808d69f9e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "601802fa-e3ea-4764-baa7-36676537a688"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aec333a2-e360-48e6-842e-cc196d9866cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66b5ad9f-7f1d-4acc-bf22-ddfdd7e5859c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6fd48b06-2626-4100-8ee2-06b8e48046fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe7d742c-f1a5-4d20-8e14-532407d3bc83"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ba1479f-806f-48d4-85eb-685c562133bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0cb1886b-6588-495e-8df5-641a433bb3f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63d9af2f-ab53-4786-8785-dba6d9258ede",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c86f4c5-b8b8-4282-b45e-09a237a097b5"
            }
          }
        ]
      },
      {
        "id": "543af095-cb87-4855-aa5f-95738c8c4c3d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dc4ab3aa-6423-4475-98d7-9d97faf36897",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4faaadc2-b42a-437b-977f-cafecdae124e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8256399c-1a39-4746-9a56-28dc3384e7a1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c838780c-85a0-4aac-85cb-5b519f993e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5db4bf9-125f-4715-837d-b9bb2f62cb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c317e5-990a-489c-813e-e785bad97484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "95fd57d8-1778-4e9f-9833-0d10b5a55cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c878a38b-90c4-441d-991e-231d7c322595",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1f105b-af85-4aff-9fc0-833d826611ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4708b56f-5646-424d-badb-74bafc8b389a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bad27e-bf98-46c9-932e-387178554292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade59b8e-44e2-446e-9586-352270863129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a47b22-e29a-48d5-8bba-460bce279728",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80da4da-522e-4c1b-b1db-258efa675d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c241b579-5de6-4cd4-8ca4-dd0d9df1279e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e9d52d-fc94-4e1a-af44-df6750613460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f8ca36-8b98-4942-8cec-925dfd634827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3a332f-8dc0-4bba-a051-6575060ba768",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44b2245-6b88-4895-8c3d-2abd393baa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08e62be-08bb-45bd-8ae6-8077d22b4320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd71502-d15e-4f71-9b46-6d981f1d9e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2bbdfe-4311-495a-a074-e5cde7868cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6e5569-d243-4e31-b2e5-4708eeff81f4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533c5dd2-a1c3-4449-904d-68992ea4d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8f428d-9745-4d6f-9ccc-0fd363f90a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbbd9c9-a329-4bfd-bdda-2baab17333d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f83151-f32d-4160-9982-9692c003eb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1dea2d-52e3-4e3a-8ea6-5219f0bf69ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5735a0f-fcfe-4dde-8a9f-ff5776b358c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084dc272-4487-403c-8425-9547debe7ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970e1b7f-39a4-45f1-8124-12ee7092dafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7044439a-ecbf-4969-8e3a-b40f13b1c318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bd4050-12a7-4491-b599-9931b605ff88",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd19385f-c2f8-4b3f-b121-4287ece7fff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e33ae66-fc0a-4b5d-9cfb-739ca3701984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7b8752-950b-4a5e-9a1e-fbbd43ff49d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "afecb4e7-47f9-41b0-8ebe-d2042a76b4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722dfff8-fff2-4687-9834-642a4400f5d7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b63b227-d8f3-46fc-9c86-d1d714e77f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253b8d52-d6df-41fb-896b-d3fc6e449a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86be3fb2-745a-4d80-9381-50ecc12714f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85a2f2c-2343-4d2e-b2c1-7fbec7fadd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1308788-8e48-4f44-bc56-3114ebcdf3eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c1e00d-40a0-40db-bcd2-b6b98064cb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8da639d-d783-4eaf-b932-5ae5c48984f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4431513-4113-4d95-8389-a8b2edbc8d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c736224-4f97-4e25-a4f2-fdb3f0d996d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e2a3ab-9d73-4b50-ad70-4c0611370a14",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a7322d-47d9-417f-96e4-6924ccd8a45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da49c4ad-10ad-4749-a978-f9854125aeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e5b466-005d-45f4-8702-f2d8d0b3a97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be932f1d-df9b-4d02-b032-d41853b245bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54afbcce-312a-467a-9502-427c6c4ba152",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae3cc0c-c230-4eb3-a1b2-312dd096eb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f802df-3933-4035-b3e0-16d6142d9e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fbe30c-d13a-419d-a82b-35863a5b594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8884e1-226c-41a7-b017-f43796d5c45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc9ace2-adac-40de-9b3a-eee4edec3166",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e34882-1194-475d-af70-1fbe4aed491e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9566f1c-575c-4148-961a-452c79733b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56e666b-03cb-44bf-bec8-226dcc346d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47f2e5f9-6a37-4fde-ad4a-14ed7ed4a2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cbd890-e679-478d-a3ef-91a47897e646",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76003f8d-036d-40e0-92aa-114ea4dbb128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d7a6b9-b083-4767-ad82-d35b76d51be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fd5cbb-0154-4140-a278-a6cd204f2a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf332f32-eb98-4b47-bd20-1028855fd7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64055fe-0a0a-4afc-ba86-b848240f5647",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c70517-6f61-44bf-b293-56f49b464e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2751caf8-d109-4306-b6ba-ebea33dfdf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652b8409-d186-4875-a531-6e9a6ca348e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af4a24d-eaa6-469e-9eb1-ff0401a67942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540639f1-74d8-4cad-bd37-9c44a260794c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e885d0-01f0-4cd2-9017-6fcb399ec8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f594fcf0-0d7d-42a9-a946-8051a941ebca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c54ba4-9a95-4f0b-837b-b5de20a113fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5eff20-dde5-4551-9628-10c86bdb6b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0e947b-2acd-4f18-938f-7063010e86f4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e20b6b0-3f89-4079-8886-a1dc69a84328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4c5314-6e9e-428d-816d-f2c5c4ec4402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33acaf70-6d55-4b08-b0a2-1fde65173bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "68dbe30b-d608-462b-8741-f62b6eb2bb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cdbff5-0483-4d89-b138-cbfbb333897c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d76f351-8bdc-43df-a7f1-07d8b1303825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6cb45d-7f3d-4498-a928-39acd0c11da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2682da4-bb3e-459f-b701-a7edd843d97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "543b6f56-e0a5-4ce9-8ac0-a70c76e6f2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef21fe5-45ea-4e01-bcdb-85671f07cbaf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08083630-fe0f-4aae-a6d6-ed548e173a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef203b6-3425-4c0c-a8ab-a5e722517cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc0e1b7-f628-482b-b5a6-06909a4981e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b295018-2d2e-4d4d-9d8c-c4e3eab529a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e21cfbb-e37e-4552-a958-9dac91b565ad",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8a0269-8198-45ed-959a-232336d1ebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5922711e-9223-4c64-a676-f8c32f921b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2074c8b1-5d11-4dd2-b36b-8a57b6f5fccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4ac9f7-e9ac-4a35-a8da-793fc26cf09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f952fa49-3dfa-4e04-bd77-4a0c0356cfd4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878f5599-0918-4cec-8bf1-77d096811f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac390fbf-bf46-4089-9f78-b7922b853725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c116845-51e3-4b50-b2a4-53d580633080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0306e9df-cb8f-4850-acec-541a5fd08aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e01a9db-0430-4e30-823f-8b9419e7bf80",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e9f8ee-5ddf-40b9-ada1-1a63ee21f747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac64c58c-0d7b-4e27-97c4-2c48d032b9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5619cb-33ad-4466-a596-04a1efdeaba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c735b8-2356-4be7-8717-73f73d39d541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15582d17-7ca8-4ca2-a9d0-70bc465133f9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898867e1-eeab-47dc-9fbf-564b7c722be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456f87c6-cadb-48ab-bfec-5ddce095128a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79087f87-80e8-4fdf-a903-35143c8fc40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ca355a-28ea-4e7e-86de-e15d396f8b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a241b8-84e1-4a0b-a5be-0d95e41d7002",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8d5300-cd55-4277-830d-5bf86062d2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6641284-be0f-4508-b3b3-7b63986bccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52c286d-0328-44b9-8669-3c428ed7457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad8ce9d-ccce-45a5-a8ec-50de1ed7ad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3027e7e7-6742-4787-acaa-807de524bb57",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8b8974-50d5-4da0-89a8-ca951dc2155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ffa323-f2e8-4c16-a9eb-952af3e70ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d23a23-8338-452b-8b26-2a733b1cca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4158f506-cf95-4afa-bcc9-95466833a666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c5f8a2-2a4e-4cfb-ad52-eab4a40715e2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1674a9-f7fa-4c90-8f7c-0eefdb7f871c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925f6c36-2fa6-4486-9bf1-699eeb09b870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f468e7-b4a2-4090-829b-1a3bde4088b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10bd12bb-5479-41c4-9297-66e65ec3c85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58922cf-751c-437e-9c18-66b74af94948",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee2c00e-1827-4a39-8e6b-34c8c4cdd294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53e7c7c-f4e8-4b04-8cce-505b37a2c430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c502e1c-4944-4db3-9ec3-0e82d4f8c33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fc3ada-13dc-40d2-80ac-5d9e8e5ee611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e15d8c9-a9c1-47cd-b3b1-66bca3ee6580",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa9e00f-6057-4702-b4bd-171ad077bcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1e897b-1fa0-47d6-af8a-9ea2f6992727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242f2f2e-25f2-4ff0-b7e3-4057a53ca6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d820dc50-cf96-40c7-9f9a-4590b39c5fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c01e42-fca0-47ee-83aa-ff17157fb05d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943ddc14-db2f-40ff-8987-1b433e211660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28481c12-f728-4977-8610-7146938968fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bc309a-9489-45c4-8f52-ff2b17b05d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf9925d-1981-4cba-a0bb-afa6812d2339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625d7f54-5d16-4cea-bafc-acac1db96049",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bb2f0d-dfaa-44db-89a9-af0c0aa781f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fccf06-cf55-4361-a8a1-9138c5f5fefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b13045d-ca86-415c-879c-0eeb4c4c25b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5643c1a4-507c-4206-8acf-482bcfb91271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e094ef9-d43f-4cbc-a01b-7d39c5849f09",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284c8789-2894-4a18-a7b2-2aa742ca9d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68034cf5-5fe5-4ffd-82b4-df38390441df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401bfeac-904c-40d5-b3ad-78adb6d42c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885392d1-26b4-4340-b2d2-058068a88b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3b2c85-333a-40f3-9133-ac9349694320",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea0e702-a636-4f53-9d0e-e6ae2ead368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09641b30-6d1a-4e56-922a-086f39c90001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dad0db2-7f51-41ad-b56a-c33b6817e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6984433d-1151-43cb-8236-eea066a43f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc35d4-34a1-4e7a-bde4-13f5c6e786ba",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c65ea8-3895-4e2d-883b-0b18880e0912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a04009-68a3-49f8-8420-0f1b90ad36b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcc4965-4098-4e8d-ab87-876d1cdaaf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "485d0967-2ddc-4910-a0de-5c31907d4a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad856ba8-c879-4a3e-a61a-000f4fe9fe1b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88afc475-2cfb-4932-8a62-b174d128d18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31d5e32-f656-4e2d-b6f9-e76a72897478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ad7254-47b4-40a4-99c9-341b7400a521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7f9c1d-842c-4010-bfdc-3afc6fcaa133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef55431c-870c-486e-838b-b39ed898307f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbafb49-55af-402f-9bc5-374325e7c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233cb7f4-d0d0-4800-b444-04a28b5f9e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b6368e-fa56-45fb-a1eb-a410ccf76b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a38e56a-d15f-4c5a-94ad-1b761fe0a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb381e68-c387-41b1-aad6-5633886cef3a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1dfd8d-bd44-4dfb-aeb5-8036ff97e636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f2ad56-f80b-40b4-a5ba-62c297d89945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fdb9cd-e88f-4801-bc8e-d4f56c58203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5c8ae8-6b75-4791-8da7-d4925ed6d0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94243345-2b48-4f18-b188-36c232163d4e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1938f3bd-3e62-408c-a964-4a089edcc6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb604d5-f789-4eab-b471-3b7713fc9c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0553320d-e850-486b-a913-233794b0ad98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9093c46b-891a-44d4-a7c3-a4e70180cb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ac29af-342a-4760-b29c-c08a5ea13614",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2e57f7-d266-4fb1-8209-cbc3115b2def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e228b26-5929-471f-83d6-96de489db7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76efe6b-6a88-4175-9b91-bf899ed8c12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e40f06e-b5ff-40ed-81fa-67a063aa4f3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e693274e-bb51-425d-af28-0dea5abccac2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a282621-4798-4363-9759-01ef42de3345",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9cbc08-d327-4dc6-99dc-4f4ea2c98735",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6ee784-9ae5-4d4f-80ab-aef8be210d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a9d77b-bfa4-4853-b7f2-aedb27c383da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcb1a97e-f5ac-47ca-90e7-0a5958fdf8a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4f2b6e3-bde2-402d-9931-599be6c0f6a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b461a9-1a3b-4643-8c5b-b95d4dd73ae4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8974c55c-9b6a-4734-937b-9f0f57e7c104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec1b7526-8e70-4bef-85a3-17da2e5d710a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c785178-b2cb-4854-ad4b-e03f665e2111",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac53dd1e-1f23-4da8-9265-2cc91fa06072"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2ef7302-79f7-4cdd-92e0-66b1dd260745",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87d72f86-25a2-41cc-becc-032c05e89471"
            }
          }
        ]
      },
      {
        "id": "73743d73-ec1e-47c3-8d79-b20167f72ae3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ce1e00b3-bf53-4fb7-a6c7-ecc30fde9025",
            "name": "Negative Testing",
            "item": [
              {
                "id": "057ad0e2-6843-4662-b925-f52e0feca7a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "505ffbee-dfb6-41c1-803f-e29cea25579e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67247efc-9350-4e2b-afb7-08cc5442dec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa3345f-7c08-4089-ac82-e2c90c5e3e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d81bdc-8b32-4756-8cb3-90712e085680",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438b935f-70f5-4774-80ee-d7fce92fbc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c74527-077a-47c3-84f6-ceda9b4f99e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11239450-52c2-4881-8812-6b0472329124",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b91468e-bb11-454f-9954-38cd41936eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59216a0c-d144-4978-901e-6c609ce32168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b029905-f656-4c59-9743-acb11f3006db",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae68908-f281-48a9-8e7e-6e758707b248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0703cded-50f9-482e-ab38-16bcaa94ffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cea570-25d0-4eb6-ac81-91782e20f1f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a17b3c-aad4-4d6d-bc24-dcc43c68de29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45859f66-680f-44e4-b51a-7f82689cb67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41bd06e-ea80-4e09-9390-02bc55640891",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84ed794-46ce-410a-bdc6-f6842f2aa4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fd2364-29bf-49b2-9dd9-824724d56483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043726d1-2eb2-45b3-9a45-b03b6484e9d6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e060f76f-e695-4505-9ca8-601da9d19574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b07f74a-e427-4efb-821d-e8a146cbd8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41670d2-4f42-4cef-b67b-2a2e849429cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9d8885-a7cf-49ac-acca-77f55607f6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275844d5-07ea-4d00-baf2-8192da6d3a0f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dadceb-5295-465d-93d0-f562b9b52796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6806c0-c628-4c88-b1a5-9e79e97787e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c67a27f-f765-46a7-b000-ccdc75d7626b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbdd276-9445-4d95-a54f-a4db7095ec78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9735069f-c977-4e17-96ae-69ac916f4092",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddbd248-b022-480f-bbc1-07e6b3b5c679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a985a11-ddb7-4f1e-adba-63d0a217d7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657423a2-7aa5-414f-bdf0-ca4ee6910190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1d6fb6-de41-4535-980b-eb41c044bbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a630c9-5c19-45b5-bb05-917a6fdcead5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9affacea-fa15-45d8-a443-85ffb55cd40a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0d0519-50b4-4e36-a0fc-4800b4a2a902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9054275a-654a-4e3b-a9af-ed82ee492a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee895fbc-4ac6-4254-8521-7780a0fac0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f24aa6-a552-484a-8ee0-1b9c41b34d9a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937e65ad-5d7f-4b81-b263-ef3f0aea0deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302fa9ab-405c-428f-b97b-768938c8e8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2da9c1-fe4c-48e2-a5d6-de15118af54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f02fbb-f818-4ac7-93f2-a6ba3c6c5cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26e60d9-6c9c-4e71-a297-2e5829451993",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98892a4-3720-4dfe-9297-613ae833454f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdaf10e-7176-4fb6-a9cf-12ecf18983cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdc6fb1-57f3-4c1b-a252-382d7e15b418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07057cf-211b-4f63-80d5-a2dcaad3384f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc95bc7-faa2-4677-b26e-403af16ec058",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733f251b-d3b3-4ac8-9204-5e92936a5a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803da494-b14c-40b8-9fb9-1aab2a4e0cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "979d0946-35c3-4534-a4b8-b652eb8626a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e3e7dd-1c3e-44d3-98b1-aa146646d0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddd74b5-59fb-4af6-a1c8-6c990e0e3362",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5b4ee2-2593-419c-9b57-3a36160d936f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29edeb0a-bccc-4429-976c-4fde8299c7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa0ac95-8769-49be-aca1-11848fcb423c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5af9d2-c526-463e-97c7-d388458b05fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bd3476-6b6a-4e18-836e-779d8eb438d4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f2587b-72b9-41cc-9a49-a3e50e51d1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4528804-35ef-45b8-8848-3d2c5667f3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff52802-fbe9-430b-a39f-a4e044e2035d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197c2ff4-a388-43d5-b641-45304d39be46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb0b265-be73-45d4-8a6f-01be4e1bb1c3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23acf1e2-9154-49c7-b642-fd71d7daf178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dda521c-edf3-4a54-84fa-c5233d3af436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e69a030-db0c-453a-95b0-9ecab785af68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c8c3a6-01b0-418d-b713-b0fa45d92951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63ef713-1d8a-4371-b16f-133bc78d636e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0ab0fa-3ebc-40d7-88c8-690570aeb9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cc9bfc-b70d-403f-b57f-9754ffa34c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13068dff-0768-445a-aed1-4f732e583d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b4ba32-8abc-4f00-853f-87143925427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde243b5-c16e-4a3a-a8d0-d9f87d67689f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27b1dc7-2aa5-40c5-877a-2add44e41d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd212ee-e6e5-4aa1-a444-c7a2e17b0547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf884a46-e460-49a1-add2-1e132ba28682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aec5e03-0826-4947-b9c4-86acada1a9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252120de-c001-4b6a-9c70-ad0a2b955de4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d85c59-67f9-416a-b1cd-19252ec8928b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbed8bd3-f3ad-4b08-bf73-925a6f4b968e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2179b103-1a85-4852-8c48-3b0923cd0963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276f0f06-c51b-4b89-80a5-ddef9135e837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b24fae-a954-47be-8b84-37685bfa0d22",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9205cd3a-656c-4a9b-b2ce-5d68fdfc6ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f2e9b3-efc4-4183-857b-3d23f4bc8ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b342444-e7f4-4dcb-a5f6-37408afc537c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8845926b-7cd0-4b86-8d0b-613b73f0697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597a847f-4c17-4135-a383-8a0de7ebc92b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325560eb-87ea-4340-8fd2-6f6ae8810670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c468d4-65e3-4883-9110-3771d0e312c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17829ba-d5c4-46a9-baa9-3be4d35d7548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d76f30e-78f2-4c6c-b323-845776b40bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c71a35-820a-4a89-9257-5ab75a2e9724",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22797cb6-1f09-4589-9206-ec7af2cb8002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4015061e-ed40-4fb8-bd46-b4d1317a947a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35db071-2cfb-4ec0-b32a-ed6348d339d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57112b76-8f6b-4bbc-969b-86ad1f0609a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85424699-f58e-4bff-8831-0b825c9b859a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa42c2af-65ef-41ce-94b5-7972028e0095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a13c28a-6fa5-42e6-8042-92e4a6f817fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4789e4cc-d3eb-4949-b7ef-c553101d14fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ae648d-6f97-453f-9308-75da078a2283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deff45f1-2659-4120-9df3-511a06697f8e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4960d84-b0d3-458c-b867-5ab3ed17cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b609489-f6c0-406a-9d75-7daa9938b151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896cff9f-dc5e-428d-907b-6e1126797d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4062f035-b63e-4d8b-ab54-974743936d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84a2443-7fe4-4929-ab95-7d4535b188a3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b841c937-e0d3-4331-bea4-e8bf7e531b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679377f3-e2c5-4714-be06-9e9e0622e339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25fee36-26a1-4c4a-8eb7-85c29ac80fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd37e46-1834-4a4b-ae8a-486f6e10fc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4662f1-e165-4fed-adfe-f520ba267900",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afa3a09-728d-4c31-ab28-c971bfe94980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa338f26-874a-46a4-8602-4dba0a7d44be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b8c390-198e-4a8b-acfa-a1e5b0fb471d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6535b87b-4de8-4009-888d-88e7ccbd03ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e307c271-35fe-473c-ad0f-c2a7abd4403f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164b933c-a8ab-469d-986a-982a9143666c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28eb14b-a996-4c26-83d8-9913a360e413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab811967-0ba9-4dd7-8f59-022b6ca46169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb605a15-8883-41bf-a95d-29607d1e62be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b45399-5c77-431b-8766-5ad2deac742a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a94d30-0116-4ca8-902a-cfef538d98d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5d0821-7b5c-4b4f-9ce6-41792724b5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46965279-b3fe-4183-a761-cb9fa4acef82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dd8af4-a316-4b18-921b-0c05e6385f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2332a97a-9750-4308-873d-655b42fc1c2a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa53fb8d-547b-4f04-81d2-614ac20724bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e76a519-7516-4ef3-864f-b3c1fa40fff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8120094-5272-43f5-9a6b-528bdd8ebc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f6d93c-53ec-4c26-b887-33a6cedac48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15b1587-02e4-4537-a13c-f6e846e83eb7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953cb498-26b6-493d-8086-17dc92f5b0a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6953cf25-50d1-4d5a-917e-8a3aa387feaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1b38fb-b01b-46d7-a16f-16573728a069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df677e1-d86f-4194-8704-5596e0f1829e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb324d4-90eb-4974-a4bc-856234ec81b6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a630a2-f618-4179-93b4-352e451f187c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1bce5f2-fb42-49d7-9de2-b6790c8f73cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbf7ff2-4a88-4dc5-a3bd-143aa00c3775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584abad9-a1bb-4aec-aa35-eeea6c309c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b273fa10-a3c6-4060-ba3f-45a6de323dbc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56afaa9-81f0-4213-af64-b95508caafb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff87c72-70f3-44f1-887c-d26630c1ffdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e699916-99c0-435a-aa81-3807c9b9095e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d59a50-e7f5-4af1-9159-27e2f867a912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab681de-f8f6-4f5e-9d7a-5f93163c122a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bfb7cd-a77f-434c-ac09-04c00d44db66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dce467f-0da6-4a07-8b49-0ae387a9d246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5060af9b-6b8c-41de-b7f8-e69a62591bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e229a6d0-8876-46da-ae65-dc80e2f9b49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d81914-9df2-4036-a9b9-b1b9d8e65164",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcb583a-dce0-4216-8a80-f0b870a9e318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce40e29-e4fe-4f3e-8cae-66d4deeef3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956f0486-1ca2-4674-9e4d-0a991771a189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ffee7d-8de2-4a11-b30a-2b38854b4e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7747f213-f7d8-4d32-ab43-b72de460c973",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0ffdfe-eb15-4f2f-aae2-97fd39c3e0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6198f3ad-0df3-43c3-b4e0-bc315ee5205c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3e586b-7de1-43b4-8249-099412f84576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27a5468-7172-4a2f-883f-afc6f761f34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f11fa28-252a-43f3-80ea-e4db27e5047d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41112237-877c-43ea-9c5e-c346be2a6a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ab541e-9780-42f5-8cd3-12fcd8b5b1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a980cf0-3796-483c-8540-84c8d0224398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddb88a9-3b87-411e-8c57-37e579cdc22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f540a6-ee13-4fc4-8fb7-ca114aa9c027",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e791cc-91ba-4487-9bfb-db559b73af54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcb0c38-ef34-4d84-bcf8-af71a75b30d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ef5707-b6fb-440d-bea1-bdca7418f9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62afe63-baaa-4e94-b6c4-10c94088ed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcb2acf-6e62-4697-95e0-f0ac33476227",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08be97c1-130f-4281-a255-f00885543032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f87c795-fe76-417b-b26f-d4a479986871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e33d999-7ee4-45b4-acbe-d8f0ff376ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6eb54b-d440-48d0-add1-84f93c7128ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b3e716-a505-48d0-99f0-11b364359937",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b85707-0f5d-4f48-b7f2-2079f8212c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6d32c2-7de0-4842-870d-18ac4440e267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5718cf-5c43-4ee9-ae4f-d7b3346ebd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efbfb10-11aa-4037-a3c4-eddf6e45152d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fac4bd-c016-4eda-bbf3-3a40957ca478",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abee33be-bc46-466d-8059-e49e3c51a546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f2d0fb-d797-4d04-ac25-50d6aabae1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f02948-f951-4805-885f-ddc51a5cde69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802b6e45-e13c-401f-9d9d-205413fbb370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4d709e-090e-4fff-b939-5bf1441deafc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb924a1-bc3a-4388-b3d8-82050a27c4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b661c4-0107-4385-bffd-5b1e699fd225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fd2294-3b4b-4168-aeef-ba25fed27b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c05cda-5036-4663-9cac-cd461640953b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ada3a60-ddd3-4c5e-8ec1-ed8b21c49def",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacce884-2938-4c45-8e27-8a9c837cd499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8987bb-347b-4de9-83de-96e0ca756970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da97bda-2077-42c0-8bba-66359614a30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d011c6-01e7-4f3d-a528-b7e4b8d04334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7903dba3-250d-4008-a20f-cfeb9686b62a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b18462-0eae-4941-b339-323d84161dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab306360-6b0e-4579-a945-f6314c7cae6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ba472-ea52-4aa5-89c8-b4d2bee94a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7220ac8a-8af6-437d-b6b7-efa655158094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002bdb57-ffbf-48b8-a56d-dd4e0f07c0dc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28d54e7-5cf7-48b6-8f8b-4d774779343f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca75d90-e0e3-47d0-817a-3262af7a1781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e7260c-d741-418b-8aa1-13d4881075bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df779b61-c031-4f87-a700-de9b064f8f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9224bd31-675e-4505-8a3a-bb8626d5b203",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfaf573-8dad-4401-899d-9e87e6c43f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eed94b1-8812-464b-a0d4-047f4cd25aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e301ea-f7f5-419d-926e-fe43f9845e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed309652-1eb3-44b0-99cc-69630201ed19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c7ff7c-c131-42ca-a1d8-e58fe212c067",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bdffac-6fbf-49cb-bbc2-2bd24b894f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc66fd6-7623-4428-8192-c5f094343d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999b74c4-37c4-40be-81f2-b94cd031e6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f513e5-44a7-49da-af8b-fb552f442c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f36d676-c315-4a17-bd77-b15803dc7506",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65573db-f927-4d8f-bd44-3a26ca872d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d09279-46f8-40fa-8e52-8c8b7a8642ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2826095d-779d-4257-95e0-b6fc9adff19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588b47b3-d7b3-471c-b5a4-84a74647e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1450e60-c67c-4e81-b3f0-cc7d0abdc727",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7411f02-e71b-4c76-80a3-ce78eeacae25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfeeed88-e56d-4728-ad29-215c85585e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3959c07-4bd6-46a5-9e25-557794ac11d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f407b2a-ceec-46fb-b530-35bb18770219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ccb4c3-808f-4787-b070-72195fc83ca5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa636cec-8099-490a-8861-ba2715ea09e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b6f3c5-a656-40c1-a3cf-c04d7be5dcd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352de2da-f8e5-42a2-b224-3c710174c3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59532b02-7e33-455e-b80a-363a7da6d153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7569e8b-684b-4150-adf1-7b20105e244d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bf1d2e-c002-4d1e-8e72-a24bbc7a88ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d024c2-3271-4884-8657-f168d109a519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c699434-1772-41d3-970c-1ebe13377976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfe08e5-4000-4141-ba01-371aff879b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d28eab-5368-4787-8984-c20cfaa534a4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654fe0b6-d099-469e-828b-cb1672145cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21eb77a9-7975-42b9-b9f1-42ccccd00c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bd7f30-f1d0-4e48-8dde-b0da404dc8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843ad909-6d6e-4423-92d3-0a43fc52e9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f41fac-d4f8-4d8b-9b20-51a9fb982463",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02deddc1-dbeb-4ccb-9bf7-72cef5f72886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c907e0-f9bc-4174-a8ad-6dabe0d3e03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aae85e-5ce2-4dfc-a745-a8a6b016fc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17fa147-02d6-4a79-837b-1fee5c190b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e581db30-127e-4d3c-b367-afb44cf2ef81",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328fd75b-1b4f-4aef-a75c-10b61e65095c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a61a7ac-a40d-4a8d-b14e-a1dcc13a6264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11204137-af63-4eb3-9000-637c11297002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7078de8-6b0c-41a4-86c0-75fc87cff591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be331609-991a-492a-a623-c1d6471e06de",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f511a6-6689-4338-83dc-4243e6492402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36354913-b1f0-4bb1-88aa-069a2e2557d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c60f63d-6235-42d4-8439-d416746e6351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f173cdc7-fa49-45af-9f17-77b0b13f8722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab059f47-ec3c-48a7-8541-055c0acaa98d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecff2da-0c55-4d02-9d65-9b724257a3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a557f2ae-c417-40fb-aa70-df3018c9e782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf714c33-6082-4daf-ba46-ef43cd09fe62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89040cb4-6b54-4d72-8d9c-64e4005ca22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e26827e-f134-4b63-bfb2-dbe5ac765be9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384d1059-e649-4a49-88df-19d3e24ba6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14619ea-c0a6-494a-880a-b823d75f4f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460a189c-c5ec-4b10-bb5e-dd1aaca60e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a59d7e-b427-48f1-a085-4fb3e3d10346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2214c72-32e0-4cf6-9bc8-c1551c8422a7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce12d865-09e2-4567-b06f-eb2896f56df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc59c88d-79eb-45e0-b532-27df61a638fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfda68c-0ea1-4025-ae60-50cf5e8c4eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056252fd-5a40-442f-89b0-6fc8251b966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48edff0-de64-41fa-b27b-c32859dbf756",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b486fa-a3e9-4838-b92c-9bcf09e8c9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91b2fdf-8412-423d-bf16-2dfc1ea6d3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7fc8db-d23f-4faa-b8d6-fc3f56b06a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0358668-80b9-4633-90bd-671c04c7937a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae99c34-f7bb-4e51-8232-60d598a1dc9e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703cb1c0-959d-42ee-a721-7f34a8610b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8e4fcd-7afc-4f2f-9cd5-e63e959484c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23f0ba5-e753-4d30-9804-d8fc5bd5f7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1b3f1c-b2cb-4e01-886b-99944f2efe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50567b6-944d-4ec7-adbb-d620846a64b5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb95e75-ae3d-4d97-a7dc-e91d6d23b0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed341428-dc27-47d4-b365-d0a67bd516bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8549219c-90bb-4ab1-a5ff-a5895851bb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40818db3-0d02-4823-8cad-43a598787054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c526e266-c6db-48d3-a522-426cf34cae77",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2875867-791e-416e-be3d-ac7de53e1817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a980c431-929a-4fc8-a8da-4023e057eb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dde6988-c131-4bc3-a2db-f81cc1a4c006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2b7bdb-fae2-4c8b-8b7a-236d3a9cee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd144c1a-f59b-4bc4-ace5-359c59205b59",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6136bda2-37b9-43a7-865e-cc9d89de26df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435b2f5b-9523-4c73-8b54-40b386a37ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1100ff53-1737-4daf-81d3-2b2b5be0eb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b564ee2-0656-48b7-950b-0620035ec115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a0e314-660c-4f60-b6cf-cf9f6c87704f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd700146-d517-4713-aea4-179909a3dbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0179b08-e725-4027-8b25-e3f96f0bedeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2258ee-52f9-459c-8078-dfbd41aaf14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a434399a-65b6-4c84-b8f6-651cf26422df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7119e281-fcb0-403a-8dc3-41cca5cec5be",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb6665e-e5da-4615-8b4f-dc1fdd311386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e74824-be86-4f44-961e-143d6709e417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7359ee1-c3ed-4861-ad80-11684f711c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a83bcc2-8d8c-43d3-a8c9-4813e595798b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a42a71-289d-42e2-a7ac-0baa2d74fbe8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0392ec6-e577-46b6-b33e-c55e110e26d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71201645-7c61-4130-be30-02448c80b62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d092778c-26c3-45e1-be13-9a7887c68418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd06338-5f8b-408e-8c4e-658fac72e1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484a8089-ada8-420a-8480-1d1fdeeb2df4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424814c1-6efe-430b-8a47-d80074f6eeca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57d2d6f4-e473-4854-872b-c458a8b0357b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fe1d95-8f9b-4bca-a1f7-95a7cb643dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ff1aca-f258-4428-be6f-6c7bce61cc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c7fbfa-8ac2-4239-84a6-a050dd17f72a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d829a8-a17f-4418-8967-2d0afbe5a5e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5415e6a9-2ab8-487f-bb4e-a200c50a90c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af36bde0-c12f-44b3-8ba8-a37f80a264c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56918fb0-8ac8-49c6-8a9b-89a9000b9666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14c8e2c-fecf-4f2e-a839-385b04f1f75d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e45d6f-0f22-470b-ad6b-ed6c889a6971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48113fe-3f5a-4579-b6c3-4b91750dc305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090c1f66-b872-4b90-804b-a75c70dd975b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c2f5d0-c8c6-40b8-b45b-5e864dfaaec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14218da5-53bd-488e-9a0b-7376cf420589",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78556c0-5b3f-44bc-b25f-61ddb713dbf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13f7ab3-fc53-4151-b91c-edb6521653ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bef570-2a47-45d5-9059-360a5b089294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25cbd2d-9e55-454c-869b-d55409676b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d52520-4f0a-4337-bd56-634eddab146a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192d8003-fce3-4672-b48a-fdd2478e4a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2715f246-c5c0-4b80-80e4-03c3895e4bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e907e24-d6cf-4c86-8f0c-8ff35c5dc56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb3e18d-eb83-4e10-aaa6-51a909d853a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71ce037-e688-475e-989b-204668e8a59f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931046ec-3bce-46f1-b1f4-54a5d10f70c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1466a7a2-a9c9-40b3-a090-111902ce7160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87dece9-15b4-45c1-a472-32b5590cf3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f87b610-522b-41b0-9cc1-fc02e255e62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091ee5a6-32cc-44f0-ac6a-6b4a46f53c60",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b394aee9-b534-4758-81c7-46e0e5962ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e3be69-5c61-4a8c-9bd0-47df4eac161d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e9f1ca-a27a-46f6-b8e8-99525fa5d4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf5b5e8-ed60-432a-b31b-fb448d2f83db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f430033-9f7e-4ee9-bbe4-9c06201870e0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d4d7f6-c6bf-45cb-858c-e5e00d80d894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "454ae99e-a5f2-4c60-881f-444957b25ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6919a1d8-e2eb-4c61-9bc2-1926548e9544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5277dd-dac6-4eee-a579-2265421f7112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d749459e-3eb9-429b-83ca-02f8f7ebd619",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3119e29f-4812-45c2-b283-6f35c480f02c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836486c5-348e-4b5b-9e97-f885b00f87a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27e3d28-cd76-48bd-a8f4-ead2526eae8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1970d96-fd04-473f-ae17-25a85eda9896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b9ab14-5ad8-44e7-b7da-0dc857dc348c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e2271d-4546-4fb6-aaf9-d8655fe0bb18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d50e7b8-f231-47e4-a69d-8df35d79a5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0fc223-8076-4ff5-9801-ffaf1ba2a3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5d1e5b-b49b-4fa4-8941-e23cc96ab2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526d4941-559c-45fa-9e61-3d3c58930b22",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5485d9c-1e9d-4337-b3b4-a1fada7de3c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40335f32-8915-4ad9-b35e-e7ec498999c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7171cb5-51bf-47f8-abde-ea2e096e189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce647cc-30bd-490e-8e07-854aa8aa76c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fac317-df50-465a-bafb-fa43513a9602",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce17f89d-ccc7-4b3a-8638-b424f4846afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96dbf741-d538-4f6f-9a0d-bc9a17917b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b886c21-f67e-4781-9045-d2c4cbfabda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf33f36-9656-4066-aace-f64d376ae89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81c1379-cded-4e0d-920c-a1eabd5fd6ce",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0cbb1e-844c-4773-ba0a-7ca5e237882f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7bf8e40-0728-4c63-a0ce-3ac128a5f641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b1b7c0-f937-4bb7-9f16-55e6441224dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3eb475-b4f7-42b6-9e7b-d9b5bf7d5168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf57e56-cfc9-4118-a92f-65be248d2938",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2244c6d3-d745-4db2-b642-0292347204f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ad7dcd-4ff4-4b30-a3dc-065548ab2943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90923245-1765-4db5-96d0-f29b15ee0b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326d4407-8ee5-400b-85ed-9b95ad61a8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f413f6e7-0e0c-475f-9580-1321d7771a9e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36459be-1d86-4c5a-a639-169fd9d726d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85eef610-0b42-4ab2-90a7-de3892e435ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f846496-7820-484b-9253-97cece0c2934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4d3499-a70a-4fc1-909b-70909f3959dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a0f07f-f626-41e0-8eb0-b1881fa92250",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12e2ef4-4ea1-46ad-b878-7fea3d2ae61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ca7a29-f382-48f5-a679-d1a236286b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76711604-2d13-46a8-bb9d-7f2bdbe9d613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9057d1c2-8a48-4ca4-9e55-605de1203c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e5053d-6313-4be2-be5f-73b29fdcac09",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fe3d5d-3f9d-4053-a350-0e1c0df954fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c962c127-d8aa-4ab0-872c-52178b81bf22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c43066d-ffe6-4c27-b180-3b36987853c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8b02d0-76f8-4433-bc8c-e95afb8619e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66c786f-53ae-48e2-8e78-5e49e02b3396",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48846f-f028-4db6-b54f-fcd79a528a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb758aa-fd78-47a7-a69c-225411f7761d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b48a866-0d4c-4ee4-bb81-9b7ec3e0d884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff715d89-7cf5-41a6-ab9e-58359bda04dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4298c75-4fcf-4cf0-ab6d-61a77991db4d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f283e7-bc70-4fec-9ac1-b640a4553a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beaca94a-10f3-41de-915e-99b78edba14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec48be0-514d-4c60-a9e8-c7e10ea50682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6590682b-592b-413e-becc-0f57b40880a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0024fab9-fce7-471c-a7ab-367d7564bfad",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecd40a4-3541-48c6-90c4-abad9d4cef85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773c7a46-78d3-40ee-885d-48a4e4204ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac42cac-ef75-4d66-9da2-d4940c87e1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df92195d-bc18-4227-a019-963d48c15339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d492fa-3ca6-40e9-aaea-6a7638fb5ff2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9013cd7-0ddd-4720-a40d-99d00d3b9895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f64a29-0f5d-4fe3-880b-c0c1432fe099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6afdf7-9e89-41c6-9b09-c0176bafe5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4193a7a4-6b6a-45fd-81f8-00f58adc270d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c6de1b-80e7-42c6-a76e-bdba2a99ad3b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b797e4d-a36d-49d0-ab29-47f6af45a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ae4be4-6d29-41cd-bc41-28a06a57bf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcf2a0f-4b4a-4291-92fc-c2e56aaf01ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32822950-7c4a-40b7-82a8-09084e2864ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2f4b35-bb2e-46c3-8b1c-4562ba3787db",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b9e1ec-c158-4e6a-b80c-1a6321c4a029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3b6587-584a-453b-b702-4738482262a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504ae015-562e-48ce-9ce8-89c2a874384b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa82f38-63c2-4c9f-83df-bce794605e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f783adb-d6e8-4b14-927a-f69969d6185b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8392de-bb90-4936-a4cb-f59001ead84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ae58ee-6c50-42d9-a771-b7c71cffe2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf13ceb-1fa9-4f6a-87be-d0bc216f5f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5722a0-1fa6-4526-894e-ed907d30b811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec37281-8143-440d-a5e9-b55dfa1cb861",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7266c14-a0c3-4d36-94bf-05edd053df66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7630221-02dc-4490-a410-a0021afa00f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197ddbe2-3af7-45c4-80f5-9a5a20b9602c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d43c3b-c34b-4863-b533-e3bb09a10858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d58a6d-809e-43ac-9dd3-92ba610c0688",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fa1f82-9d08-48fb-90b8-ffdc02750e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb8b724-57b4-4a54-be6b-95710aeb8f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37989f61-e31c-4fa9-86d2-d4d445cc545e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bc97c8-00cc-4676-83c3-af2bf9d102e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee90a3d4-5a2a-4b6d-a5f9-f4f3e4d0eaa1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9ce136-aba1-4ad2-b616-e1fbe6f9f59b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d84b15-6146-4627-a603-e75073fe0f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9625196b-f24f-4c3e-9032-9b40104ab93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37deb3c2-645a-4c1d-97d5-5d3e36c3c5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8479bd13-34c0-46fb-9af2-3bee7af288d2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190e19b5-e9a2-4e48-92e6-da9ffbd2068b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5bad93-6c94-46d3-8c6a-d4e0c7114e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6df877-df5a-47d1-afe2-6bb834f1b83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35030cb2-2080-4f0a-bb1b-219e4b0af966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e3e871-bf03-4a1a-a1fa-28af84b332b0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fd6b69-4127-4407-9c20-eaee19b7b836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78dbf60c-fc99-4f29-9704-d53adcba6697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8587a2-fbc9-4d80-b662-aceb0d3181e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b62536-25de-4178-be1a-bc641eab91d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527b276a-63b0-42d8-b810-732c1011df23",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277f4100-0359-4747-bd8b-607be9a45922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f8c315-79ec-4f69-8338-6bf7efaf5ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c15a02-c36f-4c6b-b8ec-3e9976927cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d6cb70-f82c-4cf3-865a-a29cde066be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf833aa5-8c4a-4950-9eec-4be475c8b32e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aae3c4-2c76-4c87-8633-5207544da911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6816e7dc-7e56-43f4-8472-50b1b525aff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110778c2-b888-4bd0-9281-f6b9f061045f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c0cf10-fb57-40f1-a418-b5f1b4d209db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bd9a94-2bfa-418d-8240-265d156d0ec4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30df67ce-11a6-4da9-ad36-57bc768de5bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd1014fe-32d1-434d-9c16-5f9c7d3d20a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8cfbb2-d412-40a0-a25b-33fff2d03cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b798e4-cb50-4b66-bd0b-7a25621c4062"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88ab1d14-4250-4f7a-ba24-9a935b017272",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a5ac25b-fd62-4ccf-9037-33224a13cfc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fe93d22-1da4-45a2-baf9-3c445a44f80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dc350c2-32b6-44b1-b8d1-53fa8d979af1"
                    }
                  }
                ]
              },
              {
                "id": "cadbadb2-1f8f-4b11-82d0-f15652e50dda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3693c11-9a82-4dc4-bbb7-91f89ad6a348",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb6214b-d88c-4812-a868-8c2122d90652",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5d73d63d-8efa-41b5-b1be-0eb69b3d55c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06926ea-5d2a-437d-92a5-92050bd89f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4f5105c-3c0e-4036-9006-7a94d203abce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adcec15d-0f6e-4a26-ae8f-60a0fa0037b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09ce38ca-531b-4303-9ae7-6c70365b9a57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d68e5b-285a-421c-a2dd-7e57fb932209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85fef6e7-7d7e-4719-8102-2978f6579504"
                    }
                  }
                ]
              },
              {
                "id": "0f0e64f1-9913-4942-8e18-0d1c3b2344d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b88c5a4c-9efa-4722-b5be-00ac337bf6ee",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9082342a-6b79-4302-8957-891d1c9096eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e876bb26-d689-49b2-980f-b51d8cef63c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85bd951-c34d-4dd3-8d7c-d63e0cb7a73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ada7fd-46b5-49a6-9369-cd00fc0e0a3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bde2abd9-26b9-4eb6-88b2-1124498f81d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c43518d-67d6-457b-9a42-2a9b8a9c9851",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7de9090c-3d85-4a05-b00d-5e72c6341aec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "77ca0040-35c3-472b-b530-57947fba4a16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2da09789-5382-44d7-9fe6-4331e8c396f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b3225ef-1fe8-49cd-827a-a3ed452ea993"
                    }
                  }
                ]
              },
              {
                "id": "f1d7e267-0b04-48f6-a995-b76edeb32fc7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85c5c626-4923-424e-8dbf-078e4e8fe983",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cef7a4d5-eea2-4a9e-a388-82ea340017c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d78dbae-5ae6-4ae3-bfd8-3727bd3158e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eea16f30-e881-4833-9ca5-cc59af116465"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63223a45-ab67-42c5-9b9e-6d998a4c77b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cc2f505b-fd27-4cd2-a220-ebea36aff811"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43fe8637-c0ed-4168-9aa9-c45b38805499",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "258f2a26-e2bf-4ef6-b344-5b22ebf33db9"
            }
          }
        ]
      },
      {
        "id": "be8280a0-5795-4518-8eaa-f057e3e88365",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b80899a2-59ea-4835-94c6-f306d5d5c175",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f914448-983a-4829-8c06-33e240aa9ba2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63e891ea-d364-40b7-adf8-0adf366cbfab",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f696fe-ced7-4762-a015-b8ff32f953dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9274f6a9-20c4-42d8-824e-9929a0015af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745e1ebf-a5e0-4779-8ebe-361edf43198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d717c8d-8ca2-438c-afd2-8ac23cbb7f45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e67db04-81e9-49a5-8696-5764b39440a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc5785c9-936f-42a3-a37f-35d55782ec52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0395685c-874d-42c0-bfa9-c7f4623d0635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d6e4e20-5d59-4357-995d-f038643ccaec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d56ccdc0-afbb-4ab8-935a-83ac31f07b57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3fbb338c-691a-40f6-9de3-47fb4dfda142"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df06701d-679b-42be-8b48-e12c76ee107d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83bffb7e-1d15-4d36-b7aa-b6d88fe178ff"
            }
          }
        ]
      },
      {
        "id": "79a4c441-b85f-43e2-8947-e1dbb7c2079d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "17bc3ffb-1d4f-400d-a6d4-aafe2b56f3f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aae67f5d-b3c8-46c9-b801-2b70ce80428e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edf6a2d2-31d6-4e32-9287-3100e8c87588",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4157d44c-ad2d-448e-b2bd-acf897c4d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0afdb2a2-65b3-4ae3-9d36-4a4804b78d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0184f639-54ab-4fe2-ba03-270c8f9b2b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d447a565-2a9c-4277-b715-b56cc62a9843"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "546402a3-94c2-4551-83f4-986eb3c445df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a6eaeb8-e030-413d-85b2-a724101180d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5531a3bd-c485-43ee-90ce-60435c922c6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60662417-0722-4e15-8d3d-b593903deab1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ec3fc8e-46bc-44a2-b0d5-632edc3c8a97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6d9240e-603a-4f30-b676-d055fceec688"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2acf9988-dc4d-4105-ab71-d40f010917b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5551746b-3c0f-4c56-922b-3db50759a946"
            }
          }
        ]
      },
      {
        "id": "b42a3643-d9fa-4f45-b8d2-e35c28415db1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "992c9b86-e1b4-46ea-bbd2-7ef490ee594b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd255bb-1d37-4421-82ad-b7e20ac5bf7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eaa0f0e4-4520-47d7-a908-dc5253eed49d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebdb58c-bb7c-4369-aabe-9f3fb004ba8b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386581e5-d3e8-43f2-b486-7c907b952f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf7f15d-b150-4af4-9216-5d30a87be6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "447a5f08-6f0c-4fa8-9b90-6c2cbb85e4fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed1f389b-88dd-401a-9a44-6c3b135804b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ea20407-b18e-4b5b-ae40-a26175ad90df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edd359f1-c047-499c-98a7-c1f3922946a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e69a1de6-c0c6-40dc-8638-8a178ffeb673"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49e5af03-2cde-411e-86a0-b88186a045e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21b1892d-a085-4ccc-9d07-42833e0c22f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd430ef9-936d-436d-a544-c02668bbde67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddffced1-7056-481c-ada7-ddea79983e25"
            }
          }
        ]
      },
      {
        "id": "ee97d447-a198-451d-ab4e-49f58d351e88",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fead81e-6aa9-48b8-94be-876e0a1e94d7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66d766e4-75d7-4e6d-8316-62eb9e641d5f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "37291c90-5b1c-47c5-8e4b-3567047a50b0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31269886-1925-4590-8592-e6bb8c82dc45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4856ab81-dcb5-493d-b93d-f1c28732b12e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.896825396825395,
      "responseMin": 2,
      "responseMax": 261,
      "responseSd": 25.693192651985797,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723250426285,
      "completed": 1723250435946
    },
    "executions": [
      {
        "id": "6c0ae24c-bf2a-4c53-b53a-1a75d76072db",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9c78b9a5-adf7-462a-9af0-57cba62461bc",
          "httpRequestId": "73b9db9c-5ed2-4630-b08c-73053806ed23"
        },
        "item": {
          "id": "6c0ae24c-bf2a-4c53-b53a-1a75d76072db",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3812a66-134b-4209-b226-06743356fc4c",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 0
        }
      },
      {
        "id": "c6952344-389a-47a6-b456-f19a6a73651b",
        "cursor": {
          "ref": "f69db7d4-ea65-4c70-9021-c6f596c63021",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f3d8bb8-c827-481a-aa71-0b601ecc8937"
        },
        "item": {
          "id": "c6952344-389a-47a6-b456-f19a6a73651b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8b032d94-3f45-4568-b02a-5b3830a05f0b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "9c4f9fed-7152-4829-90d8-a10d5632c664",
        "cursor": {
          "ref": "59c24748-cd5f-40e7-9303-f80c9dc292a1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "03d34d28-0176-42e7-9e49-263f0b2ea9f9"
        },
        "item": {
          "id": "9c4f9fed-7152-4829-90d8-a10d5632c664",
          "name": "did_json"
        },
        "response": {
          "id": "383c58cb-3a4f-4910-b50f-b7201f536d0b",
          "status": "OK",
          "code": 200,
          "responseTime": 154,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4e455d-ce44-4ab5-b631-2db3154e3b7c",
        "cursor": {
          "ref": "59dfc2f7-25f5-4ca5-86cb-9062be1e45ac",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "40adf20c-4605-4f73-bd5c-fc2803995a51"
        },
        "item": {
          "id": "9f4e455d-ce44-4ab5-b631-2db3154e3b7c",
          "name": "did:invalid"
        },
        "response": {
          "id": "497123f1-3a30-41dd-ab6b-0eda4b092f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4e455d-ce44-4ab5-b631-2db3154e3b7c",
        "cursor": {
          "ref": "59dfc2f7-25f5-4ca5-86cb-9062be1e45ac",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "40adf20c-4605-4f73-bd5c-fc2803995a51"
        },
        "item": {
          "id": "9f4e455d-ce44-4ab5-b631-2db3154e3b7c",
          "name": "did:invalid"
        },
        "response": {
          "id": "497123f1-3a30-41dd-ab6b-0eda4b092f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44de810-f7c7-4f48-9ac1-1fc4beb4fe88",
        "cursor": {
          "ref": "8147e9a5-d375-4172-ae89-7729552f6d74",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c4cd724-0d02-4b2b-bb22-94db6928c83b"
        },
        "item": {
          "id": "a44de810-f7c7-4f48-9ac1-1fc4beb4fe88",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb98992a-e04f-4146-9115-a267b8d1208f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 126,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe8a415-3e84-43bf-aeb7-ad7b175d9400",
        "cursor": {
          "ref": "f7903bcb-850f-4e5d-98cd-17208513c9c2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e7c574bb-ce0f-4771-a4da-1c8deda76dfd"
        },
        "item": {
          "id": "efe8a415-3e84-43bf-aeb7-ad7b175d9400",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8ddb883e-b416-4324-9a0e-d7a7a1c061b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520965b8-b8d5-4863-9b60-4081b2d25f4e",
        "cursor": {
          "ref": "86cc1705-812b-4a6d-a2ff-e12992c4353b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "085b8fef-622d-4a1c-836e-12abfeba7519"
        },
        "item": {
          "id": "520965b8-b8d5-4863-9b60-4081b2d25f4e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "88d6ee60-b2bc-4bec-9be2-fb89bd4a4cec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9413fa-7fa7-47ee-a006-607054aee20d",
        "cursor": {
          "ref": "d8d7aa0f-5a89-4ebb-9b60-c0d214a78778",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96430aa1-eeb3-4dae-8c15-34df0b655c02"
        },
        "item": {
          "id": "fa9413fa-7fa7-47ee-a006-607054aee20d",
          "name": "identifiers"
        },
        "response": {
          "id": "5460b4be-ceae-48f9-9734-6187d508853b",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6231fcd4-9318-4f06-ac48-7bcacd251132",
        "cursor": {
          "ref": "ed7c7b13-a980-4118-b320-31996e0d5e79",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5647d999-05e0-4910-9245-81a822877d14"
        },
        "item": {
          "id": "6231fcd4-9318-4f06-ac48-7bcacd251132",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "01a78deb-0940-4869-ac4d-01b42c360507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db6d086-9e16-4991-b186-6e3b08b2573c",
        "cursor": {
          "ref": "02b215d7-1945-41f3-b599-150f6014a591",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b13996fb-1883-4d6f-999c-e0444f35bade"
        },
        "item": {
          "id": "5db6d086-9e16-4991-b186-6e3b08b2573c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d27187c6-5537-4da8-919f-5cb7ff24cf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2558cf56-f671-4637-ad3a-ee7826ae34ff",
        "cursor": {
          "ref": "81110ee4-0793-49f2-9bb1-e0844ab60187",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8815a62d-e01e-4e42-800a-b420198700cf"
        },
        "item": {
          "id": "2558cf56-f671-4637-ad3a-ee7826ae34ff",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "356d1c71-94e3-4f58-aa2f-feff76f04c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c8cde9-5fd2-4a13-b23c-53a0a60528c8",
        "cursor": {
          "ref": "91e6ffd2-ec21-4894-a325-90c10284d026",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c6460d65-6622-43c9-b0bc-6d1025208e10"
        },
        "item": {
          "id": "83c8cde9-5fd2-4a13-b23c-53a0a60528c8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a6a6633c-f5b9-46da-b9ff-8cec5dd8570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec307b0-9f6e-48ee-b3ac-71675c75eba5",
        "cursor": {
          "ref": "e5fdb7cf-2c72-4b8e-a1b5-74607aac0f52",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6aa3fb4b-86b6-49f0-b8eb-80a78418aff1"
        },
        "item": {
          "id": "4ec307b0-9f6e-48ee-b3ac-71675c75eba5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f33d6a56-46a9-44db-a9ca-21f988699bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30ff920-8c67-473e-8bc8-61ca58bf501b",
        "cursor": {
          "ref": "3ec20dcc-4aa7-4b95-a2d3-1261a14347f5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a230830a-7d08-4fef-ba4d-9553cd62f0c6"
        },
        "item": {
          "id": "a30ff920-8c67-473e-8bc8-61ca58bf501b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eb47fc57-7b1d-4dcb-a771-b0b1b8ca17f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b2c74e-c7ee-4b0b-afda-b9bd559d93d1",
        "cursor": {
          "ref": "eb31489a-db56-4f39-9070-4cb26738a35e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fd229e65-756c-4e99-9d70-fdd30eeed70f"
        },
        "item": {
          "id": "34b2c74e-c7ee-4b0b-afda-b9bd559d93d1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c794fff6-93a6-4ed4-a22c-2ca89c5bf0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca31cc96-9bd8-457c-9616-a8fb0295f57f",
        "cursor": {
          "ref": "890474a7-576f-4ce9-b65d-4bf941f6ff7b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "22bc08bc-cd00-404d-abe8-2ab8f64b2b30"
        },
        "item": {
          "id": "ca31cc96-9bd8-457c-9616-a8fb0295f57f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "56d6101e-9ee4-48fb-8716-55114683416d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3396ef-cd0e-4275-8fd4-716980f77234",
        "cursor": {
          "ref": "82dde5d0-912d-4fda-be57-3a3df200e9d7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c9d39321-c2ff-45cd-b011-0ad3762e2b17"
        },
        "item": {
          "id": "1b3396ef-cd0e-4275-8fd4-716980f77234",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f20f646a-2cc0-49c6-9cfb-62d2269f092d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54d22ff-17d5-457b-8ad5-71688f226fb3",
        "cursor": {
          "ref": "b48986fa-f044-4539-9ad4-1c498e08ad64",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8fffe6f5-82bd-480e-a625-747dd6a38a1b"
        },
        "item": {
          "id": "b54d22ff-17d5-457b-8ad5-71688f226fb3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fbb74391-4a02-4afb-bb12-f70441ffb1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297ae21c-84d6-41df-8441-cf8685ded665",
        "cursor": {
          "ref": "673ac79f-18c3-4e30-b567-6d9f64f34754",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "477a5f76-5730-4371-9203-e8eecd5bfd22"
        },
        "item": {
          "id": "297ae21c-84d6-41df-8441-cf8685ded665",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7df8d1be-86e0-416d-b3ae-568123508b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fded34ff-ccf0-4fd8-9be9-a94208d81cf7",
        "cursor": {
          "ref": "758a81ad-f020-4a34-963d-cee72aae7fec",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c4cc1778-b9ae-4eee-8ec8-0195c149d9d8"
        },
        "item": {
          "id": "fded34ff-ccf0-4fd8-9be9-a94208d81cf7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ad0a3576-b0f1-490d-aeaf-d3cbcd3e20e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ff1889-c27e-4a21-b1cb-ae307ae1195f",
        "cursor": {
          "ref": "36a6a7e2-3495-4ce8-817e-af57957f89f6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c47dad8f-fd76-4bda-af5a-4bb16390edf7"
        },
        "item": {
          "id": "96ff1889-c27e-4a21-b1cb-ae307ae1195f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b8bc2d48-1d43-4e64-92d4-3c0200f55348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d9228f-3b2b-412e-8733-8882c52621b5",
        "cursor": {
          "ref": "0fc333e1-81c5-454e-99f4-084d372a5832",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "52f2d651-6ffe-4087-b774-31a6ee48f78f"
        },
        "item": {
          "id": "c7d9228f-3b2b-412e-8733-8882c52621b5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "95ded15c-e894-4b8d-8352-448f5dbafe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b61f379-2d8d-41b2-ace8-688ccd6b45f7",
        "cursor": {
          "ref": "4018d468-df1c-42dd-9dce-2c947158c3cf",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3e8f7df5-783b-45b3-b725-94efffff64df"
        },
        "item": {
          "id": "5b61f379-2d8d-41b2-ace8-688ccd6b45f7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "44b8daf4-c2be-4f79-ade4-81036e64c49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a534d365-e1ff-478c-9a82-bcd720bd5278",
        "cursor": {
          "ref": "7b2cf078-b6af-4964-b5ee-1151ba80254c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d607a928-0d49-4f5c-b74a-9fd4645fba10"
        },
        "item": {
          "id": "a534d365-e1ff-478c-9a82-bcd720bd5278",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "577c75f1-183b-49fe-9bb4-37bd624f1b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506d7598-3705-4e56-be66-8ed2819bc5a5",
        "cursor": {
          "ref": "f2bb1846-f02d-432a-b12e-42c912d23270",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "68534202-e02a-495f-8869-a49a13921211"
        },
        "item": {
          "id": "506d7598-3705-4e56-be66-8ed2819bc5a5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "858e0bcc-3b02-4c68-ac36-314f15d59f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2b6692-31b4-4d7f-abe8-a189c8ada693",
        "cursor": {
          "ref": "9bd975d6-235c-4b11-afae-48d67dfc6e0e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b83ca3c9-b0f7-4d7b-b583-e573394a7ff3"
        },
        "item": {
          "id": "3f2b6692-31b4-4d7f-abe8-a189c8ada693",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0b5e5a8d-d3e8-47af-a70c-691149738985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9b80ad-c961-4a84-a3a6-f1faa1202fcf",
        "cursor": {
          "ref": "3dcc9dad-ab91-465c-93c3-b9b5a92b06f1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c1d93c1-eec7-4b9c-b160-30bd34443b74"
        },
        "item": {
          "id": "4e9b80ad-c961-4a84-a3a6-f1faa1202fcf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c65038ad-ba34-4276-bc1f-5eb2944f68bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99f1e6e-733e-497a-993a-5d2d784de5e6",
        "cursor": {
          "ref": "aacd8a53-b54d-48f3-ad1d-edcad8b224ad",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8a188f2b-0246-4646-bd7a-efa030751bcb"
        },
        "item": {
          "id": "b99f1e6e-733e-497a-993a-5d2d784de5e6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "14e43b28-1242-4067-b8ff-050d107ad500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7d130a-a9e6-4739-bcb4-859e1a6c377a",
        "cursor": {
          "ref": "579e50e3-dddb-481c-bb53-9134b6282aaa",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "35562fb3-f6e7-4e98-942f-b031c45bb2af"
        },
        "item": {
          "id": "4f7d130a-a9e6-4739-bcb4-859e1a6c377a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6bc6dcfc-e2e3-4a76-9f69-f7833f2155d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac44b46-f66d-4fa5-a407-4a7c260a7447",
        "cursor": {
          "ref": "4f20c923-b9f5-4f16-97f8-8c3b7f696051",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b5cefcf2-23c7-4296-8375-a8c522c8d3c5"
        },
        "item": {
          "id": "4ac44b46-f66d-4fa5-a407-4a7c260a7447",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "261f66af-b20b-4818-8fae-ede5c566aaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5ced6f-2ad3-4b99-aabc-412c93e814f0",
        "cursor": {
          "ref": "b839cc84-ea09-4e87-b129-825001a7b530",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "96b5feff-5e97-46de-b64f-e55b9970f3bc"
        },
        "item": {
          "id": "0e5ced6f-2ad3-4b99-aabc-412c93e814f0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8b725974-dcd0-41de-aa53-012e5dd85e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851ab8fb-20e2-4f2c-b558-238c36ba1606",
        "cursor": {
          "ref": "2140f2f3-7e37-4e99-bca7-b6d7d602918e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "82f39e97-6e67-48ba-85ce-bb9bf0a5823e"
        },
        "item": {
          "id": "851ab8fb-20e2-4f2c-b558-238c36ba1606",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "741d741a-d749-42df-9631-85b59f5acfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a921b2f-9476-418e-9f22-f064090b4f1c",
        "cursor": {
          "ref": "9643a33f-f53e-46b0-881e-a393c7325d02",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b9b4c6d6-b87f-4c46-b442-aad8faa2c07e"
        },
        "item": {
          "id": "9a921b2f-9476-418e-9f22-f064090b4f1c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "da0b5d6b-308b-4fd1-be47-ec97ca56b3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b41e33c-ebbb-44f4-81e0-9ee1b94a4343",
        "cursor": {
          "ref": "6644eba6-f535-4bd8-8a1a-4a3a994adaf9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6ef73eaf-5c99-496e-b13a-22d58ff1d07e"
        },
        "item": {
          "id": "6b41e33c-ebbb-44f4-81e0-9ee1b94a4343",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b688d591-1876-4634-bea7-714fdebed8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d096e25-984a-4436-9fc6-56a9bd2da8f8",
        "cursor": {
          "ref": "7782e3d8-5ec9-4854-b9ac-bf25b078d3fb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d9679a55-5569-4b66-986d-633daf9a06ce"
        },
        "item": {
          "id": "4d096e25-984a-4436-9fc6-56a9bd2da8f8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "42e7bd28-80c1-4e8b-b443-c0327929124c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe4775-5fbd-4442-a947-d9c6b5f68de7",
        "cursor": {
          "ref": "d3bab4bd-3ae7-48a9-9c45-1721a485b775",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3c3f037a-0141-44dd-bb5c-84cda82d0465"
        },
        "item": {
          "id": "25fe4775-5fbd-4442-a947-d9c6b5f68de7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1178ea06-8737-45d7-abc6-0efa0a9382e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807442b9-05ca-4eba-b6ca-d5b881225ace",
        "cursor": {
          "ref": "b80d968f-1369-4d16-a5a9-5ca6310e3cd2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9cda608e-e948-474c-af1d-76ff415a9b6d"
        },
        "item": {
          "id": "807442b9-05ca-4eba-b6ca-d5b881225ace",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e6c00eb-ab68-4551-992f-16fc8a54b9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444d64f3-be48-4e41-a7ee-d8bf6026de90",
        "cursor": {
          "ref": "1f0506bf-965f-4556-b4b4-cd89e7754a16",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "280d3798-f009-42f1-9d5b-7cbbda495a3c"
        },
        "item": {
          "id": "444d64f3-be48-4e41-a7ee-d8bf6026de90",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9362f5e0-37cd-4132-af49-b6844c7709e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18be203e-314e-4597-96af-3aeb865505e0",
        "cursor": {
          "ref": "8c43518d-ce47-4c38-9d9e-abe45af35fdc",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3f6c8a93-0240-4875-9d01-1b4ee36f49a0"
        },
        "item": {
          "id": "18be203e-314e-4597-96af-3aeb865505e0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d765f795-9448-400e-a82c-f9ea3b8ba2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d71c8e1-e048-4335-b259-77a63f4b2282",
        "cursor": {
          "ref": "41754c1b-5621-4d8c-9a09-3041ef8f9b54",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4f836b5-399b-4daa-b5e8-154fc3f2a1b8"
        },
        "item": {
          "id": "1d71c8e1-e048-4335-b259-77a63f4b2282",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fe69ecc4-dce8-496a-806f-b4e91c6f969b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0607c562-8ede-42bc-b47a-d297e77cce1c",
        "cursor": {
          "ref": "98f345a2-7a42-4fe6-892b-79e636a1c45b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "29d79d7e-52c1-4054-9bcd-4c42a327586d"
        },
        "item": {
          "id": "0607c562-8ede-42bc-b47a-d297e77cce1c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a9d9b313-083a-44ca-b037-c84d98373719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ee16db-eecf-478b-88eb-1ff3ab749657",
        "cursor": {
          "ref": "cf8d3082-0d54-450a-8f00-d73435e528dc",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9c0940c5-f290-4779-90f4-1703cedf340d"
        },
        "item": {
          "id": "c0ee16db-eecf-478b-88eb-1ff3ab749657",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "83571ff3-a2e2-46c0-bcd1-5bd153227a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eccab58-c011-4abc-a7ac-cf81353e4795",
        "cursor": {
          "ref": "efb95fa3-1380-4fe4-8de5-a3ced9e2c7e3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "432990a3-ed11-42b6-a41a-3924d403514f"
        },
        "item": {
          "id": "4eccab58-c011-4abc-a7ac-cf81353e4795",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "19f035ff-7675-4f63-bf27-64616e9a10ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5685cea-a401-4bac-9994-4ac75647dd0d",
        "cursor": {
          "ref": "e18337aa-a8ef-4f99-b801-ba92938fee10",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f3059a1f-e303-47c3-a0aa-8429e4811f7d"
        },
        "item": {
          "id": "a5685cea-a401-4bac-9994-4ac75647dd0d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "08034eec-6226-4e8e-989c-8113f8707d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674402aa-43b1-4a0a-8895-a3395525ccdb",
        "cursor": {
          "ref": "2c12e906-7962-4f00-9c79-f84437945540",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c8f958b4-399c-490a-bf73-d488bc74e973"
        },
        "item": {
          "id": "674402aa-43b1-4a0a-8895-a3395525ccdb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1ca13434-9782-46e0-adbe-42eb149dbc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63125078-4f2f-4a6e-bb9a-0ad233d961ab",
        "cursor": {
          "ref": "c90b965d-f954-4cc1-9611-7db4f3c98274",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "333a7085-a790-4f74-9445-e11d97167fb1"
        },
        "item": {
          "id": "63125078-4f2f-4a6e-bb9a-0ad233d961ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d9d2d852-7f24-4c9c-a1ec-ca1ee255393b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541d015b-49fe-43e3-ab0e-3fc001bd938c",
        "cursor": {
          "ref": "14f4e0a8-97a6-46ea-9950-01cde3cafd37",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "202bc0dc-b370-4f79-8d04-3165c6a58f8f"
        },
        "item": {
          "id": "541d015b-49fe-43e3-ab0e-3fc001bd938c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a815b818-8bff-4480-ac9a-1eb0986c90b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131efe0c-1e40-4185-8b1f-1986af3591c9",
        "cursor": {
          "ref": "df192938-d7a8-4055-b58a-9a92f697a884",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "78e77337-bf93-4dc7-9fc0-c2e425083b1d"
        },
        "item": {
          "id": "131efe0c-1e40-4185-8b1f-1986af3591c9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "97aff04f-7b77-4422-b770-eec2e9153ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977fec46-934c-4a08-806a-f3fa9582ad54",
        "cursor": {
          "ref": "11fa03df-b59f-40fe-a2f6-0638b67a487e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "85b8799b-d021-43e5-89af-aaa7c6b149c1"
        },
        "item": {
          "id": "977fec46-934c-4a08-806a-f3fa9582ad54",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3cbf0408-a9b4-4316-ab4e-a6b437f60189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcf9021-b7a0-47d3-b5d7-2290455cc555",
        "cursor": {
          "ref": "a81b18b7-3605-4fff-800a-5c7584dc0083",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a474ccd5-2f78-41e4-b360-784c48ffce18"
        },
        "item": {
          "id": "4fcf9021-b7a0-47d3-b5d7-2290455cc555",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "42c7c1e4-253f-4db0-8a20-cccfe32b6659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c4d15f-778d-40b3-8a31-1a89ef6d25d9",
        "cursor": {
          "ref": "a6c7d81d-c65a-43a2-9e95-2ef46d9c35f4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "494a4779-e3db-4c90-85b6-885fcd793c5e"
        },
        "item": {
          "id": "69c4d15f-778d-40b3-8a31-1a89ef6d25d9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9c43a468-a4d4-45c6-a423-4f795968a3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe8f2c-f0a7-40d4-8c65-9ac24170dda3",
        "cursor": {
          "ref": "a3d95051-a3a9-446a-9d07-a456e49e9fed",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7aa1ed26-8e94-415f-b736-0f5553a4e2b4"
        },
        "item": {
          "id": "06fe8f2c-f0a7-40d4-8c65-9ac24170dda3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "89e63c23-97de-40ef-b724-acd1df6abfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b140087-04eb-404f-bd75-85a5e0af428c",
        "cursor": {
          "ref": "dcf43e1f-4374-485c-a8fd-33bd6b1a1d58",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6c904e2f-d5a5-4df9-9b31-510d354f4278"
        },
        "item": {
          "id": "1b140087-04eb-404f-bd75-85a5e0af428c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fa59b4a6-a7d7-484a-bb6f-c22bac8816e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1500c48-407e-4be9-a1be-1eebfa5c73f9",
        "cursor": {
          "ref": "888c3bb8-660b-48e7-8d43-930d89e2b4c1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "585d665d-4371-4e75-8361-98647e32a7b9"
        },
        "item": {
          "id": "c1500c48-407e-4be9-a1be-1eebfa5c73f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5b886bbf-c971-4abb-a7c2-845a93c2f0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a09aaf3-c86e-4905-a2b5-a55695b0e66f",
        "cursor": {
          "ref": "04f6b7a7-db63-49c9-ac8e-8bac9559948d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d8ad690a-fc21-4716-a2d8-ca14af85759f"
        },
        "item": {
          "id": "8a09aaf3-c86e-4905-a2b5-a55695b0e66f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8b09d6ca-36be-430a-8dff-954ea628ad22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72df16c7-59cc-48b4-b95b-97e49d0b0b68",
        "cursor": {
          "ref": "6905c2e5-539f-4733-9339-9a852b29a69b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "84c3aeb6-2927-4018-b092-fee6145bd435"
        },
        "item": {
          "id": "72df16c7-59cc-48b4-b95b-97e49d0b0b68",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e25d45dc-040e-4e2d-b0dc-82390420e5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b5e4ca-dd9e-48f1-98f2-16b4c92f728e",
        "cursor": {
          "ref": "4123176c-5992-4881-a7a7-0613a8989970",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fbdd6b7a-5070-4ca0-91f8-8d497505498f"
        },
        "item": {
          "id": "21b5e4ca-dd9e-48f1-98f2-16b4c92f728e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "27d5cc17-2679-426b-a0b5-d380418d3547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3e9457-408f-43d3-9f75-ec025b0086d9",
        "cursor": {
          "ref": "55e20d50-3bd9-4448-b7f5-022c6c8a2570",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2a4e5aff-d7a9-4a91-82e6-8d2a26b35a3c"
        },
        "item": {
          "id": "af3e9457-408f-43d3-9f75-ec025b0086d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ff65f60b-5847-41c8-9454-74fc07bcb2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a22352c-e4db-4151-a906-5a3e835f9020",
        "cursor": {
          "ref": "4f72d139-3bc4-4ac1-8a8c-9022df3793a3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "998bf554-3879-4d06-a700-b7976f292036"
        },
        "item": {
          "id": "1a22352c-e4db-4151-a906-5a3e835f9020",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bda1e41b-72f1-40a5-9a68-3be8699aa140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1620e025-6fa0-48ea-b94b-b9024cc3d619",
        "cursor": {
          "ref": "3864f55c-1195-4d06-bd1d-70668f46547c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a48671a6-e876-4c85-a7fc-3e8f3abfd866"
        },
        "item": {
          "id": "1620e025-6fa0-48ea-b94b-b9024cc3d619",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2baba872-da00-4fd6-9b92-03521c4c27db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957270de-e3d3-4396-813d-52a6420fd481",
        "cursor": {
          "ref": "3500cc9c-a3a8-4274-80ff-19f7f45db8f4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b2f61e00-ddac-4acf-a1ff-ab9c834eac57"
        },
        "item": {
          "id": "957270de-e3d3-4396-813d-52a6420fd481",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e8c91daa-26ef-45ce-b003-b98de78b51a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc957e52-4bab-443d-aa9b-74d7eb7dc173",
        "cursor": {
          "ref": "536ac476-0f95-40e4-b7c8-e011df7c36dc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "332e7f70-d4aa-4151-959c-cb7421f2988b"
        },
        "item": {
          "id": "cc957e52-4bab-443d-aa9b-74d7eb7dc173",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2abfe068-8085-42d7-823b-7acdcd99a2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e55b8f-f72c-409f-b518-70fce8b0a51e",
        "cursor": {
          "ref": "b3e9c5e7-286e-490a-89b9-435483ec6fc2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "68fc48c2-37a8-4a82-b872-f4d3afa15565"
        },
        "item": {
          "id": "d6e55b8f-f72c-409f-b518-70fce8b0a51e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3e1ecae5-8434-451a-a542-d9967f0550f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d3851c-51e5-4921-98d0-78a9837bece1",
        "cursor": {
          "ref": "06900fe6-cc63-4ede-839f-cc1b7e3304a6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "09e9a15f-251c-4bfc-8205-2d252f242fd7"
        },
        "item": {
          "id": "b5d3851c-51e5-4921-98d0-78a9837bece1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "879eefb5-0cd6-4e9e-9734-34b35e4199ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e27e3f-a3e1-4b55-8abf-49a4b23a9ce4",
        "cursor": {
          "ref": "a147c4e2-dfb2-4f05-a33c-a1f02fa8df6a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1717d306-ab73-4cfa-a8e5-ec2ae6424751"
        },
        "item": {
          "id": "f7e27e3f-a3e1-4b55-8abf-49a4b23a9ce4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0e95a53a-67db-4b4b-91e0-2d603de17663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5a97ee-39a3-4dba-89bf-7fbe0eb4884e",
        "cursor": {
          "ref": "405db3fd-4e6a-4b96-9bf3-f76aae436eec",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "052c649b-4f81-4b41-91a2-14f290d0379a"
        },
        "item": {
          "id": "2c5a97ee-39a3-4dba-89bf-7fbe0eb4884e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cafbed52-318a-4cd2-bdb7-c10c968128d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4582bfe-9147-47e4-ace7-bebc4071dec3",
        "cursor": {
          "ref": "b8c3b621-8648-4a6a-9178-de75d04d5411",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f64b24a6-6540-42ad-9084-e1279c9b94d1"
        },
        "item": {
          "id": "d4582bfe-9147-47e4-ace7-bebc4071dec3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bb0cce93-dbaa-4b2b-aa7c-49daac1754a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69dc738-34aa-4e78-98a2-e81a77fd6531",
        "cursor": {
          "ref": "a7e25a0e-b038-460c-b6b3-3f9e378f647e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ac755dda-bdef-4fb2-a367-43c7f317c066"
        },
        "item": {
          "id": "c69dc738-34aa-4e78-98a2-e81a77fd6531",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4f95ad0b-f5bd-44d6-90c9-e36dc7d481a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28753a3-b432-4149-8454-6e2e48703487",
        "cursor": {
          "ref": "6b2d8182-7ad9-429e-a1e8-25160da1a2a2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7955b985-27de-432c-a636-6e00134f47ad"
        },
        "item": {
          "id": "c28753a3-b432-4149-8454-6e2e48703487",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6d9a211c-9a98-4135-a4b4-8aa6242b4c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b14a83-784c-438b-b671-7a907c2384fb",
        "cursor": {
          "ref": "359188a2-6b02-4bc2-bbef-305fc8e7ed1b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9e9653e4-0ca7-4c84-a07a-19f1aaa6be7c"
        },
        "item": {
          "id": "c4b14a83-784c-438b-b671-7a907c2384fb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "69851a44-85ec-430c-bf59-a4fdf3aebdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22b343-8191-4b1a-b8d3-1698cf93cb12",
        "cursor": {
          "ref": "7fa728f5-3835-4344-9ae6-f656274f6cf0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "07666690-fe29-4c83-a77f-969b42e58a4b"
        },
        "item": {
          "id": "ba22b343-8191-4b1a-b8d3-1698cf93cb12",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "59161fcd-0c62-4b9e-aadd-4818a4552f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d98536-7a99-43a2-a397-02f881b78559",
        "cursor": {
          "ref": "6164a2b3-5884-457b-914f-c2cea2be897b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1bd48316-20b7-44cd-9302-30c6711caef0"
        },
        "item": {
          "id": "00d98536-7a99-43a2-a397-02f881b78559",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "947a0454-1a3e-4df8-988e-06d809aaebb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee656c6-6fb7-425f-ac9a-d4b7a8472006",
        "cursor": {
          "ref": "b727a3cf-83b1-493f-80c4-f2a3f8a540f5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7178df5f-a0e9-4744-97b0-f7955329d52c"
        },
        "item": {
          "id": "4ee656c6-6fb7-425f-ac9a-d4b7a8472006",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "97ff9f69-20f0-4a25-a12c-b713f742d27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc33bdaf-7e9c-43f2-94a8-aa609fd720fd",
        "cursor": {
          "ref": "8b2ecc72-4398-4325-9f6b-c484d0f22231",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c07ad340-ae35-4123-8efd-5c2b377febae"
        },
        "item": {
          "id": "dc33bdaf-7e9c-43f2-94a8-aa609fd720fd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "daa70916-21d5-4b76-a0b3-db20375b5fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43bab90-81bf-4dfb-bb68-3145569b8394",
        "cursor": {
          "ref": "1a6993be-e486-476b-9e87-10c86e2d0b29",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "02ad389e-da0b-49cd-8c23-7444de93e866"
        },
        "item": {
          "id": "b43bab90-81bf-4dfb-bb68-3145569b8394",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "276ba6d5-3116-4607-af9c-813f80b66591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c9cc96-8e3f-45de-be90-697fd63e3eca",
        "cursor": {
          "ref": "c24c3eb9-c963-4e25-8a98-f4d42d7c53ee",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2e31cc7e-2ce3-4ae5-8130-c5551ab3e9f9"
        },
        "item": {
          "id": "98c9cc96-8e3f-45de-be90-697fd63e3eca",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7df3cb72-7081-4447-9076-d57a105376bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11dd6d3-092c-4052-994a-2d6b136bb2cf",
        "cursor": {
          "ref": "f96dd614-bd3f-4c08-942e-21efe70a5eeb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cbe86cb7-f4f4-4423-96b9-d5946e92c433"
        },
        "item": {
          "id": "a11dd6d3-092c-4052-994a-2d6b136bb2cf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "18c6b066-91eb-4350-b458-fe936e0f473a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3afb887-0d7f-4c57-a536-f2f54d3f058c",
        "cursor": {
          "ref": "b5cf6008-4d38-49e8-901e-64c7480a73e1",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dce90b06-4064-4307-83fd-2fcc9888b6f5"
        },
        "item": {
          "id": "c3afb887-0d7f-4c57-a536-f2f54d3f058c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6e24245b-fa44-43d5-a765-5cc016e4b7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306d0b3f-8e4e-4bc5-8c78-673265f27d65",
        "cursor": {
          "ref": "764489dc-1047-4184-be19-a7f6636fea4d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "922ca62e-dd64-498d-8b5d-089030b572ad"
        },
        "item": {
          "id": "306d0b3f-8e4e-4bc5-8c78-673265f27d65",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e20da83d-a5de-4039-ae12-120c64585cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a56108-47a6-49fe-b00b-19546a94b2c6",
        "cursor": {
          "ref": "67d83673-67e1-4f48-a352-5f3463dae966",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3204630b-a6bd-4cbc-8517-2c4eedb0b80c"
        },
        "item": {
          "id": "b0a56108-47a6-49fe-b00b-19546a94b2c6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "87be0bc3-e41f-4202-80b2-b889afe13b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88ef8aa-aa7a-4624-a8c4-f6ad081a182c",
        "cursor": {
          "ref": "790fe2ab-b8bf-476d-9dc1-6c4ce8cae104",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a32ed116-1e39-40be-8658-864a3a188159"
        },
        "item": {
          "id": "b88ef8aa-aa7a-4624-a8c4-f6ad081a182c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9a6e6dd6-3ac3-4803-a953-bc50c1d63c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4466a347-252a-418d-8ef1-1b3dc73f8f50",
        "cursor": {
          "ref": "71a195eb-b715-4154-9936-5d13652b418c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b54a0066-b530-4a4d-990e-ca27ceedfe81"
        },
        "item": {
          "id": "4466a347-252a-418d-8ef1-1b3dc73f8f50",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6fa2a3e3-db49-46e8-b892-158671163202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b5eba6-4385-42f9-871d-988c62f425bb",
        "cursor": {
          "ref": "d18fad09-e0aa-468e-857d-7c51a0529920",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cb1785f1-97c0-4753-985f-2b0523a6a833"
        },
        "item": {
          "id": "22b5eba6-4385-42f9-871d-988c62f425bb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8355a671-857d-463f-8e54-537f8e3cb490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e134193a-29a2-4f4b-8d27-1660728e3fcb",
        "cursor": {
          "ref": "c3d9f79d-5f7e-4eff-b37d-0ecea1b84bcd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "741e5d93-8955-4684-8a99-d34a172f05a2"
        },
        "item": {
          "id": "e134193a-29a2-4f4b-8d27-1660728e3fcb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2918c4da-348b-4add-9791-6d281ca8447e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ccae57-216f-4230-987f-185729780453",
        "cursor": {
          "ref": "f50f21b3-0cee-4582-bfcb-abaf8e7f1258",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b72ae73d-3508-4475-a38a-a97bb7f76c96"
        },
        "item": {
          "id": "c5ccae57-216f-4230-987f-185729780453",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ed9ffd97-7eba-4a76-ab3f-1dca514e15be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f05c63-2a4b-42f4-a0ab-6b434379c1b9",
        "cursor": {
          "ref": "90504665-eb0a-474c-b20a-66ed320faa59",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "058be10d-4456-4442-b32e-e0b2ff0922eb"
        },
        "item": {
          "id": "41f05c63-2a4b-42f4-a0ab-6b434379c1b9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1d8c2a0d-d7ec-4eb6-83c6-e77460f641df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97165d6-9390-4d12-bd06-b532806b9f0b",
        "cursor": {
          "ref": "a778aeac-90da-4234-962a-e1a6eb7f297a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "97540e40-1a81-466b-bfde-5371677a7134"
        },
        "item": {
          "id": "e97165d6-9390-4d12-bd06-b532806b9f0b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a91069bd-940f-4ae2-98dd-38d5b01fc20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bef13cb-3db4-4986-a445-0fec35aa3ab9",
        "cursor": {
          "ref": "6d10ec57-17eb-44df-8608-d8f139043cfe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6308055e-25aa-4ef3-b1d6-d05237b8cb40"
        },
        "item": {
          "id": "8bef13cb-3db4-4986-a445-0fec35aa3ab9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "359f3ae4-0f68-4360-b94f-a0693b0cf481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0086dbfe-d670-4a48-b8b6-3a31b6be94ce",
        "cursor": {
          "ref": "b2847bfc-7fd3-418f-ad49-aab25f19f6a6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aea3aba6-7f3e-4c38-924f-80d285385c69"
        },
        "item": {
          "id": "0086dbfe-d670-4a48-b8b6-3a31b6be94ce",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b8e97ebc-40f4-43a3-b77f-7ff35a3a0261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b4ac59-a27b-408b-9a56-a7a7a27a749c",
        "cursor": {
          "ref": "b3eacbc9-12b8-45e4-977c-d378f63d5713",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "29bf7082-6053-47a1-8667-6a9dd60a4667"
        },
        "item": {
          "id": "41b4ac59-a27b-408b-9a56-a7a7a27a749c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "44511a4a-7d5b-4c19-91e4-703e543bb349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30866b6-ce38-4927-8ccd-e69213e77976",
        "cursor": {
          "ref": "31b50e21-7de5-4494-b945-4526d2eb985b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f7409617-86de-4396-ae6b-e855ba2135e1"
        },
        "item": {
          "id": "a30866b6-ce38-4927-8ccd-e69213e77976",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "08202f34-9d56-4e28-8a65-31ca5a91e330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31783639-ed2d-41c7-8b78-35e4c055fcff",
        "cursor": {
          "ref": "b0029ba6-61e6-4d36-af66-2bd4dcd1bfd4",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "993dacd1-24b2-43be-9f43-ccf2755973a8"
        },
        "item": {
          "id": "31783639-ed2d-41c7-8b78-35e4c055fcff",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "462ee39c-87ec-4e68-a064-304dae361b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909c2dd7-a74d-4447-9738-305539af8032",
        "cursor": {
          "ref": "8a89d3c4-9c52-483d-9263-2e09aba346ae",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "99b75e59-94a9-4d62-9738-f46afa65da34"
        },
        "item": {
          "id": "909c2dd7-a74d-4447-9738-305539af8032",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fa27e793-ba63-4f90-aa67-20ec0bb00159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54224d5-87af-42f5-8304-5d773fee5858",
        "cursor": {
          "ref": "d715040a-7809-4297-b0d9-950632dea58c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f9776c7f-1e0c-4943-be71-7956bc5a6fce"
        },
        "item": {
          "id": "e54224d5-87af-42f5-8304-5d773fee5858",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "42fe53fb-ed79-47dc-86ab-a114a026a127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f83a12-8d18-4cff-b8ab-7d1b3cbe33ec",
        "cursor": {
          "ref": "2695dbfc-f983-40b9-aca4-e9a0a5369f31",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "28a6aa6d-c646-45ed-9388-138a0215268b"
        },
        "item": {
          "id": "53f83a12-8d18-4cff-b8ab-7d1b3cbe33ec",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fa94f607-6bf3-40ad-9fee-beabbd3f1dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367967f5-3486-473d-8e23-ae71ba44fe6d",
        "cursor": {
          "ref": "07e88f0b-6cb0-449b-a79e-bcf6b9cd78f4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "20f1e7ef-d7ad-46e0-8090-aa992c5877bd"
        },
        "item": {
          "id": "367967f5-3486-473d-8e23-ae71ba44fe6d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a12ea9ad-159f-4595-9432-abc07f17e94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae6d442-c576-4600-a459-2ba07b3f33e6",
        "cursor": {
          "ref": "a6301018-c42e-4dca-8a0f-f6fe042ca228",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4a92d96c-95ac-4b51-80d4-179e5643585b"
        },
        "item": {
          "id": "2ae6d442-c576-4600-a459-2ba07b3f33e6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e0d42414-1124-44df-9751-446421a07cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e91045c-d4f0-41d5-8a5a-dc119b5884a5",
        "cursor": {
          "ref": "88012100-fc59-4641-b33a-f167beed76ce",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "780b8d1c-f9b6-4905-b352-a634c11e9e45"
        },
        "item": {
          "id": "3e91045c-d4f0-41d5-8a5a-dc119b5884a5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba7ea23c-3336-4f57-a551-d8c3a36330f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2ce652-40d9-4c16-8b41-994f67381cc1",
        "cursor": {
          "ref": "f714b67a-8c6d-4ec3-882b-17e1cfa8892f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "462013df-5929-4045-b658-80ea80fa6c7a"
        },
        "item": {
          "id": "ac2ce652-40d9-4c16-8b41-994f67381cc1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "13b2a428-f780-4d8d-b1d9-369b86632e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045459e5-6671-4dbe-ae4a-f7ed07392f2e",
        "cursor": {
          "ref": "8b8f9068-0b0f-4783-abf0-e00fd4bf1813",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "630e4875-79f7-415f-8d13-7cb8d2b8509a"
        },
        "item": {
          "id": "045459e5-6671-4dbe-ae4a-f7ed07392f2e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6eb5aaa7-1ca6-4935-bac7-e4203de2ab37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9228867-ac31-4772-bcf9-b4e7c576b31f",
        "cursor": {
          "ref": "e5f8ce6c-d74a-47f7-b373-e77c7c509dab",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9741ff30-83e4-4ac0-94f1-d32f7045c579"
        },
        "item": {
          "id": "a9228867-ac31-4772-bcf9-b4e7c576b31f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f7162062-3c5f-4231-90bc-0d92253cb4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4de2031-7f54-40ff-bc3c-dae4d14ba709",
        "cursor": {
          "ref": "2b00a81c-8964-4609-9f52-9796da43f6a6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a60ccdf1-a074-4620-951f-1b2cebf2c2d8"
        },
        "item": {
          "id": "d4de2031-7f54-40ff-bc3c-dae4d14ba709",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b58fb462-a72e-4d40-a654-c246e5ddd943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1a5f9221-b5de-4684-bd95-009ba9436421",
        "cursor": {
          "ref": "40008c79-52f6-4aac-a58e-22d8a992ad2e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "312fee4c-53b1-47e8-af71-99cbd47b3d23"
        },
        "item": {
          "id": "1a5f9221-b5de-4684-bd95-009ba9436421",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a9e56da9-434d-44a5-b7a9-b38164fdc00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6c322af8-7018-493e-8c32-fe5ba43aa0af",
        "cursor": {
          "ref": "fed30587-80a9-4cf9-9d90-f2901ca746f4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "529729b0-f9b2-4d71-af7a-1905ba39784d"
        },
        "item": {
          "id": "6c322af8-7018-493e-8c32-fe5ba43aa0af",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ac361e34-e0fb-44a1-be2e-2074f533efaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b376ddfd-5d61-45fc-8d3b-725d81cc8091",
        "cursor": {
          "ref": "fbb6267d-3ec9-413a-8106-691dd7016e64",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "684eeed6-4f1f-4d73-bdac-12fc186632de"
        },
        "item": {
          "id": "b376ddfd-5d61-45fc-8d3b-725d81cc8091",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e739348-0097-4432-938e-ff7bb71bea15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ca0aee6c-9d47-4644-8045-a661b8895132",
        "cursor": {
          "ref": "8a7fe8fc-a0c7-4f93-9466-a9db9518914f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "096ccfd0-24c4-4d00-beb7-69a51008cf61"
        },
        "item": {
          "id": "ca0aee6c-9d47-4644-8045-a661b8895132",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3645555b-d9ed-4ae9-8936-a222b48e6bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6ccb91f4-9a26-4b53-9112-897d54da49e9",
        "cursor": {
          "ref": "fc252970-84c5-4692-99d3-259dc8dc08d9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "083d838e-8196-428f-a1f6-e436e286c996"
        },
        "item": {
          "id": "6ccb91f4-9a26-4b53-9112-897d54da49e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "72510541-c975-4c8c-b9ec-71131415e093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bb46ce96-1f6c-45a3-96db-db3fd7b3006c",
        "cursor": {
          "ref": "d45e45b0-6976-4a39-afac-33f6298711fe",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "72acd5a0-d3e2-456c-8889-70f7b7f10901"
        },
        "item": {
          "id": "bb46ce96-1f6c-45a3-96db-db3fd7b3006c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "87d869b7-d37a-4b69-9adf-4c96f31aa008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8256399c-1a39-4746-9a56-28dc3384e7a1",
        "cursor": {
          "ref": "26611030-f41c-4ef4-8ebd-c129a41e08a0",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ab2734f3-f1ae-4c42-b0f0-e14632e7921d"
        },
        "item": {
          "id": "8256399c-1a39-4746-9a56-28dc3384e7a1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd57c13e-243a-4a13-a1dd-ddfee6452ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c878a38b-90c4-441d-991e-231d7c322595",
        "cursor": {
          "ref": "f2aa6769-32d6-4cd6-ba6d-a3154999f92b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "687dc67d-4c22-4f31-9a7c-7cc766dfa5b5"
        },
        "item": {
          "id": "c878a38b-90c4-441d-991e-231d7c322595",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "87b0c8e4-b46b-4340-9e48-85ec045051a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a47b22-e29a-48d5-8bba-460bce279728",
        "cursor": {
          "ref": "c8f4cdb7-f760-46cf-b232-2a9fc0cbe031",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4267bb9c-7e38-4014-8a8c-db03dc786963"
        },
        "item": {
          "id": "21a47b22-e29a-48d5-8bba-460bce279728",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "37afe152-f5bf-4e5b-ba36-ec7b69157c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3a332f-8dc0-4bba-a051-6575060ba768",
        "cursor": {
          "ref": "608dc1f0-46e8-4ef9-9916-6468dbeb56d1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b378fffe-c3aa-4738-9809-c1e8346b3ab0"
        },
        "item": {
          "id": "ba3a332f-8dc0-4bba-a051-6575060ba768",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "54285e66-2230-4bac-ac12-9c2fdbe0bcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6e5569-d243-4e31-b2e5-4708eeff81f4",
        "cursor": {
          "ref": "d31e7c2c-9a82-4d46-b62b-28e8f448e39c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "65c0159b-0c15-4889-8a72-8d80152a0d3b"
        },
        "item": {
          "id": "6e6e5569-d243-4e31-b2e5-4708eeff81f4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bed0fee0-0414-4bb6-a977-d25df7e4046c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1dea2d-52e3-4e3a-8ea6-5219f0bf69ee",
        "cursor": {
          "ref": "da15a097-2b8e-45d8-ba7f-e7d80f759dc1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3508cd1f-3fc5-42f3-800f-08776d3da123"
        },
        "item": {
          "id": "5a1dea2d-52e3-4e3a-8ea6-5219f0bf69ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a583b871-a392-4d67-b661-b961f537246a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bd4050-12a7-4491-b599-9931b605ff88",
        "cursor": {
          "ref": "24609bbf-5428-42f2-8e5d-97b9be0ae301",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d06eea23-a534-4b00-9cfb-62e500c047fb"
        },
        "item": {
          "id": "d0bd4050-12a7-4491-b599-9931b605ff88",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7285dc0d-b1f2-47d4-bb99-72be51d6b971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722dfff8-fff2-4687-9834-642a4400f5d7",
        "cursor": {
          "ref": "ecbc8903-b380-4fd0-8d01-80cf957881e7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ef8bed62-add3-4915-8081-76973f5abac8"
        },
        "item": {
          "id": "722dfff8-fff2-4687-9834-642a4400f5d7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f53a913a-7063-4bff-9587-d69250be257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1308788-8e48-4f44-bc56-3114ebcdf3eb",
        "cursor": {
          "ref": "c89e185e-56a6-453a-b79d-ce598a058967",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8a2890d2-791d-4f1d-8049-3009fbbd718b"
        },
        "item": {
          "id": "c1308788-8e48-4f44-bc56-3114ebcdf3eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a272334-517d-47fa-9e64-a6d67b953117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e2a3ab-9d73-4b50-ad70-4c0611370a14",
        "cursor": {
          "ref": "0d00a227-678f-4e9e-b421-47c8bfd080a8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "377c0396-61a4-4d74-8ca8-1cb2a16fb293"
        },
        "item": {
          "id": "c0e2a3ab-9d73-4b50-ad70-4c0611370a14",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e98170c0-4198-436a-92ac-3f8d2cc10df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54afbcce-312a-467a-9502-427c6c4ba152",
        "cursor": {
          "ref": "5442a6eb-be30-4500-bc99-d6b9e52314b8",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "98e40767-0166-4000-8193-e53e5a977a2c"
        },
        "item": {
          "id": "54afbcce-312a-467a-9502-427c6c4ba152",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "257d2458-dd25-4dcf-8a4d-5d9701cda6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc9ace2-adac-40de-9b3a-eee4edec3166",
        "cursor": {
          "ref": "e5eb11ea-429a-4cd9-9ca0-6a2c55f388af",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6592d57b-949d-4eaf-a827-2b64d52380a4"
        },
        "item": {
          "id": "2dc9ace2-adac-40de-9b3a-eee4edec3166",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3486ab51-5111-47d9-aaad-b0e6ad570315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cbd890-e679-478d-a3ef-91a47897e646",
        "cursor": {
          "ref": "91d2d4b9-4b17-4252-99cd-c73ef8eb8c52",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bd8af19a-f835-406b-99e3-518485778773"
        },
        "item": {
          "id": "68cbd890-e679-478d-a3ef-91a47897e646",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9d1c02ef-e6ba-4880-9fa3-46ae08686591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64055fe-0a0a-4afc-ba86-b848240f5647",
        "cursor": {
          "ref": "c2f477dd-fec5-4354-b718-3c0ccaf336b5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "35d11110-587a-4b46-8bbd-65e9a69b10b1"
        },
        "item": {
          "id": "b64055fe-0a0a-4afc-ba86-b848240f5647",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "248d2a6e-0db8-46ec-b8b5-f08df6828812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540639f1-74d8-4cad-bd37-9c44a260794c",
        "cursor": {
          "ref": "400d835c-3e59-4914-a571-16be8c8fd0c6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d670a029-d0b1-4024-a5b0-3a59ceb09714"
        },
        "item": {
          "id": "540639f1-74d8-4cad-bd37-9c44a260794c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eb75ee48-cbac-4faa-a9d1-54970a8ba10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0e947b-2acd-4f18-938f-7063010e86f4",
        "cursor": {
          "ref": "ce959bc2-25b4-4473-b488-2336d59be943",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4d6d3ba3-56ae-411a-88c6-a0bfedd24e48"
        },
        "item": {
          "id": "1f0e947b-2acd-4f18-938f-7063010e86f4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a47e7aab-8923-44e1-a54d-6e20c53b15e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cdbff5-0483-4d89-b138-cbfbb333897c",
        "cursor": {
          "ref": "9e7e553f-d305-4752-a578-10842491242d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f0c94e25-0589-49a8-a895-cad808341555"
        },
        "item": {
          "id": "b9cdbff5-0483-4d89-b138-cbfbb333897c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "333acb0c-c5e5-44af-8bbb-ee063abcbd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef21fe5-45ea-4e01-bcdb-85671f07cbaf",
        "cursor": {
          "ref": "ff979195-f0a8-477a-9ba4-47b0dc7f428f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "53b8d8fa-e5be-468d-87b5-b3b376c753ea"
        },
        "item": {
          "id": "4ef21fe5-45ea-4e01-bcdb-85671f07cbaf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bc6940d0-e5be-41c3-988f-0ef6757acba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e21cfbb-e37e-4552-a958-9dac91b565ad",
        "cursor": {
          "ref": "03db7b79-dee6-48ef-886e-99ef81a42e90",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ab3f11ed-61ab-4c02-983b-c46c4a1b3a54"
        },
        "item": {
          "id": "0e21cfbb-e37e-4552-a958-9dac91b565ad",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "04ef2240-416f-4864-bc26-5b194a5f3a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f952fa49-3dfa-4e04-bd77-4a0c0356cfd4",
        "cursor": {
          "ref": "73cb6105-e220-491f-b304-609823499d90",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f69009bd-147a-41a9-8ebc-3864ae10be92"
        },
        "item": {
          "id": "f952fa49-3dfa-4e04-bd77-4a0c0356cfd4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "50a11828-7f11-4325-b2f3-e7840812126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e01a9db-0430-4e30-823f-8b9419e7bf80",
        "cursor": {
          "ref": "4d9403ff-772a-4a9d-8c81-e70f70c1b974",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c7767d2b-e124-4150-a790-e917f8f09994"
        },
        "item": {
          "id": "1e01a9db-0430-4e30-823f-8b9419e7bf80",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9c5e2f16-c189-4cae-9a5b-dc49df16f2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15582d17-7ca8-4ca2-a9d0-70bc465133f9",
        "cursor": {
          "ref": "eb4b5ffe-226e-4cfe-a6ff-2bf5ecebb381",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a50da257-c89b-4d09-8adf-3389fd6b4fad"
        },
        "item": {
          "id": "15582d17-7ca8-4ca2-a9d0-70bc465133f9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fa134c00-ca3a-4fc2-be9e-334310614748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a241b8-84e1-4a0b-a5be-0d95e41d7002",
        "cursor": {
          "ref": "a0842222-433f-40cf-a60a-caa08026e4d8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1b27a4bc-9551-4ef8-9898-65e56e94cfc5"
        },
        "item": {
          "id": "75a241b8-84e1-4a0b-a5be-0d95e41d7002",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "631c1e44-5e83-4807-b8ab-2bd3fe6b35d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3027e7e7-6742-4787-acaa-807de524bb57",
        "cursor": {
          "ref": "20fde15a-8b16-437c-aae5-9a6b67e70fdc",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea887868-03fc-4888-8730-bd3feec4687d"
        },
        "item": {
          "id": "3027e7e7-6742-4787-acaa-807de524bb57",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f390630b-def9-4785-97bd-2f4fb999117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c5f8a2-2a4e-4cfb-ad52-eab4a40715e2",
        "cursor": {
          "ref": "13f626d0-5bc1-4f72-af08-70be5aaa511b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ff16f0e8-ea06-4677-b3a6-cd63852534fd"
        },
        "item": {
          "id": "92c5f8a2-2a4e-4cfb-ad52-eab4a40715e2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2b6ec9cb-90c5-4c74-bf67-3e9151edb942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58922cf-751c-437e-9c18-66b74af94948",
        "cursor": {
          "ref": "3048899a-0c3a-4fcf-87e4-7816b18383ee",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ed9e2c26-bf35-4a64-8ddb-c7931efe8ff9"
        },
        "item": {
          "id": "e58922cf-751c-437e-9c18-66b74af94948",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aae53e9a-a040-4ffc-80ca-5f8baf8e3606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e15d8c9-a9c1-47cd-b3b1-66bca3ee6580",
        "cursor": {
          "ref": "7d50c67c-6013-4fbd-9974-c9f5fa3a957d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "141da9c2-3a24-4ef3-9458-7e2c29066033"
        },
        "item": {
          "id": "6e15d8c9-a9c1-47cd-b3b1-66bca3ee6580",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "80dec4aa-d2fd-42e3-84e6-8468362aecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c01e42-fca0-47ee-83aa-ff17157fb05d",
        "cursor": {
          "ref": "b837c9e4-125b-47c2-ad3f-ffa17d56ea71",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ce86e1f0-c036-425f-9e71-48304d31e186"
        },
        "item": {
          "id": "f0c01e42-fca0-47ee-83aa-ff17157fb05d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "edbc00e9-201e-4e90-874b-5950478a23ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625d7f54-5d16-4cea-bafc-acac1db96049",
        "cursor": {
          "ref": "cd8061f7-2f8f-49fe-92f0-6bf8363f31c5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "463aef5d-c832-4be7-be24-1a549559c717"
        },
        "item": {
          "id": "625d7f54-5d16-4cea-bafc-acac1db96049",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "98ee6666-3dd1-4664-ba90-ffe0c0b0f4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e094ef9-d43f-4cbc-a01b-7d39c5849f09",
        "cursor": {
          "ref": "d926acab-d17a-4079-980d-581b7b5ab8c2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "82922626-78dd-4d5d-832a-c7900b5f0f4e"
        },
        "item": {
          "id": "6e094ef9-d43f-4cbc-a01b-7d39c5849f09",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "80649f03-e5e0-4987-9cdd-f7594bb20ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3b2c85-333a-40f3-9133-ac9349694320",
        "cursor": {
          "ref": "0fba2edb-bc67-4291-8203-640120550ee4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ff34a28d-99a4-4067-83b9-3a51eef73d9f"
        },
        "item": {
          "id": "ae3b2c85-333a-40f3-9133-ac9349694320",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d87e2789-f7cd-495e-a0be-01325a09fd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc35d4-34a1-4e7a-bde4-13f5c6e786ba",
        "cursor": {
          "ref": "bd2a6fcc-625a-4a28-9f55-6ab0159c7e6e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9f5d6cc7-b5c3-498d-a756-a8dbc6e06554"
        },
        "item": {
          "id": "f9bc35d4-34a1-4e7a-bde4-13f5c6e786ba",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "790d5428-1d3f-4a3f-81f0-261cdfd446db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad856ba8-c879-4a3e-a61a-000f4fe9fe1b",
        "cursor": {
          "ref": "4fbd3a0e-36e8-4bae-aada-0cfd79a8895a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a8ae3793-fa62-4c15-a19e-420b5d9fd716"
        },
        "item": {
          "id": "ad856ba8-c879-4a3e-a61a-000f4fe9fe1b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5cf52554-bc95-4b67-a237-c63aadd7821b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef55431c-870c-486e-838b-b39ed898307f",
        "cursor": {
          "ref": "e31e6f3a-bd2d-4f98-bfe1-7b812b4f5793",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "901732b9-7f2f-448d-83d3-2d3a19332a78"
        },
        "item": {
          "id": "ef55431c-870c-486e-838b-b39ed898307f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7bb7e612-f56e-4e8a-867a-0e6153629575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb381e68-c387-41b1-aad6-5633886cef3a",
        "cursor": {
          "ref": "28e212f9-13db-48e0-a714-4f0d90a2e811",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "170af360-6c19-4cea-b5d1-1999dfae12b1"
        },
        "item": {
          "id": "eb381e68-c387-41b1-aad6-5633886cef3a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bb24f5ac-70c4-4d8d-b598-2f7ff5ec9d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94243345-2b48-4f18-b188-36c232163d4e",
        "cursor": {
          "ref": "e558e107-79e4-42ca-812c-27d05d26e4bf",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b5677ab7-990d-4920-8bd3-411254cceb94"
        },
        "item": {
          "id": "94243345-2b48-4f18-b188-36c232163d4e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "694b6123-4500-4ba6-8afe-5656950c42cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ac29af-342a-4760-b29c-c08a5ea13614",
        "cursor": {
          "ref": "252abeb1-c219-4346-915d-ccef40f240aa",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6968bc87-0fc0-4dd3-ac1a-97bd51ebf52b"
        },
        "item": {
          "id": "d0ac29af-342a-4760-b29c-c08a5ea13614",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9f07fbc7-fada-4a79-bf59-93d7fa2c2b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a282621-4798-4363-9759-01ef42de3345",
        "cursor": {
          "ref": "0c6585f7-2b68-4842-90e8-f89d46daaaca",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2fa497c4-fdf9-49f8-9d57-7d8ced72ea80"
        },
        "item": {
          "id": "1a282621-4798-4363-9759-01ef42de3345",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "94a8cc33-c43b-41eb-8f28-6af551dbbaa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505ffbee-dfb6-41c1-803f-e29cea25579e",
        "cursor": {
          "ref": "31fe9e99-ccb5-4f0b-b11e-ced16baa53a0",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0519fda6-a912-458c-8525-9a4457d722e4"
        },
        "item": {
          "id": "505ffbee-dfb6-41c1-803f-e29cea25579e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fcf95f61-24c3-4376-b58e-ef90d7fb64d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d81bdc-8b32-4756-8cb3-90712e085680",
        "cursor": {
          "ref": "3d7e353b-fa43-41fb-a5f0-56fdee7e2d83",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b2eb8cbd-0dab-4cae-b7f1-da116221f56e"
        },
        "item": {
          "id": "e8d81bdc-8b32-4756-8cb3-90712e085680",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c1546a6d-654f-4617-b134-74a871aa5a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11239450-52c2-4881-8812-6b0472329124",
        "cursor": {
          "ref": "ff7c2566-db59-4710-bd3e-f45bc59db599",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1db0fbdc-044f-440b-8a46-0ad36f0004d7"
        },
        "item": {
          "id": "11239450-52c2-4881-8812-6b0472329124",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e82a1f72-c3b2-4b21-a1f7-12154b1ff55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b029905-f656-4c59-9743-acb11f3006db",
        "cursor": {
          "ref": "bc2c5882-8b66-432b-9411-117134e53953",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2675d193-f2ac-4b6f-a28f-b0dc74c3c034"
        },
        "item": {
          "id": "9b029905-f656-4c59-9743-acb11f3006db",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e3ade41-2bf1-447e-b0bd-77d1b236708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cea570-25d0-4eb6-ac81-91782e20f1f7",
        "cursor": {
          "ref": "9d2992ab-ac57-4039-bb1f-59c22e36ada8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2e33a56c-210a-4bf9-aee0-7d9c481bff6c"
        },
        "item": {
          "id": "80cea570-25d0-4eb6-ac81-91782e20f1f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ba86ec9a-e99d-4f38-b2fb-cda6917ced0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41bd06e-ea80-4e09-9390-02bc55640891",
        "cursor": {
          "ref": "90426c12-3886-4923-8de6-6d19502081c2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "48da034a-3d6a-465a-a179-a1f6500173b6"
        },
        "item": {
          "id": "d41bd06e-ea80-4e09-9390-02bc55640891",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d3a2c9c0-a03b-49d7-b9f4-73f837745356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043726d1-2eb2-45b3-9a45-b03b6484e9d6",
        "cursor": {
          "ref": "e8b7c153-ae62-4bfc-ad06-37b478c50c8a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6b1ef8f8-621e-4531-a62e-780d16674a77"
        },
        "item": {
          "id": "043726d1-2eb2-45b3-9a45-b03b6484e9d6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d1c25c91-6de7-495a-b5c8-a0f2eb2c965a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275844d5-07ea-4d00-baf2-8192da6d3a0f",
        "cursor": {
          "ref": "d144279a-568f-400f-bc16-b4660f3aabd5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d87711d1-edc7-48b0-93c0-6b09adef9ec8"
        },
        "item": {
          "id": "275844d5-07ea-4d00-baf2-8192da6d3a0f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7af279b1-ccf0-4f11-9ee7-6a6b9fcf2115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9735069f-c977-4e17-96ae-69ac916f4092",
        "cursor": {
          "ref": "a04a8c93-c9af-43d3-9172-3937cca3023d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6dae1618-42a4-4466-8268-7241f3b14a96"
        },
        "item": {
          "id": "9735069f-c977-4e17-96ae-69ac916f4092",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "84a0fa93-387e-40a2-a83b-67b190572e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a630c9-5c19-45b5-bb05-917a6fdcead5",
        "cursor": {
          "ref": "ac760f15-c8a4-43b0-bdb1-13f23142111e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ddccfae4-ac11-42d0-b5f8-b60dd0787ade"
        },
        "item": {
          "id": "25a630c9-5c19-45b5-bb05-917a6fdcead5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "73c2dc8f-e981-44ac-9223-5773b2998ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f24aa6-a552-484a-8ee0-1b9c41b34d9a",
        "cursor": {
          "ref": "eec5d20e-ba16-4597-97f4-f68078d35abb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "35c39860-b6c5-461d-84cf-ca026ca2978b"
        },
        "item": {
          "id": "50f24aa6-a552-484a-8ee0-1b9c41b34d9a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bef2c228-a173-4b44-b1b4-a3d726de7087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26e60d9-6c9c-4e71-a297-2e5829451993",
        "cursor": {
          "ref": "e4893ecd-0fa2-4c33-bb5f-ce832f73e232",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "50aac43a-dbe2-43da-884b-b03ccfd7ed25"
        },
        "item": {
          "id": "e26e60d9-6c9c-4e71-a297-2e5829451993",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "093bbf1a-daae-4efd-ae07-960b85e59cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc95bc7-faa2-4677-b26e-403af16ec058",
        "cursor": {
          "ref": "8eddfd4f-d87f-45f0-925d-80c750d99e1f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1e157c18-1d62-4f0e-8d93-4d0f2cbaa537"
        },
        "item": {
          "id": "fdc95bc7-faa2-4677-b26e-403af16ec058",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e1617405-04f2-4005-b7ed-68f03c9e3ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddd74b5-59fb-4af6-a1c8-6c990e0e3362",
        "cursor": {
          "ref": "2ce165f9-a503-4690-bc8c-ad0d889e9087",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "98d7035d-dcb3-4212-9fef-7a6304c1c15f"
        },
        "item": {
          "id": "eddd74b5-59fb-4af6-a1c8-6c990e0e3362",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8611bb8f-fe81-4497-bd73-dd815d9474e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bd3476-6b6a-4e18-836e-779d8eb438d4",
        "cursor": {
          "ref": "65219302-f946-4df0-885c-60692e0ae945",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "66c05def-5c85-4b0f-a803-a49381cf1259"
        },
        "item": {
          "id": "80bd3476-6b6a-4e18-836e-779d8eb438d4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e0628bae-c9c6-4aaa-a280-f905185521d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb0b265-be73-45d4-8a6f-01be4e1bb1c3",
        "cursor": {
          "ref": "384a01f5-a1f8-4497-967f-1ac0da74defb",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d11d57be-6427-452c-a2b8-ca6472023493"
        },
        "item": {
          "id": "2eb0b265-be73-45d4-8a6f-01be4e1bb1c3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fa6e5be8-2521-4b5b-a19e-81a294ce260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63ef713-1d8a-4371-b16f-133bc78d636e",
        "cursor": {
          "ref": "49660835-113b-407e-b79a-b60a0138b7d9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cdf2910a-46af-42a8-bc34-09d6ae8ac3a8"
        },
        "item": {
          "id": "f63ef713-1d8a-4371-b16f-133bc78d636e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c7457e03-9e39-45fe-b092-bbcb2a4e3ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde243b5-c16e-4a3a-a8d0-d9f87d67689f",
        "cursor": {
          "ref": "d52e80a8-281b-4e1e-8b82-f961150331d8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c0eb8f98-a5c1-454e-95f4-60cec5dec743"
        },
        "item": {
          "id": "fde243b5-c16e-4a3a-a8d0-d9f87d67689f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0f277338-ba35-44ff-8591-e0a221f6b26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252120de-c001-4b6a-9c70-ad0a2b955de4",
        "cursor": {
          "ref": "7480fc83-307c-4037-9066-fb972bfd8932",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2df09f4b-385e-49cd-95d7-3811fda00175"
        },
        "item": {
          "id": "252120de-c001-4b6a-9c70-ad0a2b955de4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7907765a-69ae-422c-96f7-fe41cb55268f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b24fae-a954-47be-8b84-37685bfa0d22",
        "cursor": {
          "ref": "3e604dbe-5e5a-415b-892f-a3bfca8b4ba9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ac27e0ec-d471-45e8-b913-e17b40cf84af"
        },
        "item": {
          "id": "f3b24fae-a954-47be-8b84-37685bfa0d22",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b3ea4773-e8f9-4c05-b3db-470b5bb932a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597a847f-4c17-4135-a383-8a0de7ebc92b",
        "cursor": {
          "ref": "d53289e3-b4ae-4428-b79a-1ffab5720d12",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "150d3deb-7aeb-4256-bc5a-19802b72d04d"
        },
        "item": {
          "id": "597a847f-4c17-4135-a383-8a0de7ebc92b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "416e9ef9-f78d-4de7-b5a5-f367eddc6c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c71a35-820a-4a89-9257-5ab75a2e9724",
        "cursor": {
          "ref": "9df0a19a-e13e-4997-b745-dda174b410f9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5da1ce84-f7e6-43e2-9e9f-f66999a07f04"
        },
        "item": {
          "id": "45c71a35-820a-4a89-9257-5ab75a2e9724",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "07638d5e-53da-431d-8d60-0cf0ba849489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85424699-f58e-4bff-8831-0b825c9b859a",
        "cursor": {
          "ref": "5683183e-e75f-4149-ab25-717f433a21d8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9f6ec928-06ff-444f-8164-cb0fa9877910"
        },
        "item": {
          "id": "85424699-f58e-4bff-8831-0b825c9b859a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "12c766da-e660-482d-874a-b7144c0355d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deff45f1-2659-4120-9df3-511a06697f8e",
        "cursor": {
          "ref": "75342427-84f4-421d-9366-c1497a2afe07",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b14024d2-8010-4874-bd5e-81fa36622019"
        },
        "item": {
          "id": "deff45f1-2659-4120-9df3-511a06697f8e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e5f9effa-3b29-4437-a9a6-ae9a8a479161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84a2443-7fe4-4929-ab95-7d4535b188a3",
        "cursor": {
          "ref": "d7e5fa2d-8873-414d-89f8-d4686c081959",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d8b42739-659d-4ab2-92dd-9f8b02dddad6"
        },
        "item": {
          "id": "c84a2443-7fe4-4929-ab95-7d4535b188a3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d18bb55-353e-467a-8adf-1f70a3e12f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4662f1-e165-4fed-adfe-f520ba267900",
        "cursor": {
          "ref": "c2b754ae-e9f6-4c45-a6fe-279bfd7fa078",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "87c4b3a6-ce51-4b20-8674-9d4a17c73634"
        },
        "item": {
          "id": "cd4662f1-e165-4fed-adfe-f520ba267900",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "04f22343-4e2a-401b-b6b4-87426266217d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e307c271-35fe-473c-ad0f-c2a7abd4403f",
        "cursor": {
          "ref": "cfbb26e0-eee5-4f63-8a5a-f0896eaefabe",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "55b68477-544b-4a42-87da-8a0b8d0ef48d"
        },
        "item": {
          "id": "e307c271-35fe-473c-ad0f-c2a7abd4403f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d2401b3-b396-4277-ac42-0106caed8100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b45399-5c77-431b-8766-5ad2deac742a",
        "cursor": {
          "ref": "86d4c0ce-39e9-4d32-a11c-10663f33891b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2d4ff47b-b453-4273-bd37-2b5a368d151e"
        },
        "item": {
          "id": "90b45399-5c77-431b-8766-5ad2deac742a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8d933cea-d7e6-40b5-8b3b-b336834fa48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2332a97a-9750-4308-873d-655b42fc1c2a",
        "cursor": {
          "ref": "5fbd4479-87d9-43a8-9f92-c873fd638d09",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "62c3f663-3e95-4ffd-8ec7-54d63566363b"
        },
        "item": {
          "id": "2332a97a-9750-4308-873d-655b42fc1c2a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "04e5478a-5b06-4b3a-b9da-30e8054fdc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15b1587-02e4-4537-a13c-f6e846e83eb7",
        "cursor": {
          "ref": "f8a76953-e7b5-4157-95b8-9c8848f91384",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8c35a551-52c1-4665-bd9c-ca9e306e5983"
        },
        "item": {
          "id": "e15b1587-02e4-4537-a13c-f6e846e83eb7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bcadb6e9-9407-458c-9ea6-6d48e5c412ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb324d4-90eb-4974-a4bc-856234ec81b6",
        "cursor": {
          "ref": "0659a5dc-8f9a-4d18-99bb-37a0c81f6373",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6d2e9620-e04b-477f-bad0-34e43f736db2"
        },
        "item": {
          "id": "dcb324d4-90eb-4974-a4bc-856234ec81b6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f5ffe58f-a5d8-4eb1-921f-919bdb4b2525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b273fa10-a3c6-4060-ba3f-45a6de323dbc",
        "cursor": {
          "ref": "b1dd9598-24db-4e14-a853-c09b3df68550",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0aa8607c-510f-4a74-9275-a278d5129e09"
        },
        "item": {
          "id": "b273fa10-a3c6-4060-ba3f-45a6de323dbc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "21ba9f85-e91a-4b69-ac2b-71510db0ea86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab681de-f8f6-4f5e-9d7a-5f93163c122a",
        "cursor": {
          "ref": "a67d4fd3-36d6-4fca-89cc-4c4780931a2a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5995e723-c7db-4270-91b2-0f181db5b89e"
        },
        "item": {
          "id": "9ab681de-f8f6-4f5e-9d7a-5f93163c122a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5be3e120-a8ec-4679-b550-2fb8484e7cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d81914-9df2-4036-a9b9-b1b9d8e65164",
        "cursor": {
          "ref": "5e17e683-b24d-4bab-b0bb-f77eb3af20b5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7ebe74ca-0577-4f42-adba-1d7fc589ac3b"
        },
        "item": {
          "id": "39d81914-9df2-4036-a9b9-b1b9d8e65164",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "45891ebb-2767-4bda-bf57-aba601256eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7747f213-f7d8-4d32-ab43-b72de460c973",
        "cursor": {
          "ref": "95cd6d0c-1a38-454e-a741-8f4d13455f09",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a50f0651-93a4-4dae-a10c-eeb5eaf8907b"
        },
        "item": {
          "id": "7747f213-f7d8-4d32-ab43-b72de460c973",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "efd19359-85ea-41a6-9c4a-b68547c81334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f11fa28-252a-43f3-80ea-e4db27e5047d",
        "cursor": {
          "ref": "4cdd914e-3bbe-4296-99dd-3cdd79e11e6e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7a1fe33-9f2a-4843-9709-7a81a9826598"
        },
        "item": {
          "id": "0f11fa28-252a-43f3-80ea-e4db27e5047d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9b413003-43b3-4e00-b0bd-0ec99e630470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f540a6-ee13-4fc4-8fb7-ca114aa9c027",
        "cursor": {
          "ref": "921ee15a-9950-4770-b960-8c1347aa4c1b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "26ea29d0-51ea-4e14-aca5-322e9d486cc6"
        },
        "item": {
          "id": "b0f540a6-ee13-4fc4-8fb7-ca114aa9c027",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7b1c408f-0933-4e9b-a457-3dbb0964dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcb2acf-6e62-4697-95e0-f0ac33476227",
        "cursor": {
          "ref": "71b5431e-737a-4634-9340-0e68417da0d2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e7bcd798-2556-438c-9863-40f7dab8198c"
        },
        "item": {
          "id": "7bcb2acf-6e62-4697-95e0-f0ac33476227",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b39a3668-bc0b-4733-99fb-9558ab8345c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b3e716-a505-48d0-99f0-11b364359937",
        "cursor": {
          "ref": "5f988ffd-2132-49e8-b928-b7bae9eab585",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "facb256d-3236-4ed3-85ee-cc6807081ff7"
        },
        "item": {
          "id": "60b3e716-a505-48d0-99f0-11b364359937",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ef7e99ac-a493-4fce-9d74-8333b48d0913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fac4bd-c016-4eda-bbf3-3a40957ca478",
        "cursor": {
          "ref": "f2d1cd84-c12a-4321-b495-183c2d063aa1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0cfda053-9e9d-4435-bfa4-9acccca4ef85"
        },
        "item": {
          "id": "05fac4bd-c016-4eda-bbf3-3a40957ca478",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a1673499-6080-48bb-b7fa-3f3d83ba7c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4d709e-090e-4fff-b939-5bf1441deafc",
        "cursor": {
          "ref": "4cbf4199-3d7f-4b54-80c7-30bbe81cdebb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8f497c31-3e39-4722-a952-8072e00f7d38"
        },
        "item": {
          "id": "4b4d709e-090e-4fff-b939-5bf1441deafc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5af7a560-e9f9-4e2c-b42a-a624aa16cce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ada3a60-ddd3-4c5e-8ec1-ed8b21c49def",
        "cursor": {
          "ref": "8fa3eabd-df5b-432e-a79b-c336b4686e8a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ad5a44ae-24a7-421d-9a9e-f2793b6c8bb8"
        },
        "item": {
          "id": "5ada3a60-ddd3-4c5e-8ec1-ed8b21c49def",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "85345ebb-8a3f-48ab-9c7b-e75bdf09a0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7903dba3-250d-4008-a20f-cfeb9686b62a",
        "cursor": {
          "ref": "b91a1be3-a0d7-46a2-8db2-cf593d437733",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7f959831-90f5-4936-8291-91a824155fb8"
        },
        "item": {
          "id": "7903dba3-250d-4008-a20f-cfeb9686b62a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1d96e912-0842-4a79-8f60-191b42a04eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002bdb57-ffbf-48b8-a56d-dd4e0f07c0dc",
        "cursor": {
          "ref": "d1545450-49d7-4e2d-84b4-e7a69ab487cd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "059cfa66-02ea-4a2c-8826-09fc32c92281"
        },
        "item": {
          "id": "002bdb57-ffbf-48b8-a56d-dd4e0f07c0dc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6ca83ecd-c73e-4b82-b4ba-3dda50748981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9224bd31-675e-4505-8a3a-bb8626d5b203",
        "cursor": {
          "ref": "76f524a9-84db-46fb-9796-08084babb273",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7f07fc4b-7eba-402e-85f3-f8768c87e9c8"
        },
        "item": {
          "id": "9224bd31-675e-4505-8a3a-bb8626d5b203",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d3624048-80ac-4b87-afc9-eba359548038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c7ff7c-c131-42ca-a1d8-e58fe212c067",
        "cursor": {
          "ref": "a79a6f80-828b-49fd-a0f1-3dbf27aed313",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8b429810-fe12-4c1a-a4ff-29c40fcbdd57"
        },
        "item": {
          "id": "17c7ff7c-c131-42ca-a1d8-e58fe212c067",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5b80add8-7410-4c37-a073-18081dfa8512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f36d676-c315-4a17-bd77-b15803dc7506",
        "cursor": {
          "ref": "fa584d1f-5b2f-4696-b19b-9c913a076bb8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f982ca91-0223-4be6-9b9c-aa8d6dd64e80"
        },
        "item": {
          "id": "0f36d676-c315-4a17-bd77-b15803dc7506",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ab685e10-4f89-4e9d-8565-6f50c3b66597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1450e60-c67c-4e81-b3f0-cc7d0abdc727",
        "cursor": {
          "ref": "2025e2ad-ea28-4446-a517-ba69963d698b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9abbe57e-0387-4de3-b111-02899917e15c"
        },
        "item": {
          "id": "a1450e60-c67c-4e81-b3f0-cc7d0abdc727",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "68816ab9-478c-466a-86b3-009e70936cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ccb4c3-808f-4787-b070-72195fc83ca5",
        "cursor": {
          "ref": "c4d8ad74-782a-4aeb-bfa3-c79aa4b04e99",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cf2fe73e-1eec-4291-b43e-f622969f99a4"
        },
        "item": {
          "id": "22ccb4c3-808f-4787-b070-72195fc83ca5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a6349789-1ff2-4f8c-be93-02c89b336f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7569e8b-684b-4150-adf1-7b20105e244d",
        "cursor": {
          "ref": "a008e73c-f8f2-40eb-a18a-b623951daebd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f686c1a9-5c17-40d1-9257-2cc5bdc6a501"
        },
        "item": {
          "id": "b7569e8b-684b-4150-adf1-7b20105e244d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5c00f706-495a-43bd-86b7-2b950d3bb7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d28eab-5368-4787-8984-c20cfaa534a4",
        "cursor": {
          "ref": "9ca54455-0915-4d33-b8af-9bbd49734211",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "42cca7ae-cc5c-42a7-ab2a-816af77db687"
        },
        "item": {
          "id": "33d28eab-5368-4787-8984-c20cfaa534a4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ae391f8a-603c-4ba5-9c44-d5d289362f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f41fac-d4f8-4d8b-9b20-51a9fb982463",
        "cursor": {
          "ref": "1eb6d0a6-549b-4d8c-b176-c0f8ab2daa56",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0da4141f-580a-4309-9f9a-d56cbf13929f"
        },
        "item": {
          "id": "32f41fac-d4f8-4d8b-9b20-51a9fb982463",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d4fbc60a-ef21-4592-b2a7-689dcce02c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e581db30-127e-4d3c-b367-afb44cf2ef81",
        "cursor": {
          "ref": "8e9d4835-1e97-4b55-b608-9c18120c031a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ce94bebe-a33e-40e5-98d1-b468d85ea815"
        },
        "item": {
          "id": "e581db30-127e-4d3c-b367-afb44cf2ef81",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1ab7bdbf-902f-47b6-9615-7cf60a92aa2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be331609-991a-492a-a623-c1d6471e06de",
        "cursor": {
          "ref": "df3043ed-ff51-4699-8ed9-a931493556f1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2d1855fc-5fd3-4ddd-8bca-757dbe272725"
        },
        "item": {
          "id": "be331609-991a-492a-a623-c1d6471e06de",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab768ae8-404f-4c2d-8438-8ecd655fccc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab059f47-ec3c-48a7-8541-055c0acaa98d",
        "cursor": {
          "ref": "80e69b5c-e529-452b-9613-79315308adc7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0dc9c3b8-2ad4-435e-aa21-41a65d3b464d"
        },
        "item": {
          "id": "ab059f47-ec3c-48a7-8541-055c0acaa98d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7319905f-689b-4cca-b790-7d7ff698409b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e26827e-f134-4b63-bfb2-dbe5ac765be9",
        "cursor": {
          "ref": "d58fc5dc-560e-452d-bd85-7f4630c8d4a5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dca582ed-c3df-4408-840f-a1f6342059e4"
        },
        "item": {
          "id": "7e26827e-f134-4b63-bfb2-dbe5ac765be9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ac39a330-268b-410a-bbf6-13a941e53dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2214c72-32e0-4cf6-9bc8-c1551c8422a7",
        "cursor": {
          "ref": "048c9709-230f-4034-9b98-314552537265",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a949bab8-927a-4ac7-8f4d-aa6fb4cbb62c"
        },
        "item": {
          "id": "a2214c72-32e0-4cf6-9bc8-c1551c8422a7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ec705870-f65f-4c3c-ae21-3b88a394e2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48edff0-de64-41fa-b27b-c32859dbf756",
        "cursor": {
          "ref": "48ecfc01-54df-43b0-8358-c8aaa4659d9a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e7ac48f3-cbd6-474a-a480-4db2493ac3cf"
        },
        "item": {
          "id": "f48edff0-de64-41fa-b27b-c32859dbf756",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "263c8b48-07d4-441f-a9bc-a566a160d049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae99c34-f7bb-4e51-8232-60d598a1dc9e",
        "cursor": {
          "ref": "6471f670-f4bc-4c2b-a977-0a109b33d4e2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5f2b63ed-3413-40f8-b93c-24db1dafdd19"
        },
        "item": {
          "id": "aae99c34-f7bb-4e51-8232-60d598a1dc9e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4b32385c-0f94-4582-84a3-cc7f04c0b3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50567b6-944d-4ec7-adbb-d620846a64b5",
        "cursor": {
          "ref": "052d33a8-82ca-43cd-ab61-447fdcea47ea",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "48e74055-45ac-4d9b-b392-f013bdaddb59"
        },
        "item": {
          "id": "c50567b6-944d-4ec7-adbb-d620846a64b5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "392e0a91-1a49-49f8-99c8-6b122be9bcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c526e266-c6db-48d3-a522-426cf34cae77",
        "cursor": {
          "ref": "f8f273d7-17fd-4c06-ab50-e944d07cdac8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e090b528-518d-4eb9-809f-707e890852f1"
        },
        "item": {
          "id": "c526e266-c6db-48d3-a522-426cf34cae77",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b59b61fc-ee22-4800-86f5-816704f9c355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd144c1a-f59b-4bc4-ace5-359c59205b59",
        "cursor": {
          "ref": "eac6d352-3af4-4e4b-a13c-386e82fbb5f7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "624111c9-5313-48c1-ae1f-8a91e37d8de3"
        },
        "item": {
          "id": "cd144c1a-f59b-4bc4-ace5-359c59205b59",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb1e1c4e-d63a-4658-8825-6235cc5932fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a0e314-660c-4f60-b6cf-cf9f6c87704f",
        "cursor": {
          "ref": "8a5c9263-0538-4ac3-b31f-bce7545a7a00",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e7a4d6e5-a1c2-4060-a999-0d14bc64d495"
        },
        "item": {
          "id": "41a0e314-660c-4f60-b6cf-cf9f6c87704f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "17c33f21-da74-429e-9d5e-1da288815acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7119e281-fcb0-403a-8dc3-41cca5cec5be",
        "cursor": {
          "ref": "b10a5bae-fd25-4074-ad64-17d8c3168648",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6614524c-3a95-4f20-8ccc-3b2c2d9565b2"
        },
        "item": {
          "id": "7119e281-fcb0-403a-8dc3-41cca5cec5be",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f78edc4e-2c88-4126-8c3b-a6de662977a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a42a71-289d-42e2-a7ac-0baa2d74fbe8",
        "cursor": {
          "ref": "8aad8d5d-ed06-43ad-a9d1-4f4a798ae417",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "27e69e6d-4f12-4a9d-9e2c-549311317a47"
        },
        "item": {
          "id": "77a42a71-289d-42e2-a7ac-0baa2d74fbe8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "56647e1a-2632-4e56-83d9-890fbb003131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484a8089-ada8-420a-8480-1d1fdeeb2df4",
        "cursor": {
          "ref": "9c76a7f0-1075-4e14-8398-a0fd9f0f1031",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3c7a606f-73af-400c-81b8-7d0aec1de4d2"
        },
        "item": {
          "id": "484a8089-ada8-420a-8480-1d1fdeeb2df4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49ab2194-b842-483d-817f-2b608e2c1d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c7fbfa-8ac2-4239-84a6-a050dd17f72a",
        "cursor": {
          "ref": "32a921e6-5795-4582-bdbd-1610ec119906",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e51c93f0-3772-4326-be4d-25ff073e02bc"
        },
        "item": {
          "id": "95c7fbfa-8ac2-4239-84a6-a050dd17f72a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "42b9a2bc-3cbe-4229-b86a-11108cfa7bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14c8e2c-fecf-4f2e-a839-385b04f1f75d",
        "cursor": {
          "ref": "f3f2537b-bc4e-4f3c-83ca-138c0344dabd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "34c8279a-20d1-4de8-9988-e03d7e9dedcb"
        },
        "item": {
          "id": "a14c8e2c-fecf-4f2e-a839-385b04f1f75d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "be866714-13f6-4213-98e5-11d1ba3ee6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14218da5-53bd-488e-9a0b-7376cf420589",
        "cursor": {
          "ref": "e0464e80-0e12-4ea6-8072-2e73bd775f17",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fb7b943d-42f7-4b08-911c-e3792053fb4f"
        },
        "item": {
          "id": "14218da5-53bd-488e-9a0b-7376cf420589",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b363aed8-d8fb-45b7-b387-4ca43cabca0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d52520-4f0a-4337-bd56-634eddab146a",
        "cursor": {
          "ref": "667d453e-5d84-450f-857f-6ae5f969984a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "80b4fecd-8bcd-4918-bf15-d500870ab162"
        },
        "item": {
          "id": "08d52520-4f0a-4337-bd56-634eddab146a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "43a1a57c-cf2a-4b18-ad0f-925fe6074c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71ce037-e688-475e-989b-204668e8a59f",
        "cursor": {
          "ref": "a672a0b4-2d6c-471c-b195-ae5f0940c62a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "950410fa-f136-44b7-a35b-8b714d6315af"
        },
        "item": {
          "id": "c71ce037-e688-475e-989b-204668e8a59f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3bfdcf1e-d9a4-4395-b5e0-f8ba30430ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091ee5a6-32cc-44f0-ac6a-6b4a46f53c60",
        "cursor": {
          "ref": "3022149e-bb76-4951-89be-46d2319a5762",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2be71b42-5337-47cd-9fa4-b8cd383a4e1e"
        },
        "item": {
          "id": "091ee5a6-32cc-44f0-ac6a-6b4a46f53c60",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d945f843-1114-44f5-bee0-72aedda2cc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f430033-9f7e-4ee9-bbe4-9c06201870e0",
        "cursor": {
          "ref": "0b2139a6-5960-4faa-ba30-d7ca9f6b4c5f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d5e0853b-31a5-4333-be76-9cd2cc072634"
        },
        "item": {
          "id": "3f430033-9f7e-4ee9-bbe4-9c06201870e0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "603f2f90-1172-452d-b05f-e4e9767f8540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d749459e-3eb9-429b-83ca-02f8f7ebd619",
        "cursor": {
          "ref": "13bcc89c-e542-472d-9569-88f47fffb564",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dfdf8381-1e5b-43d4-bff0-ccff25646925"
        },
        "item": {
          "id": "d749459e-3eb9-429b-83ca-02f8f7ebd619",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7629c7fe-6e36-4d25-99c1-e9b60e9d4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b9ab14-5ad8-44e7-b7da-0dc857dc348c",
        "cursor": {
          "ref": "b964c735-9bed-457b-a308-1e5b320da362",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f0ea31a1-580d-46af-9643-3463b37b16ec"
        },
        "item": {
          "id": "a9b9ab14-5ad8-44e7-b7da-0dc857dc348c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1dc21f50-e181-4940-a5cd-79eeffca0944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526d4941-559c-45fa-9e61-3d3c58930b22",
        "cursor": {
          "ref": "78e49c75-e760-4ed5-9530-58704aa53554",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1b7c3545-f488-41d0-9163-b4833a0d9eb9"
        },
        "item": {
          "id": "526d4941-559c-45fa-9e61-3d3c58930b22",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c7b6763-5410-47ad-a488-800f98ccd247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fac317-df50-465a-bafb-fa43513a9602",
        "cursor": {
          "ref": "5b2c24b1-e903-49e2-aa67-7de22aea3cfa",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f3ed44ab-dcbf-45fb-a5ae-7ac41c926d9a"
        },
        "item": {
          "id": "b2fac317-df50-465a-bafb-fa43513a9602",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9a15b619-d39b-4d03-90b8-bcbdc7bd25a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81c1379-cded-4e0d-920c-a1eabd5fd6ce",
        "cursor": {
          "ref": "e84e3444-466f-4243-a915-c4a1983fe9b3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b61c337e-d0ec-4a9f-82fb-e826a58d740b"
        },
        "item": {
          "id": "b81c1379-cded-4e0d-920c-a1eabd5fd6ce",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b72294e3-70b8-4f12-a2fc-f994bdc85138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf57e56-cfc9-4118-a92f-65be248d2938",
        "cursor": {
          "ref": "9d9e425e-ea92-435f-adb3-6728b515c089",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "06f12075-cea1-469b-b967-bdfe0ffa19c9"
        },
        "item": {
          "id": "4bf57e56-cfc9-4118-a92f-65be248d2938",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "059ab5bc-9d4a-4389-b9ae-2f4b3a1abec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f413f6e7-0e0c-475f-9580-1321d7771a9e",
        "cursor": {
          "ref": "4250c7fd-36b7-4eec-afd2-93245f2ea6ce",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b911d85a-96d1-41b0-b87e-8d99ed97461e"
        },
        "item": {
          "id": "f413f6e7-0e0c-475f-9580-1321d7771a9e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "27393e70-b565-4e57-a0e1-cef324fccc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0f07f-f626-41e0-8eb0-b1881fa92250",
        "cursor": {
          "ref": "8ad8930b-ccdc-4b8d-88fb-c144d1de4a25",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c8c6bd2b-4da2-4d72-b7dd-69bb71231a74"
        },
        "item": {
          "id": "a5a0f07f-f626-41e0-8eb0-b1881fa92250",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ba6dfe01-f00e-4d81-b9f1-d0d325fe2dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e5053d-6313-4be2-be5f-73b29fdcac09",
        "cursor": {
          "ref": "40b31a63-fdb8-453e-b1ab-fd13ef0b2888",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a18962ee-f947-4aca-9b48-dbe538442354"
        },
        "item": {
          "id": "72e5053d-6313-4be2-be5f-73b29fdcac09",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f00704b2-8963-4e49-8909-f449413d072e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66c786f-53ae-48e2-8e78-5e49e02b3396",
        "cursor": {
          "ref": "874696d5-b4ea-4371-a0e5-036d838dc3cf",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1d77e14-f98f-4646-8bb4-0931d19d35eb"
        },
        "item": {
          "id": "d66c786f-53ae-48e2-8e78-5e49e02b3396",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "90e317dc-f016-4537-bc26-b7e031854dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4298c75-4fcf-4cf0-ab6d-61a77991db4d",
        "cursor": {
          "ref": "2a7ec3d3-3e25-4e7c-ae60-0931c7c64764",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0caabc0c-ba24-465c-a8cb-e653682eae83"
        },
        "item": {
          "id": "a4298c75-4fcf-4cf0-ab6d-61a77991db4d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "69cc7e45-56cf-43da-a403-68774a542191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0024fab9-fce7-471c-a7ab-367d7564bfad",
        "cursor": {
          "ref": "9c5ee90a-e548-4f34-890a-318f1d63f9e4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e41aa1a3-370f-4e7a-a3bf-55ad74f84b93"
        },
        "item": {
          "id": "0024fab9-fce7-471c-a7ab-367d7564bfad",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8b60ae6b-476d-4084-bfbe-6760fe4e0034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d492fa-3ca6-40e9-aaea-6a7638fb5ff2",
        "cursor": {
          "ref": "b2149a95-af17-42e3-ac2c-6d76dec66982",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e194b1ce-44d4-49f3-90b7-7a7f965b0f20"
        },
        "item": {
          "id": "e8d492fa-3ca6-40e9-aaea-6a7638fb5ff2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "79633bec-75db-4ec1-8f5f-d7516c311291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c6de1b-80e7-42c6-a76e-bdba2a99ad3b",
        "cursor": {
          "ref": "a346eacc-7a00-4276-a9e2-881c3f8ae062",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3f713036-15d5-4962-8162-87b8a507a779"
        },
        "item": {
          "id": "d5c6de1b-80e7-42c6-a76e-bdba2a99ad3b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2a0aacb5-344a-428f-b0e4-a3b3732f00dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2f4b35-bb2e-46c3-8b1c-4562ba3787db",
        "cursor": {
          "ref": "3940c317-a810-4e63-9892-85f85151bd32",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "15a2bdb5-3f91-44b7-b85b-9df8def5fd49"
        },
        "item": {
          "id": "3b2f4b35-bb2e-46c3-8b1c-4562ba3787db",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d178cbc6-4080-412a-a038-f67997f3d2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f783adb-d6e8-4b14-927a-f69969d6185b",
        "cursor": {
          "ref": "41624a3d-6ed9-4c63-a8d4-d3af795c3402",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "426141fc-2491-4751-840b-e34abb94954d"
        },
        "item": {
          "id": "7f783adb-d6e8-4b14-927a-f69969d6185b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "69a17506-4613-4734-ae7b-4b06483e2dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec37281-8143-440d-a5e9-b55dfa1cb861",
        "cursor": {
          "ref": "6008737a-9367-4eef-88e4-481b76d59b95",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "93f708a1-61c9-45b5-8251-b1ba5b982cfa"
        },
        "item": {
          "id": "1ec37281-8143-440d-a5e9-b55dfa1cb861",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8e7b80a0-e48c-4ad1-a1f3-a52e288a543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d58a6d-809e-43ac-9dd3-92ba610c0688",
        "cursor": {
          "ref": "0c6ae69c-6c2d-4851-b806-2949dba28d09",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "11483e36-a72b-4b10-81f9-b7a485ef7c78"
        },
        "item": {
          "id": "62d58a6d-809e-43ac-9dd3-92ba610c0688",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0857226a-63d6-4e8f-94c7-b459597f72ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90a3d4-5a2a-4b6d-a5f9-f4f3e4d0eaa1",
        "cursor": {
          "ref": "681d914b-85e0-4047-a341-b1a765174fa3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "16b97b9c-0bb2-4a01-873e-f3e8db066118"
        },
        "item": {
          "id": "ee90a3d4-5a2a-4b6d-a5f9-f4f3e4d0eaa1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f7cc00f6-4409-4339-8e0c-d0d2c5f13923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8479bd13-34c0-46fb-9af2-3bee7af288d2",
        "cursor": {
          "ref": "19e8626d-ebef-47cb-bdfa-7c248a931a42",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "de81370c-795f-4b56-96ac-9413605b12ad"
        },
        "item": {
          "id": "8479bd13-34c0-46fb-9af2-3bee7af288d2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0ee47892-40be-4fcf-bfa8-f0a1830b5e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e3e871-bf03-4a1a-a1fa-28af84b332b0",
        "cursor": {
          "ref": "2f5e7e0a-e357-420d-b80d-8d3f8440fd08",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ccc0c2d2-203e-4b79-8921-1b9e4e059310"
        },
        "item": {
          "id": "b8e3e871-bf03-4a1a-a1fa-28af84b332b0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e93dbd21-91a3-433d-a2dc-490aec0bc715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527b276a-63b0-42d8-b810-732c1011df23",
        "cursor": {
          "ref": "8da2df9c-2b5c-4178-84d0-6d48309bb452",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9531c277-9727-4c1d-85c2-00e2411bdce9"
        },
        "item": {
          "id": "527b276a-63b0-42d8-b810-732c1011df23",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4e2c717c-59b9-4df0-b278-dab668d1f37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf833aa5-8c4a-4950-9eec-4be475c8b32e",
        "cursor": {
          "ref": "b34f20c0-0ad4-490b-a7bf-ee1b07e98406",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "18b77441-adb5-4bf4-a6de-2fe47f0cd26c"
        },
        "item": {
          "id": "bf833aa5-8c4a-4950-9eec-4be475c8b32e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5e4d38bb-cd01-4e71-a216-907c1150ec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bd9a94-2bfa-418d-8240-265d156d0ec4",
        "cursor": {
          "ref": "dfadc305-1fb1-4f33-992a-4353c4d424cd",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f3ce5697-96a7-4634-86be-0e33ea9f1c8e"
        },
        "item": {
          "id": "06bd9a94-2bfa-418d-8240-265d156d0ec4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c25b8800-61ca-466a-b627-651628d8cc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3693c11-9a82-4dc4-bbb7-91f89ad6a348",
        "cursor": {
          "ref": "46722ec9-9d10-49bb-bf10-2abbde0f70fd",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6ac899a2-ab76-44eb-b059-05e110ad8f52"
        },
        "item": {
          "id": "b3693c11-9a82-4dc4-bbb7-91f89ad6a348",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0f61ef6c-534c-44bb-9008-fca7c0422878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88c5a4c-9efa-4722-b5be-00ac337bf6ee",
        "cursor": {
          "ref": "6fbe63ba-d6dd-40b8-958a-4f975570bd30",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c3a91381-6621-4cd5-8bb9-7a17271494b1"
        },
        "item": {
          "id": "b88c5a4c-9efa-4722-b5be-00ac337bf6ee",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e29e5b4a-6b56-469b-a133-95883c696c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "8c43518d-67d6-457b-9a42-2a9b8a9c9851",
        "cursor": {
          "ref": "fbfe6e91-6d00-40a4-887f-e6aa3de8c5e5",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c219b977-ea4d-4d29-9c3d-bac0f593050d"
        },
        "item": {
          "id": "8c43518d-67d6-457b-9a42-2a9b8a9c9851",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0c92c33f-87a8-4adf-aba0-5c30642c10d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f1d7e267-0b04-48f6-a995-b76edeb32fc7",
        "cursor": {
          "ref": "7bf0e276-286a-42cc-beec-7e0fea9d5682",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "995b48a1-e108-412d-a86a-7f7c3076daa7"
        },
        "item": {
          "id": "f1d7e267-0b04-48f6-a995-b76edeb32fc7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8982a84b-9c14-40b6-95d2-8667c5520000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "63e891ea-d364-40b7-adf8-0adf366cbfab",
        "cursor": {
          "ref": "bc1d7398-5cc1-41f0-9b7b-dd3ca916d9ff",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8a2c726f-6fab-44f7-8cc5-d6b31f85c270"
        },
        "item": {
          "id": "63e891ea-d364-40b7-adf8-0adf366cbfab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "99f8088f-48d1-4e2c-8130-a2088c1e4b74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e891ea-d364-40b7-adf8-0adf366cbfab",
        "cursor": {
          "ref": "bc1d7398-5cc1-41f0-9b7b-dd3ca916d9ff",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8a2c726f-6fab-44f7-8cc5-d6b31f85c270"
        },
        "item": {
          "id": "63e891ea-d364-40b7-adf8-0adf366cbfab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "99f8088f-48d1-4e2c-8130-a2088c1e4b74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf6a2d2-31d6-4e32-9287-3100e8c87588",
        "cursor": {
          "ref": "041fb1cb-404a-4852-8d85-9c65ef0c2599",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e3621c9c-1825-48dc-95b7-1867364b5c30"
        },
        "item": {
          "id": "edf6a2d2-31d6-4e32-9287-3100e8c87588",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b7985aa9-475c-4d84-a673-2ae9ccf542fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa0f0e4-4520-47d7-a908-dc5253eed49d",
        "cursor": {
          "ref": "2af3cebc-9ca0-4705-b62c-0eca2a4c86ed",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0b6b326d-6f01-4f05-b6c8-96ea55698431"
        },
        "item": {
          "id": "eaa0f0e4-4520-47d7-a908-dc5253eed49d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "68b5f5bd-719d-449b-8a98-ae926a945b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}