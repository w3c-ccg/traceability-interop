{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "091e5fc4-e67e-4a43-91e7-ebbeb33f28e0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8afa7849-cb53-47dc-a049-01729c9b2e3f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30a9a9be-29b5-41b4-a46c-bd56e3e96d7c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc63d322-3eb1-41b1-a4d7-7da4583a594a"
                }
              }
            ]
          },
          {
            "id": "b16753b2-7ea2-48f7-b21a-04126cd05015",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df127b1d-6d1f-41ca-a3ae-f91210bd893e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2f0cb3ca-98d2-41eb-83a1-5f24e1aa9629"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9edddfc1-b641-4913-994a-830d537bf78f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9851a197-4fe2-41d4-b56f-68b31a1f972a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69ba3e66-fb5e-4b69-ad35-38cd207bacac",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "524116db-4adb-4fe8-b30d-6bb4e65c4673",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2dcee61-6d93-406e-b828-7d389c4d5630"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a776d2b6-58d7-467a-b649-b92bbd7bcf81",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08cdbfff-7e03-4b5c-b96a-53b100aa7c09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d612db4-aa88-44c3-86a6-e7ae9d73603b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e7fd8dd-059b-4b51-9f91-28c1de922c58"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38b219af-69e2-4ba9-a672-a8eba866ca4c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e43d6241-0a0f-4cdd-937c-a024662c2e31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc74bb30-9c88-4f3a-8319-0e9c313a3501",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdf15b19-77e1-4878-a3a3-55248abba6c0"
            }
          }
        ]
      },
      {
        "id": "f631f7da-6910-4a9e-b5d0-d07b8b5cbfd5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "18161797-2df2-4a9d-8a71-92ec4d4ecda5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d4ff6a4-854b-4a4f-ba7a-587d674dd2f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "538fcba3-9da0-4b5a-b8e8-825e7c3924e8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a683a73a-3b2b-455b-bda3-9a65f2f2614f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a07565fe-d0e1-48c0-838a-9383d5a0696c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfec6489-a801-4990-b54c-ba1dac451126",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7dcac4-c1be-4d1a-b1ee-efedca57c8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f3a2277-173b-4451-83b4-01307c32e1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905c5948-7e4f-471e-91d5-ee224bc24202",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc2a7f8-2226-457f-a59c-a20d0959d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d92bcba4-afcf-47bf-8bc9-a9d921960f5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac7ac1de-8a70-4309-84b5-c8bdfdbd38d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c06fc5a6-f498-4e48-86dc-111736527d07",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578de5cf-8c02-48ea-a88c-c61d76e221ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dfb4d71-2c2b-4243-bc0a-3adc7ccf587c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab25e35-f3b6-4e2c-ab87-93d85a52da2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f1c625-ea88-4b3a-b708-7337abb652d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "903d3ef0-af04-443d-90d7-236e30873843",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e9b07a1-4f9f-4a4d-a063-cdc230ad7fca",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bdb83db-0644-472b-9870-4bf642efe42b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5fb0b1bb-c96c-4c62-b315-5b6d78b6dbc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0acdbcf5-a17a-480b-8ed7-5335df47c1fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "59666658-81ee-4a2c-9541-b3e0302336aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "139b9aa6-7850-46e0-a132-3a4e5fff0d16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f7304de-d444-4b68-b853-bc6d74a2801a"
            }
          }
        ]
      },
      {
        "id": "562aaba3-4a6f-4a03-9651-cfd7c2d1b262",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "856f1edc-4785-4705-bf46-ca28501c3b9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8309620b-6486-4736-8c81-119d3ffd07c9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f60dabf7-264c-44cc-aca0-488bc28f4fff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dee98e1-7afe-4f6c-be01-491815f0102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13110afd-aaf1-429a-a0fd-f510b152728d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c23e5da-074a-4fbe-84d2-5b6fbca7cff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18e9e5df-fe04-48cd-aedb-dc3c00aff97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8b4d21-79d2-453f-a263-8dd72b554916",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd6a6a8-6562-4fbb-b485-e836381f622b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a8c2ac-7c53-4131-b857-4484e463839d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07618f78-e7ab-423d-91b2-a710bd02b964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f65b48fd-1d2f-4c07-be98-28d694a5e438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c5cf43-921e-40a8-aae1-b06b965c4439",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea8b333-1af1-4610-879f-5e4a7bd50514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d1635a-bdb4-4b99-ad64-6b2cd83aadcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8c558e-fcf2-42f3-bfbc-3ac4a4e5cc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20caf005-3583-4994-8684-7229efe996b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e5edce-98bf-4df6-80d1-3a1eb8655d94",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528781c3-5a89-4284-ada7-ed19d0099f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba9593e-c26c-4c9e-b955-57bf43b6012f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f889b96-f1d5-4dc2-bf9e-e3730e0ff1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdcdbf7f-6d0f-4f13-8981-1a83e5c512c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade41d05-214e-4f04-86d2-02d39d274d3a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328cf69a-cb13-4c40-bbc1-6a18154c8437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f70f51-f3f7-4a5e-a35e-239afba43e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2365cf4-df87-4973-ad17-a64f581cc2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c92867-af5d-43f0-9f1c-9c2a8497d187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4910ffe-3ca1-4f44-b326-0f4da35a8671",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca64076-9b49-457a-95e7-0a1e26bee942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ef973f-0deb-4d7e-8ea5-4a85081a89ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30195b4a-1801-493c-a0a6-d17facc90b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c13b09d-7b45-40fe-85a4-b1a54b083484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1911bdc1-ca93-4ade-9e07-cbc0541b67ef",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e3dc89-748c-40bd-b1ab-cb2c857a91cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cb6d75-2f3f-460a-9507-3e7045084452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f3bd61-0218-466c-a8ff-db552afd6125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "120238de-ce60-46a2-b17d-fa49f1cb417b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ff9d27-97b8-47d7-b279-679bda84cfb5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daa6f01-6093-4597-8558-7155d4e9d0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64eef72-574e-4bb9-b6d8-b235e5619f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a022a502-fc6a-4b71-ab9f-6db54b7e0f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b8c2a03-5255-4cfb-854c-13c78337829b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0204af-deee-4937-ae9f-c163f8496073",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89200ab8-fbdf-4a8a-89df-4de5340989fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6b8f69-96cc-45ca-acc4-72ad23e034b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2897044c-74c0-4c2c-9909-9f4390ec915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9478cf35-4ca1-4cc9-a492-feb286cddc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ce2fb4-8e60-4b59-99ee-33b692e9d1a1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d077ccf-772a-4a2c-972c-8b699b4a7f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5733b32-46d0-4ba6-989d-3c4cc13daaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b088086-c644-4a56-9c73-e8d672b2e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e8ef151-6391-40de-8499-53b325458b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4303f55-1ba9-45d3-94a6-dbb349e4ee10",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b83aea-dae6-4bd4-a35c-022938c41b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d8ef09-91e6-46ff-a21c-e16da9bb6f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7b7098-9970-46a1-b081-17277b8c8f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "247c5493-5ac0-42c9-ac0a-83c9263bc8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421cafc5-c468-41dc-8ae8-ebcb0cb2e3df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0254974-63c4-48d4-9af6-093720c61863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298fc45c-6b81-4619-86a4-f0a27f777bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4937019d-4ad7-4548-a849-d8a1a8125aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8a89ebb-e413-45c9-8441-f176f822317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83db375-aa6f-49ef-bd1f-2d0dd7cc9fd3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48b19dd-945c-4116-b50f-8a2a3b1da40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c270d3eb-92fc-4885-b3d6-e3add20d54b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4770d8b-1150-4fd4-ab83-312d1c6d90ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa527a79-f51b-440e-8171-f89e64d3917d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1181a1ec-2dfd-4b50-afd5-55e6671f48f7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5c63a6-693b-4f81-aeab-958924a03e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c172f4b3-7d15-4959-b661-53c9365386fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881ec1fc-7b12-4a82-bc11-4273fa353741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "372472ae-471a-412e-9996-daf7062d5e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647f5206-81a1-4ef7-a896-a83e901fb9a3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3bc7c4-7eb1-4806-844b-8e21dfcca7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df8ca3f-fe49-4650-bd28-f79bf263babb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4539b0-0afd-463f-8d60-45590a5fd6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4d7e49a-6c73-4815-9851-8f0c43d9275b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5024ed2c-9871-4b86-8406-9257e5ccde8a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8ef292-de86-44de-8a55-525022190e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918b5b14-98d1-4eba-94c6-9ebd117ef67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703b09d8-8c48-433a-a451-ab133f58113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bafba165-e5b8-4b56-93e4-d09a08d383cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf9c680-4386-45b7-b764-03060b2a85d1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b7520-6eff-4ab4-a8a8-b209e9ed7720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72f024a-a238-4829-836b-62883e56a0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ce7b10-7484-493b-8644-5f3ad8bc2cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebd46f33-82bf-4ced-8f80-384a7befcde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d61299-645f-43ff-a484-b39352d4a680",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1784457e-c80f-44e1-b656-61f30cb02817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94dcc0e-be3e-4127-a949-866c9ac0fa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5564029a-1105-4bcf-8e9f-3502be13757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b349f8-e9ad-420f-a78c-0d42176aaf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c56045a-5960-4588-b356-728a277a1183",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7cdee3-7453-4c04-ba34-ee16c6805af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a74d18d-f9c4-4102-946a-4959bf2b0b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4461a17-124b-4741-b198-b88717786fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92eeb056-c2e7-44b9-b9be-cecf6840dc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d91ee1f-0f78-4416-aef9-b2e8048d50c6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfde9bae-2dd5-4378-b1de-5c0a745716ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b715059-6cb9-42d8-9ed9-6a1b385e2ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b637b22-7ebc-4f9d-91e8-ca33c6b0b85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e08b4bf-bde3-4890-9480-3b8ddd066025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151e5439-75be-4d6f-b9ac-7a67b1fe9565",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfdee0b-e9e7-4884-a509-e8ae69bb4c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae0989a-24ff-4ca4-b382-acab275ba090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2341efe1-09a9-4aad-968c-960e4ce12c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba5a3cf-52d8-434e-b903-6e5a51095cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2786082-6606-4473-8e7b-39b5bac1a908",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69116df6-82d8-45c4-821e-f9110fefbbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c00f4f1-2ff2-4f31-a2c0-f616d3e0c36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070ea107-4067-4d6c-8369-3ce22f3404ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac0c2d2-dc3e-4544-ad63-47e722ae8b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163aa794-137a-457b-b491-cc756cb69a8d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522205bf-963e-4d9d-8585-004b7eafd624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db9fb66-e30b-40b5-b558-e0d0420ebbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a49dba-e4f3-4fc2-b362-cf19eab00dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99a98a1b-be4b-4fe6-a83e-670d858ac7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7492c278-fe33-40c7-8140-87ad7a0ad62c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2b16a4-de8b-47e2-bab3-72c3c24e4b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a56a324-80db-4807-80a7-6dfff043d3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abb9ddf-5e5f-464a-892c-b527cb4ec140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4159dada-2398-4054-b059-dcbe90609ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224d7d69-55c8-4687-9512-a2b2338be860",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5274b43-7067-46c1-95fc-6571de1547e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa120e8-42ce-4df1-a946-c0787fff7dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fe849c-9295-4fe3-a8ee-1f4766d8f246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4a8878-a1e7-4f33-a318-93dda65c2e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed30402-4d15-42e4-a0eb-97d243dfa70d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c0f231-7a84-40ae-bb43-081cff130b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdf1296-8d1b-4ba6-888f-189f38d4d366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1453cc49-772e-4045-bb73-e1802289ae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0d49f6-4ea5-4479-ab83-4e2a5a77eac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534c7ab8-a728-4981-a2a1-889dc17cd802",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b57cfa0-e767-454e-a230-911f6b726483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2377aa-7ea9-42b5-80be-aa9b8e0baf14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eb26b6-9806-48bb-92db-2e126442827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48177ed1-b3a4-4b50-a7b5-4e56abf672df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4586a8-9288-4d04-b556-f76359e407ad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4c99b6-18db-4482-b898-5959f1a2dfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f23b97-54f1-42c4-8e1a-7ae927b4f0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e6e8a5-797b-43df-a006-469d005f914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56221539-2605-4ba3-89c0-1cccde027071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317d8578-3c42-4b82-8252-4074dec079d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad3cfb3-2539-4a06-a0be-1741aa4e8075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d45b49c-923f-4752-a48e-14cdb5a3a964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9155416-ce5a-4814-840c-2c3e4df06345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b463eb1-33df-40f1-9a65-be230b75ba2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978f6d84-ed29-4015-9abf-ce6c512821c1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3603732d-fe81-4562-80ac-94abe8121f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e291b0-2a32-4c8f-a77d-797ac9f92215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfd5a1f-c9d4-40ef-a04e-e3eceee365da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b301d4-8d84-456d-a5db-cc8762e1b090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08a3ced-187e-4bcf-81f0-0725ac0c4410",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58ed98e-c8e7-4062-8598-4cbc981b3dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ff30b9-0e88-4c63-bdd0-440380260645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f791376-9182-4360-bdea-31f68d08bd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1331b069-c15e-475f-8824-6efa6bc58dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9af9126-90db-4ea6-8546-131bd24d861c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4b7d2e-2382-4064-a9dd-f1cc197e4fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66de4809-d287-43e2-80c6-275185868016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070c9886-8495-4c4a-88d0-a5516e9c158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd1b238-dc57-40d4-9ff2-e619f5a56b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1bfab8-8a56-4417-ae8b-69942006c7e3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055685e2-2268-4199-9808-70dd21c55150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca2f656-2596-40a1-a749-a2d1bc42d19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2959db-a409-4ee3-b348-e1ac57a5cadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f396fc1-3dd1-4535-a657-a0c548e8a430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e79655c-166b-496b-b057-57e6a648c634",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96495553-0da4-4f15-8ddc-2afecf8e0722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ff4d3f-d1cf-43e0-bb57-ab77daca6532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a1a684-2da2-4221-8b8c-984f6c8ee4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1416c4a-af2e-4c12-95a8-2549e2c7fc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d566ed-66f0-457a-95d3-4e0a4d6b0bac",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43a381d-4e88-45a9-9525-f018c37c3479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8e1def-5d1c-4b01-bda3-46b65b209c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d418b89-c869-47c9-8e19-3c18dafb2916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "648b1f23-1e90-4975-bf1b-498f5ed2ca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10167378-10ba-4d5d-b2b8-41226a0ab5f6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f535db47-6eb9-4b40-ac37-a72ebfb97f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7bfaacc-e08a-465c-ac12-07838a229a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cf554c-b63e-41b6-8aff-859decab71af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "089dcd20-f8b9-44cd-8b72-2af76169b62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca0f274-8783-4a3d-92f9-c971db4e1e1c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cce6c2d-97ce-4f0a-a670-62f2705379e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d116e06-d592-41f5-8d88-43fa123bad11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376cbc3b-6552-4895-a6f5-c4a0e4fb4a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84fd44d8-2379-4863-9533-d54d629b9d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203e7aaf-f6c7-41fc-81e0-0db410fd7249",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf2cf9c-ca8c-41fa-88bb-5f1a1a0b58d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9d5068-77f5-4895-90e5-5dad1c8e617a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839959df-fe9f-47db-8438-ea8bdf7b650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca450045-f3d0-400a-9335-836db8468474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a711374f-94b8-44bc-b98a-70aa2f7357d4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21d71e3-81e0-4bec-98ab-a7c287cf0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e04929-0a98-4243-a56b-adcbd2ff5c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456e739a-d829-4278-9469-4e6ca735264b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c31116-b0a1-4e14-bbb7-e3a731925dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c671c61f-137f-4a18-8020-dced148783d7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af6eacc-3196-4f36-9013-d8e85a07588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6b0cae-6034-4baf-b94e-2ea3f9018c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc0fbc3-cf88-47f1-adee-277d6e53948b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "222ae8cb-3841-462a-8027-ffc1ed736ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9b2704-f2ef-4c85-8d41-7df4f2660f81",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12cd509-24d0-4178-acc7-361151bf67c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf209c9-42ae-413a-a85c-6e0e2186e570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0355b00-c9ff-4be3-a6b0-030a84d1fa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a688609-0251-4928-8fca-6e19ce48aa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1e0a67-6846-419c-be52-60e4cb8be54a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fe2017-4b74-4484-b54d-75946ba6b4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f92ad76-3742-40c3-9e57-a84f0bc56885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd9a429-bc36-4750-acbe-c0245135224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7c71a3-80ba-4ef2-b35a-606ae5c5b37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8464db-7635-4385-b881-c1767f8cc8b1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132a7904-e2c2-4aee-abae-10ad0d2b239b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28617db7-da34-427a-bd96-80cfe6ea9043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2e34bd-1aba-48f9-9771-3ca36b7eec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8e8402-bf41-406d-9209-c00be4d18bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623337ad-3114-453c-a261-061699965a3c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2bcc59-ac42-4ade-9e90-f11de3bceac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914860a5-de66-48cf-9c27-33454f341f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ce3d89-01a2-43e5-aeb2-8bdca6cbc94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a6a6a4-79e2-46d5-a4ff-d737a49cc46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9313666-128a-48bb-a346-f70b7554ab83",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b94adb-54b3-4e17-a798-73742843bf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865b8cf8-f28c-4fd0-86bd-38204f0eaf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1385a61d-af75-47a4-a3db-8f3c6d96f7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7739de0-e997-4af9-9de3-e01714a72dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3887f09f-2294-4f27-a31b-0c4957224f51",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a4e616-043c-4b71-be58-259ab6b33f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515511f7-590c-49d0-96a3-23bb01cb5502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8c678c-e3ba-4f4e-aaf4-4b9200c9bde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "633c1fca-a112-4576-a7ea-45015d483f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600675da-393c-4bd6-84bc-d23bcb7b52bb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9433d8da-5673-4748-9a6e-774935631727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f59a42-5106-4e57-b65a-9232c25b04b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07710559-e08f-413b-ac00-7558ae406201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae2b966-5344-4a5d-b670-079bf376f836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf83c0f-1881-40ae-ba39-48485036af8e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e40421-bef0-4c35-bddd-eab44f63f045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2229503d-49fa-4798-8e65-854b99a1a5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbec522-6e26-4d9e-8cfa-7a1d18ade6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abff78e3-0b83-4ae4-9ad8-35cf299a0c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d11117a-45a3-4e78-87a0-70e5c555def6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb102ac-1a68-4f60-a400-1b577ccc3202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23efc4a6-4a0e-479d-89c6-5c667ceca12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55a25a5-3643-4a68-9282-fd2c457ada8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5feb4415-b862-4752-b66d-d1ab7d941bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eefa55-5a9a-4d16-b46e-b7bd297ffd28",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaec96a-a416-4eaf-98ca-d1271975b704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313cd03c-ded6-410d-8d40-4a521e4d52b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762fdc49-a372-4466-8433-f8bf6221de4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fd4e16-b3e3-4e1a-a49c-f04610f74202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdca65d-92a7-49f6-8312-4afbffc780ad",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4aba4d-db59-4eeb-8a56-c9df8b676873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312b0452-f01b-4ef7-b2d9-eda087263ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88b059b-45e8-4b7e-8e73-1b4d9ede62be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff4b934-65e5-4fb7-a785-2b8e6482f423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b77b38-860b-44b9-b238-5ac6fcb362c5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5ed4ba-4a76-4149-878d-e6fba3428b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71134721-6afa-4f0f-8cdb-2c5984001d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8357cf-3607-402d-835c-d8e0834b7ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e8c441-2498-4b76-8cbc-8f79fd43dc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2017232-f33f-4aa9-8b6a-6193cfd4a3bd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8586bade-ff64-4a45-a8ff-2562cde0c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5ce6ef-082b-48c0-b6c3-eb2e8f35a7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e1122a-a2bd-4702-ac30-114edfb71f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2294d85b-4d1c-480c-a5b6-7abfe62e5e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80aec4f-a968-4d4b-a4df-723c579c1894",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2508e56-cd72-4f23-8f89-99e912bb6446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2776d0b-dce7-4d7a-8d98-2519f8613a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cdf600-ce2e-4ae2-8441-2a9ef6d3a636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac8b67a-bba9-483e-a189-77abddea3ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db78ede-f7f7-44e0-928b-ba62e4601958",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b292e2-3766-4d7b-b8fd-20602b555d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae478fd-b8f8-4144-81be-fd92e0513de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9668fa2b-0c98-4489-b266-29dceaeb3ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9b1245-f4f9-4abc-adc3-57b2ab6c4b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9959de8-5bd4-4eca-9300-e79649db5416",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0251822c-f061-48e6-9acc-56cd8dff3080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01dc5b0-b253-4e07-9b01-81e4501dc51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798a76eb-c473-4f24-88fe-f34c52f0d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f0df91d2-6469-4e2b-8d1e-949e0a2c79d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f8ad31-65e7-4459-b98b-d85f705f0235",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44392626-6dba-48f2-a559-4455100049a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fe5cae-27f8-4d7b-b272-4db2e44982af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932f3a59-63ed-427b-bfbf-66a6f4dfd479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eac7856-12ba-4066-b673-9391cf0f2819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f9c42f-1769-499a-880a-2a04fed1c7bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4757ab4f-4c32-4191-82d0-ee7f66c3f73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57f5449-f69c-4ee4-87ba-a53e82ebb61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0922206-0b2e-4d31-8ba6-c4ba90eb8729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "041d4da3-4c72-46e7-9519-bd3d2df73efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c0471b-21c6-49c8-969f-8c6df50f37e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd28ad12-e915-4cc4-8424-bd7f8ce4d32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2410b6c6-0a3d-4175-a7e7-a89294b88ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f433277-9bc0-4769-809a-c941fe009912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33256d80-e495-457f-ac65-87084c65f3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc08118-8f36-4ac0-9c82-160e9cb2f8b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f73845-3173-4476-9ba5-a2f7416270a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8c176e-e53b-4ea4-bd6e-9413657c02b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae130d9a-d1e0-406d-a777-106ad5c687b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa70f393-10de-49ae-890b-3deb9aaa2e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7289b4b4-0a80-4f7a-82c2-091de8aea858",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fa9693-44b1-4b59-9b5e-c679407d5059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fc5117-4068-4be9-86ac-aee4d3ea1434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c01c68b-63d7-446f-9dea-a78726b72335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9189178-72a8-4f4d-bd51-a09304a6c5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de501339-1aa6-4b8d-bc5d-b0d876dcc4ff",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce47250b-97ec-43b1-a669-5264da6e6fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41652346-d7aa-423d-9cb9-26429362df58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2117eb15-e75a-4f95-bed4-8a3cf1d75625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b5b7ee-7f6d-4723-89b7-978c28936c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d39192-c670-4463-8413-54704dba303e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e12664-a468-4bfa-b2f0-ac1bf6c1f6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe44ea39-858a-44da-9ecc-dac6172f7c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64220ee-2f2b-41a2-8f56-e743e0ac0d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b0474b-f595-4b39-9791-293e41c6e3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb15ddb-78c5-4c83-b4a1-7e0dcf54391e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219a10a5-dfc8-4581-a6a2-c4b92cf17e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab58b7c-a57d-4108-a9ea-b2a0b5080179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ea4b37-a1fb-4676-b83b-5e3d75caf52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a8c377-466a-44c0-96dc-f47ba95d9ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab068a1-9e99-4d8f-b319-c465a65ffcb8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630b8913-8b57-46d7-bf20-1fbc1f816845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f9c4c5-b0f6-42f5-a1ac-27277c255a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a2bcff-32ee-4dcf-9a26-7b50178c68a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7624bb9c-9a40-4744-9cc8-aaeab88dcaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec0f988-edcd-412e-98d8-335324f0e8fe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b17e6a6-f3b6-438e-852e-ddcb7b9fe3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11137dcf-1483-4fe5-8812-c76db2a8c691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d201d8c-5afe-4b19-a246-1dd2e3247bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d07e01c-c05c-4386-9af2-edf880639e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1e0938-ec0d-4c5b-8f6f-cdf15b43ca2b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e276aa8d-b3bb-4f79-baf4-2476a118df4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fbdec3-2083-4107-8112-4ab8cdcde760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229468f1-1468-4d09-9ae9-aab031131565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb54703f-7fce-4c79-a5a9-e278b214c562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7938c3-71a2-46a0-9cfa-62240a25f77a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c5e18c-27ab-41ab-b9c2-816266007433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ab9107-9f00-49f3-b662-b3e782c4003d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3102b36c-b219-4799-a01b-aa9313d9cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "435403b9-5e11-4dcb-950f-f30d7d6a413a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eae934-06bc-417d-85b8-d65658fd1963",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28d3d77-1d6b-4071-bda7-0a3911f01204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d1a91c-d847-49c1-b0fe-06bab96222c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10573095-5136-4a9b-860d-4d6af2596b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a455ba2f-86f2-4761-b376-85aadb7ad766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b971888-cf1d-4d61-8053-837597c747ef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222d8e8a-806b-4723-acd3-28f970d8d353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11edf613-5e21-44a0-8fe3-1755f3027ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf02a51-f63f-4a1b-8b54-e4cee166d592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34bad70e-3135-4e77-9a49-a2d5cff4065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0197f2b5-30a6-4ccf-8590-ba8bdf99bea5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e70cd48-d681-4ecb-ac64-08879a4b2e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5524f4-de5a-4b5b-a8b8-54e1a9ad5d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dd72f9-c8b5-42ab-88df-12e2c794068e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd4893e-1d9c-4e9d-aed9-64d021d7eb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e369e68-b7d8-411a-99a8-ae29a0aeb5ec",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b1d5a3-b437-40b2-93c1-d4e3106c8c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b37e4ee-19af-4ce0-9bd9-5a5be0ccda48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be753ca3-fdcc-432a-81a8-25121d869d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5930251-e4cc-430a-a852-1c6c995b351e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c15599-df6d-4716-98b6-779df84ad3a8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfff0a74-5135-4230-bc3b-272d8ef3ec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7cfb4e-c3c4-4c0c-994a-2d0202ba29e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d7e1dd-aa8d-40d2-9cce-f66b85232672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbdecf2-6a5f-4668-9e49-7eff07d3eeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af233ff7-8034-4f2a-a5b1-849ecd081f6f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a9b94f-0e98-4ee2-a68d-1e98c147acac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40938967-9d5a-4ef2-9c05-c7f6c4576e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59be2571-b872-49c8-9866-ae0e905824e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1da5d7d7-4a11-4cb9-9939-7e74b2429e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661a3de4-f8b6-447b-8555-e4ec787dc71b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b0336d-73e9-4a2d-8b48-a4f04e7b06d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c6c35b-3fac-42dc-a132-3a11681d8e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1395aee8-eed6-4e93-a49e-94a6962a309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3f756b-81b1-4121-a4db-8ecedd1799f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad639ed-b3db-4400-846d-c119c58fef31",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ba5bc8-7afd-41c2-b556-f58a2b9657aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfabe42f-21d3-4eb6-8957-2613545cddce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01a22ce-4eed-4c7d-923d-1a3250551728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed4be0c-bb93-4174-87d3-23680a3ca796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dccd7a-48c7-4d79-9b99-305f0df114c3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b35343-ba10-4566-9487-fe7aa2e6f5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c08b10-76a8-4e71-ae48-d762adb5e4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020839f8-4c68-471b-8abe-a5fd70dbcf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa01566-1ceb-4018-89fd-5a9273671cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad57d4b-8a7f-4dff-8e49-faefec345d02",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40fc507-0aba-48d8-9a64-8e1bea8a6fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ef0fef-cc8c-4a6c-8c19-b74e724dad9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a046108-870c-49ea-b652-4008dd0528ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e08737-2da5-40cb-abf8-912e032f7607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66fa75f-dcd9-4ecb-b55d-b456affe9723",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659a91a7-c5d6-4fce-abf6-53146272489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de43f09b-ce7b-4bf2-b144-5b7b426d9b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1901129e-37c4-4b09-9de2-ec0da80491ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57367264-4bcd-4fb7-881b-f4bc7f902b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ae4438-b554-402d-9fed-79ac409a37c8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ed2a3c-9f2d-46d0-9a02-923fba47cb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e40f97-8f85-4eb9-be1c-1ad635e0f407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3afd17-1105-4c6d-b011-8298489ea8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "096fd3db-e315-4901-9801-69f4f946eec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63af536-4bce-4987-a5a7-08400c8bef56",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a86d36-2d12-449e-a314-d500d8f063a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b75d11-928e-4fd1-b67b-30aab88f7af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbcbaa2-2225-4c75-915e-d55af0fe1528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "249513e0-88de-4d34-a0e9-e32412aa9ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffafb59-e3b8-4892-94ec-d17f443507b7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e876342-e62a-4780-b84d-54e2b569b015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca73e63b-ddb4-460e-b069-52821b3b0b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fb5609-14d1-4c75-8a88-8069b72d94f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d39a30ee-86ac-47a5-a692-7f47d3e249be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2d8d0c-39b6-4e52-ae08-293476b19ebb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a685169-3b8c-4e34-9604-4814f9042dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003b02cb-4e2e-43c6-b695-f90f41c09d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4d4899-0cdf-4ce9-94e8-023df6af0cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eed9457f-f498-44dc-a4ab-a04d702f0f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc2aa9e-f574-4f28-bcdb-56c3d22efb75",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9acbb56-a2ff-42f8-889f-875fca3364e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95527e1-cfbe-4f07-9143-52328fa48923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43975832-8595-48be-8505-950b108fee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "061352e0-c2e6-4944-a50d-981f74e80745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aed5deb-13be-4d02-b115-8cc9f19aef08",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc39c08e-208f-4f02-9f85-7c7d267aab1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a4add8-a9a4-4d36-972e-529fcfcf7742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8015edcf-b3f1-4d48-a6a2-4316eee85a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f75091b6-3c5b-482b-976a-509569c52c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145ed255-48d3-4fb0-a892-711d8bb40d63",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbe2f4b-c379-44ac-adc3-6b91c60bb626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f205e9-e072-4a71-b4db-c370ef7c5cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8522958-6148-40f6-b098-eba4adc0d0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e966f5d2-9195-4b8d-9caa-d77860332421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebb1908-80f1-4f5f-9cfc-0b6ca0b4a6df",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f19234c-6056-4b15-b0d2-40673733425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823bd877-2c34-46f4-b29f-2d63a73e7721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91eaf34a-4f8d-49e0-a339-62d2982454e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a3c742-be76-4c27-bcdc-52bc503de180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f394e1c-d686-478a-b73d-8b61f9a10465",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1e972d-5652-4694-835a-7beccfdcce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07344af2-9d89-4a91-bbfe-5871f0a4d339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfff9d6-d17e-4ff5-8529-13f2b4ad24ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68916c7-bf74-4308-9236-c83cfa82e564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df990bb9-d74f-4653-9f29-01fc9be4faea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba19241-f1e8-4a40-b6c0-a9cae311b15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aeda883-0025-4fb2-8500-e4712f1a04db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7b7bf9-3efc-416b-acb5-c34b66cc7d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da60897d-354a-4ba7-b8f8-00f52f27f337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6734ea6a-d1c5-410b-a43d-c728aee88921",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25886228-b3f6-4dd1-b1f9-16dc976e1944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3096c71d-ad7c-487d-bace-ad5915d0cd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9b0bc5-83dd-42e9-82fa-0e5848c3ea30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcee2c0c-c3ae-47f0-8620-6adc03bcc0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5044cb63-da80-4ed8-a8d2-463e819f5e62",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2b17f0-522e-45fd-a900-90ebf10065ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d50f0bb-a732-4c88-b946-f364c1c9fb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b93503c-7845-4250-b885-0f08aa87b079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae80212-4f06-4ac3-aa1e-e54bd4c9100d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef1b087-3218-4148-adf1-52087bdacb1b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291b7230-69d2-4c1d-b57f-9d94a0d4eb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "82f2e0bf-0292-4c26-ae7f-47e80e4a0a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fd72a2-fff4-4735-b970-7d612b120b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75a57a4-ff89-489d-8ee6-7b87032e691d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10f6f08d-2f43-478e-bbcd-f0eeaad3b507",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ab81069-3a52-4c27-8cec-e6542c432fa7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffed519f-c75b-461d-b6f2-a4dc835fecf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10777d5b-2385-47c4-a62d-342d57dd68da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50f6ff5-834d-46a4-b15d-d575a54cf528",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ee198a-a281-4289-8a31-d78c91b42fe3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4671616b-915d-47d5-8e66-81b708a7d4bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de70f948-50b4-4b45-9da1-2b5e86560ca9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db26a203-da60-451f-91b8-a5d267e3d510",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66a7f5d0-fd7f-419e-9082-3e6b0316aa25"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9e19919-9522-4e6b-863f-06ec2d1feeac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c494b303-d581-4975-8306-2209add04697"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b976138-cb91-46de-9806-a139d0965c6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbad57b1-e5a7-4c99-8e2b-013e2f604dc8"
                }
              }
            ]
          },
          {
            "id": "c08eca9d-f06c-4dfa-bf18-2ad4734c6b78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e1b63b2-22e2-42d5-937f-705e46cac46c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "10c19336-e88d-4107-af56-d68ea1a94021",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443be374-01da-4491-87ed-dffeba5902ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4f7903de-7744-4320-805d-0d9ea374f25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964cadab-a976-4aac-8a4e-43d5d47ff84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfeb3d23-8635-4749-b639-83c7a5a46f5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d54a455a-e823-4d72-96ed-00e9d30cac58",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a77fe9a4-095f-44b3-9d5e-56cacc796a7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a18e7c54-6368-4421-b1d7-454ffc712a50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6bcd0df-d574-4770-a9c3-482cb25ff777",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b59920c-1b97-419d-96f6-5221b1836823"
                    }
                  }
                ]
              },
              {
                "id": "70281bb2-07b2-4dac-b14a-284f2a2dd867",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e00a7832-b40d-4d63-ac2d-46880d484305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b938a5a-6413-4ca7-8a50-27fd955128f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "856bd792-2c60-4a17-a713-4f2fd7dca0ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cda8ad47-63ca-4a88-a929-8d379d03ea39"
                    }
                  }
                ]
              },
              {
                "id": "68a5873b-3574-4b36-aeff-6adf79e0580f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e07430d9-cafa-4e24-b41f-9c1a10c29de4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49e98a75-5df8-48ad-8b31-ff245bde1c81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84bc3ea1-a935-464e-8e88-55d48510465b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6b9262a-0f46-431d-b33d-9627b2965273"
                    }
                  }
                ]
              },
              {
                "id": "4915a3fa-e608-4707-86d6-e27dcbde05b2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67d5b89a-edd4-43b9-91c0-2f2439a6a0d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21bff60d-26f3-4bda-8c25-03337ddad1d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "576013a7-3fb4-4c7d-8e12-629591e245c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6ec0657a-3701-470c-aa36-a8f479b52740"
                    }
                  }
                ]
              },
              {
                "id": "35479034-e93c-432b-b528-caceaccda6de",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53806680-3819-44af-bfe4-97272686bf97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dccbb768-b26e-4ddc-ab71-a21e426a024e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42431b84-6dcb-415e-8208-d79067e7a32d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "baf65377-87d0-4248-ac16-127936c2ced1"
                    }
                  }
                ]
              },
              {
                "id": "33e3d3c3-c597-4b98-bdb7-3ee72fd61a69",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08fd622f-ccfc-4a16-bc4a-26af93791949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f879412-9bac-4f68-b7a1-a61e406844e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bca92a1f-a86a-43cf-9ae0-c6e7e7daff3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "edfdf6dd-c224-46a3-ad01-d04b5518cf19"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "202cf313-7574-442b-af5b-6dd5012c7e4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14548840-401b-4cda-95f0-7a801e33abc2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc3449e3-3524-4eac-bf9e-cb737355d9cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8dff5203-6e3d-4961-adbd-d77755a713b0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a089722f-ce32-4aed-9fa7-4427fef581dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "90914188-d031-4eae-9630-ea6bb14ae4d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9caa210-a072-474f-bbc9-ee1f70d580dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba881e28-060f-4e29-9a0b-670209939d3a"
            }
          }
        ]
      },
      {
        "id": "8768d17b-62a6-45f2-9d9e-ef543f352b30",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3d53ccd4-9deb-4c42-8aa9-9ef3dff57e90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d354610a-276e-430a-a908-20a33cd51cb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3b0954c-0598-4936-9bdb-076b111601a6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e56d315-1a4c-4a16-abd9-17c0574bd95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb44e7a-bbb6-45f8-ae71-9467abbf7173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5209fa0-a97a-49f9-87f9-5e25f7157dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "28bdede6-afef-4795-ae75-2b18a703e793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995754f5-6510-48e0-89f6-57c3b2d9664e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c55b3a-7df1-4361-9023-3648159c9a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd7110a-5a4a-443c-a2b5-fade4bc17f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464fefd9-c12f-4bfd-9cee-d549ecc3e066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "689b3eb8-987f-40c6-82dc-9e2185d711d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258cc047-2fc5-4613-ba00-a8e00d0f6370",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718edacf-0a21-40ad-b982-ae8b9cb90504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464e0a1e-d587-47a6-9f3f-15ca62191b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b8ef4e-dfe4-4f72-bc10-56e2372ada21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee922ba-c0ef-4e16-9fe9-a29985f6b40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4a64a1-b18e-4995-bfa9-9abe7437908b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3258f5b2-85f3-43e1-ab19-ba0d6c29ea8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc36e8a-5e87-4a16-80da-00db48d45af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db75d83-3a54-44d5-93a7-ad6c35239354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed549d6f-3b7b-4a6b-a7d1-d3506bf2d768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc50737b-cfb1-4842-8965-39974646ec39",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad73af99-0f94-48a6-baf1-fd4496b60c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91f3bb1-1b6c-4a30-b976-d9ab00e8fadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51854853-8995-4baf-b641-afd1368c2909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fa23f7-2439-47cd-9a87-e528738d3218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04436642-87d0-4b84-bba8-dfa4f72d8a96",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a10d4e4-84f1-48bf-b981-674aa54efe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a456037a-7783-42ad-9380-55344f9c0901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780e929c-d341-4d29-bc12-47b6e3e19de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71430dbc-6b58-4c61-a357-0afe0d84fbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2536cf24-e63a-4975-a2b5-6ec47706cb00",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f9a46c-d2fc-4231-9c31-5791449e39ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efc63c9-16c3-4c09-873a-6d578f27c0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2f3b7f-2c25-4ab2-a73f-4c27aa44e731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f669d9-d294-4f32-abb4-a28631ed3dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caa268e-1ff9-4bd9-909e-ec9166d2197a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bf7cbb-ac8e-4433-87cb-73089be2c3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a36eddd-7cea-4462-8e51-c1b4a763b2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2143af09-7c6b-47d5-9796-260d24e49232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0a184e-a35a-4734-adc9-88b41aa47abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dd6e81-9499-4d07-a884-fc1e01de5704",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faded97e-3c53-47c3-8bab-e6f518af6b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c625f8ef-8b27-4278-9728-50942b021444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378777a2-f9a2-495e-8b4a-97c5c77af1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f258fef-11d3-4ace-80d9-8da57bd3bbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b79ae4-241e-446b-a214-5b3420d90c88",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93ed2f9-4beb-49e8-9353-6be51b3d3826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f1ef69-4a6c-4113-9264-2bfa5663b83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de6597-5a0d-4d2a-9c22-2018d85242a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4d0f97-3169-48dd-b1c9-95dbefc15ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c079183-5878-4217-b59c-0b6cf7bf82d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9302e497-ed3b-4a17-923b-79b07ee06481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a8f2c6-bf27-4bc8-870f-f611c95205b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6263ffb4-a937-47a4-9e55-f5f37aaf69f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fa811225-882b-4620-808c-448f8738fd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60c01c3-0fd2-424a-8396-e6fd8c7a4dd8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2337115d-8dba-4244-b8a3-3f9c3077e11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a7ba9f-50bd-4407-8858-92d66eadcb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec811b53-34aa-4459-adbc-ceaee55ba176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6f8ea8-d8c9-4316-ae5f-cdd3c1b032e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23608cf3-c554-4a04-a702-fe381f55d1f8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a99ec3-032e-41cf-98b9-a5ee501a9756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff5b038-76fd-4d6b-a1d7-e08fe7f976f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affbfa61-85d7-4e67-b023-d3124116d864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ee6feb-2176-48a8-a527-4f3a6a3d4a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a27ebb-7728-4b26-8648-c9034c45c74e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eadf76-ed7b-47b1-8646-a8c5bb206eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89803bc5-505e-427f-81a8-5abbe27e96b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640a9619-d2e4-4d8a-bde5-d0484bce785c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd5eae8-e349-4995-85bd-dc708baa39b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078ee414-95e7-43ca-af84-bde0a3fc16ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2cb714-ccfc-4c3d-8175-35a89464ab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7308fb-7d8d-4b9a-b883-9491e22c6e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d434f3f0-fbc1-4900-9e5b-8d0d66fab0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "675c916b-7e95-4fe9-a3da-844bb435520b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ba1680-2e2c-4d8c-ae09-89db5db075f5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf08607-8f64-4157-a94c-d3435ab4382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9072458c-3edf-4f36-840f-42677b46aed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4d41f9-7d6d-4bd9-adb3-b0cd458e8f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cec555b-21ff-434c-8d9a-cbc833b3b11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad73c7d2-28c6-424c-9d7d-cfe1cdbe7e5c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f987d309-1228-4521-9a01-de33ec9c6390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301a0f7b-fced-4837-87ce-71a49bba4b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f010132-9e4a-4c3e-b92b-86a9469358b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ad2878-94fc-46f1-84f0-52361a864829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5944508-a4d4-413a-8d92-a739b91597e2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76214ef5-1ff7-43ec-8078-a9c0c892e502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fb838e-b4b4-4d15-a24a-5b7d01c66031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc8d7f3-12d2-4c71-a6e0-eceb1c52e87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "671cc83f-b96a-4229-a194-64d3614f3f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43faea90-8b37-4526-844d-6a35db2eb488",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bfe149-8057-44eb-95aa-0dcc589d0f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb6dc3c-de2a-4650-a9f7-8c98af2a2212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caec88ab-9112-420b-ac37-3488777c2cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "566226af-0025-41f5-b5e1-59ec1aa455ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45a1c71-4d8c-4e37-90c0-dce4b7f8ebe4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5b6de1-173a-455e-a310-8def0a5f2fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aaf5edd-f7b7-4fa6-aeb9-35a836d4b9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0c8103-c8f8-479e-990f-6ba598cfd347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f8c37c-d0fb-476f-b0c1-2c80e2660cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48848a5c-036b-41c5-b132-fba6e33d16cf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b43284e-2a7e-45ce-b147-22121f52bb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09538da7-bd08-4704-aa32-994314aa8280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457ccd20-dcbe-495a-809e-8714a6bf35f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deacd2f3-8575-49e8-ac9c-ca60881d91f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e13f8c8-730a-4c05-8316-e11ed93ea1b0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bf016f-cf61-4c0d-aa74-b2c8f6d974f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e8e9c9-a8b9-4869-8227-ac90f704492f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89f09b1-3a10-409a-92e7-b6408fead9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c48eb98-310a-4200-8222-0ea1c7c1977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b107cf4b-a0e8-43a7-b681-312bde213da3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cd5c31-3291-401a-8d51-2544a7aa6fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82f169f-1f69-4c5c-9850-54d84cda83c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e5b9be-782e-4029-b891-a1426fe536d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a693e492-e48c-4c90-a7b0-fb6e4514d60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a1a4bc-517e-49cc-8a3a-43bcd3341dc1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042aa885-9e3a-48cb-8cf3-a5fa3566c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d188b9-8d62-45c2-8e3b-6330efe5255d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9df439a-7152-434b-9033-851cff86ea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a7b91d-2681-4531-95bd-45f7ffcf6877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ee021d-1b8f-460c-89d0-8870c487ebab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6597d11-8b02-4ef2-873a-829694ca063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92c0292-57b7-4599-9339-d86f63251dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34777af7-99aa-4c97-a6ea-45052fd72eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a76e140d-6b4a-420b-a5e9-9a9e8a25161e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea12ba4-66e6-41b6-a326-57c32405716b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae45e4b-281e-473f-b52c-8cf081cd9f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbb5b21-c1e8-41cb-ae58-ea46e9666658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b541b-2caf-4da7-9849-bf85d5370976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "850c356b-f844-4c43-9277-ee51a42e0c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a910d4-b2ba-460b-a5e7-1ecc28a4eaf4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d729118-024a-4b3b-9f17-475fafa4717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912a46e1-5fca-4335-85b6-e94602fcdcc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cb3999-c7d8-4600-a7f7-c5a89411def1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "debaea03-9b4c-446e-a623-a01f0478106e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f4682c-5c4d-46c4-95ff-b4531f790080",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4bec62-6911-46c7-aee9-3e4dc1cbca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cc3c61-16b4-44c1-bc92-ba935d69ba1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8df98c5-19bb-48ab-b859-f24eea957cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ec796f-138e-41c9-915e-25582e5160d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f469828d-07c9-4ee1-813c-067f06f9ce26",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15ac934-c623-4471-96fb-7776a7e89428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8937c61-0687-4dcd-b046-dc981faabbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a5d046-48c4-4584-81ed-14de4a1075d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b901bf30-3d9c-4289-8ea5-194161fefb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d111dc-e81e-4b78-92fa-df1d08aacede",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d0e24e-2bd2-49f5-9e80-742982ba2bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2651f4ed-32e4-45f3-b447-f54c1f9e4f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01578da-8556-4a7a-9d97-bc2fc6e92f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ea0c63-ec3a-4a8e-8fb5-540dd1bb7d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b67f08-28ff-4157-b95d-816c39ac0b3d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c288ac-86df-43d2-a30c-405702284795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f3e1ac-2469-4475-9483-2c1b82cf81ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fa1364-458e-4a48-9b51-406e62a1ff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0677d9a9-5bfc-403c-9acb-f899daee545a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6daca0a-982e-4701-a2e3-75d21bac4502",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229f90e-bcc5-4e1f-82e4-cd438a2750db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2116c313-ecbe-4b16-b6e0-41df1fc65a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8deef9-b1a0-48ae-8863-8a71f353c67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7b30c1-15a1-4b99-b0bb-67e9247daa62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7bba3e0-c870-4861-9782-59c3a5f2e216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbef98d9-f4e6-4975-b85c-b3cc79b9fc53",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d36c3d-84aa-43b5-ac78-c5c8cc5049d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64d334ea-01a5-4829-83d9-18c364ede22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd061e8f-161f-489b-bb3c-41ce106cf9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcbf12bb-88ec-478d-8b41-75545e3b766e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99ecf477-7d0d-470c-924d-47aa99230534",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09e747ca-1eec-4a67-9f85-2a17ac645a28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66334946-110d-4020-8e43-f1ea7cdfde3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0794f6cf-a977-4c1c-b94a-2dc0d5f1f8d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c83f6081-d42a-4185-a49e-98b7efb1ead9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36dc328e-15d6-417d-9d51-cf45e469ea82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be3b40e5-a66e-4da9-8ccd-e26c13ee7cf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37f6d2ae-f7af-4672-8941-bda6404a0890"
            }
          }
        ]
      },
      {
        "id": "21f5013a-a790-48b2-aaf0-b5556c2b9325",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c411f394-2ff1-492c-a3bd-9cb89f0017dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f71f183-8f56-41bd-8494-afc5766f8426",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9bcd043-de70-4b50-b500-2a2c8777bac9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3e5441-cf09-4316-9f46-4beba769662d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76db084c-3e9f-43d3-903f-5ab6597e49a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4332d5f0-b1dd-49bd-9ac7-6fa9bb1feef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e860d629-a312-4624-bc6c-9490c1e54585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad018709-bd35-4fec-b4c0-1ff53eeae8e2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae388de-06b2-4d2a-bdf0-f39a8480e83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfcf80c-43b1-43a7-877f-34b8e907df43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b66de5-de27-48ac-aa7b-35cab342c6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98373630-e9fc-4f58-91fd-42e9d9c119db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f7baa0-55ab-48a1-84cb-a53d95eef2cc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fefcf8-a721-4090-b409-6f0d6e4cda2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e84e3d9-9154-400a-acac-6aecef367da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72c5770-3a79-4c7f-912e-737ba9dbc9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10cd6863-e355-42c7-8481-cb0142c404d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb92511a-7848-4dfa-b474-3224653d203f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf584d7b-8ca2-4a35-b519-c5539bef78cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341b592d-d8e7-4d7b-853c-77b8658c6f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcbba48-29dd-4844-b33d-fa3022e61994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d3eabb-42f7-4812-a7fb-435b779f738c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbf97d1-71c6-4dd1-a3e9-038bc7285756",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7eeb23-2ff9-4f6c-9e8a-5db74f844f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd61e1c-bf4d-47b1-a33b-73c6d1e57fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e420f-7749-4b52-8691-641dd5c79011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "516d366e-1bb0-4b99-8a19-3e7799344cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ad0419-e7b1-415a-b7f4-a75f43a333f1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51aefe96-309a-4ba3-9b9b-d5dcfc731d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650ac3fd-216a-43e6-8310-3e459a65ef7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b552c9aa-111f-4b46-b466-c5c830316647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edac0388-84d7-47da-a835-d736e52783af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c9d967-5ff2-42cf-a93d-aed0126d00ca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9448bc7-4c6c-4aa4-9e78-f8bd0bde0e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02abf5b-08cc-450e-af5e-e5ab14836ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237989aa-c00d-4f73-9160-d547b541b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7eec39-2f7c-4e48-861d-b04b0e2a7718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a839d179-b088-47ac-a287-ea5905bd9fb0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa4ae32-b158-4b71-b241-c8a1e45e7285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc03be32-98c1-49c0-9087-a91a426530fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07437fa-a3ca-47f7-809b-2585ef9017fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd7e571-844f-45c3-9dd7-b2cbc4c9582f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97238f40-f0fc-41ae-8b18-c6ccc1e8b731",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c8598b-e907-4ef5-9292-42fad7b66e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d4f19f-b891-4176-b4b5-53a98ec4798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a8e424-2fb8-4621-9115-3b8d10fe951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49382b4c-a7f0-41ac-96c4-74d5fb116ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da5db1c-9085-4c48-8b55-05adf80dbac6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ade051-e481-4920-963c-e5517b8b68b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f09996a-c97f-4034-9b88-0f3a478f3e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d4fe33-3733-4994-b3a2-961b7b6a9024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c498d72d-2558-40a4-9d33-56d0fa1b4e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9082091e-248a-4c5a-bec1-c396e26521db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442dee91-3b89-4195-a7a3-9345aa01aa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ff0d37-4fe8-40c4-af49-9c5bc52ca9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e62a663-1674-4ab0-9a4f-977a6964976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c27882f2-f827-4e73-a0ef-8b4d6e0da2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33043495-a611-4538-8280-e8bb571b6e99",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b6db8c-2f18-4305-a375-ca5c5b70a802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd22985c-8461-4ed6-8796-665f1d7a5d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08316b9-f8e6-4d53-86ab-d22e863f2225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b38bf3a7-9009-4b42-88f8-3aa92db55b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa694af-8683-483e-8b30-f876acdffb90",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71658a35-7641-4960-8d63-9a6f0845e399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbc5353-07e9-4f8f-9bfa-4f26f45289d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0250710-054c-4832-a416-452e9459bc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87009063-f071-4046-9e56-5f7cd77b1705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba6c692-93e0-4720-8137-880008337cee",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b686fc9-d954-4cc0-a050-9015cb8d0a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1076c5-75bb-4a0c-8eb2-8af671c9b2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f48a42e-704a-40d8-bced-b0dfc4fa1861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae515dcc-0e66-4a3b-a2e6-e96bc8c1e976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfb383a-4784-4f97-be31-fa1f249a35b7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1a3358-407a-4c32-bcb1-ac5d148d8a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793992cf-41d6-43c7-a86e-3847388ba1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e930a2-8800-4810-9d89-3fe916cf33e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd773aa5-79a1-421b-96f7-a79242a3914d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe8facb-82dd-4cd1-9ac5-2a988748009d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032bba7b-34b0-44bb-a061-a9cadd4afc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38649bbd-0c54-4a28-aa85-7981f08cd4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79b8620-7d51-455b-9d08-7d048114e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b76fdb9f-aaaa-42e3-b8b7-19f9c9f3ad3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6430080-1836-4546-8d04-5ba058386754",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3862d5-7d91-4590-9d27-3097dc174f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccf3a34-17d5-49cc-a239-fc977ee3c877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c27af4-706f-4021-8da5-5ca8f896c0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff96421-4bad-46a4-9a56-dff12756e9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5837081-9c07-4cc0-8196-efe492d0e262",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354bff9b-00cc-4f04-bb19-317a5c381694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167847c6-decd-4948-a59c-b205cd710e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bf8e66-7994-484a-98dd-7a7fbab68357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d15a15-0696-455c-bf8c-5de5b9c74275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ff64a6-2a51-4726-ab28-429359032236",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cfa27b-ce40-4594-ae0b-968e298ea507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28672b3-75dc-4434-b817-372981783e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b2947-f3e4-4a65-b710-113556c5b939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e0e8cf-84fc-4d95-a4aa-05aefaa4b691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11402aaf-cc32-42d2-a179-1cb56ac95bbb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60907027-1afe-4871-8c3d-1f0437c4b5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62586549-6a9b-4149-b723-4b6dc000fa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3601f6dd-f7de-44a0-beee-c782fb1f5333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d93074-92a0-4057-b819-97bba1ec79bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449d97bd-a302-4eba-9a82-2e4d358737c0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccd8bc8-a773-45d1-8379-c8696d5b28dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d27f5e-b386-48c1-87c3-891d6f42c897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e152df1-6d5d-4e75-a655-7c0023b9749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11fcc1a2-bab2-4ee6-8f79-f36f3d3c7acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a706c5-2377-4cdd-9d99-46ad486cc862",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e700cf-67b1-43c5-9fce-6c3dfcb4089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56dff15-0530-4c57-b9f1-261ac0c92eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a0ee24-2ea8-4481-83dd-0c62f0c80007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8afc4558-3169-47a6-ba6b-ca6bc25e007a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3c3a59-ec74-48ea-966b-63c27e56661a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdb9aab-a435-4e20-8ae9-2f5606b55ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3950a9-c2c7-44e8-bb80-62b0820ed484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9946e8bb-9b41-4d76-8c19-c32d6063ca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c66387-93c3-4cf4-a3fa-315152097624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37620744-45ad-45ab-8444-c0cffc9fb189",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03f890f-9017-45aa-b7c8-a09d43bfb5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d793721f-0b3c-4de1-bf40-78a857b8c1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2908d7a2-b85b-4980-8709-cbdd3e8c8b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee531c4-bed1-4ea1-8038-ab7a09d74377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ef3d5d-d5af-4296-990e-360847b85151",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599050db-715d-4173-bee8-97a1e519b118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24addb88-5612-4a45-8776-bdca4eb4d26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599d370f-ab0d-454b-b613-2ae761aab270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4265e6-ba3d-4e99-882f-34b001d60bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bea77f-3d09-4500-a1ab-312bb1da8107",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d887a8-d874-4653-9a0c-e8426bf0af4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d54821a-013e-413e-8110-51b106ccf905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d714d2c2-f979-4140-8aca-f08a8cc4dd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15a1221b-50b4-4298-a9e9-b7f9e2b287cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9d7e7b-9cff-4278-8eb2-26aa1b0bb2fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f866fae1-d3e0-47a0-8b6e-34563a6f2c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b306134c-e39d-48b4-be27-caf50e2b10c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a218ac93-c6db-49e9-a117-afaae2bac9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac50e1f-65fc-46dd-a313-0b80008ee29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5a6e90-ac10-494f-b867-37e97757b8b7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7946d62c-e316-41bb-8444-99fc78565497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9040c4-38d2-4711-a091-977603eae4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35feb3a1-d6d5-4ec0-b658-7c3ac48f8045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d79f55-653e-4538-9af0-9131172e2de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b219a5-1dcb-4d94-a27c-3fb3bd9bbf2a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0278db56-b6da-4a4d-ac23-9899b05e54b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53edde4a-4a7d-47df-89bd-2fc823e53ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2857c81f-e7e1-4a8f-9468-76bd350cea29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3b0fb6-105b-4478-9641-e246206f3e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2022b26a-1339-4bc1-abc5-dbc0dfa3c524",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f867f28-c754-46b7-a34e-6f0d105bcb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9885f2f-0d68-444d-9b2e-e069550807c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd8a3d9-c36b-4a4a-ae3b-f5ab0411f576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7799fcb-90d3-42fc-ae0a-2372778c6557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282e65c2-5e06-4ee2-a691-245bf5e03bc7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d73f6-6364-4876-b9e9-cb1ba8c3abd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e94012-12df-475c-8d41-561a10d0ffbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0b4c2c-646e-4fd8-a874-ed2b84055b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29145c54-7c87-4267-9b78-5bf8bfca4f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f05cd14-7060-430a-8171-80ec5fdb29f6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eb6d29-7534-4b83-8565-51fc5580f71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd08585c-534a-46eb-b842-14f294f13e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a585125-6664-4868-b239-efd93f9eee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15cf702d-ec21-417f-912d-25f520e0fdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57158aba-e00d-405a-b972-82eb0349aa63",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8480e5-c822-4e66-b55b-f4fd489b4c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72940b6-d68e-40a4-8765-723c1b15ce36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219b146d-befa-4f3b-937d-19a4a7a133a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5455d1-7a55-4d06-9547-1284084c5a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933d6e4a-645a-4e69-9048-3be6c8f9c586",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79141f4e-703f-4ec4-930f-1f9297fd1a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694233f9-3087-4790-8a95-ed472f6c4d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88b94bc-2904-4159-afbe-7f00a2a427f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37e060a-4019-4e51-8220-36956339e0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a60867b-b983-443a-8db7-e1e5156c62c0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc3c4e8-d788-4d44-9026-5a866e797b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e374be-ecb5-46cd-b43f-5f4f3e198f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87245ae-bdc6-4a54-a250-b0c1d08929f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359ab6e5-e03f-485c-bb28-7fd6f575a5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21999e26-3079-426c-a58e-27666fb6ec71",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4028eecc-6f67-4bf9-a43c-36f67e7c1c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edcd2c7-4bd9-486b-807c-e2a05c9093a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b43de8-b6cc-4463-99e1-236109c7ff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7f5fcc-dc5a-43cd-8615-95fab17e1e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa05797-c089-4a05-9f9b-b00fecc26f03",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58881545-4bdc-4da4-9a6f-1d1613a7d80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1132d503-f300-47dc-b805-c60cb880d266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba12432-66e7-48ae-aeb8-8e10f0edebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a49ada2-e1e8-4e69-82ea-d74cc58bb405"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f142347-8800-43db-81e6-650f05d02b16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6c3b74c-e087-4c0a-96e5-d54f545bf0a2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b32288-6ac5-491f-b1be-7cd1f40268d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4028e446-6cf2-4b7f-b137-e476ecf1d879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ea1f1e-5d26-4a7a-badf-29e5b5cb151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dac4d54-6f05-48be-8d66-094898ed0a64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb60ac89-2462-4a45-aa84-7e6adec7ad85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5951f41-f550-41e3-8c19-3eb751a58c29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a8cae82-f343-4f4e-aa5d-109aaa2577d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0654eaaa-ac5a-472f-b5cb-2aff4736aa04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e356ecc4-9746-4a36-b716-f842bfe6a32c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74c9b4f3-d1a1-4a8b-b83b-e1e40fbb6ea0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f9eded9-5cad-4253-88d8-db9818cb32df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0889ad89-39d1-48c0-809f-85e188fee22b"
            }
          }
        ]
      },
      {
        "id": "17528682-6dc7-4a2b-9831-4ba34a223b68",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ad52bb93-4f0b-430e-ac32-284b552907ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51372963-7894-40ca-b6cb-ee15f7349250",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dc470b3-96e5-4f2f-b6b8-9262589ea5eb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca01a23a-a08b-4778-8f35-9fa7a341307c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291db5fd-5f20-4332-bae2-e5afd82b254a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb72d746-057c-4fd3-aeae-4f8990dcef56",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e94c11-44c9-4ec1-acb9-abcb5880bb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2886440-390a-4b3b-8bda-f58e3bd80812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d314ebcd-a536-4e31-92fd-f51f69a0f674",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1134edec-3733-4d6c-9ee6-8f882a307de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db61a3ba-1f2d-4af0-89ab-7f9e9e6c026b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46b0ade-67c5-4f9b-9a62-97b9d114c004",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b5cc4-2d4d-4cd8-9444-2d9bddbbe00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba33330-748c-4080-9f7b-a5ff95c00456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfa36e1-1597-49c2-b95f-15d18aba0a95",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76119e92-481f-462f-b210-4a7c34d0e9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f17077b-b4bd-4f97-a97b-d456544f7223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241276e0-8616-4249-9f4a-f2f6626b08f3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c515c35-6bc5-4847-9a21-24030aa2ddfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6501f8-4452-452f-9070-ddba1a92be39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b6da13-0d3f-4c95-85c3-7474793d01c5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f332af-6022-4213-86ea-ca286c775c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bbef74-a269-459a-a82c-b925188e0ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85c8022-a045-447b-aef2-c0fb410a8bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57688836-5638-4d19-8d57-dfa789a1208b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf6ec6e-c449-4efc-9136-2a9275e655f6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448e9f43-4792-4939-99f3-98268c415e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62819abb-9b1d-4ecb-862d-05c1216dc47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f941a842-66a7-4dc6-9d73-2bcc43286f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6244def6-31f9-46e3-8d3d-b6c7442d79f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d42701-1019-40bf-ba41-d9241c5ed2f5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9d9f90-d883-4ef4-bfbd-fccc978894e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "812941a3-ace0-4eb5-83a8-7fcef46ebeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e71230-047d-487e-8b82-ba4cb8956de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf3d918-3902-4f6f-8193-43f6a8078c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19ede37-6702-4555-aba1-ec35a2435254",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c933f12-d020-467d-9e54-936d36d83991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed87ce97-73a5-4df3-ac3a-2406a3876c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd65c4d-244c-4201-bf91-d79046ee984b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7e553c-b6f4-4a21-af36-d6b0056c6eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daba10f-5e7c-4496-8367-41d6f540a271",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b77d4e-2cde-499d-94b8-724d15e888da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db93cad-cdc1-4ab6-ba3b-adaf90c75178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16995ae-d723-4247-b9eb-9d0cba3de2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12079c02-d28d-489a-9949-44d8ffc3ed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d85d07-36ac-4388-967b-2159a9cc7225",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f10676c-6772-43b7-9cbc-c9aae8413e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4268c67c-ca73-4685-82e9-8c183a162da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df180d96-acbb-448e-884f-d16424fe306a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869c7814-82fc-49b6-85db-d1de615d257f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b23210-aefa-46ce-a9e6-647606b42ee8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac8303-5726-481c-a002-5acab5b46805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1c236a7-2e20-4499-b927-6d32afa713c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fdd907-a0ca-4df0-bd8d-82898aad252b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0bdd7e-1431-4155-8360-8e8cfeeb9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb7f72a-151c-410a-83a1-b9168a5fde76",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a93782-2f65-4bfc-a601-7cb1eb088bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6dd85c8-2095-422c-ab7f-6e92191d8e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714c7ed7-6f6f-41eb-bca7-0cc8a84ea163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406d6df0-d5f0-4d98-9750-ca8066bb2162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32d9523-2cc7-4d6f-bd33-b628c110ab49",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4620066-da6d-41d9-8791-53976b087a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9caa541-c593-4603-9745-0d17d116a7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38209960-ec3d-4884-bc8d-53e9ef2ef29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1637bf-19d4-4ed9-a5a2-96b3e3852058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cc49c7-6f66-45f9-8f60-cf2cf7056781",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba3f3d0-0b7b-4eb3-a59b-f2a77902e37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa543c07-a857-4b3f-9d7b-f60f11f6df87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b0b5f5-4f7d-447e-8561-3bf0c10afb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d5d23e-b04c-46d9-a72f-ea42db75f13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e90c14-71b1-41a4-9528-032dffce33ce",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df32640-4a38-4d3e-8c0c-8de489d8f5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaa713a-fee9-475c-af7f-296ce27fb753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf5d3be-4d30-426c-b78d-7da90fddc57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09979e1c-1122-4c63-876d-fc29a9a3188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d8dea6-80c3-43aa-899c-9227dfd78df5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6850d1cc-01e8-4aa8-bfdd-fe302a8782f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03aab4a-7e96-4694-9232-7f0722905efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e4e277-cb59-492a-aa0d-49892e7abf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f19b1d-9496-43e8-91e9-ff4418098a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9af6ec4-946a-498a-8466-a297530758a6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8298c14a-516d-4abb-9666-d60fd33f3114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04008006-b7e7-462c-947e-c72aa9d2ffba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c278742-b2c7-4c0e-8074-e12ac156660a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f057e4d-881d-4da9-bfd3-7d431483b3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06c4bf6-94ef-4cdb-94d7-991a27e5f3ba",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175bc5f1-27b4-415a-bcef-3c3568fbcc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d28084-92d3-4539-b884-ec0472ebd32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef0b88d-6348-4594-ad17-40114c8ac5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64876d3-9119-4b44-9905-5712d1abb30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3686df9-664f-49f2-99cf-65cd425b1609",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1b1976-9e74-400e-ab57-1b95e2499ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e113b1-0c8b-48eb-bbb2-dc9845ac376a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a04e499-3d0c-404a-8f7c-bb48a25c6f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea02ea5-c1a7-4302-9e71-c1c3c9275a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f150d228-e832-4008-9220-ff2dac1858bd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d103086-eeeb-4078-8c08-c5e3598e4df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f08a183-f709-4be7-a877-a5c9df467200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b63e63-3ab4-4bda-840c-4d7657e5e728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df2f42b-4097-439a-b64b-a43efa3e7e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636eb1d7-1921-4baa-9b6c-c6cce3829e55",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3db6ecd-7f5a-42ae-9e67-6589e00992ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e2da23-2775-4e9e-be55-cba8cdae3032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4975b728-6c8b-4e02-af2d-ef481731c837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe31b9d9-e2f4-4282-9401-c432b7b7b9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640bc002-c9f7-4eb3-8695-e20d2f6b9d5e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f2d440-5c68-449a-9327-cf4208a9d62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72b6498-818d-4584-83fd-4460d3d99c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09e3e1d-8e1b-45e0-81e9-02ebe5fe4b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9778914e-9686-4a10-9cb3-89776ce8de96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f2be3d-9430-4e68-a52f-15993278c5ea",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fd6d54-c02f-4f14-88fe-18a26d468c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ddff81b-b141-49de-9d21-abaa7aa24e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15098a08-a705-4884-8a6c-334e04d48007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a3691f-4e4b-4908-a16b-02a4f19d494f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5354536d-64d1-4fb9-868f-2f2c54de5c67",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa92ee4-c148-452a-8f1e-e00d4d9fb80b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e829f0f0-1d33-4ff5-9b8b-e2f5688456d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3ba722-6b35-4f0f-85ca-642e7d5f7e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0498e82-b377-4a1d-962b-ab1a4d6b5f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc33f93c-3a2c-4936-a33e-68d4fcc5e28e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744ab907-32f5-46b7-b75c-a55367649e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5ce036-b08f-4f18-a27c-6e79ef8da92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a540602-fcd9-4ec8-bb2b-7f897e8d1bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426d60d9-cf9b-4d7a-a9e3-8e6a3504d7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b853dc-b715-4e6a-a5df-b79aca397167",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557e87e1-ee4d-42dc-bc4c-dbd9a3bab75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2118b87-6cdf-4cd4-af19-6243ea2672a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a6455d-c559-4c75-ac6a-eeb4acf2b49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4fc616-5318-4f52-bec9-e03f2fcad899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d8da1a-4e3c-4b33-b521-3eba86328b10",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3e5cc6-fe76-47e4-8a12-a3cdef10fbaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de5f7c1c-fcff-43ae-8e50-a83a2d6be560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1298ce17-8b9d-483b-b8a7-da61c517556a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28154976-1d7b-493b-9819-f472ebb4385c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8daabba-eb22-4dff-8488-e415ca0cb4f7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a68647-f552-4ce7-9bae-a4052b5f161f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f25cf33-3f6f-4a2c-9a46-977295880537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91708217-a819-42a5-b368-31c9b3d07a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b780e0-dcfe-4ab0-bbde-bbd1ac0d78fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdfa539-e127-4896-bcfb-63558cdd00e1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1fac22-0b01-4fc2-ac05-0c9c79c38b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c6cd8b-f5cc-48e1-a9f8-233b119fcf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633d89b6-ab76-497c-b97f-71c543912f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c0de90-996d-41c9-8dbd-a673e753722e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d39d9d-c9cf-4906-a3df-fe969f0f524f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5734a22-579a-420f-9e31-c4ecdf83b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a07223-2089-4528-b925-08e33d657187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18abe80b-d375-4ab7-ab64-f8f71141bc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cda573-f3c4-4575-8343-6d9f8dcf8862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b76a34-4d73-43d7-9f1e-16d53869e43a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573792d5-0c24-4678-8cbd-485c1b09f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2225be69-f3ce-4fc6-8745-9dcf063aed54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2d4410-3be1-4b51-b197-a46dab3efae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38ab343-d3c9-4c53-9770-37e86a32c6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c3f96f-b5ed-45f8-85b8-43455691348b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b5125c-d349-401c-bbdd-4e0dd8be83ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290a2368-a059-48a5-b156-81da26316d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf9033-c89c-4698-99d0-fd1042e2f8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730cc2f3-6d72-4a7d-9cc3-31d23d7c886c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b93d3-8857-4b1d-b5c5-fdbd536a6cf1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf2e46d-d82d-42b5-8c3f-230b1e9ceaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea3ed95-ed92-495c-a5e5-cc1b5926a09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44ca35b-c684-4320-bfe0-7ffa595feb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88403ca6-56ee-4d7d-92e3-709382d24648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5413fc0f-eeb0-4624-b6a3-b6adccc81973",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928167a4-280c-48f1-8bc0-ae8c52291938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a04877-7458-4b4b-9177-95b92af13f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4142ff06-608a-4aa2-b826-539a222d747e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c438f471-cc2f-466b-9647-0ad48eac9a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269a75c6-ad6d-42f7-99b7-19fbbe22c634",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87fdbb1-36c7-4aaa-8c8d-a3e2eb96ffa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a02a5f5-f5b5-4826-9c02-2f59c346c01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b8b5e4-f12a-4e4e-9c33-8ff5e91b1ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5710cebc-ed02-41bb-9623-51f14da1d5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f34943-342c-4cf3-ad4e-7a39c6796226",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702b8dd2-d9c3-4ba4-91d0-93fec28a3eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d24a68-e28b-42d5-9221-5619caf2dc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdc1259-c8ed-402e-b67f-dddf4f5b2146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6fe984-dacd-4a60-ae7b-44794ef470ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ad4938-57b3-4355-8ef8-7db7b835e633",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daf900e-ec83-420b-a895-9cd9a9a5529e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117db66b-51c1-4d87-b4ef-3e28b2af6772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c2fc37-2420-41d9-bac7-7e4325f65b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35966120-a541-4e5d-beac-4c6d5eeb13be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fd65bd-161e-4160-a3d6-969754fca524",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6b7f96-ac8e-4a83-b2bf-61767db94dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711e8f7c-0d1a-4eb7-bf6e-db2347b6c97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed069f7-5c21-4612-9331-eb0f4ed92365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418f5308-82ad-47c3-9894-f7c4549d8b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4342b92-595f-4129-b83a-4c15dee34b94",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23317ec8-4798-422f-b3c6-5c1a14bf4a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b20a01a-dfa2-4173-b0cf-b745f6f813f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab646c51-5f34-449e-9b92-072e68ac8068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485d6b70-1cdf-4e3b-a2a2-3e617574a0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2a00ae-e353-421d-ab30-2aecb9fdc4e6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57fbe0c-a71d-489a-b884-161ff23b90ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ba448c-03fd-4d47-ad60-23458aa6e76f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8d557e-8a2f-48ca-99e4-0a9f484f1da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2103536c-7f6f-464f-933e-e51df9579be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef0cc3b-79fa-4937-81cd-6dfbca9032d0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9140cd1-0638-44d3-ac31-ee74870df499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e73d62-3bae-47f8-8403-6a120539a20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5be0960-90c8-4c8d-a62a-3d3f34b0d8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d069cc8-7258-428e-b7bb-b0de5bc1000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62ec3c8-7531-413d-8b13-550dd53c46bd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3806f53d-30d3-430a-8767-198b541c7b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0d574a-dfb1-4643-a161-46b0b6c11163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf33bad-e52c-40d3-a8ff-4e8121c2ff65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834af1c6-d3e6-4162-8d8a-a4906b9df532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1109b37-6380-4b1e-9e61-5bb23ddbcdbf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9237859-cb5a-4ba5-b4f5-dcceaad7b15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b285076-b8f6-421b-b323-63af6063a742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5581fc68-48ba-4f66-9f6d-7b2cf4f6e921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f70f7d3-465b-4a28-a390-fdf3d235db38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3041c85-6c82-41ce-b4d8-6d8f566ec609",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f1d388-9c30-45d7-a54a-9a7cba28d57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6208bf59-0fca-4458-aac3-e27b767c00b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75d4a70-24c4-415f-8a7d-9a5842c939f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e5375c-4b65-4c17-854b-83665c067142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a96b2-bdd2-423a-a469-2633f59ce42d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e72a1d-40e9-4b90-84f4-f9ea11f4f647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf09368-71aa-44b1-9f2d-c4f2e3112680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10c8274-c108-4b4f-bbba-9b3eb222156a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12aa85c6-613a-4cfc-a253-7634936fff2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32c442a-24a7-4028-8ce2-01dd6f4cfee4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9a53c7-611c-470b-a572-17e2fe23359a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2096636d-fe74-40c6-9c49-e38f0d2182a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796551da-ff94-4c8a-8870-ae052395b1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3191aad-bd12-443a-8827-9e0a3ea73a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a6a7a3-0e5c-48be-8d40-44b08ddc92f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4c141e-3037-4f5b-930f-69a4aeee245d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb7234d-0029-4090-b9a9-f38d34b8aab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5358adc1-7a05-4a13-9721-08952d34c040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c90f8b-b5ef-401e-8935-7ec317d7623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afbf49f-a95a-4655-839d-22fb746f3517",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cfdc5e-0001-4f22-9557-eb2368bc8527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e043772-1954-457e-be23-c19ea133b666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89558d2-caba-4f32-b815-cf9d7133dd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cc69b8-4d5e-4172-b68e-e1bea5c7feb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98dce7b-bff6-47ff-9114-0af758c46bda",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b52262e-36e9-449d-92be-fb54def9df02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20065b1-59f7-4865-952b-33d205140e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2623e-ad3a-4a5c-8f77-eda38e25b400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59450775-0f89-4ee6-bedd-c5d16d367426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6db105e-5b95-41da-8200-37e6bed8adcb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13a4ebc-f421-4538-b9a8-46c7e1793f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7767d084-8fed-453d-8bc8-8343b53af1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0047bf67-2f1b-4b81-a614-002ececf8593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9985ce97-1c54-4bba-95a7-88d41947da45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff98f1d3-79ea-46af-8848-bc014e07ec07",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687519b1-4df6-4d40-a2e6-8044db6b816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b387cc54-cbe7-4d84-a465-69e2c7ef0bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d037c84-1df6-44b5-97f7-aea751a4896d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f165b653-1568-4ab0-9fda-57c566c4b76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f8e9fd-a324-4097-8bcd-62ffa8100bc7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf01c53b-a9bf-42a8-9928-73d487532b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67587d6-5d3d-446a-b709-97eefda8261f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119f72b7-6789-4a3f-9d9c-598113b77ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149d0c60-a7d0-4b0d-a21f-5b96fa344a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594f822f-6495-485c-ad27-757e1c047cc1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f3bb24-7086-4dfb-97c5-f9057bf1fe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bb2777-35a3-4d81-964b-0b40b28bd23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fb0ca3-24a1-4b3d-a14e-9ca87989137f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40753653-5459-436f-b87a-534efaf5e860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f4f6d4-4f7f-4a19-a47c-b0d9d72a7ce2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b178621d-14ab-4314-b7cd-4d9d9bdffc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9ffc10-8a7e-45dc-b0e6-7bf285f55de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a26eaf2-e226-4e36-9eb0-eb89752f7c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88058daf-864e-4f4a-9aad-747f7c171c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117bae33-d306-4de4-9919-6ef3c98e155e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51023f0c-e7b0-440e-a2fd-0f03ed899331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e9ef9e-a5b2-4835-b225-e65df7d8c73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5847d3cc-e953-48dc-bde0-abf1df37b6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88748cd8-1240-433d-904c-e2aa921e4715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eba6c8f-ee48-4bf8-b097-962c68a512ad",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eea0898-bea2-4abd-9ded-2b24552c5a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d33135f-e495-4766-a4ea-e9801f6402bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4b235c-4e86-445b-a858-229bfcbb57f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd8ad0c-7700-4e50-84fb-2c5ab4f2696e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410b102e-7731-4f20-a218-0a3831382cdd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cec94c-fa56-40b0-ac6c-86c73cf45eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb7023e-3641-4ac7-bc89-6bff7c018a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16b019b-860e-4f90-bcad-3be1b81654a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f606b55b-b3f3-437d-b698-30d96acda629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2052af1-0f07-4ffc-966a-9bc1447fed27",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd78a26-4c96-480f-b92b-cf947ce59e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d080361-4962-4cc5-ab8f-a2064738419a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5828a6-6003-41a0-9a61-6f98d81c61a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bb5db6-ce67-4f2d-90fe-ab42c1e352f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6532acad-7ff6-42ef-bb98-1a960d40e4b7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b768b0d-d1aa-4314-8cec-4513a5a4fbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7b06fd-7d68-4678-bb05-118c37c60bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d0b612-47d8-404c-8f2f-0af2254629ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe000291-657e-4a3c-95db-0ab54f1bd9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a999e54-77c4-4a98-8873-588ff0b5a812",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81f2d28-3253-4130-a1d1-2ac68676b4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc08d3c-736c-446a-abf8-a33d2b5d750d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb99dac1-efef-4115-97f7-4e3e888ef0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7891e138-d2db-4429-8e07-7dc5c8aaa71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342b1357-07ee-4b2f-a8de-08bfa12b6983",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767630b2-b54b-46ad-96db-e8a394e3fa5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46c0d98-0311-4f14-b286-fde1aa58c624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dce548-73c9-4c54-9e7f-dbbbe8cecc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7961a02f-e99a-4d02-b796-1c1c6b74e299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25569d06-a5ae-4aa7-bb54-b065157be7c1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4002004-7b01-480c-899f-114ad4bbfb4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4558049b-ff29-4622-aa61-550fd0e859eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f339e116-39e0-4ba5-a40b-f1b4cd447d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7e559e-bac7-4599-b989-62ab1de751d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce724e1-748d-44f3-b2a8-9827aa1ee63a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3615dc-d5b3-4f0f-b052-9cd2439d02ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19437e29-8a65-4c8a-83b6-b45c35540d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca897e8-2a8c-4219-8fea-543747a74846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e921cea-e610-4b28-8bb9-b80bfd9d78d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2771b6-e139-4f07-b5c9-427ccabb4fdc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202bea9c-940c-4da5-a770-d178f21908c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44ed498-6e0d-450d-bc46-80b2ea9079dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcedae2-7a52-4a07-8641-4029c6d7dc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef03447-a445-45b7-8791-7607cf9ab9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7129df0-f819-407f-bad9-cb83648b8089",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84febf90-15c4-445e-a571-ef46e8733c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ef8a67-4fbf-4fe0-a71f-94536e239201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f3ca1e-41c4-4f94-b82a-1e0dd38d9c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac2d705-648a-4033-aab5-fecb5bba807e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168821dd-552a-4835-94af-6f70cdc7a644",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77feb90-629d-40d3-becb-36644787cc91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb515ff-a96f-477c-a85c-3725486f8836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9ef89e-1df1-4d0d-a22b-04c0ee692215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d805fb7-ae77-4ba4-b756-fd55576eb23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea634a56-33d0-46be-aeab-9fec34d4441c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0a99dd-a359-4eda-9dd5-71096b994b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7c43bf-b098-44da-92a6-a2c8e9edecc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf3800d-6001-4e92-9bd5-2707a2134424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42bf6cf-cbd8-4710-be2f-3a66a9df3a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f840f7bc-c1b9-4f77-a629-fbd62f2a3fcb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab93efff-55b6-44b8-816a-760977776abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b2ae98-aa19-49e9-9310-04f701a81be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5db95f6-e258-402b-8f8e-de15f03d85bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af828c1b-0cab-4a7b-a56f-8c4d55174bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459a5185-f032-4e81-9f21-35932bbb1a9b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf4aed-c146-48df-b922-c5d1df2c5f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d389ec3-d0d8-4740-93a4-0a7ffc631fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa16599a-3589-4644-88e4-2af7f6174089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00981b4-3e6b-42d0-9c20-0b1a29a7d345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4835a5-cfb6-48ce-bf24-a15d0f513cff",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634d5230-6f86-4f9e-abf6-13dcca0f0627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc6baaf-0737-4403-8b0d-461c542a16a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081797d7-20f5-4f9d-a08d-5e429813db4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf47175-1591-4cae-8511-5ee17c69a1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5d13d0-4462-4f23-9730-256905fe3344",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78607786-46ee-455b-93a8-eb61e11e5aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6528d9-1712-42c9-b62f-cbf878859725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026ccdd6-d294-49ee-b395-ecee4942e6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca90064e-18fd-47d9-82ec-b7730914ee22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5514b2d1-2957-4485-a140-a4b5ea274f56",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec1d371-9e30-4eb1-b6a7-20a37ad46c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68da7f2a-6e66-4675-8388-494e4e1e5273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bade798-24b3-421d-8c26-1a58df8e73e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597d860d-4ab6-4591-a694-100389837b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21129bc9-21ee-4abc-8d29-09617011cc49",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb26d05-298c-49b9-b56f-18ffc654f5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db11c228-a546-475f-b89d-53407613c712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b3754d-4919-4b55-840e-dac90d0f025d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1ca90a-8064-4627-bc4d-7b7af3709e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e1829a-06f7-47da-a345-2dde31ecbcae",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c38f12d-bb7c-44d4-9168-1c587e7d0d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed08da7a-595c-4c5a-9eb2-2689cd66ea6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950cff18-e1cc-451b-97a2-c091bbefd861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbc7ce7-5254-456e-a16f-83093c7a859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efc9671-973f-49e7-8ecb-c0a81a67c05c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa1b1c8-7caf-402e-8d88-7d2539236a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c0a5d1f-e9fe-4c84-a8fc-935b403d006e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b80f10-cd8a-4af4-a3b7-ae4ce7939b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36da6fdf-f49d-404f-9ecb-eb3d8b54b610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c720939-206f-4c09-94b2-a61150a63ae9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fc4e48-a803-4fb6-9d5e-16c9420353dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd0353c-e177-4190-b6fb-53add1317622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15b5857-37d2-4ab7-bfab-b309153bed33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83193182-bdba-4b3a-b06f-1fa7ce9160f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f677fe7-ddbd-4b53-82c5-0f996910cf17",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e1d2e1-8e2a-441d-93c1-25f8e3d14655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef44396-8c45-4df4-8f7c-6668cc73c29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb9bab8-6e4c-4a88-8237-ae297388732b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283777d0-a8ae-4a22-ae9c-81b7afe963be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4502c52b-211f-442e-9055-71214a521e33",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e2233c-5c06-4260-8050-01780f61cb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8b79b2-d837-443a-bc72-71c16c28aafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b03748b-fbe2-48b7-8f48-60e365f2ace5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf538fb-fe09-48fb-bea5-e27498d234a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff51786-c607-45a2-919c-07b0e0ee2501",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d043b2ab-fb30-4910-8e03-f1c81278e233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bc8406-6f7f-4c34-bbd1-8b30a4218c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4542740-fbd4-42bb-968c-7d55830b8ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17a1890-7b75-4b2a-ab35-f51e98e39d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e2c087-98b9-4bcd-9815-0b712e056627",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeb9969-ebb7-442f-98f5-27b08832bc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f30612-4a36-44c6-b3fe-a8bb162e7e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fc48d3-c59b-4df6-9515-9222dc4cbdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08375482-26ce-4b46-a5ec-3cfd31352471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f219eac7-83e4-4d4d-8aec-3a1f566f7850",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17e4432-2b36-43f2-b1b5-5ea454dd536e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb024b2d-5b71-423d-b7f4-73df0873ae59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4673c922-6524-4b81-bffb-93d52c1ee686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a09717-2629-4bff-8535-46ffd64d2b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cd43d4-8bfc-4874-9e66-919cd63b47d0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413c54d9-95e9-45d3-92a0-6b4060bd07cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad5ec15-0ffe-49fc-b9f8-699d0eff390f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be45226f-50c8-452a-bb57-726602912a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e2994e-b563-444d-bbb0-9bacf3513687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f95d686-d145-475b-9f3f-42cebea0d72e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12609a40-878f-4640-9e66-e470c373604c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913c7d07-388c-4d94-bdac-aa55192d3d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf866b39-d379-4259-9beb-b8aaa095b168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b652c3-3846-465e-8a05-d04bfa8fbc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f480da69-87fa-473e-8604-75163e1a3cee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eccdf20-a5f7-4204-813d-c01c961bd670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9572cef0-7d0d-484a-86d2-98569b088332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b70bfd-bee5-4d7e-90e3-2289bbf0f9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237a2794-d7ed-4eff-bd30-2c51022d995a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6859c5-7ab7-4403-8d57-6d6c65a503a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33eaf439-7691-4652-aeb0-ca474875e62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a03f2f9-742c-4381-a5f3-851cb1d173ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0d11e4-caa2-497f-a612-9c530eff9d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf41178-4197-422c-bd32-a54dd0d8bcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6f1dab-729d-447c-80e4-690c5bd55090",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4954b4-2396-4de9-b4a4-88ff1a195553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b35b3b3e-aaf5-4ecc-912b-8d7d2d3ed7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc21f66a-8e67-491e-80be-e905b9c933bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35aaa54-956d-4744-9aec-26c3e24a1d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c547f9-854a-4088-87c8-8eff6b10eba0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc0681c-bb8c-467d-b8fa-0af9d8f71517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd41192f-170a-4ac7-b50e-46f011ba7647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ff11ef-f8ff-41f0-a7f4-20284d5b0620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c4f2c8-a4fe-44ff-940c-59cb113be658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b18c03-e55d-4c23-943a-9a92b00ed4ec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851f50d7-0330-4e51-97c6-2d40fc869dda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5037b69-898d-4d78-9ea2-9f2c352ea5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb496972-2f2e-447b-a5ba-eb0bd1aa000a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d4931a-ba6c-4051-a894-07fa4041c94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ce6d0c-7c82-41c5-aafd-be6edcc2cfe0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c13f700-ce24-455f-bd01-babebeafec5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b457cfd-c853-494b-aaa0-0062cfb0ba4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e15236-7739-49f4-8444-09d0b23233eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff5fd8d-d98a-4a21-b5b8-b4f1833de493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9a4754-ba05-487c-9f92-05bc05ccd01e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194a4dba-8ac0-434b-a0d5-b3b816da94bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce252baa-3dc1-4c93-8517-f9099da063b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7788447a-d79d-4725-94a9-0d5f16fe3ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7abf9db-369f-448e-9bde-e8e1bfd80c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09ae9ed-2d6b-4dee-84d9-13e37d6665a8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904362e1-8b64-41d4-9d3f-7265021c5204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2531dd4-ef9f-45bc-8d09-d7d7ecb9e635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349d81d1-33af-4b07-a2ed-3acb15499c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55edb918-fb24-44d1-9bdb-7299c2553065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4aedb0-5cd0-4b32-9f42-ab22f02a979a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bce194-5e2c-4c26-accc-e6f77d21eb44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518fb998-0b34-4501-a97c-f6871d28d605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d07cc7-3ea2-4776-9147-a581e2cfcf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fd9c86-3de7-4530-977a-821552ddb0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86f6aae-8ec4-445a-8da2-5a996afc7f79",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f513596b-dc6f-4fe2-b093-341933739933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c04166-3746-4488-9cf4-355a8f0e8794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3c275d-7d1e-4742-a8d1-c53c70f90f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5dbea9-dc83-485c-ac7c-631c4e33bcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dc73b3-4f46-407b-99e0-e6aff3b9e6f5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef572fb-cc6f-4442-b88b-6b4a48aa910e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90f4837-a79e-45c8-bbbb-d33ebba4096f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a494d2ef-ec6a-4c71-bb04-9f6fa2f7c6c7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4891ab32-a1fc-4262-aefb-594cf7c494b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456b58ac-8ebd-4d64-951b-d6ca398b7537",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47325bd-0b21-47cf-b0d1-c98aa3ac9c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c4a5ea-9b1b-4620-b718-5b3d356f3576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef08fae-4887-4cb0-afae-cf8d625af445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3613bab1-e322-4d1f-97f6-6c8f025506d9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22878ed5-16a9-4681-96b1-17ad6854e43e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c184eb6e-40d5-4ce8-a1fb-c3fae71f1eb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a11476b3-d41a-4de3-b057-c5116d6098b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "263fba3d-8573-455f-a82f-07f1f5788af1"
                    }
                  }
                ]
              },
              {
                "id": "96cf6b52-b46e-4005-9b5c-03e0e5b1200f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc34e246-9ed5-42c4-af14-75391885a595",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616cfba7-ad15-46a7-89c3-c7bff5ed2587",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "aed47219-bd79-41c5-b3d2-6f9a5bb95cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cead36-cfe6-4cee-9f87-2eb723132171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ae4041-65df-4589-94da-9bc868d5fda6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b5d92e0-c7e3-4eb4-abd6-20c962b5c108",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2361877c-5302-40e6-9f90-c059cdb9687c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24ef1efa-d54e-4ae1-b9b7-0b79929f1a8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5de2c4ad-3079-4ff5-b106-adf8a827b5e8"
                    }
                  }
                ]
              },
              {
                "id": "fe60c213-24d8-4c5a-9fa0-47d54fdd2287",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ab631c68-0dd4-464e-a443-b32b9dc15feb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7dad52-5bae-4e58-8c8d-dfeded1243ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a8b5644d-367e-4952-8286-e6ba70312128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a7404c-0fd1-4105-a6b1-8499a3834fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9457a124-5234-43db-944b-c6d6b28b0762"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f8b330a7-a8f1-40ec-a85e-525dde6a1a6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31808748-6c2c-4dcc-8ca2-c0bf571305ae",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "273e8ec2-a720-4826-a558-426deff60101",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "12f4c3ff-407e-461a-8d1a-e517cb65c710"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a8d536f-6430-4fb5-a108-246969ca3883",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb4351c3-1f7d-4f37-a095-c4e70b209cc9"
                    }
                  }
                ]
              },
              {
                "id": "a9ff7812-2db2-49d5-95d2-9a9f805c025c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1936b8d-f2f8-4e3d-94c4-beeeb53106bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68200403-8927-4aeb-a67e-d41738faeda5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e26aadf1-66d1-4115-992b-12bf9b47a13d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9762a25-c7a8-43c7-a34f-4aaaba9d83ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bbad3bf-8fa4-4d09-a752-a32a8f3dc01b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7d785de4-7ff6-4c6d-8ac3-b82fe62db748"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a414254b-c0ea-4500-8725-3f278e7623d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fbfa48e-aaee-4285-a598-67a3cf2f96bc"
            }
          }
        ]
      },
      {
        "id": "11cb6d87-d046-453b-90ce-1a5cd0709116",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6069e460-5d4d-4e81-b0a2-5334281cf85d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1dec3ae3-0634-4aac-a882-560cfb2951db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cb90809-71cf-44ec-956d-81c564d8d551",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a2c692-f71a-4808-a2ad-81ea67adf0d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b8d2bfac-6466-4852-9b98-89e20ae72b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9c4324-1664-4778-ae05-8859db087514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb259152-e998-4630-a242-a995f4200f31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "360b0896-9fc6-4448-bb56-073ae1b3356b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6c452ae-c4f7-4f39-a1fd-4628ab240427"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24be72a2-0437-411d-861c-b7eacb2c7e14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b97a08df-5ad8-4381-b061-8e7cfc9b9192"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbdf62e0-047c-45f2-87c7-bbdf9c8f272f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bbe8233a-c5a3-49ca-88a1-1e526b4f4afb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27634d97-38dd-4ef7-90cd-5022f715def7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04c2bac6-985e-46a0-ae97-86505404bef4"
            }
          }
        ]
      },
      {
        "id": "7da03058-66a7-4662-ab34-90ec785349b7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d3b6381c-f400-439e-abc9-bbb5f4eb7b28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9a64dc2-78ea-4fcc-919c-0bdd1b2e1632",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf04fed1-dc84-49c1-9cd3-4f4e57c64414",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074ed481-3f63-4e4d-8491-47ce661f9124",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcc9f2a3-4383-40ad-9c38-9d4acaf022ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f120953b-14db-4599-94c0-f5c6ad4a75ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0d7e6af-d401-4063-bd87-49827785cee9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec72ca73-9ba8-422a-969c-166cbaa57bab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0750636b-4078-4f71-bcdc-fd1eb9d17132"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "149c2fef-0a9c-4d3a-84be-2a168a11e9cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "994ca057-4031-4a96-9690-f5ab82865ec8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b10d062d-f786-4d02-af43-00007fa19423",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "939caade-8c88-44a7-ab7b-7f60eefd07b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8eec36f-de2a-4b54-a9db-e78cb1b993fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ec92fdb-f029-4d67-bb99-800f9a686ad3"
            }
          }
        ]
      },
      {
        "id": "ed0c2923-0ecb-4d72-ac7e-02a90d3c375f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5be00fb9-1ded-4894-a2e6-0102dc6b7941",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab307a16-5fb7-4c05-88f7-092d54597d46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "485536d6-05be-47dd-acc9-8928b8d577e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452819a8-51f9-4b18-8399-580724dc47ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9d9ef82-0d55-40a9-ba98-d8e7bfc05be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe819f4-cd53-4748-b67d-80c647403e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af9401e0-12fe-49c1-9edc-3a493502cd55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c590192f-77b6-4763-96d8-0b81a7981943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31d54f5f-becc-4f2c-9a45-855318ce9d35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32b941bf-aa83-4f3a-9b87-aaa4aec2bec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae4bce60-94d0-48ef-95e0-8a3e049bd5e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79844c3f-0bd8-4458-a420-552d652a1e56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4094481d-2186-40ea-b55a-0c989765f329"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9064e6a6-5483-4ee0-8410-194db66e4a68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00483bd4-e746-40a2-950e-0389fa595ffd"
            }
          }
        ]
      },
      {
        "id": "79bc042d-a685-4f48-a511-6af4ce82fdb0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0312f54e-347e-4dc1-b426-67c26778f43d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87bae65f-5f52-4a3d-b633-3e8892b4aea8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8f881931-da5a-4f43-a6b2-5d81d0b92db2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "806edada-86b2-4fac-af2a-5e3275754b7c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e770f9f7-b008-4e16-9ed3-f233a3942bf6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.52280701754384,
      "responseMin": 5,
      "responseMax": 825,
      "responseSd": 49.197314922965354,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703983101460,
      "completed": 1703983129974
    },
    "executions": [
      {
        "id": "8afa7849-cb53-47dc-a049-01729c9b2e3f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a7404f00-61ee-4b3a-8741-bf1c60615d5e",
          "httpRequestId": "60fc0091-1e51-45a3-8309-4248a3beaef3"
        },
        "item": {
          "id": "8afa7849-cb53-47dc-a049-01729c9b2e3f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d8f74d6-1de4-4881-9003-c1aa26ac2b17",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "b16753b2-7ea2-48f7-b21a-04126cd05015",
        "cursor": {
          "ref": "9d40b0f1-810c-4cd3-aeee-bbd3b66a69df",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "33e03a78-53f4-485d-8fc3-14eb22e91111"
        },
        "item": {
          "id": "b16753b2-7ea2-48f7-b21a-04126cd05015",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f59b283a-d35c-4e0a-9b43-4079996a301e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "69ba3e66-fb5e-4b69-ad35-38cd207bacac",
        "cursor": {
          "ref": "b7a2c282-fb83-4027-bb2b-90c341a4e740",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a08070b8-3544-4fb7-bc76-fe16fb89c376"
        },
        "item": {
          "id": "69ba3e66-fb5e-4b69-ad35-38cd207bacac",
          "name": "did_json"
        },
        "response": {
          "id": "4dd6b05d-d721-46e8-a997-90f04599f866",
          "status": "OK",
          "code": 200,
          "responseTime": 318,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538fcba3-9da0-4b5a-b8e8-825e7c3924e8",
        "cursor": {
          "ref": "5b122f79-a0d1-4b0f-8a27-f87714089db0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98e785ae-5f04-4a47-80e5-d2d76f1b40da"
        },
        "item": {
          "id": "538fcba3-9da0-4b5a-b8e8-825e7c3924e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "75f8605d-559a-439f-b1c6-d528b0402a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538fcba3-9da0-4b5a-b8e8-825e7c3924e8",
        "cursor": {
          "ref": "5b122f79-a0d1-4b0f-8a27-f87714089db0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98e785ae-5f04-4a47-80e5-d2d76f1b40da"
        },
        "item": {
          "id": "538fcba3-9da0-4b5a-b8e8-825e7c3924e8",
          "name": "did:invalid"
        },
        "response": {
          "id": "75f8605d-559a-439f-b1c6-d528b0402a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfec6489-a801-4990-b54c-ba1dac451126",
        "cursor": {
          "ref": "16718b3f-2e5e-4f4c-b213-428ed937088e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "be6349f1-19b5-468b-bfc1-d24997cf8c84"
        },
        "item": {
          "id": "cfec6489-a801-4990-b54c-ba1dac451126",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3ee0c1a9-c617-4066-ac9e-ee554862e421",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905c5948-7e4f-471e-91d5-ee224bc24202",
        "cursor": {
          "ref": "5f09ee95-2c00-46e6-84ee-62638037431c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9d83cc4a-935f-4d26-8381-48a4d53e4c27"
        },
        "item": {
          "id": "905c5948-7e4f-471e-91d5-ee224bc24202",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6aa6d5f7-6827-4049-b442-14e89c2b68f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06fc5a6-f498-4e48-86dc-111736527d07",
        "cursor": {
          "ref": "79e19530-b9fe-4527-86aa-02b89403ce81",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d17ccde6-fc3e-4a23-867a-bc2921b76737"
        },
        "item": {
          "id": "c06fc5a6-f498-4e48-86dc-111736527d07",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e0e11966-94db-4014-8cfd-1affd44231a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9b07a1-4f9f-4a4d-a063-cdc230ad7fca",
        "cursor": {
          "ref": "16e6016e-adb2-4a80-b9bc-f4b2241cc38d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "048db4e4-556e-41c9-a758-bcf2af7425a2"
        },
        "item": {
          "id": "2e9b07a1-4f9f-4a4d-a063-cdc230ad7fca",
          "name": "identifiers"
        },
        "response": {
          "id": "6e56b4a9-0cab-45ba-af02-9f6e13c0f845",
          "status": "OK",
          "code": 200,
          "responseTime": 825,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60dabf7-264c-44cc-aca0-488bc28f4fff",
        "cursor": {
          "ref": "f02e588d-aafe-4678-9427-85e82c957ddc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "93291338-a6f4-4818-93d4-a1db2eb44751"
        },
        "item": {
          "id": "f60dabf7-264c-44cc-aca0-488bc28f4fff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6d58b6eb-bf6c-4c85-bf04-8bb9aa3fb753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8b4d21-79d2-453f-a263-8dd72b554916",
        "cursor": {
          "ref": "16bc2d1d-332d-46a5-951d-75304215011f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e1e6d1fd-5bfc-4a3d-abf6-02693b40a677"
        },
        "item": {
          "id": "eb8b4d21-79d2-453f-a263-8dd72b554916",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9126fe03-962e-4f09-867c-c19c9c2327cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c5cf43-921e-40a8-aae1-b06b965c4439",
        "cursor": {
          "ref": "42e0dfc7-0add-4bf6-afe4-121bf8ddd50f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "696fe93d-47b9-4e72-93c8-f17cd60d497d"
        },
        "item": {
          "id": "32c5cf43-921e-40a8-aae1-b06b965c4439",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "36af8a67-33b7-46e8-835e-56e45cf16e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e5edce-98bf-4df6-80d1-3a1eb8655d94",
        "cursor": {
          "ref": "74072353-0a0c-4fb0-8ba7-98eb3d86c1f0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8c5afbf4-b89a-4854-8b45-bf51dbcae418"
        },
        "item": {
          "id": "91e5edce-98bf-4df6-80d1-3a1eb8655d94",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f454241e-780e-4fda-8297-85cc9690af03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade41d05-214e-4f04-86d2-02d39d274d3a",
        "cursor": {
          "ref": "1efabb68-62c8-4253-b671-3b4c3ac28f95",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "71224ac9-ae95-4e75-ae9a-e193db58ede0"
        },
        "item": {
          "id": "ade41d05-214e-4f04-86d2-02d39d274d3a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4196c6b9-0df5-4060-b397-dc72f213df6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4910ffe-3ca1-4f44-b326-0f4da35a8671",
        "cursor": {
          "ref": "ce4a2ec2-444e-4c86-85fa-b6e45514e14b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b36daa5d-b6e2-4553-99f7-57a69297ac87"
        },
        "item": {
          "id": "c4910ffe-3ca1-4f44-b326-0f4da35a8671",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e3b8f47e-8468-4bb5-b9a8-b45ffc1f4e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1911bdc1-ca93-4ade-9e07-cbc0541b67ef",
        "cursor": {
          "ref": "63b57a0d-b4d5-4008-bd50-a20ec8c97bf5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "feeb8ce3-a9ef-4c23-a873-2e9368cc942a"
        },
        "item": {
          "id": "1911bdc1-ca93-4ade-9e07-cbc0541b67ef",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3afd5db8-fab8-40ff-82f1-23b6326a9ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ff9d27-97b8-47d7-b279-679bda84cfb5",
        "cursor": {
          "ref": "ec2f740e-04a9-43cd-bcd8-5a1d3b781934",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a28dc6e6-3a39-4e6c-b13a-fa6ed75dd199"
        },
        "item": {
          "id": "75ff9d27-97b8-47d7-b279-679bda84cfb5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ad49fce8-ee48-4821-a40c-b6a101a8f2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0204af-deee-4937-ae9f-c163f8496073",
        "cursor": {
          "ref": "36fde92b-8370-4c00-b293-752ecb327f3a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dbb9dd6c-5849-4211-b8be-20efd50c7869"
        },
        "item": {
          "id": "ab0204af-deee-4937-ae9f-c163f8496073",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2d4b2b1b-7e4d-4643-b958-eaf3abf8b25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ce2fb4-8e60-4b59-99ee-33b692e9d1a1",
        "cursor": {
          "ref": "03c82a79-0ef1-4d09-bb22-18fb6c096520",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "36a3a803-00d3-456b-a4f8-7d7abc127333"
        },
        "item": {
          "id": "90ce2fb4-8e60-4b59-99ee-33b692e9d1a1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a66bcc07-b618-4c62-8d53-675ef5ff179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4303f55-1ba9-45d3-94a6-dbb349e4ee10",
        "cursor": {
          "ref": "35d5cc2f-53d0-4563-a9b7-a10e5e6d639f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9311e84-edb4-491f-a1ed-d8c508a01077"
        },
        "item": {
          "id": "e4303f55-1ba9-45d3-94a6-dbb349e4ee10",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "13a665b0-f977-40f9-957d-bdce44827a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421cafc5-c468-41dc-8ae8-ebcb0cb2e3df",
        "cursor": {
          "ref": "ed0667d2-59a6-4cd6-9963-3740f177ca20",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0d5c57f8-0725-4221-8947-8bc32dba52c5"
        },
        "item": {
          "id": "421cafc5-c468-41dc-8ae8-ebcb0cb2e3df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18d1c90b-5a67-4873-9bc7-e27d8504d4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83db375-aa6f-49ef-bd1f-2d0dd7cc9fd3",
        "cursor": {
          "ref": "dac13bcd-4afd-4f2c-aebb-0da437c43485",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eeef7586-c162-4720-a5f2-c7729503b664"
        },
        "item": {
          "id": "d83db375-aa6f-49ef-bd1f-2d0dd7cc9fd3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0090bb21-5dac-4c29-acff-fbbf2a016978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1181a1ec-2dfd-4b50-afd5-55e6671f48f7",
        "cursor": {
          "ref": "44be914e-aeec-47e0-871d-af7d5a804eee",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9eadc0a8-64f3-4cea-a196-a3cfc4882e2c"
        },
        "item": {
          "id": "1181a1ec-2dfd-4b50-afd5-55e6671f48f7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6e03d189-3dc5-49b5-a247-6e8d56c39cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647f5206-81a1-4ef7-a896-a83e901fb9a3",
        "cursor": {
          "ref": "c87be7b3-8700-4b43-9c12-d4f38dad3003",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "47aacdfc-55c6-4479-a571-331df74bb1a6"
        },
        "item": {
          "id": "647f5206-81a1-4ef7-a896-a83e901fb9a3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb2d8fb2-73f9-47c3-8b25-1be091097fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5024ed2c-9871-4b86-8406-9257e5ccde8a",
        "cursor": {
          "ref": "91c7bf18-a340-484f-aca4-20666d295ca0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "95a2b821-c41b-4ee5-b8b7-ac8f435317a0"
        },
        "item": {
          "id": "5024ed2c-9871-4b86-8406-9257e5ccde8a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "781bf870-ee4c-4ffc-bfbb-6f57426a96d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf9c680-4386-45b7-b764-03060b2a85d1",
        "cursor": {
          "ref": "6f32733d-49ca-406d-ba61-b18d0323596b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "52406c98-743c-4915-a258-be3a7e25f9c4"
        },
        "item": {
          "id": "cdf9c680-4386-45b7-b764-03060b2a85d1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "960a89f8-f367-4d4d-90e5-f6f9d229b251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d61299-645f-43ff-a484-b39352d4a680",
        "cursor": {
          "ref": "60a5b4ed-d93a-439a-9c06-0cd2b833540e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9376b2db-d79b-4a62-a5dc-2b9bb46ed738"
        },
        "item": {
          "id": "90d61299-645f-43ff-a484-b39352d4a680",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1e970a08-a852-429a-8e6c-dba894d279e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c56045a-5960-4588-b356-728a277a1183",
        "cursor": {
          "ref": "62777f90-9fd6-4e40-b2ec-7da13eb2fe09",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a2ddfeb5-06cf-4d18-a8fb-7bba634be57e"
        },
        "item": {
          "id": "0c56045a-5960-4588-b356-728a277a1183",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4c04fa3c-73de-4fb4-86ff-db0198581c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d91ee1f-0f78-4416-aef9-b2e8048d50c6",
        "cursor": {
          "ref": "16795a5e-850e-43d8-b1b1-c7a2c576671c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6b235679-1ea8-4646-aa4d-02d3568d9272"
        },
        "item": {
          "id": "6d91ee1f-0f78-4416-aef9-b2e8048d50c6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b497ec51-8458-45ba-96b3-2144efdf38c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151e5439-75be-4d6f-b9ac-7a67b1fe9565",
        "cursor": {
          "ref": "3974cfc4-a37b-4749-a798-e43b03814174",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d649281-eee2-4e61-8725-5c317f8c0938"
        },
        "item": {
          "id": "151e5439-75be-4d6f-b9ac-7a67b1fe9565",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "baabeb11-a7b8-41f1-9f7b-41475b42c86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2786082-6606-4473-8e7b-39b5bac1a908",
        "cursor": {
          "ref": "9aa3719f-9399-4d47-bb74-23636eb98484",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ddc0ca02-2ef7-4ecf-8fdc-ab407ee9543e"
        },
        "item": {
          "id": "f2786082-6606-4473-8e7b-39b5bac1a908",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "68b0462b-a5d3-4743-b986-126052a9ac68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163aa794-137a-457b-b491-cc756cb69a8d",
        "cursor": {
          "ref": "ee7eceaa-d281-43b8-801b-e96144246fb9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "121145ab-c967-4e56-99b4-e05359a4c99a"
        },
        "item": {
          "id": "163aa794-137a-457b-b491-cc756cb69a8d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a56af6a4-4479-4dfd-8a6f-a94c07fc8bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7492c278-fe33-40c7-8140-87ad7a0ad62c",
        "cursor": {
          "ref": "8bfdc331-37ea-4d40-bee4-a270ff2f4e7d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4d2bb41b-dd2a-4d0f-a84c-2f9ed6f1b1b1"
        },
        "item": {
          "id": "7492c278-fe33-40c7-8140-87ad7a0ad62c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "976affb2-595b-40c3-a7b4-a337b297bec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224d7d69-55c8-4687-9512-a2b2338be860",
        "cursor": {
          "ref": "1b7aeec1-df03-4724-81d5-b2aaa8f91edb",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d92dfdb-f57e-4b39-a6b6-ad04dbad85d5"
        },
        "item": {
          "id": "224d7d69-55c8-4687-9512-a2b2338be860",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d694ff15-094d-4ca8-8964-32707292eb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed30402-4d15-42e4-a0eb-97d243dfa70d",
        "cursor": {
          "ref": "29024c1e-d636-4ded-bcf6-7beec229971f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "21a975cb-79c2-4ae1-a268-0e0c51a10cd7"
        },
        "item": {
          "id": "7ed30402-4d15-42e4-a0eb-97d243dfa70d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "82845492-ac86-4b25-91ca-f4158d46c161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534c7ab8-a728-4981-a2a1-889dc17cd802",
        "cursor": {
          "ref": "2f6b1616-9985-485a-9ede-21fc5405e6f8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e4144f7c-498a-4f59-a203-ee0ec0ded5e1"
        },
        "item": {
          "id": "534c7ab8-a728-4981-a2a1-889dc17cd802",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a3bf4439-934b-49b8-a478-32b342c32ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4586a8-9288-4d04-b556-f76359e407ad",
        "cursor": {
          "ref": "5a035689-2ae8-417d-8c54-36ab0f828402",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c5661b2c-574d-436f-bb18-1519c7075286"
        },
        "item": {
          "id": "cf4586a8-9288-4d04-b556-f76359e407ad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c1a16cbd-4bb8-4503-9f14-ff5825dd1279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317d8578-3c42-4b82-8252-4074dec079d1",
        "cursor": {
          "ref": "1c34d2b8-13a4-4958-8e88-68b3b6b40cb8",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e817f028-d0bc-439d-9c0d-65a0cf636337"
        },
        "item": {
          "id": "317d8578-3c42-4b82-8252-4074dec079d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "310a051d-f9c7-40ee-9b57-2555b4ca83e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978f6d84-ed29-4015-9abf-ce6c512821c1",
        "cursor": {
          "ref": "289ee730-154a-41bd-af4c-c13a5301bf1e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1c11fe3b-4e4c-431d-955b-aea959cf36f0"
        },
        "item": {
          "id": "978f6d84-ed29-4015-9abf-ce6c512821c1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2bbf7167-702b-47f4-a6e2-378c2b34130e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08a3ced-187e-4bcf-81f0-0725ac0c4410",
        "cursor": {
          "ref": "41651a56-136e-4b51-8923-acfcd5ce2783",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b534b838-efc6-4abc-8b50-218bed352d20"
        },
        "item": {
          "id": "a08a3ced-187e-4bcf-81f0-0725ac0c4410",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b596fc8f-c7f7-49f5-b898-86d8bbb98e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9af9126-90db-4ea6-8546-131bd24d861c",
        "cursor": {
          "ref": "ca647128-161d-4b68-96f5-7a8bb051fd88",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "493939df-d20b-43d7-b5a5-a108428dc4e3"
        },
        "item": {
          "id": "c9af9126-90db-4ea6-8546-131bd24d861c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "abab0dc6-b8f7-462e-b61e-b0f1d1c8392b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1bfab8-8a56-4417-ae8b-69942006c7e3",
        "cursor": {
          "ref": "446026b3-6943-49b4-b517-b2f841181459",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e78a30d1-e61b-49f5-b3d8-22c31818a5e2"
        },
        "item": {
          "id": "3b1bfab8-8a56-4417-ae8b-69942006c7e3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8eabd2e9-a7d0-4b26-83a8-8d2f5d228ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e79655c-166b-496b-b057-57e6a648c634",
        "cursor": {
          "ref": "f6b3db6b-1b19-4e4c-87f1-7ec35ea04d22",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "351f6c1a-72a9-4d6a-952a-73d7f6d25d61"
        },
        "item": {
          "id": "6e79655c-166b-496b-b057-57e6a648c634",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d4c09d36-6bcb-4afe-8e78-a1205ed54789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d566ed-66f0-457a-95d3-4e0a4d6b0bac",
        "cursor": {
          "ref": "16ac0315-d932-4c76-8f1b-ca2de5137296",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "69da5be2-8a80-43cb-996d-27d47ff19e21"
        },
        "item": {
          "id": "a3d566ed-66f0-457a-95d3-4e0a4d6b0bac",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "69f0ea46-c9cc-4404-8422-b85ee6e859b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10167378-10ba-4d5d-b2b8-41226a0ab5f6",
        "cursor": {
          "ref": "a658c1f0-f264-4367-a5b4-1127b0cdcc1f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "39c9b4bc-48f5-4232-af1e-c0a4d4f81f26"
        },
        "item": {
          "id": "10167378-10ba-4d5d-b2b8-41226a0ab5f6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80108946-7184-4bc2-8bee-3d15ede716f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca0f274-8783-4a3d-92f9-c971db4e1e1c",
        "cursor": {
          "ref": "ed00b3ba-dc37-4035-8923-afb4751c2b7c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9a692611-adee-49db-a21f-9f0b423b4a12"
        },
        "item": {
          "id": "fca0f274-8783-4a3d-92f9-c971db4e1e1c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f7f0d88d-22d1-4e93-897a-401c954afc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203e7aaf-f6c7-41fc-81e0-0db410fd7249",
        "cursor": {
          "ref": "99cca631-637b-4bba-9f15-fc75614f38fc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4afa9cee-34a1-480c-9772-e538c783828e"
        },
        "item": {
          "id": "203e7aaf-f6c7-41fc-81e0-0db410fd7249",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1feff2a8-e5d2-4229-befc-1843d42d09ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a711374f-94b8-44bc-b98a-70aa2f7357d4",
        "cursor": {
          "ref": "e11c12c0-0057-40b4-b973-fdff2158c137",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "92f008e1-bb67-4c13-8279-3bc55c5d8d8e"
        },
        "item": {
          "id": "a711374f-94b8-44bc-b98a-70aa2f7357d4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "98851ca2-b666-4405-8866-494a1cc2948d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c671c61f-137f-4a18-8020-dced148783d7",
        "cursor": {
          "ref": "4e2926a0-e2eb-47d7-b997-eb120a7d5f41",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2eac10f3-e3eb-4520-ada9-1f8cbdc0147d"
        },
        "item": {
          "id": "c671c61f-137f-4a18-8020-dced148783d7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "82bec148-aee2-4bff-86e6-9c1c9b8f385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9b2704-f2ef-4c85-8d41-7df4f2660f81",
        "cursor": {
          "ref": "593b4f29-8535-476b-a96c-28e98788b7cb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "144dc8f2-e9c6-4353-b66d-ef8da597f5f6"
        },
        "item": {
          "id": "4c9b2704-f2ef-4c85-8d41-7df4f2660f81",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "41aa9101-3508-4734-8783-8e20b848a018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1e0a67-6846-419c-be52-60e4cb8be54a",
        "cursor": {
          "ref": "f2c13af7-0643-4aee-89da-781c81502631",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0368a9ee-941b-4f39-93e0-19c62f878c53"
        },
        "item": {
          "id": "df1e0a67-6846-419c-be52-60e4cb8be54a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "53f65e00-07fa-4ccb-895f-a1601238fa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8464db-7635-4385-b881-c1767f8cc8b1",
        "cursor": {
          "ref": "540c87b2-badb-4e33-88de-3254c0a54f41",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "26d25b06-d19a-497c-9863-f2d70d2f0f3c"
        },
        "item": {
          "id": "4d8464db-7635-4385-b881-c1767f8cc8b1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "efd88bce-dda0-4977-8c43-c9aa96e6ead0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623337ad-3114-453c-a261-061699965a3c",
        "cursor": {
          "ref": "7c4a380b-2d14-431c-85fc-342f983d4ded",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6ca2212f-da30-4781-8b83-ced36da5dc6e"
        },
        "item": {
          "id": "623337ad-3114-453c-a261-061699965a3c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7bf57d6f-7abb-4848-a00d-2bf216a4c212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9313666-128a-48bb-a346-f70b7554ab83",
        "cursor": {
          "ref": "9f2daf71-e551-4d58-85a2-d7342ce708b4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "feddcb13-5e13-4716-bbe3-60ffd430c118"
        },
        "item": {
          "id": "a9313666-128a-48bb-a346-f70b7554ab83",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dd717d96-3898-44c5-8c5e-d2a06ca43dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3887f09f-2294-4f27-a31b-0c4957224f51",
        "cursor": {
          "ref": "6c48010e-95b6-44de-876d-bef4842d1d2d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a33c6011-7dbe-4521-b858-6064d0644a6c"
        },
        "item": {
          "id": "3887f09f-2294-4f27-a31b-0c4957224f51",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "12ac952d-2476-449b-89e1-9294ce0352a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600675da-393c-4bd6-84bc-d23bcb7b52bb",
        "cursor": {
          "ref": "dea2809c-edd2-4411-bfea-1ae5f023d2d3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8c7ee756-61c8-47f8-860b-4b5bbb1fb864"
        },
        "item": {
          "id": "600675da-393c-4bd6-84bc-d23bcb7b52bb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cfc050e6-42a5-4ea4-b9bf-48a685dcd7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf83c0f-1881-40ae-ba39-48485036af8e",
        "cursor": {
          "ref": "2d510b10-65a8-42fa-9cea-62e76b9342a0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7c9a2afd-5cc8-4201-90ca-a7363ae11e57"
        },
        "item": {
          "id": "bcf83c0f-1881-40ae-ba39-48485036af8e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "98270244-1cc1-4eb8-8947-b405336e4769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d11117a-45a3-4e78-87a0-70e5c555def6",
        "cursor": {
          "ref": "ff679880-37ca-4666-a621-1b6869d92ce4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dd5af64a-c352-475a-997a-f6de06fae505"
        },
        "item": {
          "id": "1d11117a-45a3-4e78-87a0-70e5c555def6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4806842b-c92a-410a-805a-1b30102e1d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eefa55-5a9a-4d16-b46e-b7bd297ffd28",
        "cursor": {
          "ref": "109a9099-1089-42f3-a65f-8fe199fafe22",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f3fc5830-2b31-4928-9471-727347a7d566"
        },
        "item": {
          "id": "37eefa55-5a9a-4d16-b46e-b7bd297ffd28",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8efa23b3-e68b-4ad2-8831-0161bb273442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdca65d-92a7-49f6-8312-4afbffc780ad",
        "cursor": {
          "ref": "a19d1082-1d8a-4b35-9a31-ed6fe0cb4057",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d5b968b7-81cb-4f8c-9af0-97dea5b86a42"
        },
        "item": {
          "id": "dbdca65d-92a7-49f6-8312-4afbffc780ad",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d7ff6f58-3d22-4cc6-b842-ad20fd4feb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b77b38-860b-44b9-b238-5ac6fcb362c5",
        "cursor": {
          "ref": "ce3ff868-7d07-40f4-bef7-2dddae9f608f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "50201acf-9ce7-4404-81c2-dc081f43c88d"
        },
        "item": {
          "id": "96b77b38-860b-44b9-b238-5ac6fcb362c5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ff6c10c-501a-4df2-b4b4-70c6c79e7adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2017232-f33f-4aa9-8b6a-6193cfd4a3bd",
        "cursor": {
          "ref": "9bd9b6d9-b381-482e-b16b-8d99a158239c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b9584cb2-bb9d-4765-87d7-86c35cc01603"
        },
        "item": {
          "id": "e2017232-f33f-4aa9-8b6a-6193cfd4a3bd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b1d1350b-3883-4062-b593-10758930bab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80aec4f-a968-4d4b-a4df-723c579c1894",
        "cursor": {
          "ref": "f0a15ceb-a421-4135-b1e7-9c83d2a17184",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "18009be5-9f6a-48d1-a7a6-8f3600efe4b6"
        },
        "item": {
          "id": "f80aec4f-a968-4d4b-a4df-723c579c1894",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "669f910c-07d8-40f1-8a76-173997b4aa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db78ede-f7f7-44e0-928b-ba62e4601958",
        "cursor": {
          "ref": "4d6c6808-3fe9-44a6-8d95-50c4d9d0790d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5b7f7dc-2bb0-4c82-a1fb-ed1fcc211a07"
        },
        "item": {
          "id": "3db78ede-f7f7-44e0-928b-ba62e4601958",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "943271ef-0f82-42dd-ae14-ff1b3b9cf584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9959de8-5bd4-4eca-9300-e79649db5416",
        "cursor": {
          "ref": "f631ed29-b753-4b3b-a56a-967e4fb8831c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f9cd2164-057c-419f-a9a4-64ed7ca503de"
        },
        "item": {
          "id": "a9959de8-5bd4-4eca-9300-e79649db5416",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dd62f653-3ba1-4ce2-a3f4-3b98a785d215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f8ad31-65e7-4459-b98b-d85f705f0235",
        "cursor": {
          "ref": "278a9e7d-9059-4364-b09c-c0fbddd6c9b4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9018802d-ad46-4b7b-9c98-d97014b8aab4"
        },
        "item": {
          "id": "40f8ad31-65e7-4459-b98b-d85f705f0235",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8d54ddce-0478-4b85-9a22-74c6ce5f4af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f9c42f-1769-499a-880a-2a04fed1c7bc",
        "cursor": {
          "ref": "900d11d0-bd58-4ab7-bcce-a028e037bbc8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f6550df8-2dbd-44a9-ac0e-866f824c45ea"
        },
        "item": {
          "id": "74f9c42f-1769-499a-880a-2a04fed1c7bc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "06223175-9845-4ff7-82ba-c0bb7f38ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c0471b-21c6-49c8-969f-8c6df50f37e4",
        "cursor": {
          "ref": "8c37f3ee-4e19-4d2a-87bd-98cb59583c58",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "203d6194-d667-4539-9c10-2646189d7d5c"
        },
        "item": {
          "id": "c0c0471b-21c6-49c8-969f-8c6df50f37e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1d05719a-e54c-4441-96fa-37c4a9e5a6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc08118-8f36-4ac0-9c82-160e9cb2f8b7",
        "cursor": {
          "ref": "51d2690c-0b65-45af-829c-424414529c35",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "22ccc577-1038-4fde-97bc-bc7947bdcc86"
        },
        "item": {
          "id": "0bc08118-8f36-4ac0-9c82-160e9cb2f8b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd7bb812-8621-4932-93eb-5f6ddff3c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7289b4b4-0a80-4f7a-82c2-091de8aea858",
        "cursor": {
          "ref": "851832de-40fa-4e0f-a5b2-627fca2b64ae",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "47ecb3f2-df25-41e0-8f49-2ed894e6f92c"
        },
        "item": {
          "id": "7289b4b4-0a80-4f7a-82c2-091de8aea858",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "109a1179-d856-48ca-a52c-443d2f2b24a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de501339-1aa6-4b8d-bc5d-b0d876dcc4ff",
        "cursor": {
          "ref": "b821128c-67d7-48b6-9234-6b79e8f155af",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "46886629-f384-49a4-bd1a-7794f0f7fa1e"
        },
        "item": {
          "id": "de501339-1aa6-4b8d-bc5d-b0d876dcc4ff",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "efb77965-0c92-45d9-aa9f-a24bc5208d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d39192-c670-4463-8413-54704dba303e",
        "cursor": {
          "ref": "5df3d39a-b5de-4997-b9a4-4638f665a4e4",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "914afc94-ac53-4aef-bfcc-49230f77d9eb"
        },
        "item": {
          "id": "64d39192-c670-4463-8413-54704dba303e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6e50e929-c747-4399-800a-2271533a3964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb15ddb-78c5-4c83-b4a1-7e0dcf54391e",
        "cursor": {
          "ref": "3fbd229f-5b9f-4dd6-b43a-2d96348e74f0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "523a5209-e891-4831-ac62-b341e9c87db8"
        },
        "item": {
          "id": "0bb15ddb-78c5-4c83-b4a1-7e0dcf54391e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2d0d2440-70b0-4ea3-877c-46016c3293a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab068a1-9e99-4d8f-b319-c465a65ffcb8",
        "cursor": {
          "ref": "8fd01aad-dc8a-449a-9bc6-d76116ad7441",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a800b2ba-ca42-49d6-9efa-d3f348384877"
        },
        "item": {
          "id": "cab068a1-9e99-4d8f-b319-c465a65ffcb8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6dd3e776-a553-41e8-a6c9-a6e7037d3ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec0f988-edcd-412e-98d8-335324f0e8fe",
        "cursor": {
          "ref": "7204cdea-cd47-4495-8258-8bca3b4efece",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a5f16188-87ee-4279-8977-93e0f3e886fa"
        },
        "item": {
          "id": "5ec0f988-edcd-412e-98d8-335324f0e8fe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fee62a5b-faba-4fd2-909e-fffbc5d1dbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1e0938-ec0d-4c5b-8f6f-cdf15b43ca2b",
        "cursor": {
          "ref": "86ad3da8-8173-4f79-946e-2eaf40d20766",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5f7543fe-650e-46d2-96fa-037e263d43a0"
        },
        "item": {
          "id": "7c1e0938-ec0d-4c5b-8f6f-cdf15b43ca2b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5693e3e2-d30d-499c-a4d4-1a951abf7232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7938c3-71a2-46a0-9cfa-62240a25f77a",
        "cursor": {
          "ref": "8015bc5f-432f-4b4d-887a-ee6439bea898",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fb376346-fe56-4fa4-820d-c0e85f82555f"
        },
        "item": {
          "id": "ea7938c3-71a2-46a0-9cfa-62240a25f77a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0e5a2c8a-d67a-4e76-861b-5ea891e56489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eae934-06bc-417d-85b8-d65658fd1963",
        "cursor": {
          "ref": "a7a08acd-1ec6-4b5c-a582-609e706c223b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "07dca516-591b-4ba7-b4cc-238cbb6de439"
        },
        "item": {
          "id": "62eae934-06bc-417d-85b8-d65658fd1963",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aef5f9f9-3f46-4268-b919-3b707877621a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b971888-cf1d-4d61-8053-837597c747ef",
        "cursor": {
          "ref": "0694a080-fb51-4cc3-be66-04b4d7a439f7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5f3ab259-01e4-4cee-a9c3-8503cc2dc70c"
        },
        "item": {
          "id": "1b971888-cf1d-4d61-8053-837597c747ef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "acfd09cd-c983-46d0-88b1-11d12f2377c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0197f2b5-30a6-4ccf-8590-ba8bdf99bea5",
        "cursor": {
          "ref": "a47cc0fd-48fe-48cb-993c-a7f750845e2d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f8ff7fd8-6f2e-4b10-9b1e-2b6f348a0b94"
        },
        "item": {
          "id": "0197f2b5-30a6-4ccf-8590-ba8bdf99bea5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6dcffe4f-84a3-46d5-b7fd-14cb0666c5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e369e68-b7d8-411a-99a8-ae29a0aeb5ec",
        "cursor": {
          "ref": "a6a793e3-20a2-472e-a9f0-f14f2466328e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1cdac637-4e3f-4da4-9784-acdea6424a68"
        },
        "item": {
          "id": "5e369e68-b7d8-411a-99a8-ae29a0aeb5ec",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3e20e481-55fb-4751-892a-b78bd2681e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c15599-df6d-4716-98b6-779df84ad3a8",
        "cursor": {
          "ref": "0d5436f6-c228-476d-b1b6-7c19e7fade3d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5c12691e-03b5-4d5e-9407-fcaa69ad8207"
        },
        "item": {
          "id": "55c15599-df6d-4716-98b6-779df84ad3a8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a0c7117d-6fbb-4447-968a-6bfbe0dc93d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af233ff7-8034-4f2a-a5b1-849ecd081f6f",
        "cursor": {
          "ref": "796e5bd8-2f16-480d-a961-4e5b725864c1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "22c802bf-04d2-4c08-99c9-a43adaa2aebc"
        },
        "item": {
          "id": "af233ff7-8034-4f2a-a5b1-849ecd081f6f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6825b937-e901-4141-a158-f3001e5a6ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661a3de4-f8b6-447b-8555-e4ec787dc71b",
        "cursor": {
          "ref": "2dd13bc6-8763-4849-8ffe-9db8969dd171",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "76d9d23a-faf2-4ca0-a806-d5abe496a97a"
        },
        "item": {
          "id": "661a3de4-f8b6-447b-8555-e4ec787dc71b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d1add82d-9870-4f81-9b69-0217053cdeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad639ed-b3db-4400-846d-c119c58fef31",
        "cursor": {
          "ref": "81ac3558-ab32-4d52-97e0-3213d88fdc39",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2bc25ad9-0475-4ffe-9127-2ab915a80913"
        },
        "item": {
          "id": "5ad639ed-b3db-4400-846d-c119c58fef31",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "25417eaa-e247-4662-a9aa-c2ec18804dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dccd7a-48c7-4d79-9b99-305f0df114c3",
        "cursor": {
          "ref": "2917652a-decf-4952-8b06-2b881b399b69",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f3247ab5-8fbb-482b-9e64-ca5fb32a4126"
        },
        "item": {
          "id": "b4dccd7a-48c7-4d79-9b99-305f0df114c3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c467eec2-a494-408b-827c-d93ea8e9026d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad57d4b-8a7f-4dff-8e49-faefec345d02",
        "cursor": {
          "ref": "47c6b7b6-43be-46b0-8b2a-9a45a11e41ba",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "35da3091-2ac3-43fb-976f-1487cf6662f6"
        },
        "item": {
          "id": "5ad57d4b-8a7f-4dff-8e49-faefec345d02",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "af59940f-8ac6-4355-b31a-899c111c85cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66fa75f-dcd9-4ecb-b55d-b456affe9723",
        "cursor": {
          "ref": "a5f49756-05d1-47b5-87bd-cc919b7f6c86",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d04cf748-b748-4156-aa87-92a1acb8c477"
        },
        "item": {
          "id": "e66fa75f-dcd9-4ecb-b55d-b456affe9723",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "57beab72-26be-4233-87a1-3e242475e463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ae4438-b554-402d-9fed-79ac409a37c8",
        "cursor": {
          "ref": "aec0c014-f33e-4317-951a-dd2927d758b9",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a91b68d-d774-4631-8501-505b2c8be89a"
        },
        "item": {
          "id": "60ae4438-b554-402d-9fed-79ac409a37c8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "94d744fb-0fad-4c40-ae93-67f71c9d45b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63af536-4bce-4987-a5a7-08400c8bef56",
        "cursor": {
          "ref": "75aefb81-e473-4902-a14b-76a035774571",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9680c6c6-7c24-4616-8c6a-21707fdbb9ef"
        },
        "item": {
          "id": "a63af536-4bce-4987-a5a7-08400c8bef56",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4e9546a4-5b93-4aee-84d8-2aa18c57e55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffafb59-e3b8-4892-94ec-d17f443507b7",
        "cursor": {
          "ref": "d1fe4241-6f90-4d12-a560-60bf6531844e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "60be0867-f099-4862-ae1e-c4942f3cfcbe"
        },
        "item": {
          "id": "fffafb59-e3b8-4892-94ec-d17f443507b7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b4eed9df-a1c4-45ac-bd97-bb2371cd68da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2d8d0c-39b6-4e52-ae08-293476b19ebb",
        "cursor": {
          "ref": "058e63e8-0fba-4499-99d0-51465a5425f1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0d7ebd4e-4f97-4b76-bab6-179c7ab193a7"
        },
        "item": {
          "id": "8a2d8d0c-39b6-4e52-ae08-293476b19ebb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "647148a2-2586-4c7f-9a0a-ab666666b851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc2aa9e-f574-4f28-bcdb-56c3d22efb75",
        "cursor": {
          "ref": "5cb8887c-52d3-4640-967e-9d8372f29073",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c148775-1276-4e58-be70-5933c034845e"
        },
        "item": {
          "id": "bcc2aa9e-f574-4f28-bcdb-56c3d22efb75",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1aef137a-de43-4950-9279-9ed940bbeff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed5deb-13be-4d02-b115-8cc9f19aef08",
        "cursor": {
          "ref": "de91578f-6312-444e-b74a-a77e7f9f3102",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dbb49ea2-3ade-4097-84b6-156c910519df"
        },
        "item": {
          "id": "6aed5deb-13be-4d02-b115-8cc9f19aef08",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "280a61d6-ec77-461f-bc1c-ec839f2fb93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145ed255-48d3-4fb0-a892-711d8bb40d63",
        "cursor": {
          "ref": "8c84fc57-c8fe-4197-8412-c82c89f0b16c",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bd404a3e-9732-4120-be56-e69f61e5b75f"
        },
        "item": {
          "id": "145ed255-48d3-4fb0-a892-711d8bb40d63",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "70af1d88-ff43-465a-8460-307345b9168a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebb1908-80f1-4f5f-9cfc-0b6ca0b4a6df",
        "cursor": {
          "ref": "773662a8-94cf-49b1-81de-e7c8b8f953bc",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "043c236c-70c2-4892-9c28-b041a9f358b7"
        },
        "item": {
          "id": "4ebb1908-80f1-4f5f-9cfc-0b6ca0b4a6df",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f8f60fd7-c3d3-4fad-a9a0-723e30f09dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f394e1c-d686-478a-b73d-8b61f9a10465",
        "cursor": {
          "ref": "0c4017dc-abe1-4c37-b5a4-ed4777ac167e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "056dbae9-a0be-44fd-8297-5b09829a8827"
        },
        "item": {
          "id": "6f394e1c-d686-478a-b73d-8b61f9a10465",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5957d911-47b4-44b6-a698-818f6ca393e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df990bb9-d74f-4653-9f29-01fc9be4faea",
        "cursor": {
          "ref": "82c021da-5e45-481d-8774-83d5e1a67583",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b51ea9f5-13b0-47dd-a81e-f72e97f07f2a"
        },
        "item": {
          "id": "df990bb9-d74f-4653-9f29-01fc9be4faea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d2e0f848-e41d-4fbb-93d3-0ba4cb2538ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6734ea6a-d1c5-410b-a43d-c728aee88921",
        "cursor": {
          "ref": "66d270e5-e878-4f16-aa9f-fefd56c25242",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "75c746db-449b-45c6-8c2a-46befd8c60df"
        },
        "item": {
          "id": "6734ea6a-d1c5-410b-a43d-c728aee88921",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f70e3df3-8cf1-40de-99b8-01d0cf595fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5044cb63-da80-4ed8-a8d2-463e819f5e62",
        "cursor": {
          "ref": "d131d626-763e-46c3-b795-145bdd7687b4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "870ce7bd-d056-474a-9ea5-e2f795172047"
        },
        "item": {
          "id": "5044cb63-da80-4ed8-a8d2-463e819f5e62",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8cfb0eca-204b-4d54-8855-73e4e1ad3fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef1b087-3218-4148-adf1-52087bdacb1b",
        "cursor": {
          "ref": "43bf62fd-dcad-4db3-ab90-3201665dbd99",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9221cfbf-d94f-4820-8294-57b2d6807dc4"
        },
        "item": {
          "id": "bef1b087-3218-4148-adf1-52087bdacb1b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "33de8772-d1f1-4e66-bb10-5e4def67ca25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab81069-3a52-4c27-8cec-e6542c432fa7",
        "cursor": {
          "ref": "04129560-bfd9-4a5e-9c50-b8ff59ba67d9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "771c80db-5bc4-4159-ba7c-646437b42873"
        },
        "item": {
          "id": "5ab81069-3a52-4c27-8cec-e6542c432fa7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6ea6f977-72ca-4357-b5ca-f836c4ac97a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c19336-e88d-4107-af56-d68ea1a94021",
        "cursor": {
          "ref": "6c4f5251-6ebd-4174-be0c-36f4f214d2fd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "01428a7c-2191-4e13-95f0-cf98d25d0f83"
        },
        "item": {
          "id": "10c19336-e88d-4107-af56-d68ea1a94021",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8f8e023e-cc07-4257-9670-b7b24082a7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d54a455a-e823-4d72-96ed-00e9d30cac58",
        "cursor": {
          "ref": "eab730df-bc38-4675-8676-17d011fe25bf",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e69e000a-c566-4107-b5e2-c8c23772f22c"
        },
        "item": {
          "id": "d54a455a-e823-4d72-96ed-00e9d30cac58",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b601c6ef-85d2-4ba0-9437-d228b201998f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "70281bb2-07b2-4dac-b14a-284f2a2dd867",
        "cursor": {
          "ref": "0e6f999e-8cf0-408e-8a9f-65922b4207fb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7d53672c-fe17-45b0-9a9a-b1eadd4ef29a"
        },
        "item": {
          "id": "70281bb2-07b2-4dac-b14a-284f2a2dd867",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "22755b35-fec3-46e1-95a4-cedd158d092d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "68a5873b-3574-4b36-aeff-6adf79e0580f",
        "cursor": {
          "ref": "abf3c0d0-872a-4964-b388-82b20674d53a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8c7f1ed9-99bc-4bee-9b11-fa20f5dcd38f"
        },
        "item": {
          "id": "68a5873b-3574-4b36-aeff-6adf79e0580f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e0dca356-6313-4a35-b8d1-f97d9bef664a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4915a3fa-e608-4707-86d6-e27dcbde05b2",
        "cursor": {
          "ref": "9f654201-b8f4-4348-842c-581690f64907",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "197cc0c5-edcc-452a-91f4-94106e954945"
        },
        "item": {
          "id": "4915a3fa-e608-4707-86d6-e27dcbde05b2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3067bb39-aa50-4af0-b7f1-c257a93267fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "35479034-e93c-432b-b528-caceaccda6de",
        "cursor": {
          "ref": "cf78be0a-2781-443e-92a4-602bdbb2ad4e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9d40159c-1f24-4a85-bda7-7a738d78594a"
        },
        "item": {
          "id": "35479034-e93c-432b-b528-caceaccda6de",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8cdc29b9-6264-4d2a-ada5-9dcb8abf83fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "33e3d3c3-c597-4b98-bdb7-3ee72fd61a69",
        "cursor": {
          "ref": "8f2d60bb-3921-4c42-a3f5-a5e099145505",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f9f3e016-1029-40af-873f-2dc24d70a64e"
        },
        "item": {
          "id": "33e3d3c3-c597-4b98-bdb7-3ee72fd61a69",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fc4bf5af-04fd-4e6a-9a79-2243e118cdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d3b0954c-0598-4936-9bdb-076b111601a6",
        "cursor": {
          "ref": "f1587173-dc00-4028-95eb-4f05ebbd7717",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "195797ce-4e61-4871-a5ce-83b733bbd8be"
        },
        "item": {
          "id": "d3b0954c-0598-4936-9bdb-076b111601a6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "413af22f-aa89-436f-b1f5-74394636ec66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995754f5-6510-48e0-89f6-57c3b2d9664e",
        "cursor": {
          "ref": "13501024-7dd9-44e6-93e1-b5b0f5269485",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dd11afc0-6e65-43d5-99e1-3bf9d3067bc4"
        },
        "item": {
          "id": "995754f5-6510-48e0-89f6-57c3b2d9664e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1fcc829b-5163-4f8f-99aa-377b0991b10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258cc047-2fc5-4613-ba00-a8e00d0f6370",
        "cursor": {
          "ref": "7a26eab2-b2ff-418e-9626-b87af9d5ba86",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3b681905-0256-4290-99dd-3983a2ebd0bd"
        },
        "item": {
          "id": "258cc047-2fc5-4613-ba00-a8e00d0f6370",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87a5601d-2358-4c54-b52d-e645cc9d8bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4a64a1-b18e-4995-bfa9-9abe7437908b",
        "cursor": {
          "ref": "9d76024c-dbeb-484d-8ce0-5c18a1673566",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0d35cd1e-b328-4e1a-9c60-d4425b32fb91"
        },
        "item": {
          "id": "4b4a64a1-b18e-4995-bfa9-9abe7437908b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "949c1f72-3daa-4bd7-92cf-c231575b76c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc50737b-cfb1-4842-8965-39974646ec39",
        "cursor": {
          "ref": "0aa76c45-00cd-4213-8493-244eba99d4aa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a0006f84-2a8d-4366-a52d-fe71f868509e"
        },
        "item": {
          "id": "bc50737b-cfb1-4842-8965-39974646ec39",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eb304539-7bfd-4a9f-8704-f88999e2d05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04436642-87d0-4b84-bba8-dfa4f72d8a96",
        "cursor": {
          "ref": "0e8da294-f7b7-4a6a-a967-aa31d0445d9a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d59aba69-824b-4165-9ccc-1598ff662619"
        },
        "item": {
          "id": "04436642-87d0-4b84-bba8-dfa4f72d8a96",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d5152642-baaa-4487-995e-4b80c0abef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2536cf24-e63a-4975-a2b5-6ec47706cb00",
        "cursor": {
          "ref": "6a291b92-76cb-4012-be09-aea304ddea7f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a752e0f0-4ce3-4822-ad8f-18500e908357"
        },
        "item": {
          "id": "2536cf24-e63a-4975-a2b5-6ec47706cb00",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "acec6f08-7e31-4052-b722-48db6c161d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caa268e-1ff9-4bd9-909e-ec9166d2197a",
        "cursor": {
          "ref": "9694f649-92b8-40f6-bcef-d1a49b67106a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d4df9423-8d78-458e-ab16-124b6f4a3faa"
        },
        "item": {
          "id": "5caa268e-1ff9-4bd9-909e-ec9166d2197a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "870a6ce6-5403-4280-92a9-1ae7e7325e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dd6e81-9499-4d07-a884-fc1e01de5704",
        "cursor": {
          "ref": "7db6c3dc-817b-498a-a808-78f17cdc0e61",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "838d823b-81f0-4fbf-9d15-5f75ba4f70a2"
        },
        "item": {
          "id": "06dd6e81-9499-4d07-a884-fc1e01de5704",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "183e1fe1-7137-4558-af4b-aaf28002c712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b79ae4-241e-446b-a214-5b3420d90c88",
        "cursor": {
          "ref": "cb0d1be9-899e-44a0-b32b-ecc9760c2ec7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e2b8ce2e-b47f-4c2c-9e5a-2972f0953624"
        },
        "item": {
          "id": "f4b79ae4-241e-446b-a214-5b3420d90c88",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "73ed26cb-b9c6-4f3c-a129-3a18d7a5329f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c079183-5878-4217-b59c-0b6cf7bf82d3",
        "cursor": {
          "ref": "c1559947-eac5-451b-9781-9db9617deb02",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "622132f3-d711-45b5-9b78-2e4d934ae9de"
        },
        "item": {
          "id": "8c079183-5878-4217-b59c-0b6cf7bf82d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "871bce7b-6709-4e7b-8a10-4dd18bfd52f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60c01c3-0fd2-424a-8396-e6fd8c7a4dd8",
        "cursor": {
          "ref": "40ced812-42c6-4130-9b53-809adb2be401",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "11678ee9-f15c-4ecb-8bb6-e69dcbf524dc"
        },
        "item": {
          "id": "e60c01c3-0fd2-424a-8396-e6fd8c7a4dd8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0771710d-f30c-4fb5-b702-a0b0399cdc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23608cf3-c554-4a04-a702-fe381f55d1f8",
        "cursor": {
          "ref": "39d6f948-ed7c-4c01-87b4-33effbe7ad6d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d31a86c-1238-48fb-8876-b46e6d832470"
        },
        "item": {
          "id": "23608cf3-c554-4a04-a702-fe381f55d1f8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cfa869ab-a180-4a9c-8dc3-1a0730a5e14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a27ebb-7728-4b26-8648-c9034c45c74e",
        "cursor": {
          "ref": "270cfc1a-459f-407b-8206-048017dd05ae",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8355c345-71c5-4a39-af30-4a4b3b53b86b"
        },
        "item": {
          "id": "85a27ebb-7728-4b26-8648-c9034c45c74e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6065cd9f-615a-463a-8ee2-daa45bf31713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078ee414-95e7-43ca-af84-bde0a3fc16ec",
        "cursor": {
          "ref": "5680e090-a87b-4d85-89b3-02ca9c0dd1ea",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a9111664-b738-434e-863c-47b0f7d3bc31"
        },
        "item": {
          "id": "078ee414-95e7-43ca-af84-bde0a3fc16ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "18268235-8553-4016-9f03-4e8303f94cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ba1680-2e2c-4d8c-ae09-89db5db075f5",
        "cursor": {
          "ref": "5655fe03-1f83-4dd1-9583-0c731edc95de",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a68ee1fc-e647-435e-95a1-6f60bcebbc71"
        },
        "item": {
          "id": "62ba1680-2e2c-4d8c-ae09-89db5db075f5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fb865043-5826-480c-b32d-58496abab42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad73c7d2-28c6-424c-9d7d-cfe1cdbe7e5c",
        "cursor": {
          "ref": "dac10039-1b47-4399-ac99-7dd3f36c9301",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3ccfd214-c4a3-466b-a0b7-0ba9aa88c151"
        },
        "item": {
          "id": "ad73c7d2-28c6-424c-9d7d-cfe1cdbe7e5c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ba793f70-3239-4748-bb16-0cb3c8658630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5944508-a4d4-413a-8d92-a739b91597e2",
        "cursor": {
          "ref": "e86dd9c4-0917-4d27-bcb0-70811c1e5fce",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f4e383fe-9022-4da0-b6de-2d36a8286821"
        },
        "item": {
          "id": "f5944508-a4d4-413a-8d92-a739b91597e2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a4ecc7f7-2d6a-496d-bcf2-a04e107974dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43faea90-8b37-4526-844d-6a35db2eb488",
        "cursor": {
          "ref": "504970a6-6dd1-4cf7-9382-9648ff8baf48",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1b1dc8e9-67d9-4840-86f1-4d29eaffaaef"
        },
        "item": {
          "id": "43faea90-8b37-4526-844d-6a35db2eb488",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bf3c73ac-5d3e-4f35-9a54-dc85d6da203b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45a1c71-4d8c-4e37-90c0-dce4b7f8ebe4",
        "cursor": {
          "ref": "11f2e9b0-f2b6-4bdb-bea1-988728c7336d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8ae57f27-7cc3-4acc-8d57-0bdfe26c2c3a"
        },
        "item": {
          "id": "e45a1c71-4d8c-4e37-90c0-dce4b7f8ebe4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ba49a920-1041-4c75-be98-a304110851c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48848a5c-036b-41c5-b132-fba6e33d16cf",
        "cursor": {
          "ref": "8a90762a-7990-412f-beb2-54a8c9fa1c22",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "67bb58c3-558a-4e8e-8a47-7f6702126435"
        },
        "item": {
          "id": "48848a5c-036b-41c5-b132-fba6e33d16cf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3d0f5aa1-d9b0-49d5-9d2d-5f4da5913a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e13f8c8-730a-4c05-8316-e11ed93ea1b0",
        "cursor": {
          "ref": "03ad2faa-2c7f-413a-9b76-21ce02a7477f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ea5c54e5-bea1-47b1-bbab-78799055ad3f"
        },
        "item": {
          "id": "9e13f8c8-730a-4c05-8316-e11ed93ea1b0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1edf1149-e606-4c95-99d7-a55d087d26d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b107cf4b-a0e8-43a7-b681-312bde213da3",
        "cursor": {
          "ref": "281905d6-55f0-4d48-a6f0-4e110b585ca7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2fada5cc-753f-4247-a080-e11f4fa42e0f"
        },
        "item": {
          "id": "b107cf4b-a0e8-43a7-b681-312bde213da3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23f2d743-e633-46a4-b2ab-605021c389fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a1a4bc-517e-49cc-8a3a-43bcd3341dc1",
        "cursor": {
          "ref": "587efab9-9e05-4098-9d19-dd87e6d47ba0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "26596d2b-07c0-4ecd-91fa-2eae73c1d52e"
        },
        "item": {
          "id": "a0a1a4bc-517e-49cc-8a3a-43bcd3341dc1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5a33fb27-6358-4e35-bced-e856369a3ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ee021d-1b8f-460c-89d0-8870c487ebab",
        "cursor": {
          "ref": "b10e0cb3-4834-4246-be26-189ed9e8547f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d24675f-c974-4cc0-a188-6bbaaf33c20b"
        },
        "item": {
          "id": "b1ee021d-1b8f-460c-89d0-8870c487ebab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "17fd919a-dd73-4300-968e-16dcf1dc98c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea12ba4-66e6-41b6-a326-57c32405716b",
        "cursor": {
          "ref": "c1112cac-4a9d-4378-9c88-06dc55c50863",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5021f384-28ec-4b76-9c2a-7becb83ad840"
        },
        "item": {
          "id": "bea12ba4-66e6-41b6-a326-57c32405716b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26f72a11-60db-4d79-97da-57c8604a5cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a910d4-b2ba-460b-a5e7-1ecc28a4eaf4",
        "cursor": {
          "ref": "445bc67c-a2ea-4d16-b245-08bd359f97f2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f5fb438c-51db-4d30-a29a-ec6b4fc083d7"
        },
        "item": {
          "id": "87a910d4-b2ba-460b-a5e7-1ecc28a4eaf4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "274889a2-8825-4944-8884-770dcf98057c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f4682c-5c4d-46c4-95ff-b4531f790080",
        "cursor": {
          "ref": "0bcb06cd-08c7-483b-affe-ee65bb032792",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4f5e5b32-9136-410c-adc6-5111183ff1c3"
        },
        "item": {
          "id": "21f4682c-5c4d-46c4-95ff-b4531f790080",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e18a4635-19bc-4bd5-a920-a01a7d99c881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f469828d-07c9-4ee1-813c-067f06f9ce26",
        "cursor": {
          "ref": "635a6621-7515-4f3a-87f5-cc5907524679",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f9cdbff3-e5ee-4075-922f-0546c986daef"
        },
        "item": {
          "id": "f469828d-07c9-4ee1-813c-067f06f9ce26",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "806ec47c-e73e-400d-a5f1-d8cb19123898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d111dc-e81e-4b78-92fa-df1d08aacede",
        "cursor": {
          "ref": "ff8eafd2-c27b-4339-9799-8e9050f6373f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "71d375f2-8376-42fb-9f24-d2d65f6cfe8a"
        },
        "item": {
          "id": "12d111dc-e81e-4b78-92fa-df1d08aacede",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "86df37e2-5323-489b-ba77-0cb3052a3d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b67f08-28ff-4157-b95d-816c39ac0b3d",
        "cursor": {
          "ref": "c041be3c-2d0b-4898-93a9-f1f5af43d384",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ce0fb4f6-64da-4d3a-8917-6a55b46da18f"
        },
        "item": {
          "id": "11b67f08-28ff-4157-b95d-816c39ac0b3d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "42c5a45e-fab5-4588-b7a0-6c2b3766df7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6daca0a-982e-4701-a2e3-75d21bac4502",
        "cursor": {
          "ref": "45c405d1-eb29-4dcf-a7ff-b9caa678d8c0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "468e2a98-d595-427a-b639-a43305ad1250"
        },
        "item": {
          "id": "f6daca0a-982e-4701-a2e3-75d21bac4502",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7a4ff810-faf2-41be-af4c-b033737d0d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbef98d9-f4e6-4975-b85c-b3cc79b9fc53",
        "cursor": {
          "ref": "b800851c-6d59-41ae-aca4-11da6da95dec",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3e34b2d6-8d73-4581-924e-d1a3bcb06919"
        },
        "item": {
          "id": "dbef98d9-f4e6-4975-b85c-b3cc79b9fc53",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89cd0110-ab7c-479b-8f8a-201bd75b7d5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bcd043-de70-4b50-b500-2a2c8777bac9",
        "cursor": {
          "ref": "153953cf-8417-4fe5-8176-ae5034c05263",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5777ae51-e12c-4bd7-9e4b-6e7b85951a93"
        },
        "item": {
          "id": "e9bcd043-de70-4b50-b500-2a2c8777bac9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8ba254c5-32bf-45fe-b12e-13307505a49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad018709-bd35-4fec-b4c0-1ff53eeae8e2",
        "cursor": {
          "ref": "42b7a94b-f515-4d66-9ec4-fd89a9771a3a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "68898ce3-a4c1-4fab-b18a-8975e2ca9c00"
        },
        "item": {
          "id": "ad018709-bd35-4fec-b4c0-1ff53eeae8e2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9bac03a4-4845-4c8f-a422-f6b3e809d463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f7baa0-55ab-48a1-84cb-a53d95eef2cc",
        "cursor": {
          "ref": "91d44dff-30b7-439c-bf8d-09920597108b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1daa8d93-2ce9-43b1-85ea-9077c281873a"
        },
        "item": {
          "id": "b4f7baa0-55ab-48a1-84cb-a53d95eef2cc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e4030df5-7699-46b0-9b0d-cd3c70634ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb92511a-7848-4dfa-b474-3224653d203f",
        "cursor": {
          "ref": "3b8c323d-276e-4e68-a16d-bd95dce57882",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ef2a3bd4-a7b0-4ef8-a748-20f431d6367a"
        },
        "item": {
          "id": "fb92511a-7848-4dfa-b474-3224653d203f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c36a0957-d510-4a14-a24c-73fa69175a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbf97d1-71c6-4dd1-a3e9-038bc7285756",
        "cursor": {
          "ref": "290d7941-845a-4446-a5af-eef4d0153875",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "76961c97-793b-42e7-a05e-941a8e6d968a"
        },
        "item": {
          "id": "6bbf97d1-71c6-4dd1-a3e9-038bc7285756",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a47a04bf-c8b3-4ef1-bb20-d10b656db674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ad0419-e7b1-415a-b7f4-a75f43a333f1",
        "cursor": {
          "ref": "5900a2d5-f0da-4840-b344-bed92c57d246",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "946dbfca-019c-44c0-9fe8-11f153d932e3"
        },
        "item": {
          "id": "81ad0419-e7b1-415a-b7f4-a75f43a333f1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "febb3c6f-9b58-4738-977e-a0d12123bb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c9d967-5ff2-42cf-a93d-aed0126d00ca",
        "cursor": {
          "ref": "af072cbf-a5d0-4049-83b3-0e3fdc817272",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3c5229ce-5594-4200-ae9c-0feaad539dda"
        },
        "item": {
          "id": "01c9d967-5ff2-42cf-a93d-aed0126d00ca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "780ad3bf-3a55-41d5-b469-0dbf33a1c844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a839d179-b088-47ac-a287-ea5905bd9fb0",
        "cursor": {
          "ref": "f7c5d4a1-77d6-455c-9a04-02d6bde0784f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e5a21d6b-d15b-4253-ba04-2ffd9ed3c6a7"
        },
        "item": {
          "id": "a839d179-b088-47ac-a287-ea5905bd9fb0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12558426-3c45-4946-a2b8-f5bb0ad32f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97238f40-f0fc-41ae-8b18-c6ccc1e8b731",
        "cursor": {
          "ref": "87d403cf-fc1c-44e7-9184-627caffd6a77",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0a858b78-6974-40b1-aa2d-7a6e65bdc6cf"
        },
        "item": {
          "id": "97238f40-f0fc-41ae-8b18-c6ccc1e8b731",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d6e28519-f743-4b3b-908d-00b1b8e752ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da5db1c-9085-4c48-8b55-05adf80dbac6",
        "cursor": {
          "ref": "2853ea59-0e7b-48a5-a065-8b8fc8e40ff7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cb7c402c-22a8-4318-b2f4-784d20437b66"
        },
        "item": {
          "id": "9da5db1c-9085-4c48-8b55-05adf80dbac6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14daa6bd-6e7a-4330-90c3-9f5eaf97f702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9082091e-248a-4c5a-bec1-c396e26521db",
        "cursor": {
          "ref": "61528fc6-43b3-4a3e-b499-c9c1e5ad81ec",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b72a9244-9ad5-4224-acaa-1e6c6dfb7689"
        },
        "item": {
          "id": "9082091e-248a-4c5a-bec1-c396e26521db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7d096b36-9014-44d4-aeda-66d7f39b5303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33043495-a611-4538-8280-e8bb571b6e99",
        "cursor": {
          "ref": "076471ab-8b9d-44be-a40d-3d1c011c539e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a72676e-7102-4d5a-86de-b4d96cec2aad"
        },
        "item": {
          "id": "33043495-a611-4538-8280-e8bb571b6e99",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "97d1cb3d-6745-4e33-b4d6-e89200417aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa694af-8683-483e-8b30-f876acdffb90",
        "cursor": {
          "ref": "f00930d8-f69c-48e8-902f-5b8d6aee74a6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9dd0f3de-69de-47f2-b34d-e26abb761b57"
        },
        "item": {
          "id": "ffa694af-8683-483e-8b30-f876acdffb90",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dbe1f852-777a-4afa-af7d-db496554a591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba6c692-93e0-4720-8137-880008337cee",
        "cursor": {
          "ref": "d62f20a5-5651-4418-a63a-4475634c9836",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3a8ccd90-2c83-4a38-9241-670808657f42"
        },
        "item": {
          "id": "dba6c692-93e0-4720-8137-880008337cee",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b48fed53-c1ed-4c82-ba01-70ea3bf137b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfb383a-4784-4f97-be31-fa1f249a35b7",
        "cursor": {
          "ref": "017f580b-e3f3-4d10-870c-12c4ee1e4c89",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "60246985-efd8-41a8-88e2-879db636a60e"
        },
        "item": {
          "id": "bdfb383a-4784-4f97-be31-fa1f249a35b7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "933fe704-ae2b-4622-8043-86c03e126be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe8facb-82dd-4cd1-9ac5-2a988748009d",
        "cursor": {
          "ref": "e268a1ea-dcad-49e1-9b83-821632d17a98",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "43a4eff9-475b-4777-84cb-be5736dbe074"
        },
        "item": {
          "id": "4fe8facb-82dd-4cd1-9ac5-2a988748009d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bbb7ab5f-edea-4633-8ac0-b7f90b86f9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6430080-1836-4546-8d04-5ba058386754",
        "cursor": {
          "ref": "9e261df6-1cb4-404a-9036-f9d1705c6bd6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8ef9efd1-67e6-4245-bcca-adfe6d1aa0b9"
        },
        "item": {
          "id": "a6430080-1836-4546-8d04-5ba058386754",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2abc5afd-4d6b-4449-9d38-c4d5bac68869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5837081-9c07-4cc0-8196-efe492d0e262",
        "cursor": {
          "ref": "db2ce30e-5b33-4dfd-af1c-d5639df224ab",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "866fad22-6408-4aa5-9496-902bce2227c7"
        },
        "item": {
          "id": "c5837081-9c07-4cc0-8196-efe492d0e262",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2a276de6-7bae-4a1e-a656-07fbe4ca5e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ff64a6-2a51-4726-ab28-429359032236",
        "cursor": {
          "ref": "7ab9c316-c126-46e2-991f-edde09943d00",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a69c2f52-c8e4-4970-b627-6092860bcbb7"
        },
        "item": {
          "id": "26ff64a6-2a51-4726-ab28-429359032236",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9ee0d070-0f54-40dd-b5f2-6a2d32255fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11402aaf-cc32-42d2-a179-1cb56ac95bbb",
        "cursor": {
          "ref": "9fcf7a3f-de7d-4bb4-8c29-31120e69882c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fd5a6069-1b16-4940-b274-c56f533de38a"
        },
        "item": {
          "id": "11402aaf-cc32-42d2-a179-1cb56ac95bbb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a702bf05-96f4-478a-8ae0-ea1dddd9c0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449d97bd-a302-4eba-9a82-2e4d358737c0",
        "cursor": {
          "ref": "5f006668-22ec-4f14-a90b-33c611a19296",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "da243e7b-6b75-474b-a551-cf01bf38110a"
        },
        "item": {
          "id": "449d97bd-a302-4eba-9a82-2e4d358737c0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2f1d205-26be-4b8d-b3ed-8e8924281261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a706c5-2377-4cdd-9d99-46ad486cc862",
        "cursor": {
          "ref": "470cbda7-2979-4caf-82ff-9d6b3f417a5d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0b8991b7-5268-40c0-815d-713ed3bdb0ea"
        },
        "item": {
          "id": "a6a706c5-2377-4cdd-9d99-46ad486cc862",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "12606477-4498-438f-9611-0ae7c1a7949b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3c3a59-ec74-48ea-966b-63c27e56661a",
        "cursor": {
          "ref": "63169309-42f2-4deb-b1bc-9e84a8451e28",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f82b9c83-be3a-43fa-862a-7825d613869a"
        },
        "item": {
          "id": "7e3c3a59-ec74-48ea-966b-63c27e56661a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ec385cdd-6a49-4fc3-8a95-620ef3c54419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37620744-45ad-45ab-8444-c0cffc9fb189",
        "cursor": {
          "ref": "591c9728-2d52-4ccf-9f89-7892a3de8145",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8b464183-102a-4ca6-b298-1e5f6dc1f2fe"
        },
        "item": {
          "id": "37620744-45ad-45ab-8444-c0cffc9fb189",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ca51553a-6748-41c8-a83c-40ba5db6b55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ef3d5d-d5af-4296-990e-360847b85151",
        "cursor": {
          "ref": "4fa252b6-ba0a-4d9e-b555-be99303e634e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4730c907-b676-48fb-bd65-f3d2896121cf"
        },
        "item": {
          "id": "11ef3d5d-d5af-4296-990e-360847b85151",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "800efc5e-d7c7-495f-a4e9-07e5003bd82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bea77f-3d09-4500-a1ab-312bb1da8107",
        "cursor": {
          "ref": "88a6db6a-cef3-4ce7-96b4-2ff118a5461c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aa4738ca-7416-4c33-a924-6f9054ca3c42"
        },
        "item": {
          "id": "75bea77f-3d09-4500-a1ab-312bb1da8107",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "230c5489-10a1-4a1e-b19e-5009c18b3e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9d7e7b-9cff-4278-8eb2-26aa1b0bb2fc",
        "cursor": {
          "ref": "fc020223-644b-458e-a868-1a4cf1336c42",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d149091-c196-4369-8ee0-a38d358f023e"
        },
        "item": {
          "id": "de9d7e7b-9cff-4278-8eb2-26aa1b0bb2fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fd92ca1b-25d8-4c13-9bcc-10c1ce4491fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5a6e90-ac10-494f-b867-37e97757b8b7",
        "cursor": {
          "ref": "2f4707b1-ccff-46e8-8862-daf4a50bc1d5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "99a65322-f495-43d5-a1fc-cebe52e7cb6d"
        },
        "item": {
          "id": "9f5a6e90-ac10-494f-b867-37e97757b8b7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a479a64a-3d4a-4914-929e-bb75071f33e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b219a5-1dcb-4d94-a27c-3fb3bd9bbf2a",
        "cursor": {
          "ref": "fe52c93f-1119-4b9a-950c-ea0c5d94b420",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7e239140-f456-44cb-a23c-54ac919ba3b3"
        },
        "item": {
          "id": "73b219a5-1dcb-4d94-a27c-3fb3bd9bbf2a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "661eddc7-d007-40ce-9410-ea42f5238a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2022b26a-1339-4bc1-abc5-dbc0dfa3c524",
        "cursor": {
          "ref": "d603e2b6-b58f-4c3f-9164-8ddb5d16af09",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "64339048-586a-4714-a34f-83e055b4533f"
        },
        "item": {
          "id": "2022b26a-1339-4bc1-abc5-dbc0dfa3c524",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4e6e4044-d79d-4701-9571-604fdff9b62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282e65c2-5e06-4ee2-a691-245bf5e03bc7",
        "cursor": {
          "ref": "22752010-b360-4f68-b5da-977249493828",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "18ad4beb-8cf2-47ff-9c3f-3a9b4d43a21f"
        },
        "item": {
          "id": "282e65c2-5e06-4ee2-a691-245bf5e03bc7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "99ef09b4-c7a1-4b24-84c4-0b6b8a4f996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f05cd14-7060-430a-8171-80ec5fdb29f6",
        "cursor": {
          "ref": "533fca80-b7ab-44f9-90f6-ecb5efe2a137",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1ba6eccb-5f2b-4483-b6ec-203f4f6d8be0"
        },
        "item": {
          "id": "5f05cd14-7060-430a-8171-80ec5fdb29f6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0e3e9a01-cc5f-43d9-8c3f-86feb41db870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57158aba-e00d-405a-b972-82eb0349aa63",
        "cursor": {
          "ref": "fc4b2ee8-3137-480f-96df-fee2e5e73d73",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cdee1dd5-9c00-4acf-a12b-2757e0a70f7e"
        },
        "item": {
          "id": "57158aba-e00d-405a-b972-82eb0349aa63",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "db97af52-bbac-434b-9fcf-9600ddf4141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d6e4a-645a-4e69-9048-3be6c8f9c586",
        "cursor": {
          "ref": "66b67862-7b47-4ac9-bee5-c88050d2a45b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "36426cef-7564-4863-a7ca-9012b91b86ec"
        },
        "item": {
          "id": "933d6e4a-645a-4e69-9048-3be6c8f9c586",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e2ef903e-6eea-49db-be62-b852974848aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a60867b-b983-443a-8db7-e1e5156c62c0",
        "cursor": {
          "ref": "f0515c48-6e33-47dd-aa3d-4139bd668c3e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3269a50c-d3a4-404e-bba9-b98012ad3bd3"
        },
        "item": {
          "id": "9a60867b-b983-443a-8db7-e1e5156c62c0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "763b4e0c-61d3-41e9-8391-ee7429b5f5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21999e26-3079-426c-a58e-27666fb6ec71",
        "cursor": {
          "ref": "6c3b32b1-9312-4a8c-94e3-733c20a4b000",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "09c6bf6f-d723-4a59-b6eb-ffba143338bb"
        },
        "item": {
          "id": "21999e26-3079-426c-a58e-27666fb6ec71",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "03234ed3-5b68-40b6-b915-f361460b846c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa05797-c089-4a05-9f9b-b00fecc26f03",
        "cursor": {
          "ref": "c8fdf66f-b8e2-41b3-b724-c9f6bff8fa99",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ae002514-721a-498b-beaf-0a7b76c0a3f9"
        },
        "item": {
          "id": "daa05797-c089-4a05-9f9b-b00fecc26f03",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ef9eb41d-d1da-4bbd-a8ff-9f09b47cce86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c3b74c-e087-4c0a-96e5-d54f545bf0a2",
        "cursor": {
          "ref": "7300c1fc-48ec-49df-b485-4c099d562799",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f8167fca-15d2-4ea9-bcb0-f0dc3f122d93"
        },
        "item": {
          "id": "f6c3b74c-e087-4c0a-96e5-d54f545bf0a2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0714f27d-a53a-474d-9a7a-bb29331bb2a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc470b3-96e5-4f2f-b6b8-9262589ea5eb",
        "cursor": {
          "ref": "20f2a6b5-68c8-48b0-8755-31948f91de17",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1d7d7b67-b78a-4ff7-a763-3af9b786eb35"
        },
        "item": {
          "id": "1dc470b3-96e5-4f2f-b6b8-9262589ea5eb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "21bd3468-a38c-4088-b3fd-498987dade2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb72d746-057c-4fd3-aeae-4f8990dcef56",
        "cursor": {
          "ref": "25d4801c-e853-46a0-878f-0061d47a1518",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b4e51a8e-f7c6-4200-a7be-1f9cac749a02"
        },
        "item": {
          "id": "eb72d746-057c-4fd3-aeae-4f8990dcef56",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ade7f19f-3778-4547-a608-e8380f1b2efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d314ebcd-a536-4e31-92fd-f51f69a0f674",
        "cursor": {
          "ref": "aba697e4-331d-4600-9dee-4876c9d1a657",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3e336f03-2e61-418b-bec8-ccd92422de06"
        },
        "item": {
          "id": "d314ebcd-a536-4e31-92fd-f51f69a0f674",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d6551aaf-d17f-45b8-bbef-255c4c763534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46b0ade-67c5-4f9b-9a62-97b9d114c004",
        "cursor": {
          "ref": "b8a73eca-4364-44d1-a032-9c663280e2a5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d9ea6345-07c9-41ae-b513-d8a9e38a1f76"
        },
        "item": {
          "id": "e46b0ade-67c5-4f9b-9a62-97b9d114c004",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8862ca18-0c31-49d4-aa32-615d20799a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfa36e1-1597-49c2-b95f-15d18aba0a95",
        "cursor": {
          "ref": "3186ac89-4eff-4e67-8a26-0a2319ed4151",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "446e331b-5be0-48b5-a3b5-b551d27cf458"
        },
        "item": {
          "id": "ddfa36e1-1597-49c2-b95f-15d18aba0a95",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fdbe19d1-8fce-4f08-b077-eb8207a670aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241276e0-8616-4249-9f4a-f2f6626b08f3",
        "cursor": {
          "ref": "b6b3a7ad-6bea-4539-919e-369c5ff8b91e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "903f810c-f078-40d4-9d4b-dde5de9a19b9"
        },
        "item": {
          "id": "241276e0-8616-4249-9f4a-f2f6626b08f3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4f40c4d4-83b3-436f-9857-fab6a0fe9433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b6da13-0d3f-4c95-85c3-7474793d01c5",
        "cursor": {
          "ref": "529861c0-df9d-4720-9bd1-a0c4dfb4c1bb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ae397c48-df75-4b1c-b258-bff6617ce2b8"
        },
        "item": {
          "id": "99b6da13-0d3f-4c95-85c3-7474793d01c5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f680ba04-270b-4a24-b3cc-ff2b1a8f89e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf6ec6e-c449-4efc-9136-2a9275e655f6",
        "cursor": {
          "ref": "933cf0b3-73af-4ceb-bc56-659219151360",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c7f06cb8-f10a-420d-9c5c-8e724be02975"
        },
        "item": {
          "id": "ccf6ec6e-c449-4efc-9136-2a9275e655f6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b33595d9-d8d0-48ad-8e84-527ae7226954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d42701-1019-40bf-ba41-d9241c5ed2f5",
        "cursor": {
          "ref": "fd639d0d-7853-4ade-a3a2-5b4adab41e58",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "54e4ee79-bbae-4425-b561-13f1a6b4c27a"
        },
        "item": {
          "id": "22d42701-1019-40bf-ba41-d9241c5ed2f5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "df34e810-4923-4361-8ab6-e4a6759a17a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19ede37-6702-4555-aba1-ec35a2435254",
        "cursor": {
          "ref": "8e9511f3-0f69-43a4-beef-bcc3a5f90445",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "079ab760-225a-4322-a23b-5d80d4e525f2"
        },
        "item": {
          "id": "f19ede37-6702-4555-aba1-ec35a2435254",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "30a37769-30d9-46bf-9c94-36395310375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daba10f-5e7c-4496-8367-41d6f540a271",
        "cursor": {
          "ref": "31e7ae18-d7d6-4ea5-8819-1e08f81fe1a8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bab0a227-5b6e-48b8-96b9-fb1be5dff4bf"
        },
        "item": {
          "id": "0daba10f-5e7c-4496-8367-41d6f540a271",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "664a610f-9538-4909-bc79-1724355420d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d85d07-36ac-4388-967b-2159a9cc7225",
        "cursor": {
          "ref": "8adc7cd4-f30a-4e25-a61b-85ef6d709aad",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9abd7c01-ef7d-4b6f-b5fc-348394c140e3"
        },
        "item": {
          "id": "10d85d07-36ac-4388-967b-2159a9cc7225",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "46792d25-2ff2-4a3d-b86f-ec6c60f9e1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b23210-aefa-46ce-a9e6-647606b42ee8",
        "cursor": {
          "ref": "0406dc8a-9bf5-44b7-ba69-93ed8d390132",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ad049a1f-25b5-4edc-8964-a70eac71afd4"
        },
        "item": {
          "id": "d8b23210-aefa-46ce-a9e6-647606b42ee8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eef1570f-0dcd-4bf5-9e18-19fd535f070d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb7f72a-151c-410a-83a1-b9168a5fde76",
        "cursor": {
          "ref": "97a0c050-4377-4ea9-8657-4475ea845308",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "915160fa-0f81-4258-a17a-faad026a1939"
        },
        "item": {
          "id": "bcb7f72a-151c-410a-83a1-b9168a5fde76",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a95ab6d-812a-438c-9aa6-bbe8054bcb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32d9523-2cc7-4d6f-bd33-b628c110ab49",
        "cursor": {
          "ref": "227a56a0-f2cb-4322-ba56-6488c5b3fa32",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4857dcef-73c1-489a-9028-88bb640108dc"
        },
        "item": {
          "id": "e32d9523-2cc7-4d6f-bd33-b628c110ab49",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "911abdef-eb49-4568-a09c-6c1344c98995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cc49c7-6f66-45f9-8f60-cf2cf7056781",
        "cursor": {
          "ref": "31f493a5-ccc8-43a6-a02d-ce505d82f133",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "83e5506a-5390-4ce5-bcc1-a30045037a79"
        },
        "item": {
          "id": "f3cc49c7-6f66-45f9-8f60-cf2cf7056781",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e7071629-a7a5-4b0c-8cac-8d2b40dda3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e90c14-71b1-41a4-9528-032dffce33ce",
        "cursor": {
          "ref": "caa84c97-8dce-4325-a800-9e0e30de8eaa",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "64d89cee-1b56-4bdd-a864-0cbf8e26fbf5"
        },
        "item": {
          "id": "28e90c14-71b1-41a4-9528-032dffce33ce",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "59ab9123-2bbd-4b70-8f70-3ae417c99794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d8dea6-80c3-43aa-899c-9227dfd78df5",
        "cursor": {
          "ref": "8ae2f9de-0659-402b-a5cc-0ae0f55788cb",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "118fe5cf-d7bb-4c6b-b4df-3819d7ff357b"
        },
        "item": {
          "id": "73d8dea6-80c3-43aa-899c-9227dfd78df5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a6b4d7b5-6e77-437c-b3be-bd1a8f32c7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9af6ec4-946a-498a-8466-a297530758a6",
        "cursor": {
          "ref": "4bf6076b-4250-48ab-a47c-2ca4fe460f98",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9f15274f-0ed4-49d2-8cf4-9528fb801522"
        },
        "item": {
          "id": "d9af6ec4-946a-498a-8466-a297530758a6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1ea51c19-bac2-4ac2-973d-adc50f032cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06c4bf6-94ef-4cdb-94d7-991a27e5f3ba",
        "cursor": {
          "ref": "f812f1fe-8cce-4952-978b-6e5636fbead2",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e16abd0e-b1da-4e08-9313-3074e6a22707"
        },
        "item": {
          "id": "e06c4bf6-94ef-4cdb-94d7-991a27e5f3ba",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "76a3adb8-af66-4c76-bd6c-4bce48aab16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3686df9-664f-49f2-99cf-65cd425b1609",
        "cursor": {
          "ref": "b164c6b8-ee25-41bc-9b7c-47b6665ddf4c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5f3710ae-7a29-45ae-8f84-9afcdf867f63"
        },
        "item": {
          "id": "b3686df9-664f-49f2-99cf-65cd425b1609",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ae510848-5e71-4058-8314-debcd7efe22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f150d228-e832-4008-9220-ff2dac1858bd",
        "cursor": {
          "ref": "6382cad8-92f6-488c-bbeb-8784bdf32b91",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "aea88101-845e-4933-b001-09822ca3caf8"
        },
        "item": {
          "id": "f150d228-e832-4008-9220-ff2dac1858bd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e1d77959-aa6a-40f8-8041-f6b7889f8d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636eb1d7-1921-4baa-9b6c-c6cce3829e55",
        "cursor": {
          "ref": "1cff2e3c-4454-4c64-9e42-4676a40daa7e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f792b428-056b-417f-b54e-add7018bc276"
        },
        "item": {
          "id": "636eb1d7-1921-4baa-9b6c-c6cce3829e55",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a7ecd13d-75fb-4e2c-a64f-ed5c486d86fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640bc002-c9f7-4eb3-8695-e20d2f6b9d5e",
        "cursor": {
          "ref": "d430a98c-54a5-4c7e-910f-64dbcb1de00a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d332ae28-239a-478a-a9bc-8c4b5ea0f1b0"
        },
        "item": {
          "id": "640bc002-c9f7-4eb3-8695-e20d2f6b9d5e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b19c9ecc-2c8f-49ef-bfd5-0a4760e9aa91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f2be3d-9430-4e68-a52f-15993278c5ea",
        "cursor": {
          "ref": "33e6dd34-cde8-492d-b63b-1ba7824ebea9",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4dd2b10d-bdac-4eff-8457-42eec1642adb"
        },
        "item": {
          "id": "36f2be3d-9430-4e68-a52f-15993278c5ea",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6086daf6-41fb-4704-8637-4412481900b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5354536d-64d1-4fb9-868f-2f2c54de5c67",
        "cursor": {
          "ref": "f8e6b520-33bc-4082-87da-a20ab85aa287",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "334563f1-cd48-4589-be96-be1ba71f3695"
        },
        "item": {
          "id": "5354536d-64d1-4fb9-868f-2f2c54de5c67",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a193316f-28d0-4bae-bebb-5982a89be5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc33f93c-3a2c-4936-a33e-68d4fcc5e28e",
        "cursor": {
          "ref": "bdaa8027-6dc4-495e-9dde-27ab1ee27d1c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "feb1e543-2f11-477b-b924-35cfd9f5d970"
        },
        "item": {
          "id": "cc33f93c-3a2c-4936-a33e-68d4fcc5e28e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "beea3164-5433-4d58-8e62-a6922da7ac3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b853dc-b715-4e6a-a5df-b79aca397167",
        "cursor": {
          "ref": "84239632-1976-4d8f-b53f-82adaf70fd39",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fb02da64-2336-4741-9e53-57017ed7524c"
        },
        "item": {
          "id": "56b853dc-b715-4e6a-a5df-b79aca397167",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ba249c6-8376-4f8e-91f5-8a04e8b22932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d8da1a-4e3c-4b33-b521-3eba86328b10",
        "cursor": {
          "ref": "1761680d-beff-4476-92a9-036371490b24",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9cc228fc-be38-4812-bd85-2a2463e4a68c"
        },
        "item": {
          "id": "73d8da1a-4e3c-4b33-b521-3eba86328b10",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e1c6acd3-817e-4e8c-9a1e-48b6edc068b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8daabba-eb22-4dff-8488-e415ca0cb4f7",
        "cursor": {
          "ref": "0265354e-913b-4d31-bed0-a6ef1a166e5e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5b207843-6b57-4e8d-a805-1a532e7292bc"
        },
        "item": {
          "id": "e8daabba-eb22-4dff-8488-e415ca0cb4f7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fed17b63-dd4c-4367-9639-cf97d1c077a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdfa539-e127-4896-bcfb-63558cdd00e1",
        "cursor": {
          "ref": "0f6045c2-c70b-494a-bb58-97f8c6ff7ad4",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "07e3267e-03b3-4c44-be35-695a3217f4d0"
        },
        "item": {
          "id": "3bdfa539-e127-4896-bcfb-63558cdd00e1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8f926021-7494-4ecf-b9cd-ad3603383f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d39d9d-c9cf-4906-a3df-fe969f0f524f",
        "cursor": {
          "ref": "7aaa6ca6-eaa8-4d0e-8fae-ec2c75720637",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9b397e09-225d-4210-90d9-b1d90ad47cb2"
        },
        "item": {
          "id": "09d39d9d-c9cf-4906-a3df-fe969f0f524f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "021305de-feb1-4b7f-962d-1f0103e472f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b76a34-4d73-43d7-9f1e-16d53869e43a",
        "cursor": {
          "ref": "c4ea0d4c-a401-4abc-b5e9-66b1c31679de",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8ab8a020-a205-4e22-850b-5f6d135440b1"
        },
        "item": {
          "id": "58b76a34-4d73-43d7-9f1e-16d53869e43a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9dead117-007d-456c-bee8-2721dd71e079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c3f96f-b5ed-45f8-85b8-43455691348b",
        "cursor": {
          "ref": "d69aa8c0-dcd4-4374-9389-c85f0453d399",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "55814db1-0350-4085-8dba-573d0d1f547d"
        },
        "item": {
          "id": "d2c3f96f-b5ed-45f8-85b8-43455691348b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7b08982f-2ef3-4716-ade7-6f3a153e996c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b93d3-8857-4b1d-b5c5-fdbd536a6cf1",
        "cursor": {
          "ref": "aff9474f-48a9-42de-9f0c-c6c25ba2d29a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "92469ca4-5370-486b-8e09-a6a2466a04b6"
        },
        "item": {
          "id": "dc8b93d3-8857-4b1d-b5c5-fdbd536a6cf1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "05a1d533-6483-4e56-bde8-5f70fe9f4d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5413fc0f-eeb0-4624-b6a3-b6adccc81973",
        "cursor": {
          "ref": "0b01781e-c46d-440b-b3fc-77c9c7d0eeef",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1e36772d-9f68-436a-865b-54660d7eb501"
        },
        "item": {
          "id": "5413fc0f-eeb0-4624-b6a3-b6adccc81973",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f507dd1c-871a-4098-abc4-c556b283ecf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269a75c6-ad6d-42f7-99b7-19fbbe22c634",
        "cursor": {
          "ref": "828cc964-5fb1-41a5-9748-e3f1df6ce258",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "61a6d1b8-8dac-4466-986a-ae40efed70d2"
        },
        "item": {
          "id": "269a75c6-ad6d-42f7-99b7-19fbbe22c634",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "42b6c9a8-b1f3-4011-92e3-2a18a230c763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f34943-342c-4cf3-ad4e-7a39c6796226",
        "cursor": {
          "ref": "bdb7e1e0-8638-4b48-b2b8-dc539c2e9658",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3ce68039-3a95-463f-beda-efc19088da91"
        },
        "item": {
          "id": "a4f34943-342c-4cf3-ad4e-7a39c6796226",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "80df88e8-a438-4e51-85cb-53b0ba2aa335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ad4938-57b3-4355-8ef8-7db7b835e633",
        "cursor": {
          "ref": "fa7ebd24-b230-4b3d-871e-277789c66366",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af084d80-4124-4128-bf05-e22aeefc5eb9"
        },
        "item": {
          "id": "c1ad4938-57b3-4355-8ef8-7db7b835e633",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f64de871-a4c3-429b-95c2-051dfb507140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fd65bd-161e-4160-a3d6-969754fca524",
        "cursor": {
          "ref": "19c53073-b9cc-4466-92fa-a4a4369047dd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01903c5d-c2ce-4a7d-b233-6758422c945c"
        },
        "item": {
          "id": "93fd65bd-161e-4160-a3d6-969754fca524",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e9ebe68b-ff13-4094-afd4-eeaf7db5d59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4342b92-595f-4129-b83a-4c15dee34b94",
        "cursor": {
          "ref": "c9beec8c-fc57-4641-8e34-bb9d4eb68ddb",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0578054c-e1c5-433f-a8ee-33d008f81dc3"
        },
        "item": {
          "id": "a4342b92-595f-4129-b83a-4c15dee34b94",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7f570b6f-55cc-4b90-891a-f72046925505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2a00ae-e353-421d-ab30-2aecb9fdc4e6",
        "cursor": {
          "ref": "3d7e8d94-d4da-4e01-9d54-fbfc4b84623d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "15af02d5-34ec-4448-8d20-ee4554071e5c"
        },
        "item": {
          "id": "be2a00ae-e353-421d-ab30-2aecb9fdc4e6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "af6bf3f3-22e8-42cc-9f76-3298675b18a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef0cc3b-79fa-4937-81cd-6dfbca9032d0",
        "cursor": {
          "ref": "e3516d7f-dafa-4962-8a26-a750e192e0d2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fddc614b-ee8d-4042-8b68-a4a287283926"
        },
        "item": {
          "id": "9ef0cc3b-79fa-4937-81cd-6dfbca9032d0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3b1f06bb-d0b7-4c55-93cf-ae1f3b940372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62ec3c8-7531-413d-8b13-550dd53c46bd",
        "cursor": {
          "ref": "cf10a48a-508f-4613-ae9a-37dc3f7592f3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "faacfe25-48f2-4fc3-82e8-fb45d91c65eb"
        },
        "item": {
          "id": "d62ec3c8-7531-413d-8b13-550dd53c46bd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e6eb770b-aab5-460f-b39e-ae24076f1d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1109b37-6380-4b1e-9e61-5bb23ddbcdbf",
        "cursor": {
          "ref": "cdefb3b2-75eb-436c-a96c-e5b34501755a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "df3d6313-2a6b-48e2-8090-bc2a264393e3"
        },
        "item": {
          "id": "b1109b37-6380-4b1e-9e61-5bb23ddbcdbf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ec6cd52d-2c5e-40e6-8ee0-165adc5a05f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3041c85-6c82-41ce-b4d8-6d8f566ec609",
        "cursor": {
          "ref": "021da593-5b94-4a72-bb83-d6600bec5259",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5549313e-e4d8-493e-8428-1a6346d3a9ae"
        },
        "item": {
          "id": "c3041c85-6c82-41ce-b4d8-6d8f566ec609",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31bcc654-9640-468a-ba6d-f5ed0a38bd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a96b2-bdd2-423a-a469-2633f59ce42d",
        "cursor": {
          "ref": "2920c699-f910-4171-b924-b341295916fe",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "49b1be34-cf8e-4b08-a1ed-f39bc90e5148"
        },
        "item": {
          "id": "0b4a96b2-bdd2-423a-a469-2633f59ce42d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4e375c7b-d1ae-453a-b431-ce0b7b8e377f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32c442a-24a7-4028-8ce2-01dd6f4cfee4",
        "cursor": {
          "ref": "9d0e1f8c-a3b0-4815-a5a3-4cd3709d5660",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8732ad5d-7967-4fc2-9f4d-a0e618ab19e4"
        },
        "item": {
          "id": "d32c442a-24a7-4028-8ce2-01dd6f4cfee4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5ed36122-46b5-4026-a4cc-507ea39b87ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a6a7a3-0e5c-48be-8d40-44b08ddc92f1",
        "cursor": {
          "ref": "9de044de-bb96-4db4-b96f-18750f15b5e3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "10202346-fb2b-4dd8-a9ed-f2b3ccde0742"
        },
        "item": {
          "id": "78a6a7a3-0e5c-48be-8d40-44b08ddc92f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bd4a4531-b6c5-4497-8bab-53789264bce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afbf49f-a95a-4655-839d-22fb746f3517",
        "cursor": {
          "ref": "f2b2b8c2-56db-4b96-8741-dd32f3308896",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "541e38cf-1011-4c5c-9166-2846ab84afbd"
        },
        "item": {
          "id": "3afbf49f-a95a-4655-839d-22fb746f3517",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d25a6167-b838-4949-8db2-4a0395b5d9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98dce7b-bff6-47ff-9114-0af758c46bda",
        "cursor": {
          "ref": "be694695-d293-4caf-a157-1d3e394749ca",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "35d84c99-05c8-419c-9d05-d20b77458458"
        },
        "item": {
          "id": "f98dce7b-bff6-47ff-9114-0af758c46bda",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7a96856f-ec8f-4587-85d3-b571618306b7",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "d6db105e-5b95-41da-8200-37e6bed8adcb",
        "cursor": {
          "ref": "052c95fe-a78a-498d-8474-ee2b3058ab70",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bee3b4f5-92e7-4d5d-9a00-b4517a24081d"
        },
        "item": {
          "id": "d6db105e-5b95-41da-8200-37e6bed8adcb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "444fa656-9e74-406b-aa58-02981e923346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff98f1d3-79ea-46af-8848-bc014e07ec07",
        "cursor": {
          "ref": "d0aa56ae-bd4b-42bc-bb50-94392a94a606",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "81765671-df0b-4b74-829e-9d5a26a8ec80"
        },
        "item": {
          "id": "ff98f1d3-79ea-46af-8848-bc014e07ec07",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "326b8e12-a813-46d0-a895-fcd7cb592ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f8e9fd-a324-4097-8bcd-62ffa8100bc7",
        "cursor": {
          "ref": "441cef5a-21cf-4172-b0b8-ec8964886a9e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ac4def23-a46a-4f73-a33f-ee392272faa8"
        },
        "item": {
          "id": "c9f8e9fd-a324-4097-8bcd-62ffa8100bc7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4a7c030c-2ddd-45d0-8684-2c6e4a3c69c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594f822f-6495-485c-ad27-757e1c047cc1",
        "cursor": {
          "ref": "f55c5e41-3faf-4c48-ab22-38c25b3c6e76",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7f13747b-4def-4fc0-b7fc-8dcda9c5482d"
        },
        "item": {
          "id": "594f822f-6495-485c-ad27-757e1c047cc1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e67dc6af-53b8-4687-835e-5d2999362027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f4f6d4-4f7f-4a19-a47c-b0d9d72a7ce2",
        "cursor": {
          "ref": "af31e0c8-2c19-43e7-b53d-7f60dd3a02f1",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a6876594-addf-4a59-8610-99d9200b1657"
        },
        "item": {
          "id": "69f4f6d4-4f7f-4a19-a47c-b0d9d72a7ce2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "49562905-d2eb-4ab6-beaf-753d97ecb2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117bae33-d306-4de4-9919-6ef3c98e155e",
        "cursor": {
          "ref": "c1902004-e4a3-438c-a275-c11d507524c2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f611dc9e-42d5-4a2e-940d-9095c93f7254"
        },
        "item": {
          "id": "117bae33-d306-4de4-9919-6ef3c98e155e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "33a4fe8e-ca99-47d0-96cb-261394b5e873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eba6c8f-ee48-4bf8-b097-962c68a512ad",
        "cursor": {
          "ref": "a5e7ee21-e433-4068-9943-aed98903d904",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d4a6970b-7a59-4fbc-9f88-c095ae9d7f89"
        },
        "item": {
          "id": "1eba6c8f-ee48-4bf8-b097-962c68a512ad",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "86249262-8c59-4c5f-8151-e101b0bb5b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410b102e-7731-4f20-a218-0a3831382cdd",
        "cursor": {
          "ref": "1e5e59d2-8fa5-4e43-bce5-2966213d9692",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9eb767be-c57a-4cd0-b27d-7affb91354e6"
        },
        "item": {
          "id": "410b102e-7731-4f20-a218-0a3831382cdd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "514eaaf1-93ba-4a88-a31f-522a91a24eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2052af1-0f07-4ffc-966a-9bc1447fed27",
        "cursor": {
          "ref": "077c562d-b20c-4e4a-8418-d6fc9a5d1f69",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "31f8a5f3-9cc4-4bda-8792-2954d9902a86"
        },
        "item": {
          "id": "d2052af1-0f07-4ffc-966a-9bc1447fed27",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6a8dad46-df97-45eb-8959-3960499ec745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6532acad-7ff6-42ef-bb98-1a960d40e4b7",
        "cursor": {
          "ref": "1c705acc-f0f3-403e-92d0-ba1ce593e1f2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6a1dd412-ee43-4229-87dc-4c40e0d91e06"
        },
        "item": {
          "id": "6532acad-7ff6-42ef-bb98-1a960d40e4b7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cd01fa89-c127-40a5-8a14-071646fbcde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a999e54-77c4-4a98-8873-588ff0b5a812",
        "cursor": {
          "ref": "a17f008f-a4f9-4d74-a8ac-20e9587c1bf7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3fbccf45-dcdb-4c95-8838-e1f13cf194ff"
        },
        "item": {
          "id": "5a999e54-77c4-4a98-8873-588ff0b5a812",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "06be155d-cf2c-4cd3-9f90-31606be8a9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342b1357-07ee-4b2f-a8de-08bfa12b6983",
        "cursor": {
          "ref": "bd729982-6d31-4c62-885c-606b8a9f8b15",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5cf4fe48-42f6-4a85-9531-e108944e10f2"
        },
        "item": {
          "id": "342b1357-07ee-4b2f-a8de-08bfa12b6983",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "26714065-e77f-4b45-909d-9fb4508a8efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25569d06-a5ae-4aa7-bb54-b065157be7c1",
        "cursor": {
          "ref": "993ea2c8-a9f6-42d8-bf4c-108a9fc1ffeb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "53277edc-a030-42ee-bc67-a566a5df7909"
        },
        "item": {
          "id": "25569d06-a5ae-4aa7-bb54-b065157be7c1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e26bb7ec-8356-46a6-afc4-f0eb8d59c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce724e1-748d-44f3-b2a8-9827aa1ee63a",
        "cursor": {
          "ref": "bd0f6484-6b67-4545-bc6d-2c59133a0f63",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a6c0aa24-5f2e-4440-8e2e-b05749a2cc98"
        },
        "item": {
          "id": "cce724e1-748d-44f3-b2a8-9827aa1ee63a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b648d933-9c9f-468e-b5dd-dc1729426046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2771b6-e139-4f07-b5c9-427ccabb4fdc",
        "cursor": {
          "ref": "8c6175a8-be1e-4006-9afe-f43c7b0e7980",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7501017f-56cd-4c6d-b0b7-ffb3c4145790"
        },
        "item": {
          "id": "7b2771b6-e139-4f07-b5c9-427ccabb4fdc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5f70ca94-a239-47de-8b06-5a9ef030c5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7129df0-f819-407f-bad9-cb83648b8089",
        "cursor": {
          "ref": "5d25b376-aab0-44ae-b6ab-96b5da1feb0d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "390b96e7-9388-48b2-91ff-ec83b4575b7f"
        },
        "item": {
          "id": "e7129df0-f819-407f-bad9-cb83648b8089",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3197396e-9ee2-41a9-840e-92bafb13224d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168821dd-552a-4835-94af-6f70cdc7a644",
        "cursor": {
          "ref": "d7939dac-5abb-41b9-84e0-ad55a16627f0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "22545756-2c57-4fbd-9e9d-884e1f3e71c2"
        },
        "item": {
          "id": "168821dd-552a-4835-94af-6f70cdc7a644",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3e473208-df4e-4864-a210-a1f9a6018b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea634a56-33d0-46be-aeab-9fec34d4441c",
        "cursor": {
          "ref": "4f6e8fff-3a75-4e14-864c-0f3d4d4aeb6a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "56c88e4a-8058-4c32-b706-51dfa2e0020d"
        },
        "item": {
          "id": "ea634a56-33d0-46be-aeab-9fec34d4441c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2385a509-f256-4b24-8e4a-7d8a2d5ad62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f840f7bc-c1b9-4f77-a629-fbd62f2a3fcb",
        "cursor": {
          "ref": "45ad036c-e9b3-4e52-a421-6f46bc988095",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b02a6a8b-9814-4531-b911-563f1e60818e"
        },
        "item": {
          "id": "f840f7bc-c1b9-4f77-a629-fbd62f2a3fcb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "27475ce3-26de-4328-b3fe-c06227f0aea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459a5185-f032-4e81-9f21-35932bbb1a9b",
        "cursor": {
          "ref": "2f2a12e2-11c0-4a9a-8d80-9b1504ac0c94",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c5cb73c4-6835-44fc-b24d-a766634485e8"
        },
        "item": {
          "id": "459a5185-f032-4e81-9f21-35932bbb1a9b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ac35b1f6-87c6-4fbb-b78b-13527a8586fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4835a5-cfb6-48ce-bf24-a15d0f513cff",
        "cursor": {
          "ref": "a26fd135-f99b-4f5c-8573-7742a3a18e31",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1ca766b6-d7c2-475a-a717-40c5dced9cdf"
        },
        "item": {
          "id": "5b4835a5-cfb6-48ce-bf24-a15d0f513cff",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bea942b2-7a82-44ba-854b-49b22b1029c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5d13d0-4462-4f23-9730-256905fe3344",
        "cursor": {
          "ref": "a0284b30-0271-4154-9b06-38d8ae85aa07",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "644bd881-6bf3-484a-977a-bb8491c537bf"
        },
        "item": {
          "id": "2a5d13d0-4462-4f23-9730-256905fe3344",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c4fc4177-0b44-4b9b-b11b-9c0ca3cac41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5514b2d1-2957-4485-a140-a4b5ea274f56",
        "cursor": {
          "ref": "f020c355-aede-4e38-b512-12b96b4a4291",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "95885cad-768b-459c-be2e-df9b2126a6b9"
        },
        "item": {
          "id": "5514b2d1-2957-4485-a140-a4b5ea274f56",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cd2a428f-a2d7-440b-b12b-df1d118960c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21129bc9-21ee-4abc-8d29-09617011cc49",
        "cursor": {
          "ref": "2f36eff1-82dd-414b-8632-bbd8011982f9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4b673dc3-96b3-45a9-92f8-8de4a8ce9892"
        },
        "item": {
          "id": "21129bc9-21ee-4abc-8d29-09617011cc49",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b777577a-a77a-472e-b1bc-c68080338918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e1829a-06f7-47da-a345-2dde31ecbcae",
        "cursor": {
          "ref": "37a1b74a-9692-419a-9079-49641f14c84e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5478edd9-f7c0-478e-b552-340db078ec99"
        },
        "item": {
          "id": "e7e1829a-06f7-47da-a345-2dde31ecbcae",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8a3585d3-f0bb-4df6-91d3-f7ad3be03bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efc9671-973f-49e7-8ecb-c0a81a67c05c",
        "cursor": {
          "ref": "1aa766d2-fee1-4ff6-b365-3ed1bfc48c84",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "75796608-37f2-4133-9591-5f0717e505be"
        },
        "item": {
          "id": "1efc9671-973f-49e7-8ecb-c0a81a67c05c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0a3e0cc7-22e5-4c07-9e93-675b9d182602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c720939-206f-4c09-94b2-a61150a63ae9",
        "cursor": {
          "ref": "e3ff6e1c-09b2-48fd-8911-2580315749ec",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "50ddb283-9775-44a9-9b87-f0299a897f4e"
        },
        "item": {
          "id": "9c720939-206f-4c09-94b2-a61150a63ae9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6a628e77-1b37-4354-9247-c321739a30c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f677fe7-ddbd-4b53-82c5-0f996910cf17",
        "cursor": {
          "ref": "8fe7c02c-370e-4baf-a679-e6be61ac7bce",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7b53ba70-0279-4cdd-b770-dbca57f2db8d"
        },
        "item": {
          "id": "7f677fe7-ddbd-4b53-82c5-0f996910cf17",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d7ff5ae1-6bc6-423f-9352-95f01ca05a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4502c52b-211f-442e-9055-71214a521e33",
        "cursor": {
          "ref": "27154bb4-4eb7-47bf-b2e9-5575f798de77",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fcb3aa96-48c7-4fc8-9f55-491a262b0dc3"
        },
        "item": {
          "id": "4502c52b-211f-442e-9055-71214a521e33",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "eca2dfd5-9b02-4806-9ac7-86c9fefa639b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff51786-c607-45a2-919c-07b0e0ee2501",
        "cursor": {
          "ref": "01fa027b-9d93-4af9-98f1-7dff7ec5d7a8",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "772c0359-3036-4011-82d7-f7acc1267a9e"
        },
        "item": {
          "id": "dff51786-c607-45a2-919c-07b0e0ee2501",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9ee9b3c9-d297-477c-93e6-94ecc5455cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e2c087-98b9-4bcd-9815-0b712e056627",
        "cursor": {
          "ref": "fe81a68c-fdd9-475a-b7ac-415038aed55b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bf0856d6-ae07-4aab-951b-8a05f2f11e2f"
        },
        "item": {
          "id": "f7e2c087-98b9-4bcd-9815-0b712e056627",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a565d9a6-6d9e-4cd4-bf99-e09a27329d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f219eac7-83e4-4d4d-8aec-3a1f566f7850",
        "cursor": {
          "ref": "b3f6e471-004a-4ee2-b2bb-9de9c6f3f484",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5bf268f1-a073-4d9d-a2c4-709debc6dc57"
        },
        "item": {
          "id": "f219eac7-83e4-4d4d-8aec-3a1f566f7850",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aacfaeac-5d6a-43bf-a0cb-8ed775e3d26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cd43d4-8bfc-4874-9e66-919cd63b47d0",
        "cursor": {
          "ref": "fdb023b6-bfe0-4f85-872b-122a9c2f06e8",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5255556c-ea84-4f6d-a5c9-c78c1f5248a2"
        },
        "item": {
          "id": "a6cd43d4-8bfc-4874-9e66-919cd63b47d0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7ffb4b55-9b64-4c62-890a-eabb43d50f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f95d686-d145-475b-9f3f-42cebea0d72e",
        "cursor": {
          "ref": "e43ac04f-a674-4624-883c-d52e98cc812e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "40526110-0893-47ef-b338-d2b35a13a9a1"
        },
        "item": {
          "id": "0f95d686-d145-475b-9f3f-42cebea0d72e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9c6be2f0-7410-4908-af59-458234eaa9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480da69-87fa-473e-8604-75163e1a3cee",
        "cursor": {
          "ref": "94c1d2dd-1db4-4e1c-8767-a809cf0f6ad7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "72a6f08b-7d74-4305-91d3-3932eacebe58"
        },
        "item": {
          "id": "f480da69-87fa-473e-8604-75163e1a3cee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2fffbae0-2904-4f17-b87f-d0dc85f23b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6859c5-7ab7-4403-8d57-6d6c65a503a3",
        "cursor": {
          "ref": "3a49fd18-0922-4180-8986-c4b7e03c0f8d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e77076bb-00d8-479a-b8ea-133cabee6538"
        },
        "item": {
          "id": "eb6859c5-7ab7-4403-8d57-6d6c65a503a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3b49350c-6447-44e9-a5d6-6488c3d40015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6f1dab-729d-447c-80e4-690c5bd55090",
        "cursor": {
          "ref": "2c97e5d9-9723-4767-a852-44fcae2be10d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5beb68a4-3a26-4946-80f8-6630a7ebb082"
        },
        "item": {
          "id": "1f6f1dab-729d-447c-80e4-690c5bd55090",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6889189e-81f2-4db7-bd63-0d8d9e12bd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c547f9-854a-4088-87c8-8eff6b10eba0",
        "cursor": {
          "ref": "f35ccffd-4081-4060-95fe-9898e4c2dd87",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "64995a0d-2a12-4f02-a2b5-ac0bd50e79fe"
        },
        "item": {
          "id": "28c547f9-854a-4088-87c8-8eff6b10eba0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "432e656f-ac63-44e3-8619-f50ede087965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b18c03-e55d-4c23-943a-9a92b00ed4ec",
        "cursor": {
          "ref": "d2821ea5-db46-4049-b614-3704a4864367",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "401ce4eb-3066-4540-9957-78db8a87d96e"
        },
        "item": {
          "id": "d3b18c03-e55d-4c23-943a-9a92b00ed4ec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "672bbf7b-f4d6-4c4f-86dd-f6a27996d707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ce6d0c-7c82-41c5-aafd-be6edcc2cfe0",
        "cursor": {
          "ref": "f1dcc6d8-c13e-4cef-ac84-8a40eb981443",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b94d1484-f7cb-4bc6-9cb6-91db7577ad2c"
        },
        "item": {
          "id": "e1ce6d0c-7c82-41c5-aafd-be6edcc2cfe0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e3980630-9975-433b-aff5-d885116a7a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9a4754-ba05-487c-9f92-05bc05ccd01e",
        "cursor": {
          "ref": "6751399e-c439-4389-825b-3123925636ed",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "95b2c8ca-c111-4465-9e41-1b13d4e64027"
        },
        "item": {
          "id": "2d9a4754-ba05-487c-9f92-05bc05ccd01e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e446a185-8299-4ff5-a26a-715f749a5520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09ae9ed-2d6b-4dee-84d9-13e37d6665a8",
        "cursor": {
          "ref": "f14dcf85-caa8-4023-911a-d8d169b83e36",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5795f0ca-13c3-4873-a1e7-98be23213678"
        },
        "item": {
          "id": "c09ae9ed-2d6b-4dee-84d9-13e37d6665a8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "65010248-270f-4089-892c-72d63d5df295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4aedb0-5cd0-4b32-9f42-ab22f02a979a",
        "cursor": {
          "ref": "f9109455-bc70-43e0-a940-01f56d62085a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3b1f19a8-75b8-4d97-b74e-d097ed5e38e2"
        },
        "item": {
          "id": "3e4aedb0-5cd0-4b32-9f42-ab22f02a979a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "34d3a9b2-e028-4a8b-9a77-d4eaf03fadfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86f6aae-8ec4-445a-8da2-5a996afc7f79",
        "cursor": {
          "ref": "c943817b-1b0d-48ba-bb9d-4affec8b5f73",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d555c167-91cd-4fb2-aefb-feea58dc6f26"
        },
        "item": {
          "id": "d86f6aae-8ec4-445a-8da2-5a996afc7f79",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a7e5bf8-be3d-4a31-b188-bea2a8898a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dc73b3-4f46-407b-99e0-e6aff3b9e6f5",
        "cursor": {
          "ref": "de0a3cdb-38f0-42d8-b736-e45510819d13",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f7999243-eddf-40da-aee1-ec98dfbee51e"
        },
        "item": {
          "id": "e0dc73b3-4f46-407b-99e0-e6aff3b9e6f5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "544e1518-2a44-4942-8699-cb1fc1bf9f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456b58ac-8ebd-4d64-951b-d6ca398b7537",
        "cursor": {
          "ref": "2ebae9fe-767a-42a2-9b0c-7d567608c3d4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c3c4ea66-923b-4269-98c2-a688ec068367"
        },
        "item": {
          "id": "456b58ac-8ebd-4d64-951b-d6ca398b7537",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b410af57-b74b-4b04-aae4-d0534c5161dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34e246-9ed5-42c4-af14-75391885a595",
        "cursor": {
          "ref": "1462c206-d002-4a12-82d2-67671416eb76",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ec019ad2-3397-4672-bcb1-3c7c425fd18d"
        },
        "item": {
          "id": "bc34e246-9ed5-42c4-af14-75391885a595",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cdb2d0f9-5093-4e2e-acea-a3a2b7fffa96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab631c68-0dd4-464e-a443-b32b9dc15feb",
        "cursor": {
          "ref": "505657a1-63ed-4c99-bf2c-e28167b52900",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "df29ad06-e3f5-4c9d-a1f9-e3e470ea987e"
        },
        "item": {
          "id": "ab631c68-0dd4-464e-a443-b32b9dc15feb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a9cbb073-b409-48b7-a93b-89c9785425f5",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "31808748-6c2c-4dcc-8ca2-c0bf571305ae",
        "cursor": {
          "ref": "8c3ab140-0213-4d7e-992b-f04d0754821c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d7cf26a1-0bd7-4ec2-9daf-b9b25abc502d"
        },
        "item": {
          "id": "31808748-6c2c-4dcc-8ca2-c0bf571305ae",
          "name": "credentials_verify"
        },
        "response": {
          "id": "014d4a23-15eb-4561-9875-9445419f0b80",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ff7812-2db2-49d5-95d2-9a9f805c025c",
        "cursor": {
          "ref": "83cb6bb2-5214-4ba6-9bd2-79b2fdb153ee",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c156c266-cf96-4b26-968b-89c81228925b"
        },
        "item": {
          "id": "a9ff7812-2db2-49d5-95d2-9a9f805c025c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "adaa0502-c653-4fcc-8d10-d9e864f5d50e",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb90809-71cf-44ec-956d-81c564d8d551",
        "cursor": {
          "ref": "a8bd971e-c707-41cc-a4ae-ff164d092b2f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "88046cb7-223c-4f7f-b43e-a72aeea6405a"
        },
        "item": {
          "id": "4cb90809-71cf-44ec-956d-81c564d8d551",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9283272-4966-40c6-b5e8-8ab3d14064eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb90809-71cf-44ec-956d-81c564d8d551",
        "cursor": {
          "ref": "a8bd971e-c707-41cc-a4ae-ff164d092b2f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "88046cb7-223c-4f7f-b43e-a72aeea6405a"
        },
        "item": {
          "id": "4cb90809-71cf-44ec-956d-81c564d8d551",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c9283272-4966-40c6-b5e8-8ab3d14064eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf04fed1-dc84-49c1-9cd3-4f4e57c64414",
        "cursor": {
          "ref": "01bc5036-01ec-4336-b272-2f056c49af5d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "371222b0-b2d3-4bd2-9cd2-d16ad03b97f2"
        },
        "item": {
          "id": "bf04fed1-dc84-49c1-9cd3-4f4e57c64414",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7442d33c-3dc5-41cf-8ee3-dc8ba671b97e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485536d6-05be-47dd-acc9-8928b8d577e9",
        "cursor": {
          "ref": "d2c5f3b7-728a-4039-b68a-3dcbc6d7d567",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d503f38a-12e6-4cb6-af84-7b625188b125"
        },
        "item": {
          "id": "485536d6-05be-47dd-acc9-8928b8d577e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "39e6f56b-d9b1-4287-8db1-80d127984495",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}