{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c2c61ce2-ad0a-4ea9-85ec-c79e1c9a61fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "40f52f67-595c-4e9a-9c1b-bcbc78df0c7e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "078057dd-d207-4888-acf5-19f7374af1ae",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0571ebea-50dc-4748-a1f0-1f09f79c1769"
                }
              }
            ]
          },
          {
            "id": "0626695a-8441-492f-9a6d-1406bda7e57b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "491d9fd0-7475-4013-9ec6-cbfc71d535c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e631e8ca-18dd-484e-b430-25afcc8c4918"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3c2c3a2c-9ad2-4db7-af03-107a95ca2452",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eb0153be-6815-4eb7-8a5d-2084d1c39644",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab77f264-c7c8-447c-a00c-239688940724",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba5bde87-bcc1-475f-b273-33afd87938bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0c63ca7-e9ed-4acf-aa72-e416106e2a62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bbdd379-0ccf-4886-860c-414d93afd3ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42887722-11a3-44dd-ad4a-8d417a3f58a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0cc9dc70-4fb1-4536-9a12-2d6ac6b87581",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec0e3c34-46c4-4711-b3c2-815e221ddbc7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7789c6bb-5e84-4979-a0d6-d6fec0070d66",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "74216c72-c0bc-4e4e-a2ca-98be3204ee09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c7cbbe9-8c24-48ad-b742-07dc87c89424",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19c9f536-6b62-474c-9cd8-c806df233355"
            }
          }
        ]
      },
      {
        "id": "0ae94d52-059f-4573-87ae-7ff1c839c256",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "15fc2899-26f0-41dd-91ff-55bd25213846",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56505518-8e52-4824-980c-d0de270125f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c65efe6-bd4a-4e2b-952d-d2645452241a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de46f1e-ce8b-4ff7-b72c-844a82d5c1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f38a7eab-2614-48b0-89b9-4fd53db4e74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07884485-765e-4862-8076-cb0fb69bdab4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da132c51-8bc0-4ea1-8900-06479d15909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3d00940-2a47-4618-b3f0-091199869605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4ca21a-97b4-4982-9891-5799b8ad70de",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4333e599-2801-4070-97b4-a0e61f8d1bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc6e5d1f-a605-4a99-b53c-f570aea83922"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e46e087-d08a-4865-8d07-f7946d17c96c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41e4747b-affc-4b5a-afd0-2a24fed61cb2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbf4e56-f3ab-497c-86c2-a94dccbad073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4de4881-a14d-4565-b8f1-2bb49e5b7b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dcb254-df54-4c2b-a990-deaa4161b2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76ad5ea-f299-472b-b11b-c178a6eb8c4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9585eee9-b331-4939-b916-b26ce01320cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cca7236c-f7dc-4bdf-a947-4554306b15bb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48604278-b0e8-46e2-a46c-626cf349a58b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b01cc8c9-5e6d-4a0e-a3ec-0e12a6b09ecd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5e58d1b-8c61-45f9-b132-c4eaba6a89ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8a069f7a-6d54-4de0-86b0-072b705297ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dde47b2e-6a31-4729-badd-898be46bd7ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00e21417-1501-4c6d-9823-4d8b34dd7306"
            }
          }
        ]
      },
      {
        "id": "5791487b-e12c-453a-b9c7-6a20bdb18ea6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6343373b-6078-459c-beff-891b311d11cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "652472fc-38df-4d98-8d7c-8eed92dfd607",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "449feddc-e739-45fd-b040-5446528fe4df",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209a3641-0b77-4da9-b14b-cf6e89589855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e898d0-fbfe-4022-b4ee-046bfd14e35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326e7d8f-6976-412c-94c8-814244a5a697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00fd9830-b27a-4ab5-8fd2-9543689428e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bb3e3a-ec1c-40ea-a6c3-3b099d1adc49",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f576fb-dfe7-4bb5-81db-477dd8a4bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa64f1fe-54be-4f04-bd40-60a551695d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b213f7d-bf05-452e-a21f-b8d2ab0ac90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac3e3b50-468a-4b25-b5c6-3c2c6d3fb98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b203b20-f684-469c-a188-c7ed8b6f17ea",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faa2245-d55f-4d77-8104-126022d15280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc7a8d6-0831-4274-9891-0d69a6a7feb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2806f589-2e23-4452-9e20-f1a16a662b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99d49118-c362-41d3-be0a-3dd8628d96a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2556e750-64b3-4eb1-b09d-2baa902766b8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a44144-99e3-4bf8-9f3c-201f7db5bc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85a5420-8c30-4aa5-9691-df0d9b381adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d3f60f-edc4-4d9f-a7d6-3b269688d963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa6f2fc7-a6a0-42bb-bdd4-920317e5ef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f0ad60-dc8a-48aa-9be5-44cc891b11db",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c83003-34db-4f3c-a2b0-3539a7ff5712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1150f27f-5ed6-48db-b339-d4d7761bff3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07709f96-a0b2-4385-b4a4-801b4ccb5f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92fbab07-9a83-4350-b6d7-6073d0dafcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac93479-f2cd-4c44-8c04-2ebd82010ce2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b55312a-f383-4cd0-950a-add468a03436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296fe85f-8ef1-4ed7-b3e6-ee141bc4c23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422cee7f-8ccc-4623-8aec-77d62587ed63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2023eb7d-af74-4736-af4a-af5bd05d1105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f29cd7-6d59-433d-a424-ee0b13f3ffdd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac2bf5a-14a9-4dfb-a5a5-69e0121c162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3074d8e6-8d0c-4338-a901-b9a3adffaa4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcdc58e-e0f8-4c11-9e30-cfbb6aca2e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a94e787-2a63-429f-a56f-a31fc6dde455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7026b5be-f535-470e-9325-e1a64da5dfea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5537ef5-e5ec-4928-9c20-b80f7d7e1f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708c3b9f-97f1-4535-b34a-c9c9cd5d5b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c4089d-6c97-4380-beeb-65f3f4c04196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "275cb078-91e0-4f58-a0ba-816e2ee584ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b5a31f-209f-4902-bbf5-06b7e0db6e14",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384a2cdd-aec1-4dbe-9cad-a3491fabdf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed9e9ce-298c-4aff-8817-430ff308a267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21a0d9a-8f85-4029-8fd2-9078927ae7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6befbbae-869f-43f6-9216-92d36a044ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2865816b-bbcd-43a5-bfc0-46ffeb6e966c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b603dad-c65c-40d8-b710-6e3f58345e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c9f28c-2bb8-426f-9141-ca4177ef0393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc857a6-02c7-40c9-a560-aedeb78b768a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ef1db17-9191-4b8c-ba41-eaa7c02c68ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be94b888-d401-4800-a029-155262dd93b5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e8c47b-9806-49f5-b51a-edce9dd1f43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c373726-e62e-4ff1-a629-215810d3202c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc84a9a-386b-435d-90f2-ecdbd8a00a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e968bac1-cacd-423c-a749-76afa9b1eab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a7ba70-c64c-4b98-b576-e19eefe6a127",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a644ac5-c214-4233-bb7b-fb8541c81cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2690f9a0-5de8-49b2-aa78-3e220198ae38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2389a58-95a0-4057-a772-4d3e295a530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80669ff1-a682-4df6-8906-ef99e9fe8b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2cd5dc-d59c-4114-8073-0484cb566c5b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66acab57-c6f7-4838-9157-516f48e19150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62754508-7be3-4dbd-91d7-1f31f9e13c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01f6ae6-caab-4e53-b923-42fffb246092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67027a82-9fee-43ee-8d38-4b4647052755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c0f599-ed19-45aa-a8af-659f3ecbd69e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4183bbdb-a60e-457a-8098-2f4ca7084d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5968bfe7-3bee-4d71-9933-4075f989e9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227ac358-bb2d-4243-8289-8f8e41fe58f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d233c0c9-7258-4b19-9cb1-21cdb18d5bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3446ed48-e28b-443b-8cbd-c714817a9619",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdcaf77-a928-46e0-96b2-9f73bbd9057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06130103-fe54-4cd7-8a58-3c0fbd81641c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59da425-4fbe-414f-8500-b5772d148fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b4ea33-d76c-4587-8288-a10e767d20e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971c6576-d8a2-44b9-baf3-72dc64d4fe87",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec0011b-6827-4636-9c6e-26ea571dea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59383a04-2a5f-4f28-8d56-5740e6d491fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed01326-8975-4d03-ac2b-d11ad2a19ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abbbf4f7-77bb-469c-b8cd-991ec15025ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f75e8a-ebff-4d0e-8932-6f381b9d4562",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8e97a6-9303-445a-b20f-5fb262ceb13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccd635d-3ccb-4ec3-bbe9-489648e2f725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42aa045-2229-41f4-9aed-87dec65f0f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1940386d-673d-4867-ba33-b8232e94308d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d8ea2-60b4-48c3-af95-d978d3e94ce4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27758a3-6fd9-406d-a1da-c51cd681f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14aa4db0-f4aa-45b8-8de9-eb6a515b1414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680b2ab5-ae4a-4116-8df9-870d5ae1b270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b2eaf9-380b-41d9-be6b-06439eb8e4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396f78c8-671f-417d-b020-182c222e7e4d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4909fc39-4ebf-4a16-97ec-5779e65ca354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89501cf9-8ee0-41fc-8f78-8844dd2d251d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ad467f-b552-47bc-8e8a-eef34df3f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ea0e16-4e22-4fb4-936e-dc504abfcb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fba9bd-7674-4c7b-8332-095162a1ef95",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13704666-20e4-4d37-b8cf-98fc9a909e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27025be8-aae4-4764-b962-5cec8b815d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070b6a79-cccc-4ae0-bfcb-eacbf0293f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "686b7d6d-25fe-42ee-8a86-2f2318b5cc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc55d85-3104-45f8-bd9b-771f6da9783a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c70c19d-c03e-4b23-abcb-043f5a7553d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b21e954-b9a2-46b8-8baa-f8e3b0d9864e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e94323-5c3d-4e63-bb25-5ba720e74357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d758f95b-a74e-40dd-a2ec-c71f4829638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051e4094-b05c-4bc2-9176-5f3fbab39013",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f59827b-c448-4505-b18b-6da465634b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859ee3f7-8b42-4bd6-ad77-b16f57022cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54794705-777e-45de-9383-d956976c8716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "544877db-0f4f-4434-890e-1f6038fc7a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf50d7be-24a6-46d1-ac64-68314f5b2062",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffc711d-95a8-45a5-93c4-4c7edfd54af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263ed066-4db6-4384-835c-be3d77a1ebdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96dd3c9-09d4-4398-8e06-cac9c1d36815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e7de20-4ded-41b3-b4eb-fc0820d5e070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8561d38b-b705-4212-a8a5-940b7b4bc7bb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf92fc3-8e3c-4ecd-a30e-27330f1684ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d488d669-e3de-44aa-9533-73d6e7888828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43041a67-6a6e-4a3d-be75-f0a6df0aede1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cf7313-bd35-4e6b-a8f7-c4e2708d58e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc2fa68-af51-42aa-91a0-44e0c89dad46",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf239220-6fd2-4e02-a2fc-0d4fc030ac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322eb6b7-dd20-4b66-823a-cabd06946615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bbe581-62e1-424c-bb29-9b02136fdbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3725102e-eff6-41f6-962c-b614b4f36083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607e472d-e2f6-4f7e-b367-7f8f9834fff7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc38b463-e064-4ca2-aa93-ff1923dc7f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d986ed2-8b05-4dae-a806-2566b46c2020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438d61a7-176e-4919-ad87-ca7731115696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a14313-4abf-4f1d-bc61-f95e574af660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e8170-0a23-444b-931f-20b10d548a36",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac33ebee-794e-43d3-b973-fbd836a09bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dcf13f-45fb-4c64-8321-3f148d49fba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6377ff8-e6fa-44a9-9d94-aa5e2f581556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd12cef1-e9a7-489c-b5a5-de0ae6440f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0427a8b-d336-4078-928f-4cc4146e3a7f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8635c953-83ac-4acd-8dc3-216673c9d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762842ee-0118-4736-966d-e97372b7d2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d91d93-f538-4c76-bd71-38ab2c22ae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6aacd7-5e60-4a2a-a823-3daaaaef95b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1944447-39b6-46c5-9599-4ab9a632417e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bfbf3e-94ed-426a-aa0f-307c6a17e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f988575-56ad-46aa-952e-ea8b6799bd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc1a96a-8d8b-49a7-9882-148721efa454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b3847a-e956-4562-8089-7a33cf9ce591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc48d3c0-44dc-4b49-acc2-24bc4b8b57e9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf68e2e-4db9-4a00-adb7-b1a86938f975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eba96c-0f8e-4f1f-bcb4-cf8691e43496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db94f0b8-32ca-4dd5-849c-62ceb11b8e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2644cd68-82b2-4354-b6ad-9286637e06ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37747378-e282-4188-9ce3-90dde16359a6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d330315e-f0d7-4e46-b57f-afbbef45618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80709b3c-acb0-4e61-a671-40bd65bb20fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f6cd28-90f9-44d8-9c0c-0fcbd48b23b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4f0baf-0cad-4be0-8aec-9e23c5cf675f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42498a8b-bf58-47d6-a5fe-5ec350706416",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce5ae9d-92e3-4ceb-9133-f489d9cde576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b10e0e4-6bac-4730-825d-9d4bda7a2b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21b3e79-eee1-45a6-aefc-eb12d50ff7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b808aad-1e5e-4976-a6b1-0e99d7c5dd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e5ca77-1539-43e3-b77d-4a2d7206175a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e7a79d-1280-49c2-ad78-599e2fbeafd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472f214-7272-4ded-b685-9a96c02505be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc2676b-458c-47b0-8382-166ffc9dc57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc4d595-de7f-4f86-a38d-a8c31f49b6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a80911b-c6f0-4d39-92f1-48a7034ee191",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d5d133-fb51-43a2-bc99-74a634cf3b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2928684-6b26-48c3-ab25-436a00b831d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8333b49-7cfc-4458-9224-ac91dc29eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3b4efa-4359-4c4a-a51d-4a923dbae167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c20b59d-6b5a-49a3-b3a4-2ddf076d8cdc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d728a846-3265-41a7-8795-b50e5dc63fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a1c620-c46b-4814-89e4-9973c7c066bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a1b76e-2d44-420f-9a54-b5a0fe55cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8a426f57-de86-4813-8de6-fb88b8ea3f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f935ea3-74b8-44aa-b27f-b40d1aca83c1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78611825-0f0c-4275-a02b-730440e156c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eef93b11-8470-4d8b-a745-871ffba749f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2bb71e-fa77-4c88-b317-e350fcb554fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bdc07c-179b-48b7-ae36-537636051613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a954f95-3db7-4e4b-9ce9-ecf8d8f67ecc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32f4fcc-c852-455e-b310-a31a115f4e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5f8737-47fb-4fd4-893c-069bcaad14d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1accc699-fc76-48d1-9d42-6df58ad17959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25eb329d-79e6-417b-b6fa-6a9cb02aabec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1665955a-6c3b-469d-a90f-bb58efcf1c96",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f92315b-4b91-41e4-a584-d6cbc1a6c81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d8fa7e-c5ba-4cef-a4f9-08d8529a19d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8a0c16-e423-4cf1-80e7-e0323f54b630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08a30cd8-f53d-40ce-a82c-241bc8591f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dfcead-f3b1-4714-b9e3-c8c83b48fb39",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382ee71-f07f-4071-a05e-95732913db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c1f24d-c3ed-44a9-98b6-e96e708fd26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab40d2e-b363-4620-800b-2ee6cbfb4d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c82795-fbbc-43a9-a745-ccdbdffe9d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f98658d-975f-423f-aa48-280511171ea1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c994803-de7b-4654-a75d-05458ebb3674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b11ac20-d56d-4b41-ae18-0dd628fba56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb470c17-c4a1-45d0-86f7-598c4bf7af99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6e6ffa-81d2-46d9-b016-f8c0c207e3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68485f2b-aa71-4ef0-a2e8-038f8f72ee2c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad654769-500d-43ed-af82-35d4d0fc4c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da844509-bc47-4953-8706-08f45aaadfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dca4dd-1637-409a-92fb-b5dbe2baa996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5305d03-28b7-4fc8-8085-3836d96a883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d116ef39-fc70-4070-b066-bef7cace523b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f83729-2368-409a-aa04-ff23d0d77f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bee33e-0bbd-4bf0-bc1e-97e0e4b0ef1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b0c94c-2dc5-4c1b-8c6a-1894b9092a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea3f99e-546c-4291-b310-635516939f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c739d7f0-87a7-4aa9-99a0-f5c97e02b243",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4d2a65-e764-49dd-b265-f33efe46db8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7bc8d5-1650-4c9a-8c96-b2ba61302c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05487573-7530-4f16-917f-f6fd4c88184f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba6e075-bd18-4667-985e-88eecdac046d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ee15e7-2262-45b2-99f0-fc6752ad729c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563049cb-cecf-40c4-bbc7-26802ccc3603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b16e114-f22e-4dfa-b011-6683c8e705d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8578970-35d6-4ce5-aa0c-3f7d4fc7bb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0446ba31-7fe3-4d33-be30-cc517b5e9086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbc9e3e-402f-45cb-97c9-5cd4412d270b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654d4599-7dc9-45ee-929a-d5c2cbac8d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c618eedd-601d-4b1e-a53d-dc045b319854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0043ddb-0cb8-4524-adda-5d50737ceea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "135fc748-3d3e-4f7d-b57b-b808c6581978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc274f24-04e5-438d-bbbd-403d416cfcc7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b4453-88fb-4e1b-869c-1e0f7cf7858d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc119a34-0a8a-4bd8-9ebc-d43687288e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f4328d-f11f-42aa-a28e-dcb8177e2940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "130dead7-ba3f-487f-af3f-891caede6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c8e836-d3e8-4b3c-8170-dfc7c0041200",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0759f9-617f-46f6-a615-6368ec7af58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf58596-183c-47b0-9ec9-20b35a97366f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f243558e-ad7c-4397-8276-dab3e989dc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f60224-758e-4781-84bf-7facbc997cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0ed6e1-2cf7-4b06-9120-03c3ab821fcd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a64747-b905-4cf6-84e8-27ae4d114933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603d987d-cd35-4b74-bf39-b871a76b27ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96fc30-7d8e-4d02-bda9-a0f3741e6899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50fa9895-02a3-408f-a75a-723ac4fce8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39955f5f-0021-48f6-ae1d-1c72d2b13691",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4101a663-d7ce-435f-8f57-866db8f0bbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3d1004-3823-4990-bcee-d3c4b66aad30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39444043-50b8-43e8-b5bd-0896233e5239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87824b32-19a3-4a6a-9f9a-ca0093e9f48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c642f4-87af-4d0c-b50b-b21fbcbe830d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04089021-34a1-426f-b400-e75addb4ed71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ba248f-8630-4da2-9de3-c368f8cef66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424c4793-44c5-4d3b-b167-c0d0cdae1f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05e6031e-2137-41ef-bb63-6cdf3595a08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8521bedf-e2ba-4ba9-9155-33f7a2590977",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecfc436-7d50-42cf-b1b7-d4d70a5c06ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a999b47c-986e-4ddf-b9f0-e1cc44152eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ebe89f-afe2-4a60-940b-d184d5b6a4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "032949af-1288-4f49-a312-89d240bb6c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1cbad2-2eba-4d8d-a1f6-e75471da4f6a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceae56bd-b29e-4193-b4ce-db50b8bcdda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fe47f1-fa4c-45b7-8670-bdd9db96dab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e62950-0337-4454-b23d-5c0f85123e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e51ad95-3623-4193-816b-afc69505f15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e927bd-de5c-493b-9688-3866c9bf6ccc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce24e729-4691-45ba-a4c1-da59423ddc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2a7f19-9b08-4c00-886f-bb89e74e0639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1798db-9751-40ab-9d56-00797ab789ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0a3c52-b2e8-4fa7-8746-eeee4e17345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9c5d5f-2d38-4796-93ae-cde7486f84b7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d04322-6c5f-4b8c-8fde-63760ed34463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c60ab5-b3bb-48f7-8641-6faaf072636b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83a63d5-1c4a-4754-bd9e-9166bbe8d475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4592554-773b-4bed-9449-dfe6563fe482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824b3c2c-4aba-45a8-8597-45a64a0e94d9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f159049a-b1d0-480f-a67a-e6f7bf86cc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b5f2f1-4076-4883-9544-ec86e481df76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b958b5-1877-4627-ad26-3a03fcc7197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9f7992-9b96-4aea-a790-dd6adea9e45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3795a1-07dd-4104-88e5-055419fee617",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cca996-5589-4b7d-803a-08ed4ad5542f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ccdde1-3628-45aa-91b8-70b417520da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4074b0b8-651d-4411-baea-0ff881fd2096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f804272d-e7ed-408c-91c9-0f0411b20b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31046b54-7e62-4fd8-8b2c-265808ce8d64",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5ccb96-f098-4043-93cc-89b46663ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6364ce16-886c-43ca-84e9-c16b31ad2093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9ea45c-7321-4418-b8e6-d77701f76616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "019c73cd-e1d4-471c-8cb1-226541ba1206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5664b80d-c7e7-47d6-8901-5a2abf41a77b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e41e87-749b-47db-872f-eadfc5561807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba9d057-7fd5-4789-a3a5-8b24b4d071a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853c481d-ece1-471c-ab5c-1fe65a4000aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43219fbf-238a-47af-9dc7-d05b5887fefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984d6602-cbd9-48b6-bab4-9f7f99589f72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce27d40-367d-47b4-9bc7-c854bd6b6ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaf3260-717e-49ad-918c-613bf7c037c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852e8683-88bf-4b46-89f9-6fef03946696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01e3a7da-d138-4710-ab47-d34ef8fce72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e8a107-ba70-4d79-b28e-846e09146fef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a427784c-35f8-4dd4-94b0-2eaf911d8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b3624d-91b0-4a38-8d7c-e93a1825fbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9345e19-3ec3-4c87-8b00-d7253e427bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92423c6-68d5-4991-a846-e98282e2e58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f83edcd-627a-4e7e-b8fb-890b3922de2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8613debe-b229-4836-a3cb-aa166ff8d290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1687a2bf-15e8-41d3-8b82-416c9add9bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8142a5b2-1ae8-471b-b65d-486e827f4a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "843ea0a0-685f-4e06-8e26-36f29b067c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38aec774-a5c2-4181-94ad-de74c45c2bf6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d896cba-6412-4531-b28f-47ba0f8a3b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f85ad7-f231-481f-a4b2-800939ce5a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2303bf7f-ecf9-4122-a19d-d7bfb5e23d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2167ef23-e7fa-457b-a203-6be0355fcba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55db4865-3285-4556-b5f1-56b52388edfe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d319ed-aa24-49db-a765-17fa6d70fcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5895f1-46af-43f8-af31-745d8101b9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d502a6ba-2430-4c30-9cb0-33289fc0b512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "26dd2c3a-0d01-48bc-9ee6-f235a96e4906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34301dd-8df7-4de6-a7e5-abd47ea14af8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75930226-fdbf-4fd9-9e97-241e378662c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a64b2d-fbfe-4c40-a5ae-d3ee6865136e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3424c14e-8d05-4877-a041-b4475ce7cc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d01654-ea2e-46d1-a998-e4f03c19e329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3175557-9ea2-4873-90ab-047378635d74",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bd809d-84ff-4f67-8e01-314d01186c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f907b8ce-4d83-4b62-9781-bcfead3876e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e44df6-47af-42cb-a7a8-40a820fe05e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0ab73d-dec4-4e3f-8c5b-8aa933a79a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e2ff9b-dbb8-482c-b985-b6149f24bef1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38f7bfa-6bab-4455-96d3-20cbc7d8db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3d4b5d-b788-4be9-81ca-af05c6bc24ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75597ace-d6dd-4391-b47e-50db05958519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd02b434-9e04-4feb-8661-a141ac0715f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a28f3aa-3ffc-4739-9c6d-a038f74c4c57",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff5138-33d8-475f-9a42-5714f6466779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d31a1b-51a6-41cd-9ad6-8f9d6dc06232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f798204d-82da-4e86-8278-ab4c1875b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "299e6101-51aa-4acd-ba54-206d3358aaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8c5489-6a0c-413d-9a09-513011c32be4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bc9a80-bc11-4ab5-b78f-3a6217319a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00164612-7ae3-43de-b846-91b782b4e5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0866c15e-d724-48dd-be5c-16a704314c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "69624a7b-1457-4288-9645-b46fed8bfdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb77014-7b75-452f-b5d0-d0e95feb847c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037d05f5-f697-41c0-92a1-697eb73bd242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d40940-a9c0-4d30-8b9c-fd8d03cd03df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cd313f-c339-4303-a2db-800557674e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65770911-4401-44dc-83f3-0d725b3ff6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39839f6e-b5fc-4281-bf65-e92c6a752f64",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a73a110-68b1-4271-b6f4-6d7db9f1ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb9e707-58b8-4239-89c1-697a4a0a1eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3a1d1c-84b6-48a9-a22c-319f24365900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be352a21-d767-48fb-9f67-66fcf7db29fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc108db8-fbd8-43ba-8496-0ca45bb6861b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0694740-1dce-4789-8c8c-c415ad8c8f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8999c92-c12a-4797-8aec-a853c23437b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0168a7a-1911-4650-b7ec-fef84f72e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dba2deb-b20b-4ed0-a03b-6f7c969f3109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9388349-3b83-43ee-a417-ed193e4e159d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c432af-9867-4825-a474-504f02c162ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de148513-f90c-4b8d-914c-a6c9455efbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7311a30e-9614-43c7-83c6-c76a6c8ea22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0459b8cd-1e7a-41f2-9003-73dcc2ddd34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81281d6-cc62-4e8b-9653-1411d76706df",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89471cea-25b4-49bf-b772-9d7a95c791f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe597bc-80b8-41bc-b2c7-6200ab812c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3aee0d1-85f6-494c-85d7-083e6b906db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d72866c2-de32-4461-b35b-d605d58b3c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46321016-a47e-4f37-863f-562868f76180",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eed8b79-caa8-4aa9-aed4-7212f6559837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e658bf7-a820-4268-becf-a964f858263a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211e1b39-c268-4f68-a44f-716158c07d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fceed2f-5060-43e5-8975-0a1a91e740cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258956b5-05a7-4388-b72c-17b0b12c22b0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f2d2a1-59ec-4597-b374-5b4625ec2fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c154dda2-43e9-4a29-81b5-19e5994e6b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c2820e-34af-4ac3-9cbe-36c034ff5863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4376d4-6fd7-4451-9930-e2cd7ba2f793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cc6277-ae19-4f23-b9f3-804e867e4d1d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772916df-0cce-4773-9a43-dd596e97b6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca716500-c51c-4ba9-87ad-707cbdeecee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7924e91-f20b-4760-9bda-f88239dc49ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca008ac0-e93b-42ba-bad6-1ea0655883c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b0a1b2-3dd5-454d-bb98-209747cbfa5e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dc3b8a-c791-44be-b314-307512a17484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c06664-de63-4ad2-b013-df1b1e528c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c183bc-a398-41e8-ae89-b0ec6aa564a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d455ed1b-8fb4-42a3-a81a-d147f3363982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93c98fd-d219-4b7e-bacc-ce81508b920a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73d2fe7-70e7-4d7f-a26a-56754037562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457cbecc-49c6-4c51-8488-4e3bd6f7d39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6c283b-9ae4-4b42-92bf-42a901573ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be628ea-e11e-4d5e-85c4-faafa7068e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473bcbf2-33dc-4852-99e8-40951b098313",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5970717-4536-4ca9-84db-8e142e71be16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b01485-1dbb-4689-8472-38f0f4b2516b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43d296d-f5dc-4f16-a731-663a053cc728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3472f64-fe3c-49ce-9537-3cc4fd7009fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6c3745-83c9-42c3-9acb-911c28ff692d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ac9aaa-ea82-4eee-b806-2fb549065ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8012ce-317e-42b6-a216-ef018309e50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6f255e-4f05-43d8-8887-2f015ff906bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf496dc-6dcb-47a0-ae1a-bd6389f7243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63ca8d5-c391-4aa3-974d-a4af9e9f8738",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e26510f-9bb7-4800-9a3e-838a86ff6a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86f4b82-93a5-4bd1-a6fb-921ae61c068d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5148db8a-3376-4632-8290-67b5a8a9720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93db076e-8972-4cc9-852d-73f1eb39de89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66032029-6b3f-4af7-b39c-0042fd46d41e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf8d189-32ea-46b7-8104-84920c70c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d2264b-ce82-42ff-8ccd-cf2f751b9795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c15def8-2ebf-4c8c-98b1-c8725bacf26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54cfda6c-c501-4f55-9b4f-414ee754aa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fde24b-1e74-49cd-8ee5-8b03b872d881",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f180757-a579-4c67-8a15-87e7e3fcf2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead266b0-7446-4012-b6ef-c43ca44735aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d03239-de82-4976-bb99-ae2100d8483d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27477b73-4d16-42cd-b5b9-f171614d3e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca1ca04-bd0b-48db-ba66-a3431484b9d1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458494c8-76ea-4375-8fab-2d61b0acff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c11a69-144a-4edc-b8c1-fa5090e0154b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b5c8cd-1fd1-47af-9711-26cfcec753ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d895d04f-3ecc-497d-8de0-9e5cb40356f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc1e6b2-15e0-4eab-885c-0ea64b2deb8a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92c2c5c-02bf-4778-b8a5-cf0c8076775a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46597cd7-5d66-4211-8e32-dffc9307c64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4cd05a-93d0-4d1b-b97e-ebf843566e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "095e5a40-c721-4acf-a9b6-f453c8f261aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa0dd7b-aba1-4cc3-a952-e338ef4d6e8d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394f8b13-c180-4244-ae95-1baf53e4ccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60c165f-a846-4a24-b70e-0a5b36b9a3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426fdea6-cc01-44da-bbdc-9a80842fe899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cec337b-ab4c-4658-9a1c-d1bb3ae1c68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36e8a49-2d1d-440a-b21b-1cf4a5d6794e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a462b4-ccef-46f4-9ba8-452acac8a8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46305fe-81cd-40d5-bf34-2b56e237784a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e51e05-87f6-4dca-b93b-347c6b3be499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e85bc8f-0b68-497e-85a8-98d6146f2295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42548a8b-b06c-43de-9321-71374bef671a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39ceff1-7462-446e-ae3f-0a78755b80fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b5f78b-6e6f-43f4-a906-d3630f50af87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e023f57a-c0a3-4ef9-92f4-6f589c9ae755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fed6bed5-640a-46dc-ae1a-029fbd64768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726e505f-544b-4c66-878d-2a64888c5744",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef42907-10f8-45c4-8184-cc5793d43db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e05c71-2763-4fa2-b6e6-18a30ed61a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9d2299-0c24-45d0-a1f3-f1073c7494de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "93fa4c4f-10cd-4442-b1b6-be41699a6bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eac8f03-f7c5-4e9d-b564-6219acc21a22",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b616762-802f-4f78-b9a0-805066950c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b716d9d-ecff-4c9f-8976-2637fe78a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d0ca0f-1ab3-4611-95d7-043734955f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "665ed2bd-64ea-4a44-b220-0f4e016b61e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f340cd80-68f8-4986-b761-2903e8f8da8c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aef7cb-1766-4859-8b49-f38b83092e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd483c66-7dcf-4830-a7c1-782e8bb32dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c152683a-09c9-4212-9ee8-d472f275923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "60061e9b-de53-449e-ba58-6cb9c9a8d2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818a5085-6329-44dc-bc37-685f37540a11",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a38720-cd50-42f4-abc9-abfc659ab8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d876b186-190f-40dc-82e2-acdfdfa774b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9836743-2c93-47ff-865c-8d544f4d1853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc5d9e3-c90e-4189-914a-7f5895810b05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aad9c37e-c6a7-48d0-9fc9-44869454dbe9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9496588-e4d0-4fe1-8a64-0c77688f8dd0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b862dbd2-2ac4-459b-bd5d-1c119cd02680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff89e6c2-b4cb-433d-8955-5b5f07873c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f33b99a-63ba-4d93-b20e-11a4600dc886",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fdbe643-9d5b-4357-87d2-e87f1ea1828d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "407e99f9-5fd1-4857-a375-f658dade112a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7253b3a-b643-4ce1-af8c-9bc4f322c4d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70134d3c-ea13-4964-b157-b99d56333f97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0364d738-25f5-4c9e-aa46-56a1fd42ab6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "298bf0cf-4748-4b9e-956e-59b477d6a079",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eebf8a48-f62d-4fb2-90af-a5ae55b5441e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89144730-2c09-41ce-be7a-38465c2a4202",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49215afe-a60e-4ae1-8b4b-11e5117cc9b2"
                }
              }
            ]
          },
          {
            "id": "ee21ae62-e1fe-41d8-8fc4-06a2d4ed4f73",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d8aefc9-3e45-4cd2-b059-46bfd5e9a787",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7465240-3ea5-4df2-a34a-fa04e9867005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a10e0d8-d8a4-47d2-803c-3944a3b6b528"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3adfec0a-f338-4787-93fa-9be27a7b7b0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24dd51f7-69aa-457c-a46b-e3dbfaf84701"
                    }
                  }
                ]
              },
              {
                "id": "528b252c-1e3c-4ca2-9a16-4b807d340b4a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55565811-28fc-4ac8-b016-c55450566817",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc1d03fc-b089-4d8f-bfb5-f213e9effd6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa3fb9c2-2460-4a61-ab85-85fb3b5cfd53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "413d50e0-6a79-4a6a-a7e0-3940188d8dea"
                    }
                  }
                ]
              },
              {
                "id": "05851dcc-6441-4729-a0c6-271008aeabd8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d97bf54c-b284-4663-9484-ccb75ec358a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5d6aa7a-f713-4c49-bb62-dc053045081d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bc639ee-b9c2-4a8b-974f-99d734b8c695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fbdd26c-427d-40f4-bbb9-30f63396640c"
                    }
                  }
                ]
              },
              {
                "id": "5ed55abf-cd73-4589-8494-8f380f5256a2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ad79c0a-1d5c-4ebd-b8c5-c032c503e0a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fadee04-d61d-4a20-a898-2dd28fc81176"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d290d6fe-7188-4599-b2a6-5464c373581b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0ab86f10-8e06-4042-aaaf-6e61025b346f"
                    }
                  }
                ]
              },
              {
                "id": "4405199c-fe56-4a38-9c72-b45592c230f2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5ef8af0-221d-4935-8bda-94eb2801121d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da22161a-ad6e-4b68-964f-037fd4456335"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b6ed83b-9429-48ae-8ad5-a79dbbed3496",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "71059ff0-cb8a-441a-a1cc-ef989288afb7"
                    }
                  }
                ]
              },
              {
                "id": "7ea21145-fcb3-405e-a6bf-17857d668915",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20b2c85f-b7f4-46fa-8a5d-a6c11def3816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5608c587-30f7-4c12-982f-881d31c156cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be9c2006-e68b-43c4-9883-f8de2bd4d328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56ac4f1a-a83c-4a08-bb71-43d98ea5dd0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03278a03-7a40-49f6-83db-36db84467817",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cf2ac25-fe84-4d03-a140-6d8e40bdc7d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8613c06a-1f1b-4c51-ace2-55680f9866d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3378cad2-98bf-42b8-a125-c4ca52d22d60"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "854e438e-189a-4389-8ce6-8c931174026e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2e8fe3bd-74ef-4d10-9885-5e17472c19a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64475483-acfa-4554-8b88-baa53fefc923",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f249dea-3dcf-4c6b-8d99-c8c9d1b27686"
            }
          }
        ]
      },
      {
        "id": "e660faa8-7c27-4108-b9b4-994bfb45f6ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9dbd4b79-e021-452f-af9a-48f65716f5e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da443b5a-ebb1-4e37-b572-9c02061c60c2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40550adc-04ac-4230-8054-5b55668b3005",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fd2004-e32c-4944-b234-d83f57078c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0719371e-d477-4bdc-b3e5-5f48f7a5ec00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5498177-70d8-43c9-ab26-b3a4c4d2f352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e4db09-90cf-4059-aa25-b2e204bd0e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e1a903-c0a7-4a95-a28e-512109dfa8cf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f6a808-47d5-4407-8ea3-d1975606dcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acbc0b4-9ba6-40a6-9008-4770080371d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dbcd18-c34b-4e71-af9c-3269bc9dea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeaa0309-6abd-497e-9d1e-60b7fba3ddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1301e0f0-a3b0-49dd-9107-3a2d7879d821",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e595279-2236-4520-9ffd-f397f775ada6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2e046a-8424-4468-adcd-251c3a5db5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9ec2a2-d960-4abc-9f46-8a63515c81d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1c58fc-51b8-4c7c-8a93-013df3b13915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046ffe46-1590-4046-801e-f564cc6696d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaa2445-7c49-4a6c-9ada-c64b0d76c26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6944e3-c08a-49f0-88a7-00c2d74443ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266956a4-f5b2-4fe9-82e3-86e42f9982a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbad91e6-a5c7-405f-a59b-20cf77006d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fec053a-45f3-4316-8c04-329fa06526d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7dd990-53d9-450a-93fd-8043cf5e8d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c281217-505b-47b1-a8c3-55f9d20b0a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0724f36f-f8cb-4f90-be63-87249226da81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4137c5-25ac-4a83-a030-d339f2fef741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d0b58a-dd95-4806-90bc-e4a63c57444e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf4bf06-9447-4aec-8694-5ba3ae8ba1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff49440c-0ed8-43bd-8e12-c976bdfd253e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f752ecf2-94d6-4d49-9a68-7e78376a5116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f28d52a4-451f-4d0c-af72-cfa55071e6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf700f6-5bba-47aa-80d1-6ee702505cea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f56f95f-38d5-4676-8d4b-706bff720946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857446a8-31d4-4495-a49a-adf4682d5eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afd9bea-2672-453d-b5cc-c1e39adec8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "da97a399-4649-4844-8014-33ea55b51e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5321079f-1884-402a-a64a-86acbf44bab5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ce530e-6961-4caf-8a99-47be65b43ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e853b0c-79be-40db-92b3-4a4b41f7bdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4be3a7-d585-433b-9b3a-04c92b6a9c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7852389-cdcd-455d-801a-b31b876ee935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dd4837-ad5c-48ab-be5a-21398a2dfae1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e38e3f9-687a-4de5-b5e5-3915ac7b9f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3968af5-fddb-4d37-8cda-55c02602e280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8cae54-019d-431b-bddf-3e6d85c9b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cd09b2-a297-47e3-b615-e3ed7c661c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e377c1e-b1e3-41fa-9ccf-330596d3c6d2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75513de5-f36d-40de-b1d8-ea3f7de90a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd58464-11f5-47ad-847c-80d5c88ec55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06866c97-3750-444a-885a-d4e26b21f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8323157e-c5c3-464e-bd34-23f072800304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4645ba-8a7e-40ce-8fc5-f20913311aa1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ca428a-bb40-4295-9dfc-d5ea20cbcbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849a809a-6c7c-470c-b1ec-fe0a5e911c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bcf842-8efb-43fe-a3bc-75d7d565ccee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2dbcfab5-4125-46f5-b084-a7f23b9bdee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bd40a7-5e8a-47b3-95d5-7fd5a3652f1e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d037490c-1605-47cb-b1a6-0698ee1f0729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f15c28-13c0-48db-af4f-609c8abae329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9161ce2-aa09-4dbe-8ac1-fd96816f8514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fc81fd-d2da-4db7-9335-3bc78a934d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9cfb09-7975-4f18-99f3-4c769d97ef8d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53f8c5f-1769-4eeb-a4d0-882f40264979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba822aa-2335-4dea-86cc-fa113c5d1d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4e40e0-6708-4f31-9b36-f10a68f214c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a03acb-dbdd-459e-96e6-0d5e1a29a384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7f7046-3845-4115-a8a3-6726ab613cff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b67697b-8112-45ea-896f-491b268d50be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa9707e-96b3-4748-aa4f-ff36a21b71d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550e5068-4f74-4a98-b233-8ffc2eb0793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3524379e-4f75-4b34-8019-c23f29bc7f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d49d1b-3c8b-4549-9f95-d2c7d764e794",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ee1391-0b2e-49ff-9ed8-118b2d08c0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400dca83-d48e-4f18-b708-885d206c8417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90180ac8-279c-4564-862c-8621fbda7026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4223b361-ac08-40ad-9efd-c06be128ac14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd88787f-7d86-458b-a9bf-6d9450430fc1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ea3f2b-25af-4f08-89e4-9cb8e7c8ceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c07772-56c8-4b52-862d-2f73f62d52f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6904bb2e-61f5-43a8-bfd8-481dbd6436bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0915e9b1-ea0b-4d96-a83d-bde4be38781e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f825d2b-45cd-4a98-9db0-af51be77265f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fcdb81-d8b8-443f-a321-b36677a457d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afab6d1-0318-4cb0-8080-912a876cabb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baca6cda-3933-4d5b-aa55-04a0e98e41cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "139f877d-6410-4395-ab8e-b176f5b72a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e704ad1c-2a66-4e35-99cc-7c30808240cd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5219f9-d5a4-4861-8f93-bf3580939d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f01cab8-4ff8-475e-9ece-c466843569aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4352f1-ada9-4a39-8a3c-3cca4652a11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb37d98-e415-4b8d-8fca-22e78576e465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30695608-e9fe-4c46-ab9b-c53778ad2af0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad131a79-3a02-4166-b8de-bd9cc6c40b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2fd0a4-1629-4b78-99d6-a487ccb85157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b78d38-7e75-47f6-a6f7-3b832fdf4a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b531cb-2a88-4cca-adf4-6b8701fae208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad38e38-c5cf-4af4-b4fb-c22de317fc2f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab56515b-1485-402d-a2e4-8f653d94d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6713f1a-0b15-467e-abdf-c487e5b9db77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee065d8-d3b8-47f6-b14b-7f8e22e969ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17be3470-aa82-4a88-82b9-73e8e447fe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c87a0e-2506-44fa-8670-3257a460bd11",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1b4ef4-403a-48e1-ab71-def12998b301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe37954-af2c-48df-8beb-598b752acddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f72bad-785b-4ced-9f66-0b30d6ab0cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc54e09-1a1e-44b4-be7c-7f0508b8a18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06a5a0a-b0c2-4e8f-94ee-fda046dd5806",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80737263-e995-4424-9cb0-37faff86696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3aa7ab1-dc14-412b-83d0-29f8422f688b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c032cc5-f476-4547-a8c1-411b0e11855f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea65b6a6-50e4-48f4-b686-786eacdf498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144b387f-93e4-4a29-a106-55fac6c2cd46",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e994ccaa-40c2-4db2-9e43-def0b7881c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d37fcc2-2d41-484b-8146-ae3884dc91d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298d35ca-059f-4347-bddb-ffa76993ebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cbef72-5945-4ae0-b96e-e62ff2329d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05591272-fddd-4142-ba23-0b90d980d4ef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4e5cd5-af32-4480-8639-a5bd43989c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b315de-3552-40a0-90fb-bccf68c82cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9818c85f-d1e6-4ab3-94c7-8d70c6f8352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a11bdbb-8024-4b92-93d2-9039fb90149c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d44f8c-56f1-494b-bdf9-339ad78ff254",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf6de59-6cdc-4e35-a1c0-ed66a2186b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7c4118-057a-4573-afa8-55b6ceb00476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd407fb-f2d1-4eeb-8bdc-9746238b3eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f80b0e-165c-4a9b-9d6a-6561b4368f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fa0d69-b538-423a-8583-6d66cee221b3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b6407a-e496-4965-b3d5-cc148485bc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cd9199-f37b-42cf-a495-1fff00b4189a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c83ddd-0d67-4989-8f0c-d2d34cdb905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e979827e-6d69-48e7-9e54-de9a07cad34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4edc5c-ed23-4cd3-905a-d6e2525f522c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3d25f0-07b1-4d49-abd5-c3301c87bc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46833e7c-0230-409e-84d6-d8ea96df7c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b97915-fed3-4e64-aef8-4d74be4a7fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbbde04-eee8-4060-9c37-209747a748e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49007cd3-99ed-4175-86d5-bb4e58f80c87",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c63c48-556e-43dc-830a-9980f2732cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c8a52d-88c8-41db-8393-c729299092c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20913a5-3f14-4940-bebf-f543b8f5e782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52bdfb6-fd7f-4000-a2f3-6cb9cc0b0518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24197f7f-c884-453b-a2a0-8eb01e8379a8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcce0b7-a6f3-47b2-9492-b2abf402c36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc37f7a-5e67-4f3b-a839-b3267762812a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb5683b-096d-4660-821f-40a58a15a61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "867a196c-f9dc-4552-9ee4-95d23f6d66d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a080697e-3792-4c37-b8bb-cfc60d835ec6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ba2300-0fd2-42f1-ac15-9882c19d9243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fa1404-995f-457e-af54-228be9b47271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5dcce-d90d-448a-a65a-0e9de129f9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76beaf57-2fb5-4304-90e8-e08fd9cc5851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5e1232-721a-4fcd-9621-0f214553424c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce46e6a-b7a5-4237-82db-337f4536f17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38c2e5e-da1e-435d-901e-1b8f0ebac689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56ff720-5d61-4c86-8db2-85d78087d942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4ec2fe-a219-41c4-b277-2e0f7d350a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66634097-abd2-44ed-8b1e-72066882009b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7633150-0e92-4457-bd1e-647c83c18617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076cc6a8-883e-43cf-bde4-73b8262cb14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45f8069-b8a1-44b6-aa62-063feb5e108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c35ea2-6eb9-41d4-8392-33d5745df5b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0237fe70-d331-4537-b9cf-9824acd06e02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75feb8a9-cfb5-4b69-9b1f-b59d0715a062",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8017f83c-f330-42b8-8874-6b4bb0cffd62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c94b5b7e-e9b2-451f-ba1c-f7374d42ef92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0aa134-c1a4-4395-96f9-c5ef52403466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da9db968-aa99-4ed5-ad17-d7529c1b0592"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "febc5449-865d-4531-9006-69bf4c3bcdad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84702702-b1f7-4d3a-a9c8-9644641bbdbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63d3b8c1-f3a3-433f-954c-8e303a18accc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e9546f5-1de1-4aa5-8a2b-13332e529aab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5e69553-0dac-4c3e-a18d-065dfa627918",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0290602-58d7-494a-ac85-1c0c627b7909"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73edcb80-ca24-47da-8839-c64579154f53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e29c89f-1891-42ad-986b-2a07c0f373b1"
            }
          }
        ]
      },
      {
        "id": "523bec44-5257-4787-8d4f-e4a4738450cb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e565bf61-1279-4357-a593-d70199f67483",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03ffa160-56f9-4769-b1df-31faf6a570ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a2023f03-61dc-44f1-b251-44a985f928fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035b62aa-7661-4832-aa5e-e090918797f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2465f418-9754-4b61-aafa-c67c63cf9015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ec9492-0cd3-4062-8b9e-1dce5c003e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d53be90-b2b4-41ba-a1d4-9520ac0c211b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abaf2b6-2bb8-4fc3-91c7-329bd68e4565",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf7c1a6-abe0-4b6e-8df0-7dabaddc51ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc13da3-2a63-43b7-b7b6-bd5c22bf2ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8d92ac-8a12-4341-9874-761844dac540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7e6c98-7ee7-4c5a-8b07-6b8b673ba4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c80149-633f-403c-8d0d-09cdeef088b5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ef618b-cbd0-4b51-b47b-e245c0e54c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69128af4-f46e-45a8-a5dd-5c7abd1dbe07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44800dca-5782-4b56-86c9-d7316da664f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fde785f-975f-4ddb-90a0-8c99d751e6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5738b5b2-301d-4023-aafa-deb9f5dcc774",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66886353-521c-4df0-a5e5-6a93a8a6971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4b6222-d067-4e03-aca6-f5f4a4c10edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1522f3-11e1-4bb3-9701-721af0605296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b47ed6d-c596-4b5b-a985-d94042f13950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c943e56e-86a6-477e-8ee5-3764cbd213e7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48427e53-d5fc-468b-9fee-0815d55e42e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9621bd-c350-4e1a-9fc7-482457f3de17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb57fe0-2fda-406b-a084-25e3f89a39ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "804c824f-0af0-4ab6-9d68-f9b03eb7c678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94d4c16-f133-45a5-b2cc-de2944a36dfc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd602a61-e9c8-475e-a98a-556ca13aeabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3546fb-a366-4c27-b052-8766771302de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d9e724-1368-4449-bce7-075bacbec00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e59824-4e21-4a20-89b3-033a0e107098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4671e43-943b-4a72-bc9e-a19fd687bc75",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecb3fa1-f27b-4565-8635-63e9e3707c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4a3fb0-c0d6-47da-b3cc-4ba64e0e312d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6249c20a-57fd-40d8-93cd-5f892f2bdf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "864c1d11-6290-4a5d-9eee-09f3d8363042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83388f0-9e21-4add-85a1-b44ff1c564de",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39588e8e-ded5-4ea8-89fa-e40ea4c99313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284822d9-dbba-4ea1-8e25-b7e47e0a41af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0710ba-aa43-4c31-8dcc-77b9bb4645a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3b7d31-2c09-45e4-9f43-ecf7e85b5154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fafa43-ff26-474f-a185-7b1c8eb812da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32a7c21-ea85-49b1-af0a-af50ea233122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64551da6-338a-4cc1-bd91-b2ce96933703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e52bcfa-f5b3-4b42-bc45-7c8eb68629d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbf42bc-5d8a-4dc1-8be9-d9bccc01b9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c07b099-b7d0-44f9-a94c-ddef319ca0c1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bf8988-474f-4198-9b1f-8643607b9868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9d5ead-693c-4671-9327-35508441545f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d40454-367c-4cbc-819e-7f91dc67ad5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d69348d-e878-496f-b953-b0ee7293f3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d5eab6-75e4-457e-9b39-386001168f11",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62521414-2ec2-49f6-b939-a78f49858018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6779e81-08c3-4225-a634-756e101113fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ef4e07-bf99-4bf8-b858-093192879183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2bb76b-b776-4c98-878e-dedaa661ab3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c248b1-e109-45dc-ae34-d3a5cc28b09f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2345a246-0907-4f59-9ae9-658a6616620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16860a39-f5d3-4a33-b50e-29b82d618f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6b3730-8336-49dc-9f32-0583813b35da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "852e961a-eb0d-420d-87b2-125a8a935dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f02b1e-04ab-4b2a-8dc1-45ba01e04404",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee991a73-0b2e-48e5-a6b5-a576a189292e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad9c9e8-fb1d-483f-8dbf-f9ecdbcf086a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8892618b-049b-4141-8bbf-5e4d2a34f0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b5bfe2-7257-43e2-b87c-3e297ae8d9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c51897-242b-4d05-9217-0b318e7b7d5c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc77fc1-beec-4f03-9b5c-0ef84b4a930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0c2daf-f456-4897-baaf-832449509b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939745c1-d1fb-49df-be6e-683ba8de4753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9aa71b6-19cf-414c-a6ca-ca4f48d7b657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993bcc2c-a391-4d13-ae1e-dd74352d4b0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a84a414-a24c-4061-b516-9982bf04f69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b17b27-ed73-4730-933f-7e763cdd7e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1406125b-11ee-4d27-bc4a-6ffe8c520e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bda7c44-a7f7-4e96-a359-52e6810d5954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bb2d74-5786-4176-9b24-7b32cfb5a443",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79217ac-ce38-467e-ae4d-2c0e1eb7b93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2ec088-dbd5-4735-9d25-292e19b323ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc58c870-b848-4412-96fb-0ab1ebc57fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "78337297-edab-466b-a264-af93e5a38c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba58546-8fde-4c0f-b8f5-586c9369ab86",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619e9477-1df0-4b27-95a5-4943ba07744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda8cbed-aaf1-45d8-b1df-cec8db165d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b326289-8262-4ed5-a191-921fad91c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c732b65a-895c-42ea-b544-b3a92c4802b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092e0cb0-66af-4ffd-b30c-e88d477d07dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e700e3-1654-4b4c-b830-a88c4975d5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93802b35-fbb5-48db-9dfe-534083122066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6be5e7-5161-4165-a5e0-22af3fc69760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ac3261-83b6-4b63-a299-0f41d50038d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d46abb-f698-49fd-977b-9b8f043a20d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c913d7-9513-467c-92f8-936380b2277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec75e201-8363-47f7-9f19-4f197dae6ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9f3398-98e8-4edf-9c78-11fd8ddecf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae44a0aa-aebb-48e6-82ac-c1b320ab9cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7768d959-0c29-447c-bc46-f79a771ac320",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f673294-1b7c-41e8-9b91-69a76bfae474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e768716-22d2-48f1-b5e1-2cafaa6798f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f887ffa-af8f-448f-9ba2-a6e84af5858c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2ba198-7920-408f-b24a-ad870972cbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8018a0af-7344-4b38-9830-ac99d44ab306",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8badc80-e80c-46ee-824a-1a5a68a3b8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb670ae8-56ac-45e1-9d34-3eecab918817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb58af2-6cb9-461f-aa69-d424cb9bfc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e02ecb-5011-4c2f-9ee9-4dc2a7420142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9746b52e-1b89-4b12-83f4-ee621af6f2e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8978e465-af1c-4af5-834a-39ea5ff364fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e648f78f-84bf-44e3-bcf5-8ebf1794dd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1db0711-2e8d-4898-9f7c-136c18b381e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9187c3-3179-4143-8547-66a3cff5df72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d82b5-e5f9-4b58-80a0-a7757fcb1c37",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ca3f46-4f02-4463-84f7-65161f7b4732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4347884-ac3d-46a5-966e-80874c6bc941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b2e347-7b62-44ff-b0ce-6f1769bd1e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa5e70c-9487-4757-883d-011f5c9843cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26db88e0-4ee3-4f5b-811b-14e4f5f2785a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd71acde-761d-41e3-8401-bb50da4a00a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f120ab8-3fc0-4e1d-a436-619d2db4a993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7e2d5b-eaaa-4c60-a60f-a8b98438558f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f80562-3894-4117-970e-cfcdd351cf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756474d4-3694-47b6-8c6b-d702f077ce8d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97aa1858-45ff-4955-a851-0644f74e68ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62cd9ba-646e-445c-ba65-52b533c15478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd4be25-70df-422e-86c5-f037f4083fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "559fda6a-ff2d-41fe-811d-03be94e626d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53bc09c-db12-48c6-b6fb-a4af59f85117",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff5c34a-7ac4-4e57-abda-f2d81547d874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6722d8-74ca-4a52-ad70-8bef35c240a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e75a2a-bffe-42b6-aeca-1ac3186e87e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a8492a-144e-43b2-a2ac-1892d669156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3c1c9f-1a6a-4898-b283-58bd4cd901b6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3002799c-d26f-4df1-87fc-0d92f1d11658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d6c055-db47-4e9d-af5a-a1ca149036bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a8b330-9ad8-4504-9e7e-73a63fd8c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b09be35-5344-426e-929a-39b4ca881531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cffc3f-0a15-43c3-985c-91315403d949",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afac876-271e-4f78-a321-7538f4ca8d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46181e8-8661-4be6-a664-af3df109a3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43d1412-dd05-471e-9f26-40193b66e336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fff2ea-8629-4b97-82e8-f469f2f5ae8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0981f94a-28a6-4e43-be58-80af6247398d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6741cd11-e570-4acb-95a3-e7b175b651c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a3af60-7b12-47c9-a6ba-7e0ecb79532d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679afb29-a7c9-439e-8c1f-cfa5a5835ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a5ed47-22e3-4083-aca3-ac084e8354dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3a7afe-b240-440f-a584-a9bf94dec290",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206d7300-1e83-41ea-8e14-2440d3814cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3bda06-3cf9-4472-990f-92e617f631d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0fa88e-4da1-479a-a388-8d014275b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5341fa1-e18a-42a3-8355-26271fdb65b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb97ad0-539e-4484-9a11-6e3021cc4bf4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d057e1-61de-471d-a97f-434d9d84fee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f567b75-98b6-439e-b53e-fd076c24e6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2b0425-76ad-4548-9907-820b03794be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094e364d-c614-4ceb-8e6f-6650e8696c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a313a1c-5460-4cbc-afe1-6cd1aa2c8a49",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f72ee9-2858-44aa-90bc-4185ce0de925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a62c55f-0a0e-486d-9372-0c779bf66906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8203ba0-3424-4cc5-ab9e-13a31e9ad3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae93b52-cb9f-4c15-ba96-61644194b4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a041be-6c84-4f6b-bdf5-fe040340e20f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed963c04-a742-4835-bede-21b50db87b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9040194-0882-471c-832e-0bc97bae239c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294bb96c-8ad6-4217-a84e-a6c9472321b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04142a83-b4e4-48c1-b361-bc44677e929f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc632949-eaa1-4043-bd97-292cbc2a0595",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5379bad-6ded-448e-8e3d-9321c909f9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7f172e-5351-44b0-85f6-3d5c0fca1d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48c3366-6af6-4029-9b52-0ba8ac06a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "305e8570-9770-48ee-8216-b9f5bb679db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b463c734-61a9-451d-8ab8-f66431ddbcfc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4995e2d0-9b53-41d6-95b0-15f9225d6939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa974743-176a-4ab5-9392-426d96efe207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d31bc2-4bee-400e-a926-9ef324eb1849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ac836f-7398-4598-825c-3197d9d81473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c06c421-08f4-41a0-8a61-b8a61a3fd887",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66adddc3-de2e-4bb7-99cc-b21158df51ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2353b71d-9613-47bb-b929-54d79b84c9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a1c166-a74e-487c-8bf2-1669f5d2665a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ac06e2-857b-4ba6-a1d9-5dc8670cea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490b0821-0e01-4279-9776-4f8b1dc32a46",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a3db03-9065-440e-8560-22ab8ff585d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e91b10-5920-4399-83d2-1111c8ad50cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b7a7da-e093-4349-973c-905e6a6ef01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3c7105-d76c-4dc3-b68e-132feb20d871"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40dc05bc-34b7-47cd-9a04-a5961dcc91d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b3ccc53-6faf-4a5a-92ae-6000757d5b36",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f2ea15-905e-4c02-95b9-7d5ec7dacd86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac940da-4ea0-4fa1-8b89-5eb271d7f787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8886e0-ed17-47bb-b74c-b3ace3e8c299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ea428d0-81dd-4d6c-bf52-d4e1405c06d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2da71f89-b40d-4ef9-bb6d-f47b74a2e968",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e9c1713-0a37-4f7f-98bc-96c5e24f32d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8447eb75-a459-4b8b-89fe-b75a024ae96f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5405466f-0990-4bc7-b0e4-25f07f2e037f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f72f3651-f3c9-459a-a054-39d0a70faffe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8634ff5a-ecdf-46ad-9579-a181da860d79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4e13205-3b34-44cd-89ca-25e87bb001d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01b79ac2-c985-4bc8-883e-507c94f9c470"
            }
          }
        ]
      },
      {
        "id": "ec924f44-cc10-48da-a084-f8553d668752",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a023c96-1555-42ce-844a-699f040eb1db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76678341-2ab9-4de0-85f8-557a952d9c07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c883ffe7-c001-40a5-b69a-f0ccfb23a469",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d0410a-1cab-4c05-8731-0343b146c101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd7f57a-1ee7-4df7-9c9c-04ee1e567922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c379ae-0115-46c7-98de-67b46220b33b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3bf17e-4fbb-4329-88f9-eaafab2aff37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf22c42-68a9-49a5-a041-605e500f94f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae49e32-1373-47ae-991a-916709db61e4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de6544f-f1f1-4e4e-9073-81f9c69dfb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaf4779-01fe-4615-94f3-e834c62d96c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfa1d46-5f81-4348-bb30-60afd573d651",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eedd5a-ae83-4814-a197-991d949c8ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da006c2-508e-4d76-9175-526251cd21b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7afa304-7ac1-4ce0-a031-081932059f16",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12422cad-f8fc-47e7-a9be-ad48c8091aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aff5e5-aa25-462e-a7ec-c4c906c65fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7216dab1-f074-4354-8242-26e1d54e0673",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b74a176-1fd0-42cf-96a3-a96bbcae27cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceba1b8b-7e64-42cc-83f2-58c43c8aa5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3fd6ec-d9cf-4e56-867b-9991ce35df6e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b3bdb2-8704-41bc-8735-aa0ecbd09af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4c0cd8-5fad-4074-af3b-2e8531d93c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63697a50-df29-4c7e-a12c-0084a821fddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab1dc6d-86aa-4be6-9398-641b151360b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f22e5bc-65b8-44f3-9cdb-c97050baa624",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f48c948-ad63-48fd-b17e-5130c214611e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c36e16e-c31c-4751-875d-e7d0d44d7aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f731ef0-63d4-4eaf-94c8-97d82b3d1ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abd800b-e17c-42f8-80a9-c91ff35fa675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769b48e2-4ca2-44fa-8313-c1c9a1dc7f25",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f443cc0-550c-4033-9567-263d9b2ee709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2775f9c-e4be-4189-bf7b-d83b7076ef5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e3237-0d2e-4239-8553-68744b35cfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dccb1a-12e6-4315-8e24-0c53cb8e45c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eda61be-161f-4828-9a50-52b9638fe2fb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5715d90d-93df-467b-bc13-87649abd1858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7414d7f-f4bf-4caf-ae66-3b909a51f80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b3aebc-9f66-4ba4-a2ef-e61d9e9c5ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350c4804-3477-4438-8b55-05ab3e460cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb707f22-c980-44c0-b13a-f8dec87ed129",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1908ef0d-7170-404e-960f-4c2bb900d8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e398b2-d953-4e16-b1cb-748099979507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2151c755-4543-4150-9522-fde1a972a9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d277d9-08a7-483c-8793-5c60364dc395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e708cff3-574c-4216-ae0b-f9e584505307",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a667ce-5fb3-47e0-82cc-4c08a0142b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15232899-b4a0-4bf9-89f2-078e7509ba0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d01002-65b4-4662-8f5b-d60fceb49f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6c7921-42c9-460b-b87d-d94d1df55528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbe6574-42c5-432f-8d78-4290be838a5d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec524545-ebde-4bc2-ae0e-27de57771185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06877a3d-0599-4ffb-8aa9-eaff50f09894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f867076b-0c20-4f33-9333-8d2d17da386a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dd6263-f74d-4d4e-8774-3274aa5332ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1cf99f-ebf4-4498-9e8d-070247e5a45e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bded0f4-0c8d-4ce0-92cf-d1666c71c799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdba6fc-abf6-437c-aa79-e7256f5c4306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1847402-b393-4210-9c3f-5e6edb18f7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12b0ea1-dc2f-45c1-ad9a-95e529174aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c4c4e5-fffa-4afb-9dbb-2c5c9d5abd9d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df12be77-26c6-4c9e-8710-c475e1954a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "952602a2-24a6-4c42-b450-9c398fd86606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e923a9-0acf-4ebe-804e-c81dcbd5c8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bd8537-e3e2-4d22-aa82-2e478a929c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f69631-7cc6-4fe9-a952-438352ee6d78",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f22614-92fa-4195-a60a-ee8eb58e611c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a062b115-7516-44be-86d5-dafd8459d5f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b44d97b-ed4b-4084-9a50-5154c1ea8c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b488649-263a-4dc7-8387-54f5cd169ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eed84f-a0cc-4a0d-b621-756dfc09da01",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0126fdc7-d131-43d9-8260-6df5106bdc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362851e4-9763-4afa-bd47-8395d762afe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314fabbf-e2d9-4a07-a4ef-e9d569e041ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e73da8c-3a72-42f3-8b63-7f95e00502d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822ed1b2-07a4-48df-843b-aa0c01deaf5c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda24b7a-43b0-42eb-9262-03dfa325ccd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f72a7a-fb66-407f-89ef-2944ef2d7afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287daf3f-2e31-418e-acc1-eb71233a143c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568deb46-625e-4ac5-bfeb-840a9cd9aa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef11fe6-a5da-4114-8c2c-3010b598480c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cde83f-7a64-49d4-b264-820e09fe32dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d446ce17-1583-454c-8f3f-77b490dd3999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc08f9d7-6300-43d8-9cbc-32ab20c06242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3492891f-5b86-4c13-9e98-7e3ef0568ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae9817-8080-45d3-902b-544396ad5dca",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0a171a-1e8c-4345-ad5e-1b2ee3761134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40abe3d6-7092-4066-ab5b-48658e78c772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9ce4ba-1324-4194-a44e-43045f51ea8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7540b566-4b92-4591-948d-5d562c2c8e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9871cef4-ffe3-4d8c-a1b4-b1cf2d069e6d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752bc253-1000-4b85-91ca-e5d5184721f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578d1ee4-900a-42a1-95db-53f57eb7511e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f38f59d-5aff-4829-8f9e-5c1957e7dade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820e6f5f-6f1b-4819-aee6-f842727e1b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d75ca09-00c1-4894-bb3d-9eb98559d535",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e6ebcc-d62b-482b-971b-a8e7a23a7365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbfdb55-7e1c-4983-b9df-0a18fe522cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3589ed0-c6c4-466a-846c-12b18dc39ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590812f8-9a0e-4b7c-9f4c-002b2e2e6a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffe11c4-5dd0-4faf-9740-628e0d6240ac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc13517-03d0-4f08-8211-0f3a26b0273c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc422c4-cbbf-4177-bb6f-d314a14d644a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd15779-3bd0-4ab5-926b-64a50c0fcf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d18a55f-6531-4235-b7fd-0f484e18a73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75c8dfb-b3fc-44af-97a0-0738a6312d80",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b912aa-d91b-4a46-be57-f08d474d14ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974a1a7f-c56f-42dd-ae73-557eb9b5dcc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1579dc-71b0-4796-b424-c51e25965454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50742a8-8119-4b70-86f9-e75f6dc92ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0da358-cd12-4ea8-b1d7-a3c074568526",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58c112a-5fba-41d3-be21-5857565d0332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad29a451-47e0-435a-aa86-5c0a64361543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b8c857-2784-4c8c-85fc-3b17788716a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca73aec-83db-424b-bb0a-a0789f00ffef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269e4dc4-f4d7-4d6d-8699-d230b9bb6398",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a452324f-fbbd-450b-8998-0804020b565d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e433b25-0efa-4587-a99e-d43deaf8dd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aefd5a5-b6c7-4c70-983b-0fb1a94dd5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c971e791-37c2-42aa-9314-d9dde0abf75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881708dc-b03d-4901-82ec-54f125dbefd9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc35ff4-8c27-40d7-aaae-e5d8774b4bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d21f5e7-1940-4fa1-8c91-ac9e701779cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61375ecf-4e4f-48eb-bc16-9d9c0f1dd46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d540aa20-0bc9-4b32-a7ec-40e2508b3b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8916fd1d-5bf2-4a9a-aa65-6034267235f7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd29683-620f-482b-9b5d-e331e8aa653f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e1b067-618f-4cca-b7b9-84b0879d1dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9046768-03ea-4108-91eb-cf2aacbd1c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe81ec2-8c8a-42c4-a997-dec2ac4a04af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06db6a5d-004a-4d18-910e-6152479b2ab1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74d1c9b-3ecc-4fc3-8ac7-7631dd21af3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5a4b80-7a15-492d-bdb0-4b857ebcbd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9533e5-1da8-4891-9bf3-f176dbf0e038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d75034-74b7-4a8a-b0cf-b3e33fe29495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f4fb44-23d1-4f00-b31d-d2b5f36ad75b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7bcd26-6eb3-413f-9dfa-1da8e4792454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9beb1a-33bc-4319-839f-e071d03ba2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe98459-139e-49c7-bfab-37f4be5809f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b11bd2b-7832-4f84-8f33-971da6d257be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c828e6-d3ba-4de6-9078-dcb25f56cfe0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25164800-cecb-4fc4-94cf-02d90d1a12c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd1a86b7-fb37-4b25-bdcf-f52ee1b44736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d73121-1e99-4d9b-97f7-ad7d155e346c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e96c36c-aaa1-4695-aa53-e19eb36c986e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8735a169-c302-44f6-a341-e2b0d39f7581",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357c0b24-2712-4357-8ecc-a858204dc741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859a2150-1a2a-4667-8255-c892c0c70215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8af8cc5-de3e-44ee-87d5-0e8d9b284202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e2f6ba-c7c7-40b7-866a-d996066768af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5b62ff-d9ae-43ad-81b9-37f8769a3236",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4da688d-5559-4884-a9db-62127c78de77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55792e23-6f30-4ff4-9e0a-7db08ec8d6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef0892b-44e2-4f75-a603-84f8069df20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479cf5a2-ee44-4055-848c-398b60151439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a860845-3853-4ff3-a2db-b09037ee4f7c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4dc0ec-5ad1-428c-83d6-f680bbd1023f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13de078-e2f0-4ee7-9105-0196ee2ab8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45552ad-e937-464c-84d3-2ea3116b2c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a132ae7d-504e-420b-8548-a32b2757e726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675f3146-3ef3-4234-879c-2230944aa2ef",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86629bd5-5c3c-4d70-8bc5-54ac50b28134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440c2269-c7b4-417b-a73a-715c66b457d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea11608-c5ac-4432-8379-188c722c1be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2482db-73e0-4e66-b7d9-cb02b6b5b8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55706c49-1505-4168-8fc3-45a7a972fccf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1733fe6e-7913-4b17-8be6-65f2b3991022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f7836d-46a4-4261-8a58-5ded3c35793f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5271c5-4ce1-48f2-ab22-af5c67cfdf43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97798cd8-93e4-44d8-a6aa-b66c41e13a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f80874-4ce8-44e9-adcb-14eb49466bea",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f360931b-f102-4e9d-88bf-2c56a95835a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d218a60-33e3-4cda-b8c7-022e1a36b6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d335add-a577-4a62-bd5b-056aead336da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c72ede-71ad-4fd5-89c3-c3554d89d183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb441c4-eb20-4df1-a0e6-806883f620c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637f0f88-0131-4ae7-9f4a-dddb218b5b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f42fff-1c2e-4dfa-821d-8ace8c173ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66587c34-db20-4acf-892d-073990c412ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db5489c-b4b9-4ec5-982a-d2b141308845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb8cbc3-7605-4950-94f7-bdd3ade3352d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90b0df0-4c22-4645-a158-4cf4244b45b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cb9313-647e-4798-a257-4e913fcb49be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c56fc6-1ab6-4437-bb5c-8401850eabd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed427150-8c09-461a-ae17-a022399c6dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6703879f-8026-41b6-affa-dc05193fd399",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48382625-3edb-422f-9075-769a95d1c996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5344d3-521b-4bcc-b8db-d8c59e80492b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5681cf0d-0016-474a-a2d3-0d2d90a64cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fd497e-301d-4184-9c5e-b5acb080bac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26515c56-8b56-4523-abe3-b0c9abad9e09",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a9efb-c15f-4a74-94be-f8dbb112c877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa32bf1e-4ce6-4dc0-81cb-6e7f517a1542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5224f18-3dda-48ed-b083-8cf612166535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a9d03e-ff79-4d78-9f90-a971d56ad7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4702a96-50b5-4f26-8c1c-52f378293ae3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bd76b3-227c-4a3c-9ded-4fa1e76c620f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efc4cd1-2413-43f0-99af-788aa9c39631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63232133-878a-4fcc-b900-5119a6a0c25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84021c00-1a7c-4430-b547-4317b653e4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662ecceb-ccff-4bce-a089-393630757f28",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c757c6a-a916-46ca-b6fc-f70e7792542e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaedd453-e0bd-457c-ae05-869cb04aa6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9339210-6807-4ee6-a41b-b78865fc27b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9e0bc7-ddac-44ef-9d9a-28ce193b232d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152fb56b-57c8-4701-80e4-2e98825d2f7b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7533e8c2-75d0-4c7c-ba74-89ff62069369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596ad32f-adce-4c97-901f-383cbd98c3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb645fd-4bba-4fa6-b777-7470243b71c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1542e71-1971-4bc1-9781-691b7f46c9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a297fbfa-d3b0-461b-afad-146eb0e84ef1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac1c40d-168b-4cac-9e06-a0e0f0e6b451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8aafce7-ec7e-4d98-9cfa-826b3316d6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9391740c-8393-4821-96f5-5876cbd60505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66c0428-6174-42ed-b72d-cc84b84484ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225e27be-3bdc-4c42-9894-b5bf1c66e531",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1879fb-b33a-437c-a9be-ba47f7ca077d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2501f3b3-a2be-4314-b642-02926131d571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2a7481-c134-4e5e-8ab2-fc9964b5b9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d851463-ed1d-46f4-b7d5-49ed831b3a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d376247-042d-4ce2-97ef-26e349856a89",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905f0188-40a4-4182-ab6a-008e4d4b5a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fe77a9-fabb-431b-a8f8-14d04c274395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dc1015-e88c-4098-8648-11573ff18aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd53d0c-3287-4042-85ad-d180be0cfffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f68197-636b-4b72-aabc-fa9b539545a9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9ab633-cefc-4519-8717-a1e6d95db63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6729f98a-4cc1-4dff-9d07-46326f7db487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b3f2b7-6fef-4193-8b44-6c41fc94ef97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f80958-106d-48db-87e5-0cd932e5c3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5500c0-3e6f-4df3-9b6f-810cc44caece",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dac596-2d46-4f6d-87f6-d1eaf17e761a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb05a7cc-5fad-4f63-b8d2-59909098f0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94347ac5-f78b-4936-be77-ff3c94c59f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c52c60-88bb-45ff-96a6-af9f4fb97d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8469b61f-3a9a-4c41-8b91-b50ac65baf3d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2573c7f-edbf-4a85-94ff-68a90e11a409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b943535d-f1ec-4bed-812e-736cc32116ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f16adee-e308-44b0-9c9c-a5f9dc9ffecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756f6f98-e792-45d4-8e31-2a2a24cc7427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2830dd25-e317-4688-a125-b8c60c5603f9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dacc479-98c3-41e2-bc19-172d79e66333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf8f825-d71c-48db-aa96-ebd661219d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9332d9-9ebc-4a1f-b675-bc442f7df707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8fb02a-75c5-487c-a5a3-a9bce1257957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319d0a80-b3d9-4112-9df2-e4d4ca6c9e47",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f93fa9-6f1b-4bbc-8fe3-7cde23ebdeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbe2033-6b9b-4b09-ba25-5eadb8f47ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6879fd-e493-4abf-bcf9-6e88ca80312d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779e33ea-36d1-4540-acef-5b306917a73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bece8fd-16c3-4309-9203-1895ac767c90",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3353893f-cc7d-4ba3-93b0-4a84b7eb128e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555cbe3c-edc9-451b-ba31-68f857c4d823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e6fcf1-8554-40e2-ab24-7530759ff780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4c5bb8-7d38-42ef-84c6-b792e41a4eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e50031-5385-4e18-bd37-83257974713a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7ffdec-3e16-467a-935e-6134e7b3383a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1835745d-a1ac-4120-81e7-8150301bcbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a3e2e1-f01f-4394-b016-738353eeff92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37f36c3-066e-4203-9a36-bae9d50cbc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c16d9d2-570f-4733-bafd-749640a749c0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaf3885-f9e8-4fe6-ba75-f9503f7ff671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede5bb87-b93b-46cb-8af0-e3a875089e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca16359-ba29-4762-8edd-fd93ddb8bb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d682558-3f04-4f85-95df-25f635457d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf08136a-a31c-4120-b4d8-b0dabde8a2b0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b67aed5-6cfc-49bf-bf8f-500ba0488e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bee1f3-988d-4fa4-a655-91c88c1ee88c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb38776-99c4-4656-96ff-7fc68862b127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e55cc1-9710-4982-a23f-08f7ee8597ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe704d5-d5c2-4f52-89cb-bfd5faaafdb4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69786adb-5a35-4f34-83b3-4d019bbb4b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33cedc8-859a-4a8c-9ca2-da3fbcff80c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc44d8ec-563a-451c-b1b5-5164186d7805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25faaf52-71ea-4a82-93ea-721ffcbad8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21efb3d9-4bb6-4d43-9f36-dec0a4d0087b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dabd8b4-0cd3-4f49-bfef-35f1b23e8b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d97820-9c33-40b2-9596-6f03162b5fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad147bc-b986-4f74-bd80-3aba6983a9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d728244-f31f-499e-bb60-4923b100a0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1be7b2c-4a3c-4fb1-b821-f936d1ea918f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1233cc17-26f1-4891-8a45-fefc4f4768bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f0e3aa-8a8f-49ea-a99a-78051d7e9e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566f0645-b862-4394-8c9e-344049c4ff65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6e4849-3e20-4929-9a7d-2b259d0f95d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2724df-c2c4-4dda-9728-bee5b38f31da",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068568e1-5176-4e6c-9879-89eefa27567e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c601933-fbe5-4252-bee6-d4966f799efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1bc044-a325-4a88-be57-fd41f161b073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5831e0-1740-4de4-bbb4-ceadaf1e9b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d18ca8-873f-414b-9a43-911b7e910957",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19275ab-4eaf-40e1-878a-b0f66ecef4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc184637-e7cf-409e-ae71-bef27b24e46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bea085-fb46-4baf-ba59-1dadce2d5d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07423544-4f38-4bbe-bdf1-3eb4d912cac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0a9c0e-086e-4825-b7c4-85e773d4fc34",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c8f9c7-deca-4ca9-aeef-13c4cb09a2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea659e13-9d7f-4f38-819b-5501c006417d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d688b61e-f4e7-4701-880e-bade8a2583a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8969ede5-51ce-4cf6-8cfd-1743894532e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac10ab28-b913-439a-a8fe-32d06e93c24b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73885d97-21fd-4957-bee4-9a66f504d8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdbbf5d-271c-4de8-bba4-b88253344513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e127c7-b693-4d5f-9006-1af42dfd39ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9ead01-0589-4ff3-9bc0-399f33d8c9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffa0491-1c0e-4571-b267-96384bc8a60b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2315afa3-f7ab-4121-b5e5-ef34944056bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6420f51a-1866-4591-8faa-a21d3ed14da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b59e38d-f85f-4d5d-abd1-a412923a7452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b79c25-9e4b-4b39-a7f3-9b1ddf3f0a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8541086-216e-41ec-8c43-56e94f557a09",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e03eff-41dd-45f0-b479-78fa4be8efbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53d497b-c81b-41d9-8ca2-a093fbc1a5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de0202d-5fcd-409c-b7e5-6d292c1e2660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673b3d08-5709-4b04-b3bb-e53dbab04c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cfe269-6edd-48f2-a751-dafc6dc060b6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7416695d-f96f-436d-8a00-d98317482a8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59ef908-f559-4849-bc5d-1e691cfb6ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5397c76b-9cc9-46ff-8535-64fa5ee8231e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c29a6ff-358b-468a-92ce-70183db4ee26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ed2376-6efc-49c8-ab48-26dd85641ee5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcdf72a-1c1b-4b65-8a02-8a72d249a1c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da4429c3-918a-4dac-b600-31a45e726a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb385e5-03f5-46c0-b102-963d3d942fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fad0893-bfef-4579-80cf-0eb176fc23dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86bf600-9065-4383-9ef1-233c91e05619",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07db618-83cb-4f30-8cdc-327ef83bf289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4743500b-eb47-4628-a713-37010d407066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d26485d-5b2b-4606-b8b2-575bf832f306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe71459-d15a-45a6-9083-e1623d51b8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcb618b-c3c1-432f-a096-32273b258da7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546f63ab-de92-4c2d-b4c7-4d4c0710b4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b99bcb3-9c6f-42e2-b0b0-a8bf6ef8741e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccf8ba1-8b2a-4666-8c6f-0faf2fca96ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b83827-867f-415f-9c80-ed7e73d15bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d49d2ba-73b0-4738-bcb0-0b1249ddb57a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97452908-85de-4416-af77-5f6694bc5382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53842c33-07d1-437e-a4dc-b7b7727675ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84a3818-5eb8-42dc-9caa-4187f01cf9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc428538-5ca6-4fe2-ba0e-24f9886355c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbba848-191e-4f6d-8b63-d4eb2a37170f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74c47f7-d519-48f1-a33d-8fe98464b294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d623f9-8e66-4c08-9dbc-fe862317d827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36d29fa-fcc1-4f88-9b90-b4a92f729f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0455a2-7ff1-4554-beab-4d7a3a7d2e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc2f244-c03e-4efe-9740-09d38c38c130",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d510231-4d3c-4ab8-b71f-a7b7cf2fdff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d63505b-c42a-4788-b4ff-b139a4c5f9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342d1ce0-bd4b-4e25-af8f-8a7317ad3328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be411686-9736-4378-8c3d-762bcdb0cd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c996d7-58a4-4295-95ef-83986d948c3a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea56cf7-50cd-4906-bfe9-b210e699a117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3a6887-746b-44e9-9974-b87c4087a8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1359ca-162f-4759-acb1-a91942be3d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00857e3e-511c-41b2-b586-89c6e6d8cf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85a4e90-77fa-4eba-a822-bf64f25039ae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1b3c15-3fe4-4822-b6a4-119a0e4dd491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1667def-f33d-4780-aa6b-0bcd1120e35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac099abc-b26f-46e9-8e2c-6386e8f6a7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0234e97a-e1db-425b-afea-1aff323b62c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07012772-efaf-419b-baac-9f44f4f87022",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef13718-7ffb-40b3-9dbe-876e211e13d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "326c4dbb-01ef-4433-a6c1-1d0bd9ed24a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdc4f7c-117b-4eed-a977-e77597d78b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a24ce5-e0a3-4a2b-872e-cb6f7c63f10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f42c3d0-8b39-481e-a929-fbafc4884d44",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706fc93d-aa1e-40c9-9cdf-637ed53defd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97fc299b-913e-40f3-99c3-d962dbcc59d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae09f6c-04a5-4c9c-8b63-8ba43cd77813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e26c3c6-8609-44c7-9ce9-fde5a1ed3eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c63bd31-bb47-46d5-8797-c693797e560f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab1a349-e450-4305-be2b-3893c581653e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a64e492-de74-4bdc-acc8-05ae119c9df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644132ae-fab2-4dcd-bf8d-0a6cb1a106de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4367d63c-2b99-4441-b8e8-5328f8049da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15e5aa8-2f10-4f43-837f-d8307243a767",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1655392a-a2fc-4b46-aae6-68e907684cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b04f086-fe5f-432e-94c9-42dd2fcf0ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9b44c8-ce8d-4385-b724-a5e378e1a16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3b50b9-973c-4dcf-bd4d-4b17f869b671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9b6319-9691-467b-8432-c5cdb5a48f95",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb62b1ba-27c5-42f2-b234-8003822a90c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ad45c3-467a-4642-8d3b-8e4ab2755b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa33db3-1b38-4155-9d89-fa25f1304b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb283506-62da-409a-940d-9b47f76a4de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a89b398-4e27-4a8a-95a5-19b948365526",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6bfa92-8faf-4e6e-a296-132a4fa7ce82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c867921a-4d2c-4b0a-9413-e77fc69ac281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986faa26-3c74-4028-ab09-1b7b73168dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6112d517-6204-40ad-9b7f-f55aad7b146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0645abf5-7e17-42a8-acfb-6e9d95f549e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5326340-733a-4cb9-ab51-3987cfbaa924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf269fa0-5fdb-47ee-a164-cd5f4a01d2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb74a204-87d6-40a3-ac89-9130a1805303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95aa630f-9738-4379-a0ee-4c72f82a753c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ffce2e-52aa-4fd4-af57-2abc064bb2e9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3c25fb-5e73-4fe5-b386-b1e08713f684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a5137c-d6ba-4357-977d-8878d43ed755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e33e3e-37bb-4204-8c20-89488d6f9930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27e7d2b-978d-443e-9627-3d6b735dc4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7b6c86-2e9d-4b03-ab31-4f3278028c14",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e7785e-fb11-4cea-b0b4-078bde9bb6d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b5aaef-3867-4a73-af73-0ae8bcf921be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e257a6-dfe0-404f-8607-4187d2030284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcec339-d829-491a-a1c4-9a202b99c9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252b7f75-660f-4486-80d1-ccc6d5d0071c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f47b480-4398-467d-b35f-26d772ab38d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ceb350-1bd7-4dd7-b686-2aef71d2f4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc8875b-159f-4014-9dcf-39b9dfe07996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb92079-7b8d-472f-8596-8af0c33a4981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc6055c-8ded-4b96-a1de-92b4dbd22e4d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ad2312-e9b7-4d2f-b7f8-fac76577d720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d72242-11b6-4c1a-9b4c-8f7f2d8ac736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c054f0-1778-43fe-ba29-b39d396a9948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0041396-5ccf-45b4-aa8f-92c40069dfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f140e57b-a62c-4a06-bdf7-c17799dd0f37",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e47589-dcab-4631-9cb2-9b68b79eea46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50fa92c-127c-4eaf-8d68-a15e40298381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8279c98-b0a4-42b9-9535-6a1f0a7f92e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72dbd4f2-08e7-4e48-8eba-1533db0ceab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beff688-81f1-4f9c-b796-cc55b02ff0e8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab1edec-4010-4453-828e-d17a4269fd2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0481435-76bc-43ce-a1fc-aa98b1dcf4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeee895-94e9-4e02-95f9-c67f5f3bb2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5912ef3-f65e-4e6f-951f-a55492bb87ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a216371-6e36-4031-baf3-675a02642e6d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c2168e-6568-47d1-815f-998054c8c491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0aff64e-53d5-423a-866d-eb8f2635a4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a2dcdb-7d30-48c6-b2ca-f59d04866ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef8afb3-bf5a-4a7e-895c-2391d502e168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76df5c31-ce21-4d7a-a0db-1057e3e69f5c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036da9ad-f2cc-4b83-8c9d-c7a918b9e527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8794d70f-3b77-4f88-b573-a5fab5faf434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea97bfdc-04a8-47c5-b298-75db33c9673c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a76c66f-4f10-4b8f-9c0d-2d5d5b1c617c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6feb27c-cde4-437c-aa22-86edf7928871",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af050336-845a-479c-bdc9-2abe874bdd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943ef971-1910-4a43-ac98-b63acdbbe253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53381423-7cf9-4649-88ef-74b163a2c970",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29348fb4-e6ed-4729-b56e-76d2b66bb1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3edc927-4609-42aa-b43e-78e5d3567ef2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10275e8a-fc4c-4208-a95a-84d31ea87736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ea3e49-fbea-40d4-b303-0281bf1a99a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8e88ab-a853-4752-a609-67cb78f9403a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db371e59-90da-46ec-889b-21eb19d208ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093b5a94-5957-47b9-911a-589ff63c1775",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32315bb-0f40-44bf-8788-5f7343d3e4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f866a95b-1630-444a-9533-cd510017b0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fa0f0c-f026-446b-82fd-d5d6d3d70dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d621745-75b8-469c-a6c1-5026bb96a67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf4e311-c703-4dce-bb11-a14677e83714",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1d751d-29c9-4251-8378-4708a19a8911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75cda95d-aa82-45aa-878f-9fe8af263fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cb4944-a670-4b7f-bae7-540e582fbe18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0bfe49-81dc-47a3-831e-560d41953e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edfa18d-bb7d-4cea-8c2c-8774375735bf",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692e7f2b-932c-470c-a347-455eb556ccaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c766f2f6-dddf-4359-896e-4b620eb0d2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e98d39-c89b-46ae-ba94-ddab1641c061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc5bca1-14a5-46e4-823b-6207278cb6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c01b239-82b1-4aa5-a5e5-b5697c28c5c9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf2c3c9-d980-4b40-972f-98e48d684598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f97651b-d2f7-4ba4-a065-4adc28244768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea876616-7697-4483-9db3-e9ebfea8b02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f717b4-ed20-4224-bbd3-4ecf65fe8595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96a1a5d-e042-40b7-bdfa-2ff23d999fee",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa53a3a4-a8b0-4ed8-8108-e603e11df9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175b6041-7cc5-48ca-99a7-30b90c39e653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771830a3-d382-47d9-80fd-a64fc2aa5fe1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8366d52b-5d75-429f-919d-9e165767145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a09e97-759d-44c9-9e8f-ab03203c7170",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3464d16f-9c25-40c7-8273-dd58fbc5ed70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887719e4-5ab6-4960-8c4f-d4ae2fd29c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310b0ddd-2b3d-4909-b13a-f4cf623f1df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13012a60-935a-4cad-a47e-207f45cc2700"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48496eb0-9510-4eac-b9c7-b186e59b7243",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5acd65ed-14fa-4515-aa5a-7bd1a011e11e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78b3257e-201e-43af-a525-47af4dc65a68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2515eb3-7a0d-4cf3-a8a7-5e164b5884d7"
                    }
                  }
                ]
              },
              {
                "id": "dc3527ac-89b6-45b7-b4e6-f53ae00ee29f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31c43916-5922-4a95-8700-a374fa90c636",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4570cc39-c501-4329-a82f-247ac3590ed9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "39242217-9a41-4134-9c29-9c809c3ea7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d03069-f5fe-445b-8a6c-05a9e69e7b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f48536ee-d9fc-4a67-b40b-e76173842429"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7326d4f3-af57-4d2a-bb2f-fcdbdd2ba965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91225eeb-04e9-4d7c-ae08-676c3a88f4a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88610f60-8c47-44bc-a2ba-9ada11589756",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a7dabc1-767c-42f6-be42-12fd18923122"
                    }
                  }
                ]
              },
              {
                "id": "a3ab56ba-3c0b-4375-9da6-3b03e983badd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a3409f89-f392-4912-b770-734a1eeff382",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd1194-6029-4e79-aaa1-2eaaf897bb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "02eccfc4-d427-44e5-9458-050c5ac8f6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8e96a9-dfa5-4fa0-8bd8-67956f562623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ef17c5-d456-42b4-b78b-81eab504270d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a43c63e-ff3b-4a0f-b3b4-f43a7d78abdc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cdc36ece-79a1-427a-a000-e08d67bc2dba",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad195748-6d8c-496a-8f48-02d71b083668",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96e96961-84af-4679-97d5-8cf2da735739"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "803e32d0-9048-4404-81dc-71fba28a5e69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c773a594-1558-404f-834b-31bbb917ca76"
                    }
                  }
                ]
              },
              {
                "id": "a341e1f7-2d3f-492f-a15f-4696d0f26208",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dd9fa9c-3535-4f9e-b590-a7206ac86bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4db9351d-e899-446e-bf3d-1197ea6e0806"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "978765ab-9020-4a10-8562-56ec64ebc48c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e5cf8c9-38ad-468f-8574-5483eb543579"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17d047b7-9954-4a8e-a5a9-449e7d558c8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1c3bf64b-e85e-45f1-849f-7957c16b7241"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68ba5c31-b48d-4861-b926-182b1fd04039",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de45eee7-aaa5-4ea1-b97b-ead21c494cdd"
            }
          }
        ]
      },
      {
        "id": "0db6ae93-e21b-4dce-93df-d3d827322e5d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d38b1620-5b63-4a83-a61d-d19be2e291fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8133c3a-53a4-48b5-8e7a-40671a20a0b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64fff3fd-5a3f-4119-9ce6-60e20b3263b1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b912b59c-6e30-409f-aff8-6f17bd0efebd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eae82020-4e2c-43e9-ab48-1ec6c9c66529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddbc36c-8e62-49bf-bcdf-da89b0a13690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fed5095-d1ff-45e6-ad38-cf9219727746"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b489377-9a20-4d37-b1f3-924164e63a20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8148e28b-bd54-45ac-8b3f-b756f733e66b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd1615c3-553b-4e25-bb55-082f746b75c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3592103a-9c4b-4004-9bc9-790baa14f21d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b990e7ff-4ebe-4543-aad0-232c1ea093cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7a2d10a1-735d-4616-8d9e-cff9d5f1b7fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e05c876-7a70-4f49-83a9-efc6a01ec7a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3a464c7-f550-4e5e-9da4-d4ee4bbb1bfc"
            }
          }
        ]
      },
      {
        "id": "cddeb418-c25a-4390-807e-2fb84e57cbe3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "282f13c5-c34b-4e08-9a37-e3cf25a5efe5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "111925f4-eb85-4ec7-91a3-ab564f3110ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6261fd32-b8b6-4928-818b-1d2657b59160",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9798a4e8-ee8d-4d1f-abe9-e7c1720ffba9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29814234-aca5-49a7-a64a-6d4b4f6d0873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8188bf-9122-4652-ad21-cd0c00983c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a174f06-ba42-4660-96f7-a68495ce3917"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d45f7750-f12c-4b9d-a7cd-da5ee7c9f089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fae0996-04a3-4547-a22e-6e0aa3df88db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c738d862-da96-4874-8985-c3d3d568a8aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7730e67-0008-4f0b-a89a-e953d03a6599"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e2d8939-1e91-4695-a8d6-bf72c6a32e24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36fba3b3-a84b-4a3c-92eb-c0a1c31ec174"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cf3b12b-b5af-4e4b-8008-36472f73c3aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11fe3b1f-d087-4e11-9d10-553ca656bddb"
            }
          }
        ]
      },
      {
        "id": "e9c690e6-eea9-4bd0-9054-dca7e924f70e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a22432e2-ac08-41c5-998a-58382ca5a01f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d4b558f-78d3-4b80-ae37-0366e71d73d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5435082-ebbc-4579-be01-a63e13b6cf07",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9982b45-3eb7-463f-8292-a9ccf8cef5b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "774270d8-cbfd-40f1-bacc-1bea9d4082c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbeaf9e2-37aa-426c-a86e-7179a05bdb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b08959a-ba54-4570-8461-f066d73aa245"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a77273c-348d-4d98-9b1f-640d459232d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efd0960e-4144-44cc-8218-7769072351b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0566c9d3-f41e-4abb-8cbf-efd5dbb58348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ae3685a-df7e-49df-b96a-bba8279a4445"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c97d78ff-f0f7-478e-b717-16089f2bc9ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea1af0f3-454d-4201-bf66-0a12c63d6cf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65f8e595-b999-4279-9d9c-c1718b7405b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aad38dd6-d310-45c1-b21e-454dbb6103a5"
            }
          }
        ]
      },
      {
        "id": "1306dca5-4a10-417b-b0dc-ecdebc68e6ef",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1db537af-96cc-4fc3-ade9-4f8d56db72ec",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "882c349f-079d-4036-b493-9e6b4e46ac5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "337c60b8-cb1d-45ee-b2bc-710c4d4c9446",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "337aa594-161d-45cf-b399-1ebe0ac31c06",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "652f2f8c-4307-4095-a8af-bf90ce56bacf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 220.36971830985922,
      "responseMin": 11,
      "responseMax": 5443,
      "responseSd": 696.743279705957,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690332028992,
      "completed": 1690332103563
    },
    "executions": [
      {
        "id": "40f52f67-595c-4e9a-9c1b-bcbc78df0c7e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "27a84cac-b18b-4423-914e-0c9afe08bdd5",
          "httpRequestId": "f3930bd0-4997-422b-80bb-4c28439db8c7"
        },
        "item": {
          "id": "40f52f67-595c-4e9a-9c1b-bcbc78df0c7e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e6006254-5d06-4601-8a52-4d7fcc7820c1",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "0626695a-8441-492f-9a6d-1406bda7e57b",
        "cursor": {
          "ref": "919b0eee-94d0-46c4-b649-fb37a5c99f94",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "990770e1-a2b3-4493-8225-b93df17de0a4"
        },
        "item": {
          "id": "0626695a-8441-492f-9a6d-1406bda7e57b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0da2c432-4d29-498f-b591-748798e6e77c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "ab77f264-c7c8-447c-a00c-239688940724",
        "cursor": {
          "ref": "7d251ba7-f47f-45da-a25e-d71837b1abad",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bba5093b-0c3e-4824-a12a-6aed852c5bbe"
        },
        "item": {
          "id": "ab77f264-c7c8-447c-a00c-239688940724",
          "name": "did_json"
        },
        "response": {
          "id": "040fa76d-b6e1-4501-966c-2158e8d96f4b",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c65efe6-bd4a-4e2b-952d-d2645452241a",
        "cursor": {
          "ref": "888f5087-e5b6-44c0-97d9-e6d6e69aa95c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea8b0433-a8f7-466c-a3b2-86ea2cbb3746"
        },
        "item": {
          "id": "2c65efe6-bd4a-4e2b-952d-d2645452241a",
          "name": "did:invalid"
        },
        "response": {
          "id": "163ee1bb-4893-4c3d-b388-5b89413be6ec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 933,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c65efe6-bd4a-4e2b-952d-d2645452241a",
        "cursor": {
          "ref": "888f5087-e5b6-44c0-97d9-e6d6e69aa95c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ea8b0433-a8f7-466c-a3b2-86ea2cbb3746"
        },
        "item": {
          "id": "2c65efe6-bd4a-4e2b-952d-d2645452241a",
          "name": "did:invalid"
        },
        "response": {
          "id": "163ee1bb-4893-4c3d-b388-5b89413be6ec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 933,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07884485-765e-4862-8076-cb0fb69bdab4",
        "cursor": {
          "ref": "d1d8a959-3888-4cae-8dc7-bdd12cb9f75f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "44854212-d42e-4ff9-9a7e-2339b769a299"
        },
        "item": {
          "id": "07884485-765e-4862-8076-cb0fb69bdab4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "21e22f25-15b7-443f-954c-d768a1d3fe02",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4ca21a-97b4-4982-9891-5799b8ad70de",
        "cursor": {
          "ref": "ac49a364-c16e-4913-9f9a-cf18a5dabaa3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "777d276c-5a52-40b7-8fa2-ad317b8417fc"
        },
        "item": {
          "id": "4c4ca21a-97b4-4982-9891-5799b8ad70de",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7de22103-9acf-4879-b8d6-94b7288e55be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e4747b-affc-4b5a-afd0-2a24fed61cb2",
        "cursor": {
          "ref": "93d78905-7be0-418f-a28b-0689b1d4a258",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7a73c8a7-7803-456c-95ad-6051892e826a"
        },
        "item": {
          "id": "41e4747b-affc-4b5a-afd0-2a24fed61cb2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3a392c30-9752-4e29-a95e-b0221b939e39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca7236c-f7dc-4bdf-a947-4554306b15bb",
        "cursor": {
          "ref": "3a70ce32-3010-4faa-9e03-0a2d27338407",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ce22acae-c2f3-44d2-844d-f65b591e0de7"
        },
        "item": {
          "id": "cca7236c-f7dc-4bdf-a947-4554306b15bb",
          "name": "identifiers"
        },
        "response": {
          "id": "07066f62-00f3-4dc0-a85d-bb31d2eb3881",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449feddc-e739-45fd-b040-5446528fe4df",
        "cursor": {
          "ref": "0833debe-1c53-4fb6-9774-b10cd55ac1a2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4e2e8096-5c05-4551-b608-c21b4285a2eb"
        },
        "item": {
          "id": "449feddc-e739-45fd-b040-5446528fe4df",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "91d33e2c-b549-4530-8493-7fe46af0c2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bb3e3a-ec1c-40ea-a6c3-3b099d1adc49",
        "cursor": {
          "ref": "b7d3ed2d-afcd-44b1-ba79-7dbb60ba64d4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3597b160-7d7b-4c3d-9eca-c43de9523ddd"
        },
        "item": {
          "id": "76bb3e3a-ec1c-40ea-a6c3-3b099d1adc49",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e7e04c84-7791-4519-8e30-98b0d41a3f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b203b20-f684-469c-a188-c7ed8b6f17ea",
        "cursor": {
          "ref": "2fc571b3-eb65-4128-bde8-3aba429bd3c1",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a9ca65c0-7126-4a12-a697-1c5d43195ddb"
        },
        "item": {
          "id": "8b203b20-f684-469c-a188-c7ed8b6f17ea",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "09188a33-324c-48ce-b191-a1e0611892a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2556e750-64b3-4eb1-b09d-2baa902766b8",
        "cursor": {
          "ref": "8c66a5d6-ca72-4144-9f04-43b7e5969e3e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3df0980d-8e0b-4fe8-867d-926409e2ab02"
        },
        "item": {
          "id": "2556e750-64b3-4eb1-b09d-2baa902766b8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c521dc30-599b-408c-8453-a759c22147be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f0ad60-dc8a-48aa-9be5-44cc891b11db",
        "cursor": {
          "ref": "ce158626-9f56-4a34-8af8-d1a9a8fdf77f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8b8160d2-1c00-4087-865d-44640a36e343"
        },
        "item": {
          "id": "e2f0ad60-dc8a-48aa-9be5-44cc891b11db",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "31514c6b-8ea5-447b-95c6-23c1b8510428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac93479-f2cd-4c44-8c04-2ebd82010ce2",
        "cursor": {
          "ref": "12379175-4207-458b-b6f8-e0187bf2d6f2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c0243c43-d587-4d22-85b4-c1b8c02308ef"
        },
        "item": {
          "id": "8ac93479-f2cd-4c44-8c04-2ebd82010ce2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7d3400d2-7623-42de-9868-afc9b03bd227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f29cd7-6d59-433d-a424-ee0b13f3ffdd",
        "cursor": {
          "ref": "fb68f30a-5b60-42c2-962e-8d2ce83f73a6",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e858995d-5ae6-4772-b71a-0d0ccfbf7a34"
        },
        "item": {
          "id": "f4f29cd7-6d59-433d-a424-ee0b13f3ffdd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "088eaec0-94d9-4290-bea9-e7292f34f5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7026b5be-f535-470e-9325-e1a64da5dfea",
        "cursor": {
          "ref": "fd2774f8-5a05-421a-a017-e9ee5c710bae",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "377ba973-c0ad-4404-b8af-0d16232f8f2e"
        },
        "item": {
          "id": "7026b5be-f535-470e-9325-e1a64da5dfea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4d5eda18-c254-4ad9-91cd-825aa21b1aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b5a31f-209f-4902-bbf5-06b7e0db6e14",
        "cursor": {
          "ref": "916c8cca-31f3-41c7-b51c-f2406411a041",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1c4bdca2-6c03-4fe1-83bd-aa5ad7893eb8"
        },
        "item": {
          "id": "b0b5a31f-209f-4902-bbf5-06b7e0db6e14",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ff6adf08-f4a3-4807-b3ee-695092a920ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2865816b-bbcd-43a5-bfc0-46ffeb6e966c",
        "cursor": {
          "ref": "39bc3bca-91f7-489e-90a9-a3f91c1ce1b0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fdc27b79-d39a-493a-8058-89a40102ca6d"
        },
        "item": {
          "id": "2865816b-bbcd-43a5-bfc0-46ffeb6e966c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2f71cca9-5cd3-4a6b-86ab-ec1ff8491a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be94b888-d401-4800-a029-155262dd93b5",
        "cursor": {
          "ref": "e6e4fff1-635e-445a-bb0a-80871b147cb7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2d5eb1bf-4b6b-46cb-a3eb-6c980b6e0e07"
        },
        "item": {
          "id": "be94b888-d401-4800-a029-155262dd93b5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c3397888-5424-4866-8260-435b25436c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a7ba70-c64c-4b98-b576-e19eefe6a127",
        "cursor": {
          "ref": "95bfac20-706b-43ba-83e3-ce127509ca7e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a0e51793-4b84-44f8-82b6-5d4877e75bd5"
        },
        "item": {
          "id": "05a7ba70-c64c-4b98-b576-e19eefe6a127",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1fa86bc4-54a3-4c96-a29e-24522552bd21",
          "status": "Created",
          "code": 201,
          "responseTime": 2866,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "ab2cd5dc-d59c-4114-8073-0484cb566c5b",
        "cursor": {
          "ref": "9a54b630-b759-452a-87cf-87b016444164",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "305bbf02-c481-4390-947c-0565192fde96"
        },
        "item": {
          "id": "ab2cd5dc-d59c-4114-8073-0484cb566c5b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bfd1c8a2-33f3-404a-9ba7-c3aba1c47a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c0f599-ed19-45aa-a8af-659f3ecbd69e",
        "cursor": {
          "ref": "20a12102-418f-427d-80e7-a3e57dd81247",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f34fff35-39ec-4df5-a17c-c49221b6c8cc"
        },
        "item": {
          "id": "d7c0f599-ed19-45aa-a8af-659f3ecbd69e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "68ded103-dff7-496e-8f8b-f65a0e555c20",
          "status": "Created",
          "code": 201,
          "responseTime": 5443,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "3446ed48-e28b-443b-8cbd-c714817a9619",
        "cursor": {
          "ref": "ecbba32c-a7fd-4586-ae67-4d7d9d0b4708",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "46d5afb1-7a72-4921-92f7-de26ea362db7"
        },
        "item": {
          "id": "3446ed48-e28b-443b-8cbd-c714817a9619",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e4c2aef1-7274-4eb9-a878-bd071768adf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971c6576-d8a2-44b9-baf3-72dc64d4fe87",
        "cursor": {
          "ref": "e5c0a632-0de3-424e-b117-979682ed09dd",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "13354ebb-8586-4766-9279-c8ca2a2ff7d2"
        },
        "item": {
          "id": "971c6576-d8a2-44b9-baf3-72dc64d4fe87",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "69cd8648-207d-47aa-8dfd-56c940f1298a",
          "status": "Created",
          "code": 201,
          "responseTime": 3324,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "48f75e8a-ebff-4d0e-8932-6f381b9d4562",
        "cursor": {
          "ref": "15f7549f-bdc6-4c06-a738-823582472a3d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c54dce3b-a18d-4f6b-b1c8-35d54083fb8f"
        },
        "item": {
          "id": "48f75e8a-ebff-4d0e-8932-6f381b9d4562",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "34836010-e23c-4278-b966-7cda06e832ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d8ea2-60b4-48c3-af95-d978d3e94ce4",
        "cursor": {
          "ref": "00b4a424-d2e5-4d52-9077-13d0859ee9d8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8be47c1b-00a6-434a-9fdd-86d62e7eab05"
        },
        "item": {
          "id": "bf8d8ea2-60b4-48c3-af95-d978d3e94ce4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "588a7b0a-5355-4b62-97d9-adb96311aa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396f78c8-671f-417d-b020-182c222e7e4d",
        "cursor": {
          "ref": "aefa4e82-5b39-47a0-8d96-e8c0912fe9b0",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a136f1fb-96cf-4c29-a034-8f13bbac7ac1"
        },
        "item": {
          "id": "396f78c8-671f-417d-b020-182c222e7e4d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c11fd190-61a0-46ce-bc37-2e8bf96b37a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fba9bd-7674-4c7b-8332-095162a1ef95",
        "cursor": {
          "ref": "4662650f-64a7-49e1-9cf9-7139eee3049d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5d295ca6-7130-4743-9702-2c83a341b5b4"
        },
        "item": {
          "id": "d7fba9bd-7674-4c7b-8332-095162a1ef95",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d5a2504a-4265-46b5-b082-7977867a6a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc55d85-3104-45f8-bd9b-771f6da9783a",
        "cursor": {
          "ref": "e8bb42cd-86f9-435f-9969-f21ce3827aeb",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9daa352b-003e-47cb-8041-39218d96b415"
        },
        "item": {
          "id": "4bc55d85-3104-45f8-bd9b-771f6da9783a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5d925a6a-07d7-40da-8dcb-51662b0b0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051e4094-b05c-4bc2-9176-5f3fbab39013",
        "cursor": {
          "ref": "494b5d10-d9c0-43fe-987b-20248ad99aab",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c61242b1-519d-47c8-86d9-ffe6cce3589a"
        },
        "item": {
          "id": "051e4094-b05c-4bc2-9176-5f3fbab39013",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "afffb7a9-ae32-4b18-b2b6-ad7f2c40b2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf50d7be-24a6-46d1-ac64-68314f5b2062",
        "cursor": {
          "ref": "688d784a-3e61-4f77-86c3-d18a697b0bfc",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0162cdfb-c61f-48ff-9d82-e220034e50c0"
        },
        "item": {
          "id": "cf50d7be-24a6-46d1-ac64-68314f5b2062",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "363c151d-cf57-48ad-9b6a-6db13ee1a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8561d38b-b705-4212-a8a5-940b7b4bc7bb",
        "cursor": {
          "ref": "5e028c81-7a79-439d-bb47-a1f6d9a10123",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0be15ac7-eac8-443f-9885-9d9f6a858e1b"
        },
        "item": {
          "id": "8561d38b-b705-4212-a8a5-940b7b4bc7bb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c37fae5-b777-4492-ad52-f67792b3798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc2fa68-af51-42aa-91a0-44e0c89dad46",
        "cursor": {
          "ref": "a53ea9c6-9b57-4563-abae-6eec856bb800",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "575e27fc-c37a-4dbd-a0b2-5a6c7e10f564"
        },
        "item": {
          "id": "ecc2fa68-af51-42aa-91a0-44e0c89dad46",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ec310996-3260-401c-8443-2b5cbcb23f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607e472d-e2f6-4f7e-b367-7f8f9834fff7",
        "cursor": {
          "ref": "6d859ec6-8757-4937-95e2-ad2c5c0bbad8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b574c30-3f7b-4bbf-a666-76df77f4a006"
        },
        "item": {
          "id": "607e472d-e2f6-4f7e-b367-7f8f9834fff7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "15406ca8-ba82-4ccc-9dc1-cfe48f7a55c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e8170-0a23-444b-931f-20b10d548a36",
        "cursor": {
          "ref": "7032814d-ea9c-4701-b226-67e5bb9166f9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "15d369f1-b8a0-4b5b-8f4b-1dfe71f3a986"
        },
        "item": {
          "id": "ad1e8170-0a23-444b-931f-20b10d548a36",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "739dcae3-cd73-4dc4-bf01-fa0d097ec77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0427a8b-d336-4078-928f-4cc4146e3a7f",
        "cursor": {
          "ref": "8dccf4cc-f8d6-4686-af4b-6ee9db46246a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "804e7742-e958-4d3f-8c99-b336a58613ca"
        },
        "item": {
          "id": "b0427a8b-d336-4078-928f-4cc4146e3a7f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e55630a2-3c0e-4bb0-9298-05122bc023c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1944447-39b6-46c5-9599-4ab9a632417e",
        "cursor": {
          "ref": "ec56d7e3-c791-4442-b6fd-a6d0179b1787",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3aba2a7e-f659-4641-be9b-83b9fe50e1c0"
        },
        "item": {
          "id": "c1944447-39b6-46c5-9599-4ab9a632417e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d098e87a-722c-41f8-ba45-ccc1f14e2130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc48d3c0-44dc-4b49-acc2-24bc4b8b57e9",
        "cursor": {
          "ref": "461afac0-92c8-4245-ac92-d97fb0ce52aa",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6103f07b-9490-4f5b-9756-beb6a0fdd313"
        },
        "item": {
          "id": "dc48d3c0-44dc-4b49-acc2-24bc4b8b57e9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "94c523c5-5556-4a24-bd5c-eff9d847f22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37747378-e282-4188-9ce3-90dde16359a6",
        "cursor": {
          "ref": "25695098-e440-4518-80c3-89eaa359d36c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ff41ab5-0b05-4b67-a898-9394041dc00c"
        },
        "item": {
          "id": "37747378-e282-4188-9ce3-90dde16359a6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "38afb64b-2cdf-4bff-919a-9ac0b6ecbfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42498a8b-bf58-47d6-a5fe-5ec350706416",
        "cursor": {
          "ref": "8f28f522-31fc-4c49-9fdf-8a39b0e0213a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cde1e3e3-0e0c-4766-9acd-162fbdf001af"
        },
        "item": {
          "id": "42498a8b-bf58-47d6-a5fe-5ec350706416",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "84ea1157-9fff-4696-bddd-3a2f043f395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e5ca77-1539-43e3-b77d-4a2d7206175a",
        "cursor": {
          "ref": "a9a0ad93-0612-4092-bf5c-3ff0c3bc82ce",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d9d50ae8-97a3-432d-acf8-0a202aa0e100"
        },
        "item": {
          "id": "01e5ca77-1539-43e3-b77d-4a2d7206175a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b79b128e-55e2-4b6f-94a7-20cb01e1f085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a80911b-c6f0-4d39-92f1-48a7034ee191",
        "cursor": {
          "ref": "5242aa57-1bc9-4faa-b4ad-8fd5eed863de",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "abaa0c2e-2d7c-49e7-8184-4d5b548bfa54"
        },
        "item": {
          "id": "9a80911b-c6f0-4d39-92f1-48a7034ee191",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6ce0247c-23ee-4f79-942f-84e56e384733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c20b59d-6b5a-49a3-b3a4-2ddf076d8cdc",
        "cursor": {
          "ref": "a49125e4-62fc-4702-984a-c664c704a132",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1cfe56d0-8a16-407d-a909-0af72d551390"
        },
        "item": {
          "id": "1c20b59d-6b5a-49a3-b3a4-2ddf076d8cdc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "83554716-335c-42ee-a415-512ae33cbffb",
          "status": "Created",
          "code": 201,
          "responseTime": 2705,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "9f935ea3-74b8-44aa-b27f-b40d1aca83c1",
        "cursor": {
          "ref": "66596c16-70d3-489e-8d51-1b0ab0b070bb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "88d14f89-ee68-4a34-85b4-90cfa59373fc"
        },
        "item": {
          "id": "9f935ea3-74b8-44aa-b27f-b40d1aca83c1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "20ba91b2-a462-4405-86f3-3a8079e964f0",
          "status": "Created",
          "code": 201,
          "responseTime": 2566,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "8a954f95-3db7-4e4b-9ce9-ecf8d8f67ecc",
        "cursor": {
          "ref": "3ca6910b-17eb-43fb-a8d2-e2ea48b70a74",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3f09bee2-06b7-4a95-93fd-a807d5551137"
        },
        "item": {
          "id": "8a954f95-3db7-4e4b-9ce9-ecf8d8f67ecc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "79bb83f1-a92a-42f6-af99-bb2d47d54134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1665955a-6c3b-469d-a90f-bb58efcf1c96",
        "cursor": {
          "ref": "89eeb344-f74d-4007-89a8-f54abcaff4ca",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ab28e9bc-e8e0-4897-81fe-4ec692a5a3b5"
        },
        "item": {
          "id": "1665955a-6c3b-469d-a90f-bb58efcf1c96",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3be7437b-9f0f-4ef7-9db8-dd70b44fbb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dfcead-f3b1-4714-b9e3-c8c83b48fb39",
        "cursor": {
          "ref": "debd0df2-ec27-4113-9138-2e5782cc4b4b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7d8a64f7-8283-40e8-b245-b31a7f651453"
        },
        "item": {
          "id": "25dfcead-f3b1-4714-b9e3-c8c83b48fb39",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "33cbd537-4e78-4aef-a42b-af39d256cc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f98658d-975f-423f-aa48-280511171ea1",
        "cursor": {
          "ref": "2760a2c7-79ef-4536-a013-275d7d5ca95a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "74cc6ad9-42c9-4245-b454-404535a93e59"
        },
        "item": {
          "id": "1f98658d-975f-423f-aa48-280511171ea1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "164e3fa7-133f-45da-afa7-cc2ae507ec8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68485f2b-aa71-4ef0-a2e8-038f8f72ee2c",
        "cursor": {
          "ref": "6fbad5a8-da5e-450d-9149-a8751b634060",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3776d786-209f-4923-b4f9-38caa571d175"
        },
        "item": {
          "id": "68485f2b-aa71-4ef0-a2e8-038f8f72ee2c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d5aa3ef0-6316-43c5-9167-1a58adf6c5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d116ef39-fc70-4070-b066-bef7cace523b",
        "cursor": {
          "ref": "ef74b12d-a514-4a2e-acde-bd1b14f9e493",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ed2157d6-9c0f-4866-8085-748f56220279"
        },
        "item": {
          "id": "d116ef39-fc70-4070-b066-bef7cace523b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "12756734-5f02-45d9-8cb2-1f55f433dbee",
          "status": "Created",
          "code": 201,
          "responseTime": 2852,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "c739d7f0-87a7-4aa9-99a0-f5c97e02b243",
        "cursor": {
          "ref": "f9ee539a-1195-43ed-b753-031f209c4ab5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d7116420-79e0-418e-827b-af3be04849a6"
        },
        "item": {
          "id": "c739d7f0-87a7-4aa9-99a0-f5c97e02b243",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9bbf5cff-24ee-4b0a-bc7a-a845c681fe80",
          "status": "Created",
          "code": 201,
          "responseTime": 2545,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "12ee15e7-2262-45b2-99f0-fc6752ad729c",
        "cursor": {
          "ref": "9c3cb117-1d54-4234-a4d0-60406ec0c8a4",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "536b5c5a-6d8a-4c98-813c-47b1b799b3bd"
        },
        "item": {
          "id": "12ee15e7-2262-45b2-99f0-fc6752ad729c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d310afd7-a7fe-422f-92d6-6f13dca7daba",
          "status": "Created",
          "code": 201,
          "responseTime": 3132,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "3cbc9e3e-402f-45cb-97c9-5cd4412d270b",
        "cursor": {
          "ref": "7e44d6d5-e66e-4aca-ab50-4b6a3d07804f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "495befb5-b883-4fcc-a097-4fcbde0df106"
        },
        "item": {
          "id": "3cbc9e3e-402f-45cb-97c9-5cd4412d270b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d9644321-2dfc-49d3-81dc-7e8212dcbe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc274f24-04e5-438d-bbbd-403d416cfcc7",
        "cursor": {
          "ref": "ce438fc3-955a-43d5-9781-3e780a3f1ca8",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3e90bac8-6a2d-4014-8347-0cf26541972d"
        },
        "item": {
          "id": "bc274f24-04e5-438d-bbbd-403d416cfcc7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f376d0d7-0755-4524-b799-b763a47039ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c8e836-d3e8-4b3c-8170-dfc7c0041200",
        "cursor": {
          "ref": "68f6248c-ec10-4d03-9cb9-7a4897c1a408",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ea021763-f04f-436a-b375-deed348c25cc"
        },
        "item": {
          "id": "e6c8e836-d3e8-4b3c-8170-dfc7c0041200",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "27ee6642-a87d-470a-8286-4c692e243d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0ed6e1-2cf7-4b06-9120-03c3ab821fcd",
        "cursor": {
          "ref": "1d373cca-c0b4-4a00-836e-5e497781cfa4",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8134b3e2-0a50-4cef-8687-3fe212958608"
        },
        "item": {
          "id": "5d0ed6e1-2cf7-4b06-9120-03c3ab821fcd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c62d7f9f-882f-4aef-bdca-a19b097852e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39955f5f-0021-48f6-ae1d-1c72d2b13691",
        "cursor": {
          "ref": "621c0de1-da19-403f-bac1-ff291095d3a3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "056df833-554d-46f8-b6f7-af24d1821eb0"
        },
        "item": {
          "id": "39955f5f-0021-48f6-ae1d-1c72d2b13691",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3d8e250a-84b0-4073-a2dd-4f4edf403455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c642f4-87af-4d0c-b50b-b21fbcbe830d",
        "cursor": {
          "ref": "a4aaf5e5-3435-41d1-aa2e-787cd0addb80",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ecfce59f-3dad-434f-87bf-d0b83d1f1803"
        },
        "item": {
          "id": "b8c642f4-87af-4d0c-b50b-b21fbcbe830d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "50f5acd2-268d-46db-8957-40ff60140f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8521bedf-e2ba-4ba9-9155-33f7a2590977",
        "cursor": {
          "ref": "31f5d887-7ae3-4b3b-ad7a-9137222c9bcf",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "560638b8-c1c3-47e9-b6c6-25789ff3e339"
        },
        "item": {
          "id": "8521bedf-e2ba-4ba9-9155-33f7a2590977",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ed0d4174-b21e-46ed-a61e-c2ee0e0cd38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1cbad2-2eba-4d8d-a1f6-e75471da4f6a",
        "cursor": {
          "ref": "f6979b4e-1f92-471f-a1ab-505c440f7645",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fa333774-a2d3-4e7e-a7e5-7c0df38ada73"
        },
        "item": {
          "id": "db1cbad2-2eba-4d8d-a1f6-e75471da4f6a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e0715489-9480-4208-8923-a9c06708d823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e927bd-de5c-493b-9688-3866c9bf6ccc",
        "cursor": {
          "ref": "e33ea540-b72a-43ba-beef-70288c51a2be",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "43c05659-b9ce-49a6-a9ec-4e567f59ccac"
        },
        "item": {
          "id": "31e927bd-de5c-493b-9688-3866c9bf6ccc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6337d082-b3cd-43e8-9950-1d619a2589b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9c5d5f-2d38-4796-93ae-cde7486f84b7",
        "cursor": {
          "ref": "df9f59f1-4a8d-43f0-a637-bb56bea2d0ff",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b4b6cc0d-a2aa-498b-a597-5e7285074836"
        },
        "item": {
          "id": "fa9c5d5f-2d38-4796-93ae-cde7486f84b7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ae1b26df-10d1-459d-a700-ba2fbbcbca5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824b3c2c-4aba-45a8-8597-45a64a0e94d9",
        "cursor": {
          "ref": "ec5e7a6c-afa6-459d-9c17-4f926eb1b9a1",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "733d0125-fd54-42de-b2fe-60091e010036"
        },
        "item": {
          "id": "824b3c2c-4aba-45a8-8597-45a64a0e94d9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b464dd69-e268-403f-b98a-ddd8a9f2bde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3795a1-07dd-4104-88e5-055419fee617",
        "cursor": {
          "ref": "d938e5b2-b3cb-47bd-a0f9-bdde976acc23",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4f8f6a88-5fd4-46bd-be55-30bc9cce30d4"
        },
        "item": {
          "id": "4c3795a1-07dd-4104-88e5-055419fee617",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "750fdaf5-519f-49df-9148-843683df48fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31046b54-7e62-4fd8-8b2c-265808ce8d64",
        "cursor": {
          "ref": "c50c5ea1-a849-4919-8efc-5a13ed551923",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bf7aec1f-cbaa-44b9-a973-9eea5bed3c5c"
        },
        "item": {
          "id": "31046b54-7e62-4fd8-8b2c-265808ce8d64",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "84f83b0b-f6af-464b-91c4-e9729ea6d9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5664b80d-c7e7-47d6-8901-5a2abf41a77b",
        "cursor": {
          "ref": "48b5b548-7285-4890-a3a5-41423573d3ec",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "926248e6-665c-444a-9c6a-51c21576a2a9"
        },
        "item": {
          "id": "5664b80d-c7e7-47d6-8901-5a2abf41a77b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c515cf0b-8820-42b8-948d-5c54043c4c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984d6602-cbd9-48b6-bab4-9f7f99589f72",
        "cursor": {
          "ref": "345a9cef-5c04-4753-8344-b66a7832118c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "20ce8ed4-5eb4-4d6b-b2a5-8810e50174b5"
        },
        "item": {
          "id": "984d6602-cbd9-48b6-bab4-9f7f99589f72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d17fd8f4-303f-4f46-82c1-7dc29a78ce3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e8a107-ba70-4d79-b28e-846e09146fef",
        "cursor": {
          "ref": "53fde7dc-91d2-4734-bdcd-6959bf94a4c4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3fd93895-a0b8-4a79-8c21-3086d7e394fb"
        },
        "item": {
          "id": "23e8a107-ba70-4d79-b28e-846e09146fef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b907020d-0bc1-45db-8718-8d1eb68fbc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f83edcd-627a-4e7e-b8fb-890b3922de2f",
        "cursor": {
          "ref": "8e68383d-121a-4bcb-a2da-31ff3e7c401d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f8f06a7-bae1-4e26-a505-34e2bfd3c833"
        },
        "item": {
          "id": "6f83edcd-627a-4e7e-b8fb-890b3922de2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0cc4b261-6732-4c5c-97ca-e65037d7290d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38aec774-a5c2-4181-94ad-de74c45c2bf6",
        "cursor": {
          "ref": "16067c50-f0f6-4738-8d7f-4293d39e39d2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4060f065-3e8f-4658-a52d-d02d38af951c"
        },
        "item": {
          "id": "38aec774-a5c2-4181-94ad-de74c45c2bf6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f94327ed-0079-456c-b64f-3f5ab7c0392f",
          "status": "Created",
          "code": 201,
          "responseTime": 2878,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "55db4865-3285-4556-b5f1-56b52388edfe",
        "cursor": {
          "ref": "0476af0d-cc98-42a1-bbb1-f7aa86262565",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b6aa590f-f368-450b-92b0-09e560e1f76e"
        },
        "item": {
          "id": "55db4865-3285-4556-b5f1-56b52388edfe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1212d795-8e95-4c26-8e2d-42e019e4de7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34301dd-8df7-4de6-a7e5-abd47ea14af8",
        "cursor": {
          "ref": "cd4a74de-2ee3-42d3-86f0-cb2e52f75d03",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "74c5abdd-daf3-48ac-897e-45791cdb29e1"
        },
        "item": {
          "id": "c34301dd-8df7-4de6-a7e5-abd47ea14af8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bd148390-e871-46e0-929a-1257a24cf54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3175557-9ea2-4873-90ab-047378635d74",
        "cursor": {
          "ref": "5af485ca-1c36-4f8e-914f-f598b6118941",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5e8746d1-5ed8-4eed-a703-371e5478347a"
        },
        "item": {
          "id": "f3175557-9ea2-4873-90ab-047378635d74",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d1f07659-5a68-4631-9fb8-1b4b88f6499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e2ff9b-dbb8-482c-b985-b6149f24bef1",
        "cursor": {
          "ref": "3d945be0-3275-44c0-b8c6-3a18714a075a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c9ef4099-4848-43ed-a2af-9b5d90050d53"
        },
        "item": {
          "id": "53e2ff9b-dbb8-482c-b985-b6149f24bef1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dca9ff4d-ace0-4308-9ee4-b1a68eb1738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a28f3aa-3ffc-4739-9c6d-a038f74c4c57",
        "cursor": {
          "ref": "4b15d5bc-c9dd-4691-9303-eb4f43766c65",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "08c75f06-1e73-43b0-92c5-6fe6f04a598a"
        },
        "item": {
          "id": "8a28f3aa-3ffc-4739-9c6d-a038f74c4c57",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "edc2fa1b-e1bf-49b2-9919-891cb1aa309b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8c5489-6a0c-413d-9a09-513011c32be4",
        "cursor": {
          "ref": "c1c46c26-b5e4-41df-bc08-58e0e4d6cbff",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7641242e-6481-4385-b4fc-f534ffac80a3"
        },
        "item": {
          "id": "0e8c5489-6a0c-413d-9a09-513011c32be4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2af34fa5-dccf-40bc-bafb-738dc9129a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb77014-7b75-452f-b5d0-d0e95feb847c",
        "cursor": {
          "ref": "fba71ac4-8c82-4074-8751-3fa1215fea13",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e3236685-5507-458d-b8e1-e0096ed25fda"
        },
        "item": {
          "id": "9cb77014-7b75-452f-b5d0-d0e95feb847c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "71f7389e-acca-4309-a5b5-2a68c31c788b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39839f6e-b5fc-4281-bf65-e92c6a752f64",
        "cursor": {
          "ref": "735c65be-db11-487a-90b1-b9c6733e623d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4f42a1f0-5e54-4263-a1ec-824753316956"
        },
        "item": {
          "id": "39839f6e-b5fc-4281-bf65-e92c6a752f64",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d8409127-9a60-4808-8500-8aed18e20f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc108db8-fbd8-43ba-8496-0ca45bb6861b",
        "cursor": {
          "ref": "492ed847-38b4-44c3-ad8c-841533f51595",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "65023366-24da-48bf-8095-b05fe84cc649"
        },
        "item": {
          "id": "cc108db8-fbd8-43ba-8496-0ca45bb6861b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4c72e1d3-c340-405a-acfb-151ad124c321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9388349-3b83-43ee-a417-ed193e4e159d",
        "cursor": {
          "ref": "e97b470d-bd12-4e71-9562-ad6f44411089",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ae7c18a0-87a5-4a74-a496-70458825f719"
        },
        "item": {
          "id": "a9388349-3b83-43ee-a417-ed193e4e159d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8fa87640-54cd-4ea1-9df8-3e485fb2afe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81281d6-cc62-4e8b-9653-1411d76706df",
        "cursor": {
          "ref": "d1453143-9bce-4e0a-a84f-f0d00895fc17",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5723886d-9e3c-4ce2-99df-a9da399f979b"
        },
        "item": {
          "id": "a81281d6-cc62-4e8b-9653-1411d76706df",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7feed141-6c3c-4b94-b394-2cbca9fc8aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46321016-a47e-4f37-863f-562868f76180",
        "cursor": {
          "ref": "ff05de90-dbbe-427c-9678-510819798b96",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ea6b4434-a378-42cb-8407-2266ffdd1480"
        },
        "item": {
          "id": "46321016-a47e-4f37-863f-562868f76180",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "21117b56-e459-4747-8212-73b5cb7fe3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258956b5-05a7-4388-b72c-17b0b12c22b0",
        "cursor": {
          "ref": "f4c5cccf-e545-4651-8f38-558a19c45960",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "df9cc378-d989-4243-83cf-25fbc2edbf16"
        },
        "item": {
          "id": "258956b5-05a7-4388-b72c-17b0b12c22b0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3c0007ba-b1f9-4bd3-b9ea-e92c49b0292e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cc6277-ae19-4f23-b9f3-804e867e4d1d",
        "cursor": {
          "ref": "d7e5a7e9-15c9-4215-86d2-db6d703b7291",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "59ff014d-b2e4-4ca0-9a2d-274d5334b393"
        },
        "item": {
          "id": "29cc6277-ae19-4f23-b9f3-804e867e4d1d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "82c49d73-c717-46c0-ab33-076b87c25019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b0a1b2-3dd5-454d-bb98-209747cbfa5e",
        "cursor": {
          "ref": "610ab349-5048-4898-b6d8-0d00159e9045",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2c8023e9-3e88-471c-8f0b-0ed33c0f1392"
        },
        "item": {
          "id": "f0b0a1b2-3dd5-454d-bb98-209747cbfa5e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "53b2f9dc-cf00-4a88-8328-7039c042b77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c98fd-d219-4b7e-bacc-ce81508b920a",
        "cursor": {
          "ref": "a619d472-b8cf-4171-a85a-853d043e9ee4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "853f0c10-d55c-4a00-8fd0-fa08077f113d"
        },
        "item": {
          "id": "b93c98fd-d219-4b7e-bacc-ce81508b920a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "45b76e4b-ea65-473b-8869-d06165ab3a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473bcbf2-33dc-4852-99e8-40951b098313",
        "cursor": {
          "ref": "4e4384be-3cf3-4864-b0e4-bff06c666afb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e229df78-03d8-4ecd-81f3-d8a8f17d7b8d"
        },
        "item": {
          "id": "473bcbf2-33dc-4852-99e8-40951b098313",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "120e0f01-8e9b-48fb-a8b2-97eaddf995d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c3745-83c9-42c3-9acb-911c28ff692d",
        "cursor": {
          "ref": "e6292861-627b-4567-8df8-64447ed1fee0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "482bccdf-a72e-4ce5-b10d-eeb8e3734ad5"
        },
        "item": {
          "id": "3b6c3745-83c9-42c3-9acb-911c28ff692d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c680e51e-213e-44fb-b411-e26b0ad727a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63ca8d5-c391-4aa3-974d-a4af9e9f8738",
        "cursor": {
          "ref": "9bf1dfa6-45bf-4c25-86aa-c87841f66a0e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c2a8cf37-a216-4671-ba45-14237fc85372"
        },
        "item": {
          "id": "d63ca8d5-c391-4aa3-974d-a4af9e9f8738",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e37c6939-c892-42a1-a828-a3a10a5becab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66032029-6b3f-4af7-b39c-0042fd46d41e",
        "cursor": {
          "ref": "c0509fd2-0007-478b-a575-05e7a7d604f2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "efece465-d905-498e-b6d5-9bc48c7fcc5a"
        },
        "item": {
          "id": "66032029-6b3f-4af7-b39c-0042fd46d41e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "19acc9c1-e61c-45c9-b5b3-40ab599aaf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fde24b-1e74-49cd-8ee5-8b03b872d881",
        "cursor": {
          "ref": "01a3f78a-0897-47b5-a007-56b414e42a6b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37a768ff-5087-44a2-806a-32393151498d"
        },
        "item": {
          "id": "61fde24b-1e74-49cd-8ee5-8b03b872d881",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e96ca85f-8e97-4485-b5af-aebe6b0a793b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca1ca04-bd0b-48db-ba66-a3431484b9d1",
        "cursor": {
          "ref": "27024b6d-ad7c-4fb3-b29a-9f50cd9c920e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be50bb8d-475d-43f5-a60a-e2f87bbd466a"
        },
        "item": {
          "id": "2ca1ca04-bd0b-48db-ba66-a3431484b9d1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9a570c14-7ec4-44ed-8a4f-80183fdb7f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc1e6b2-15e0-4eab-885c-0ea64b2deb8a",
        "cursor": {
          "ref": "612ec6d9-a762-48d5-ba7b-df4054768d6e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aa49de62-91f7-47d8-8efd-5ab6c0a63e8d"
        },
        "item": {
          "id": "ebc1e6b2-15e0-4eab-885c-0ea64b2deb8a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e8bd7498-d171-444e-b828-fc0f5d5f0c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa0dd7b-aba1-4cc3-a952-e338ef4d6e8d",
        "cursor": {
          "ref": "a93189cb-a280-4a0c-84d2-b18c8d01ea77",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d0d23033-ba96-4e45-bd1d-eb1714e16e5c"
        },
        "item": {
          "id": "faa0dd7b-aba1-4cc3-a952-e338ef4d6e8d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9381715a-602a-4bbe-ae15-36cff23ed6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36e8a49-2d1d-440a-b21b-1cf4a5d6794e",
        "cursor": {
          "ref": "347e1660-f7cb-49f3-8413-09abe17393c0",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ee19f676-74f6-46c9-8fb0-3c270704e4ab"
        },
        "item": {
          "id": "d36e8a49-2d1d-440a-b21b-1cf4a5d6794e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "84cf7fd3-1d44-4cfc-aa56-c5bcbd209350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42548a8b-b06c-43de-9321-71374bef671a",
        "cursor": {
          "ref": "ee084489-394e-4618-9c5f-00a96ce78132",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dfb8cf54-bcae-4e67-99b3-df3fcc8ac37f"
        },
        "item": {
          "id": "42548a8b-b06c-43de-9321-71374bef671a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f6891e1f-f49f-480c-a352-ed0509b65e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726e505f-544b-4c66-878d-2a64888c5744",
        "cursor": {
          "ref": "03c8b583-5650-4fd4-81c5-ea602868afe5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "53923cb2-7ff9-4b0e-999f-2ced504addfc"
        },
        "item": {
          "id": "726e505f-544b-4c66-878d-2a64888c5744",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c3290142-1ea5-4ce6-9d91-ad0432059e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eac8f03-f7c5-4e9d-b564-6219acc21a22",
        "cursor": {
          "ref": "914500e7-4dc5-41a6-a178-33007d3a1796",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "16b3aab7-8236-42fa-b2a6-7463e908b8f7"
        },
        "item": {
          "id": "5eac8f03-f7c5-4e9d-b564-6219acc21a22",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8811d6c6-66ce-4f3e-95fb-28e7ce45bd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f340cd80-68f8-4986-b761-2903e8f8da8c",
        "cursor": {
          "ref": "375ee7ed-45ab-4fae-b846-28311ddd5207",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "22881927-64fe-4bc0-8be9-0889ca48c98a"
        },
        "item": {
          "id": "f340cd80-68f8-4986-b761-2903e8f8da8c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ff486d21-1f9b-496a-9fb7-294296d8141d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818a5085-6329-44dc-bc37-685f37540a11",
        "cursor": {
          "ref": "25f7266d-fe28-4272-b6f7-8d60d3e81cfb",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e1b31c36-fe37-4842-8acb-d6cd0c2cb634"
        },
        "item": {
          "id": "818a5085-6329-44dc-bc37-685f37540a11",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "619c18a4-1cb4-4ff4-a508-978c6bb18037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9496588-e4d0-4fe1-8a64-0c77688f8dd0",
        "cursor": {
          "ref": "39b022e7-d329-48fd-85b7-815550a0fdaa",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e5606d70-2d17-4e45-a053-21fe41efa203"
        },
        "item": {
          "id": "a9496588-e4d0-4fe1-8a64-0c77688f8dd0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fe0e04cb-1b56-4ab1-a88f-a9b1ddf56f40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8aefc9-3e45-4cd2-b059-46bfd5e9a787",
        "cursor": {
          "ref": "a122b482-2f61-47d9-9977-1ef0a1053653",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "50f3364d-6a46-4d38-8e1f-11f353d47999"
        },
        "item": {
          "id": "8d8aefc9-3e45-4cd2-b059-46bfd5e9a787",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1c8c4627-1a53-4d79-a9f9-45bb9b5018b4",
          "status": "Created",
          "code": 201,
          "responseTime": 2285,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "528b252c-1e3c-4ca2-9a16-4b807d340b4a",
        "cursor": {
          "ref": "2aceb0cb-557d-4b20-9412-2527cdf1f8ee",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fb7b94fe-83b5-4c9e-afb3-0a041ff0b8e0"
        },
        "item": {
          "id": "528b252c-1e3c-4ca2-9a16-4b807d340b4a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "26ba74d5-a70d-4135-8495-52f8cfa9551d",
          "status": "Created",
          "code": 201,
          "responseTime": 2592,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "05851dcc-6441-4729-a0c6-271008aeabd8",
        "cursor": {
          "ref": "c341cab9-69d1-4b94-a690-db9be54b27a0",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b4aa106f-374d-4979-8972-c508c1d39c8f"
        },
        "item": {
          "id": "05851dcc-6441-4729-a0c6-271008aeabd8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "61608925-f9b8-4765-a279-30f7a46b0509",
          "status": "Created",
          "code": 201,
          "responseTime": 2571,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed55abf-cd73-4589-8494-8f380f5256a2",
        "cursor": {
          "ref": "3a527f45-ef03-4cae-a009-2bc988ae2ff5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4daa2d51-6f29-4f3f-9b3a-b09862383def"
        },
        "item": {
          "id": "5ed55abf-cd73-4589-8494-8f380f5256a2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c44c401-6ca8-475a-9d95-862e3adfebd3",
          "status": "Created",
          "code": 201,
          "responseTime": 3803,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4405199c-fe56-4a38-9c72-b45592c230f2",
        "cursor": {
          "ref": "6a12cb23-93c9-4535-897e-55c165dbc858",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "28ad71d9-cc0e-467f-8330-c63cbe8d33cd"
        },
        "item": {
          "id": "4405199c-fe56-4a38-9c72-b45592c230f2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "37d16506-5a40-46b4-8800-5be5a2943bb6",
          "status": "Created",
          "code": 201,
          "responseTime": 2523,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-26T00:41:22Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-26T00:41:22Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7ea21145-fcb3-405e-a6bf-17857d668915",
        "cursor": {
          "ref": "bc50025b-e300-4801-977c-4fcade5166dc",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "98c94e4e-0626-4ce2-80de-6750b8e90e85"
        },
        "item": {
          "id": "7ea21145-fcb3-405e-a6bf-17857d668915",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4cd4a55a-275b-4133-8154-fc956d9381ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "40550adc-04ac-4230-8054-5b55668b3005",
        "cursor": {
          "ref": "4f4e7b5d-69a3-473b-86da-7a5029843ae0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3f78a9dd-2e6a-4688-8788-8e7afaf722f3"
        },
        "item": {
          "id": "40550adc-04ac-4230-8054-5b55668b3005",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "58eafe5e-f5ba-40c7-a513-cd2996621061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e1a903-c0a7-4a95-a28e-512109dfa8cf",
        "cursor": {
          "ref": "eba21e25-0645-4bdd-8471-af8e6a043c82",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "424b9b9a-58ab-47d8-bd9a-d84a04f75259"
        },
        "item": {
          "id": "c4e1a903-c0a7-4a95-a28e-512109dfa8cf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d3e534d-fd1d-45c1-9b32-856599a66f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1301e0f0-a3b0-49dd-9107-3a2d7879d821",
        "cursor": {
          "ref": "0bf753a3-327c-499e-8ed3-63c52b04c581",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5395e356-572b-47c7-8286-d6301d700492"
        },
        "item": {
          "id": "1301e0f0-a3b0-49dd-9107-3a2d7879d821",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "147d4be1-2d1f-49f0-b44d-4b686164db25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046ffe46-1590-4046-801e-f564cc6696d4",
        "cursor": {
          "ref": "6195f628-2e19-4475-b531-c9f5e03b0d4a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "040985a8-0b21-4eb8-b539-05f6bdc18124"
        },
        "item": {
          "id": "046ffe46-1590-4046-801e-f564cc6696d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d755fe3a-e13c-4486-92eb-7e5684db1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fec053a-45f3-4316-8c04-329fa06526d0",
        "cursor": {
          "ref": "0a89cdd7-6e88-4a84-9f9c-d0bd259deeea",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1cbff014-ac56-4407-b15b-ad0d8e2b7a71"
        },
        "item": {
          "id": "1fec053a-45f3-4316-8c04-329fa06526d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "baf918c7-05f4-4693-bd70-f46280c887c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d0b58a-dd95-4806-90bc-e4a63c57444e",
        "cursor": {
          "ref": "9a8b6852-21fb-4642-93f2-93f5c1e7a5d3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c513670a-172f-4359-a480-a03a8a22757e"
        },
        "item": {
          "id": "03d0b58a-dd95-4806-90bc-e4a63c57444e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2a580eb-7696-4e88-bfae-8a0cdd86622b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf700f6-5bba-47aa-80d1-6ee702505cea",
        "cursor": {
          "ref": "75b2ec67-fc15-491d-bea2-589d246099ba",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d1cb7352-7a6f-4f00-931c-56c38977ba24"
        },
        "item": {
          "id": "7cf700f6-5bba-47aa-80d1-6ee702505cea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f4c78375-16d0-49ea-bb44-eeb0924c087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5321079f-1884-402a-a64a-86acbf44bab5",
        "cursor": {
          "ref": "b8dabd12-d69c-449b-bea7-7b514efc38dc",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "07d910d7-279b-4b6c-8553-92390818a664"
        },
        "item": {
          "id": "5321079f-1884-402a-a64a-86acbf44bab5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "900bda3a-9496-4c50-a6ad-2f0615a56dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dd4837-ad5c-48ab-be5a-21398a2dfae1",
        "cursor": {
          "ref": "9d3dc4f0-849f-4517-ae67-162672acc898",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1b0f6735-0e46-4ac1-9e4b-0f7cd186e739"
        },
        "item": {
          "id": "d7dd4837-ad5c-48ab-be5a-21398a2dfae1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f7e291f-b865-4e15-b241-c19debeadb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e377c1e-b1e3-41fa-9ccf-330596d3c6d2",
        "cursor": {
          "ref": "6af5e824-a2a5-4c2b-ac75-8424c2696c94",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4a6b72d9-ce97-4aa0-9264-544a9d63816a"
        },
        "item": {
          "id": "6e377c1e-b1e3-41fa-9ccf-330596d3c6d2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "03653d16-33b4-4bb6-8e41-52bf64aaa5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4645ba-8a7e-40ce-8fc5-f20913311aa1",
        "cursor": {
          "ref": "68a5072b-76a8-493f-8280-57c43825c048",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7a0ae7ec-c6a3-48a2-9a6d-9b5583dccda6"
        },
        "item": {
          "id": "6e4645ba-8a7e-40ce-8fc5-f20913311aa1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "59c57b31-a3a7-46bd-bae5-5056e138595c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bd40a7-5e8a-47b3-95d5-7fd5a3652f1e",
        "cursor": {
          "ref": "44d73343-e36d-4421-8f39-64b9b77bfd27",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f57949b6-886c-4ab0-a2b6-63e469c3ca60"
        },
        "item": {
          "id": "19bd40a7-5e8a-47b3-95d5-7fd5a3652f1e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "93d77e76-602e-4665-8e8a-2c0d57baba9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9cfb09-7975-4f18-99f3-4c769d97ef8d",
        "cursor": {
          "ref": "d0714509-e4ef-4e64-bd40-bc74a551bbf7",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c8f93ad6-5ab8-48d6-8724-870988801f71"
        },
        "item": {
          "id": "3b9cfb09-7975-4f18-99f3-4c769d97ef8d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9bec2070-c148-48cf-a131-62a844a5a6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7f7046-3845-4115-a8a3-6726ab613cff",
        "cursor": {
          "ref": "2ced67f0-2eea-467d-9e1a-aec9a331de93",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e15dbf57-5b7d-4116-bc85-5380824ef047"
        },
        "item": {
          "id": "0c7f7046-3845-4115-a8a3-6726ab613cff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "29ed717b-c4f0-45d5-9900-ef136f72e4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d49d1b-3c8b-4549-9f95-d2c7d764e794",
        "cursor": {
          "ref": "da75efd3-bde7-4e8e-b866-c10ca4d32056",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "af1f4b85-391e-4c5e-a54f-fe10ba722e1c"
        },
        "item": {
          "id": "e1d49d1b-3c8b-4549-9f95-d2c7d764e794",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "286dd804-0a20-4fe5-b75c-c754f8cbdf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd88787f-7d86-458b-a9bf-6d9450430fc1",
        "cursor": {
          "ref": "7bd6157d-4271-46ac-8a89-dbd06568cbe8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "27f26ed1-4238-4fa1-acea-e0affe233503"
        },
        "item": {
          "id": "cd88787f-7d86-458b-a9bf-6d9450430fc1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d776c770-ee37-4aba-86c0-7a4751db8ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f825d2b-45cd-4a98-9db0-af51be77265f",
        "cursor": {
          "ref": "ba299a47-43af-45a2-905a-983ac23af411",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a5690369-3f24-4b7c-a5d1-4159401fdca4"
        },
        "item": {
          "id": "5f825d2b-45cd-4a98-9db0-af51be77265f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a28cf1b0-ccfa-465e-8253-6f6af52b182f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e704ad1c-2a66-4e35-99cc-7c30808240cd",
        "cursor": {
          "ref": "1a35876f-dd15-469c-bf68-d83894b2dfe0",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "71112794-5f2c-413f-8477-e02c6585b2aa"
        },
        "item": {
          "id": "e704ad1c-2a66-4e35-99cc-7c30808240cd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8473430e-59a7-40a9-95b2-45ec9b33c378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30695608-e9fe-4c46-ab9b-c53778ad2af0",
        "cursor": {
          "ref": "fd4e3f70-e762-4d13-bd53-c0edb8ffbfa9",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4992ae49-0aa6-406c-afad-f99731c75ba9"
        },
        "item": {
          "id": "30695608-e9fe-4c46-ab9b-c53778ad2af0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "297e714b-81cc-4320-b6ed-c8044c09c764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad38e38-c5cf-4af4-b4fb-c22de317fc2f",
        "cursor": {
          "ref": "31d9211e-4a58-4c05-81a6-d9e9053802b8",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e0ca3d77-f85f-4ac9-ac29-b3064d0fdca2"
        },
        "item": {
          "id": "bad38e38-c5cf-4af4-b4fb-c22de317fc2f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa918d1e-17ea-45cf-a5f2-4e66033d2f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c87a0e-2506-44fa-8670-3257a460bd11",
        "cursor": {
          "ref": "7c48ee98-53dc-4303-8f96-012f4c2b8b01",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d5032401-0308-4a10-86b6-228a41039111"
        },
        "item": {
          "id": "13c87a0e-2506-44fa-8670-3257a460bd11",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "25e111c2-7aef-49d4-b5ed-76194b35a3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06a5a0a-b0c2-4e8f-94ee-fda046dd5806",
        "cursor": {
          "ref": "c32478dc-2326-471e-9fe2-907a1aefb895",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d929dd0b-271d-4ecd-a271-3be9f4688ba6"
        },
        "item": {
          "id": "f06a5a0a-b0c2-4e8f-94ee-fda046dd5806",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "648fb678-b28d-46ce-982c-99adc4657c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144b387f-93e4-4a29-a106-55fac6c2cd46",
        "cursor": {
          "ref": "553290cf-af25-4ae6-9dd9-0afe68706636",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2b9d5d1-2c1a-42cc-a683-222acd27e480"
        },
        "item": {
          "id": "144b387f-93e4-4a29-a106-55fac6c2cd46",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bde1283f-b032-4c69-abed-f6e41d848e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05591272-fddd-4142-ba23-0b90d980d4ef",
        "cursor": {
          "ref": "9ac0c630-05a6-4529-84d4-5c6932563d94",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f30709c1-0db7-43f2-a2f9-6e90a1c4a953"
        },
        "item": {
          "id": "05591272-fddd-4142-ba23-0b90d980d4ef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "25bedbd3-3a20-4d5c-8089-afd570ef656b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d44f8c-56f1-494b-bdf9-339ad78ff254",
        "cursor": {
          "ref": "3db5be4c-94b8-4e4d-91c9-e876fd07226e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e480c598-5717-4ab7-b57f-0837a26492a1"
        },
        "item": {
          "id": "02d44f8c-56f1-494b-bdf9-339ad78ff254",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fdbc13d2-e043-4361-864a-d4e2558bfb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fa0d69-b538-423a-8583-6d66cee221b3",
        "cursor": {
          "ref": "14b7553e-7f1d-4ee7-a614-580d50e60d1f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "38d9bdb6-e69f-4a7d-bdda-5f593c8ac0a3"
        },
        "item": {
          "id": "71fa0d69-b538-423a-8583-6d66cee221b3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ca6f2fcc-2523-4232-8054-7b111c71deda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4edc5c-ed23-4cd3-905a-d6e2525f522c",
        "cursor": {
          "ref": "f501dfdb-d7ae-425a-b086-8a89cfe7328d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c3a05ea3-3370-4275-b389-842679bfea01"
        },
        "item": {
          "id": "5c4edc5c-ed23-4cd3-905a-d6e2525f522c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85c3bc5d-a492-4cb2-94f5-d84e93be5dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49007cd3-99ed-4175-86d5-bb4e58f80c87",
        "cursor": {
          "ref": "a883daa3-9c11-4111-94bf-077c0ba1aec5",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c64ca911-3be0-4d6d-9132-2ec2e3a0d937"
        },
        "item": {
          "id": "49007cd3-99ed-4175-86d5-bb4e58f80c87",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bb1d617a-cdc9-4301-9616-f2aac90683db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24197f7f-c884-453b-a2a0-8eb01e8379a8",
        "cursor": {
          "ref": "5748ca55-4c66-4048-be08-d35f25af5057",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c478ad02-b4a4-4fd8-b4e0-db5b69a77e99"
        },
        "item": {
          "id": "24197f7f-c884-453b-a2a0-8eb01e8379a8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a1a79850-1c97-45b1-b96e-bfe525b2ba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a080697e-3792-4c37-b8bb-cfc60d835ec6",
        "cursor": {
          "ref": "e0570500-7297-43ac-a177-101163865c45",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f84652f3-ee44-4c05-9883-d8ff8570e21c"
        },
        "item": {
          "id": "a080697e-3792-4c37-b8bb-cfc60d835ec6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6b6ce7d0-f1ca-446c-a00b-d506976c4960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5e1232-721a-4fcd-9621-0f214553424c",
        "cursor": {
          "ref": "7703f29a-e328-4e4f-b655-f557170ba4c1",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "78b81cd5-182b-4a36-8914-fd6fbeb3a0ea"
        },
        "item": {
          "id": "0f5e1232-721a-4fcd-9621-0f214553424c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "da5317f4-aefc-465f-a56f-49dacb30b562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66634097-abd2-44ed-8b1e-72066882009b",
        "cursor": {
          "ref": "f743210c-dcf4-4180-bd97-f77d0b3c7359",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c7168a49-71a5-4eba-bacd-9846215187dc"
        },
        "item": {
          "id": "66634097-abd2-44ed-8b1e-72066882009b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8e4696b6-40de-44e9-8fb7-0e68db869544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75feb8a9-cfb5-4b69-9b1f-b59d0715a062",
        "cursor": {
          "ref": "4183f222-dfe2-440b-b560-dfcc558ed29e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "14a6c5d4-13e5-428e-a4e4-a34c6fb5a321"
        },
        "item": {
          "id": "75feb8a9-cfb5-4b69-9b1f-b59d0715a062",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "560439f7-d357-49fc-acda-3263c6741b44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2023f03-61dc-44f1-b251-44a985f928fa",
        "cursor": {
          "ref": "55ab3a80-a0cd-4058-86dd-ba9ceba35a7c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4694acb8-c5c7-42df-a5a3-2d8f473bbee9"
        },
        "item": {
          "id": "a2023f03-61dc-44f1-b251-44a985f928fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5cf81fe5-c7fe-43bd-a238-f010b69ab487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abaf2b6-2bb8-4fc3-91c7-329bd68e4565",
        "cursor": {
          "ref": "e63642b8-e65b-4274-b192-5d5f1bc65a1e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6f1e9d64-b213-4661-a867-9f04da439f48"
        },
        "item": {
          "id": "1abaf2b6-2bb8-4fc3-91c7-329bd68e4565",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "51f81c60-4588-49b7-b3a0-2159ce890567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c80149-633f-403c-8d0d-09cdeef088b5",
        "cursor": {
          "ref": "bef99945-e637-44bd-9a87-72378e56518b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "faa3fb2b-f3ac-4d16-8295-4652a4c721b1"
        },
        "item": {
          "id": "29c80149-633f-403c-8d0d-09cdeef088b5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ed97a102-d2e3-4130-aecf-39e364ece11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5738b5b2-301d-4023-aafa-deb9f5dcc774",
        "cursor": {
          "ref": "b46abd85-cfaa-4512-8dd1-5a7d559ee102",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ffc9a010-48e6-4261-8e81-5148ed2f2cb6"
        },
        "item": {
          "id": "5738b5b2-301d-4023-aafa-deb9f5dcc774",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1958297b-8268-43f0-870e-b5adcfa86352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c943e56e-86a6-477e-8ee5-3764cbd213e7",
        "cursor": {
          "ref": "ea97c11b-6fc8-469c-834e-1e19748b861b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7d450197-a7f5-466e-bd9a-6d469ada87b5"
        },
        "item": {
          "id": "c943e56e-86a6-477e-8ee5-3764cbd213e7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "602a2c9f-5dd7-4b75-ac36-ade9fa953732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94d4c16-f133-45a5-b2cc-de2944a36dfc",
        "cursor": {
          "ref": "a7c7eb67-b905-48c9-a234-f1b328354019",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c8340ce7-58a6-4e58-b9e7-9122f2915f75"
        },
        "item": {
          "id": "f94d4c16-f133-45a5-b2cc-de2944a36dfc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "18439988-364c-4477-bb94-5cb7a5acf318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4671e43-943b-4a72-bc9e-a19fd687bc75",
        "cursor": {
          "ref": "152b31f4-68d4-406a-9199-d79fad07f796",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b830f7ea-a471-4903-8482-1e3a8bc44038"
        },
        "item": {
          "id": "a4671e43-943b-4a72-bc9e-a19fd687bc75",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "927d3ee5-372d-43d2-8712-448e33d7b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83388f0-9e21-4add-85a1-b44ff1c564de",
        "cursor": {
          "ref": "4621cbdc-26a9-4ab3-b86e-2cb14e950912",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3a1a7ccc-2785-407e-a32c-2a4e3854a16b"
        },
        "item": {
          "id": "f83388f0-9e21-4add-85a1-b44ff1c564de",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0505c367-cf85-4025-9f5c-066bf9a4e77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fafa43-ff26-474f-a185-7b1c8eb812da",
        "cursor": {
          "ref": "0ea34d37-a268-4d21-9741-bb4e17041989",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "675c3a2e-c8a3-4e57-9caf-541af2db317e"
        },
        "item": {
          "id": "29fafa43-ff26-474f-a185-7b1c8eb812da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b08ecc47-a3fc-47b6-9d18-56b9d2a334fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c07b099-b7d0-44f9-a94c-ddef319ca0c1",
        "cursor": {
          "ref": "fe8b2636-f1ba-448e-9ce4-712d90b1331d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f539a274-2035-4c13-b255-d339cf602ae4"
        },
        "item": {
          "id": "0c07b099-b7d0-44f9-a94c-ddef319ca0c1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f45c83c7-9103-4196-a8b8-883052272c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d5eab6-75e4-457e-9b39-386001168f11",
        "cursor": {
          "ref": "b9a4739b-24c0-40a7-a7e9-372c89267d57",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f95c9f8a-47cd-4c32-a91c-5e7e559ee963"
        },
        "item": {
          "id": "78d5eab6-75e4-457e-9b39-386001168f11",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "15aca4ba-c2f5-47e4-8a3b-117607ddcd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c248b1-e109-45dc-ae34-d3a5cc28b09f",
        "cursor": {
          "ref": "49b8c39c-50e5-43f0-aa95-927fa1e8b8ab",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c7a9ad3f-0013-47b7-9b6f-013f3e24a988"
        },
        "item": {
          "id": "f4c248b1-e109-45dc-ae34-d3a5cc28b09f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d76c3a5a-d99c-4848-9d94-97761122036d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f02b1e-04ab-4b2a-8dc1-45ba01e04404",
        "cursor": {
          "ref": "caefa127-f77e-490e-b606-a77fab095ebf",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "912055e0-7bad-4d93-92e7-e04de52b7ca6"
        },
        "item": {
          "id": "f9f02b1e-04ab-4b2a-8dc1-45ba01e04404",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a2a7099c-b1d8-4e68-98e9-64576ebe06a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c51897-242b-4d05-9217-0b318e7b7d5c",
        "cursor": {
          "ref": "5c3ed0cd-2c27-4d13-82a0-446489e3dfd9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "aeace0d3-6916-4158-b02e-3930114c83cb"
        },
        "item": {
          "id": "24c51897-242b-4d05-9217-0b318e7b7d5c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d354b0ad-a25c-4a9a-9650-4d7c37c3ca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993bcc2c-a391-4d13-ae1e-dd74352d4b0d",
        "cursor": {
          "ref": "bbc1568a-57f7-4e5c-bd2b-d33bb77e7ba4",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0d5b707f-59b2-468e-9203-b283171380bf"
        },
        "item": {
          "id": "993bcc2c-a391-4d13-ae1e-dd74352d4b0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5b8480db-fe36-48e1-b56c-683d5610a2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bb2d74-5786-4176-9b24-7b32cfb5a443",
        "cursor": {
          "ref": "3ba6ef85-f5a1-4947-a5b7-cb9fe56659b7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f6f2aa91-fd28-49b4-8064-e64800e5370f"
        },
        "item": {
          "id": "57bb2d74-5786-4176-9b24-7b32cfb5a443",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48083c7f-edd5-411d-b19e-f2343e62937e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba58546-8fde-4c0f-b8f5-586c9369ab86",
        "cursor": {
          "ref": "6291eb66-ba80-4d0a-98ca-b78ac1ab439a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "339cf6b6-3a65-4873-a639-866f97cf6ca5"
        },
        "item": {
          "id": "fba58546-8fde-4c0f-b8f5-586c9369ab86",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1f0d3932-4cd4-4715-af74-5f92931820fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092e0cb0-66af-4ffd-b30c-e88d477d07dd",
        "cursor": {
          "ref": "6326cfa3-f567-4b57-b30e-eabf1cd33004",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "68b3a828-44c3-408a-a004-eb683aebcaee"
        },
        "item": {
          "id": "092e0cb0-66af-4ffd-b30c-e88d477d07dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7cebc3c8-8d18-418a-8de6-373e78cf1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d46abb-f698-49fd-977b-9b8f043a20d9",
        "cursor": {
          "ref": "d257664d-e6f4-4f56-8d81-26899d3fe941",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b26e1457-f85f-4042-bce7-af905e48e498"
        },
        "item": {
          "id": "20d46abb-f698-49fd-977b-9b8f043a20d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ee463f83-19f6-43d6-890b-9aecb731f822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7768d959-0c29-447c-bc46-f79a771ac320",
        "cursor": {
          "ref": "b3b77c35-6215-434f-8e75-cafd2bc964e6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8fc8f4e5-4306-4df8-971f-3bab54e0f359"
        },
        "item": {
          "id": "7768d959-0c29-447c-bc46-f79a771ac320",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a81a3076-58ca-4938-8c89-5fdcdf8655cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8018a0af-7344-4b38-9830-ac99d44ab306",
        "cursor": {
          "ref": "4035a9ba-2595-4381-93ec-cef01cfc45cb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "331a4ea3-024b-4f67-80ee-f7061eab29e4"
        },
        "item": {
          "id": "8018a0af-7344-4b38-9830-ac99d44ab306",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b098d14-b9c1-4fe9-90b8-d53af0a572bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9746b52e-1b89-4b12-83f4-ee621af6f2e4",
        "cursor": {
          "ref": "b19036e5-d92c-41e3-be3c-b0acc8cda364",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9e76c711-28cc-4cd7-886b-a4777be94c78"
        },
        "item": {
          "id": "9746b52e-1b89-4b12-83f4-ee621af6f2e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "08fdeff7-45e7-46f3-b549-5d6b0804f598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d82b5-e5f9-4b58-80a0-a7757fcb1c37",
        "cursor": {
          "ref": "ae6fb1ba-6ed7-4c04-aab7-191163a04569",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dda69f36-ea93-42e9-974b-fbd35025aa19"
        },
        "item": {
          "id": "3e0d82b5-e5f9-4b58-80a0-a7757fcb1c37",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2e1d35f0-8fff-45de-8b0d-9e7ee06b573d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26db88e0-4ee3-4f5b-811b-14e4f5f2785a",
        "cursor": {
          "ref": "25fa43b6-f34e-4fb7-9d2d-31eb8a5f8455",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7aa8aaea-e922-4f39-a704-cb411e8643ec"
        },
        "item": {
          "id": "26db88e0-4ee3-4f5b-811b-14e4f5f2785a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2f04baef-14cb-4615-b945-940e9b29f201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756474d4-3694-47b6-8c6b-d702f077ce8d",
        "cursor": {
          "ref": "3e6dbe13-83ed-40de-b85e-8d09c91ab2e5",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b4bdbd73-7655-432f-be4b-2fce91d1629c"
        },
        "item": {
          "id": "756474d4-3694-47b6-8c6b-d702f077ce8d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "54355c0c-afed-44a9-9b74-5468bba1085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53bc09c-db12-48c6-b6fb-a4af59f85117",
        "cursor": {
          "ref": "ef440ae6-ab8c-4a11-8fde-1f36ac7d78e8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bfb7d246-95ad-4692-8bb8-a677123f648a"
        },
        "item": {
          "id": "c53bc09c-db12-48c6-b6fb-a4af59f85117",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9c644df5-fddb-434f-ae6f-f4dd790024d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3c1c9f-1a6a-4898-b283-58bd4cd901b6",
        "cursor": {
          "ref": "443f9544-42a9-48e2-a649-abbf03edf189",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cdfccdfb-e461-4f09-a887-6b43f70fc50b"
        },
        "item": {
          "id": "6e3c1c9f-1a6a-4898-b283-58bd4cd901b6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ef6c2f67-e2d3-42d6-bacd-1901322c27e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cffc3f-0a15-43c3-985c-91315403d949",
        "cursor": {
          "ref": "062e227a-d890-44d6-b8e7-85cfa0e715ed",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6215adf9-54e0-4714-8d09-b4e3cd31f4ed"
        },
        "item": {
          "id": "65cffc3f-0a15-43c3-985c-91315403d949",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b36e6fd3-4cca-4280-b368-7dadab97a056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0981f94a-28a6-4e43-be58-80af6247398d",
        "cursor": {
          "ref": "90778e87-3cfd-4725-98af-4570552996da",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "068accdf-57c9-486e-b1bd-643622efc8d5"
        },
        "item": {
          "id": "0981f94a-28a6-4e43-be58-80af6247398d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "32878bed-de89-41a2-99c7-25f384fa9e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3a7afe-b240-440f-a584-a9bf94dec290",
        "cursor": {
          "ref": "c9e3e65a-4170-487d-89db-cdb4f3931b9b",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "27481f73-7d99-4a9d-9a95-092132fabb13"
        },
        "item": {
          "id": "8a3a7afe-b240-440f-a584-a9bf94dec290",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1badd918-aa66-4148-b5ee-ee330d5cfb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb97ad0-539e-4484-9a11-6e3021cc4bf4",
        "cursor": {
          "ref": "e83ca5e9-619f-42c0-a18b-c4a10a3b04ea",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3957023e-0623-4d2e-a689-b4b1fd1dbfc0"
        },
        "item": {
          "id": "5eb97ad0-539e-4484-9a11-6e3021cc4bf4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eaf32af8-4c54-4432-b142-58ea129bc6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a313a1c-5460-4cbc-afe1-6cd1aa2c8a49",
        "cursor": {
          "ref": "0bb0f4f0-38cb-4ff6-853d-b6cc5e908a82",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "18ecca30-5b1f-4b44-b5f9-a7652ad830ea"
        },
        "item": {
          "id": "3a313a1c-5460-4cbc-afe1-6cd1aa2c8a49",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "df9aed94-a1de-435e-97e0-db50a2d26a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a041be-6c84-4f6b-bdf5-fe040340e20f",
        "cursor": {
          "ref": "08c671bd-d95f-4330-9da2-643c18b03310",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aac137c3-75ce-4795-ba3e-3c5262a808ce"
        },
        "item": {
          "id": "c8a041be-6c84-4f6b-bdf5-fe040340e20f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fa09c7b2-c9a5-4e10-8bb3-6d8ac47f1012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc632949-eaa1-4043-bd97-292cbc2a0595",
        "cursor": {
          "ref": "9c913a92-f0f3-469e-b83d-331c87f8e33c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "05829935-ad13-4261-af6c-745f8904fee2"
        },
        "item": {
          "id": "fc632949-eaa1-4043-bd97-292cbc2a0595",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b6a7cf87-c9e2-4722-82c9-60dafc6d800b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b463c734-61a9-451d-8ab8-f66431ddbcfc",
        "cursor": {
          "ref": "daed2523-c524-4639-87f7-c9aef0a1a6e8",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c28eba67-c70e-4ae1-86bb-dad397ad2a3f"
        },
        "item": {
          "id": "b463c734-61a9-451d-8ab8-f66431ddbcfc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b9d8d51f-774f-4706-98f2-d644af2a6008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c06c421-08f4-41a0-8a61-b8a61a3fd887",
        "cursor": {
          "ref": "43dc26b7-e73c-4bfa-9e4d-3d37a2e068e9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c84096e4-24be-4ca4-abb6-23e6d7fc4ccc"
        },
        "item": {
          "id": "9c06c421-08f4-41a0-8a61-b8a61a3fd887",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "206431c1-08b4-402e-a5c9-f2362b6adb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490b0821-0e01-4279-9776-4f8b1dc32a46",
        "cursor": {
          "ref": "381c2101-fe2f-4046-aa4e-a962cc08d03c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "93dfdd8a-e379-4e5b-ac83-027fa431d851"
        },
        "item": {
          "id": "490b0821-0e01-4279-9776-4f8b1dc32a46",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2ab9ccfc-eeaa-44e2-bcd2-911f6f2497eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3ccc53-6faf-4a5a-92ae-6000757d5b36",
        "cursor": {
          "ref": "8bb61b6f-a2c0-449c-89a9-f578fab1bee0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bcd34eeb-d20f-4f8e-9913-a4138f677976"
        },
        "item": {
          "id": "0b3ccc53-6faf-4a5a-92ae-6000757d5b36",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38ce3442-ac88-49d0-a705-7c1760dd4c97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883ffe7-c001-40a5-b69a-f0ccfb23a469",
        "cursor": {
          "ref": "4cb213fb-dff6-4eca-baac-6279bc2ef913",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "90b83833-6009-418c-bc50-3f0b8f197e5f"
        },
        "item": {
          "id": "c883ffe7-c001-40a5-b69a-f0ccfb23a469",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3133f3b2-ddf0-4b24-bcbc-73ec75f98466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c379ae-0115-46c7-98de-67b46220b33b",
        "cursor": {
          "ref": "05201671-a47c-4772-b240-a833711ec7ed",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e10e430f-bab2-40a0-bf5f-62c15c42ef62"
        },
        "item": {
          "id": "31c379ae-0115-46c7-98de-67b46220b33b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "51f7c043-9b22-4f0c-a9e4-db118fb05271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae49e32-1373-47ae-991a-916709db61e4",
        "cursor": {
          "ref": "d79709ee-bbff-423b-b184-5552b82596e7",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "43715395-2e87-46cc-8af3-f54c3e52d0a8"
        },
        "item": {
          "id": "7ae49e32-1373-47ae-991a-916709db61e4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6e37055c-67a6-453a-a19a-3774e7c61eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfa1d46-5f81-4348-bb30-60afd573d651",
        "cursor": {
          "ref": "9539bdcb-78b3-4dfd-8013-96389733fbc2",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a557b315-1a98-45fc-8c68-dd382f2fa522"
        },
        "item": {
          "id": "8dfa1d46-5f81-4348-bb30-60afd573d651",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8a87f071-3ace-4739-8059-6a90c8c9e346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7afa304-7ac1-4ce0-a031-081932059f16",
        "cursor": {
          "ref": "7d05381a-ffc9-4a22-bf75-cdd33e568885",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db52918a-4cc6-417b-b760-9af19978d1db"
        },
        "item": {
          "id": "d7afa304-7ac1-4ce0-a031-081932059f16",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7dcd7aaf-c111-4188-aed6-959e1fcfc925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7216dab1-f074-4354-8242-26e1d54e0673",
        "cursor": {
          "ref": "5a5fe3e9-a28d-4655-83b9-f9de11e0962b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "54523b83-859c-4275-b117-d5c992545ebc"
        },
        "item": {
          "id": "7216dab1-f074-4354-8242-26e1d54e0673",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0fcc0c3b-2777-40ef-9d4d-d62e639f2bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3fd6ec-d9cf-4e56-867b-9991ce35df6e",
        "cursor": {
          "ref": "2871f9da-61d2-4cdf-8bc4-eff0c034e2ed",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "787cf532-ac25-4e92-857b-ddcc6aa4e0be"
        },
        "item": {
          "id": "de3fd6ec-d9cf-4e56-867b-9991ce35df6e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ac3820db-80b1-41b6-8fbe-a29831a74ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f22e5bc-65b8-44f3-9cdb-c97050baa624",
        "cursor": {
          "ref": "c200bd2d-9159-4e8e-90c2-f064757d565a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bdb94556-a9cc-49ec-ad9f-418dd5ccd077"
        },
        "item": {
          "id": "6f22e5bc-65b8-44f3-9cdb-c97050baa624",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "45942d42-b251-46df-b5ab-42552e939d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769b48e2-4ca2-44fa-8313-c1c9a1dc7f25",
        "cursor": {
          "ref": "955fa7b2-3f3e-427e-b2b3-e9a6311850d6",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "537eba1f-b821-4460-816a-fc6f2855d2d7"
        },
        "item": {
          "id": "769b48e2-4ca2-44fa-8313-c1c9a1dc7f25",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "868c2638-f036-40b5-b210-221d781fdae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eda61be-161f-4828-9a50-52b9638fe2fb",
        "cursor": {
          "ref": "e3f71c59-4fb8-4ef2-88f2-4bd06f8f36cf",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "173b4428-8a8c-49f3-9237-509e1516dcb1"
        },
        "item": {
          "id": "1eda61be-161f-4828-9a50-52b9638fe2fb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a85c9eca-c6c8-45b8-8f56-cd5fff07853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb707f22-c980-44c0-b13a-f8dec87ed129",
        "cursor": {
          "ref": "d7b0b307-5e2a-4911-a2c1-5feb63ef8287",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f03be450-2c7b-4d55-bff0-12d9d7fd0a88"
        },
        "item": {
          "id": "bb707f22-c980-44c0-b13a-f8dec87ed129",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4f6ce414-1d03-4fb4-8853-7a23053a3d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e708cff3-574c-4216-ae0b-f9e584505307",
        "cursor": {
          "ref": "6f4341b2-127d-4a4d-9a48-ee4cf8ccc5df",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6d48b4df-64ed-41ae-b09e-d1451bd19879"
        },
        "item": {
          "id": "e708cff3-574c-4216-ae0b-f9e584505307",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6d9371e8-ed30-4681-a04c-e66904152537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe6574-42c5-432f-8d78-4290be838a5d",
        "cursor": {
          "ref": "492bc6a0-df19-40f6-894e-a8f9c25ffe19",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "44a7bf41-3575-4873-bb04-f824bdaf3670"
        },
        "item": {
          "id": "abbe6574-42c5-432f-8d78-4290be838a5d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d8611d44-0b99-44b2-b42a-39f05d907fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1cf99f-ebf4-4498-9e8d-070247e5a45e",
        "cursor": {
          "ref": "6a63d03d-4f94-4904-8e31-9576c75e1341",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c3ca318c-b45b-43a3-8c7b-6423847e9672"
        },
        "item": {
          "id": "4d1cf99f-ebf4-4498-9e8d-070247e5a45e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bbd032df-cea1-43d8-83c8-f012eba4afa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c4c4e5-fffa-4afb-9dbb-2c5c9d5abd9d",
        "cursor": {
          "ref": "5e932963-651d-412e-a3bf-895ab7baf30e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "92d3c4d0-3f49-4787-a24c-31d9d5c094c4"
        },
        "item": {
          "id": "25c4c4e5-fffa-4afb-9dbb-2c5c9d5abd9d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "87dfc28c-470e-4bd3-a416-2a36c33b4479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f69631-7cc6-4fe9-a952-438352ee6d78",
        "cursor": {
          "ref": "e5e74fb5-5af1-4997-9287-b278ba580efb",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "802ac00f-7f65-4a7c-aa23-299350fede9a"
        },
        "item": {
          "id": "37f69631-7cc6-4fe9-a952-438352ee6d78",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "330c9f78-6a2b-4b8c-8ae0-4e2ec090eb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eed84f-a0cc-4a0d-b621-756dfc09da01",
        "cursor": {
          "ref": "1396eac0-fa65-4f72-aa34-1f75892d0bce",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1432d655-12d6-46f9-b133-656927f7de9d"
        },
        "item": {
          "id": "54eed84f-a0cc-4a0d-b621-756dfc09da01",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "27041ee5-ac09-457a-a9b6-1f82344b2c83",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "822ed1b2-07a4-48df-843b-aa0c01deaf5c",
        "cursor": {
          "ref": "10cc4cbe-5bb7-4246-ada2-139367596215",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9602071e-3527-4477-8b10-5ca4aa04e8d5"
        },
        "item": {
          "id": "822ed1b2-07a4-48df-843b-aa0c01deaf5c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "970d2f3f-002e-4fe0-9d63-bbf950361506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef11fe6-a5da-4114-8c2c-3010b598480c",
        "cursor": {
          "ref": "82e3fad4-80e4-42f9-9292-6e73bef54a9f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "80355c05-209a-4b7a-a28c-84cb0f60b569"
        },
        "item": {
          "id": "cef11fe6-a5da-4114-8c2c-3010b598480c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4ee422c0-f30d-4ada-b5b5-23933e7d6598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae9817-8080-45d3-902b-544396ad5dca",
        "cursor": {
          "ref": "584d268b-5b12-4ef1-aaa2-866b17055aaa",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9860a515-adb1-4cd3-9368-dac628c22466"
        },
        "item": {
          "id": "8eae9817-8080-45d3-902b-544396ad5dca",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4697c025-eac2-46aa-b0b3-42b515ecf1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9871cef4-ffe3-4d8c-a1b4-b1cf2d069e6d",
        "cursor": {
          "ref": "b40ba9ad-5fa4-4862-9a38-d3d5bad7be51",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e03e430c-bf6d-4537-9cc7-1a4d23009570"
        },
        "item": {
          "id": "9871cef4-ffe3-4d8c-a1b4-b1cf2d069e6d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c7714e5d-7b63-455d-a584-6aaa52b3ebf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d75ca09-00c1-4894-bb3d-9eb98559d535",
        "cursor": {
          "ref": "e69301a4-f052-4c3c-9227-e583e3408f00",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9fd3ac01-0679-4fed-acbc-f398587dc5a2"
        },
        "item": {
          "id": "5d75ca09-00c1-4894-bb3d-9eb98559d535",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "814802a7-6d05-493d-b4e6-4721816a73c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffe11c4-5dd0-4faf-9740-628e0d6240ac",
        "cursor": {
          "ref": "0355013a-fc46-4b5c-b447-8e4858cffb73",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8185bc76-8830-4763-acfc-ff543b0b2bd8"
        },
        "item": {
          "id": "3ffe11c4-5dd0-4faf-9740-628e0d6240ac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "858ebc22-d1cb-4c33-91df-6ea251ba8496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75c8dfb-b3fc-44af-97a0-0738a6312d80",
        "cursor": {
          "ref": "23bbb136-2bff-4e6c-b082-32b1d513e332",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dc9750a8-7ccf-46d4-b4bb-fb84b3697862"
        },
        "item": {
          "id": "b75c8dfb-b3fc-44af-97a0-0738a6312d80",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "82d43146-f8ed-473f-947d-4f8d87fc641f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0da358-cd12-4ea8-b1d7-a3c074568526",
        "cursor": {
          "ref": "41c46eda-7dcb-451a-8818-22002f6a1d0d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f0ba2551-a15c-4b29-9dec-d99bad9ef362"
        },
        "item": {
          "id": "7c0da358-cd12-4ea8-b1d7-a3c074568526",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4c778b2f-ce01-4117-9037-3935a3a74ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269e4dc4-f4d7-4d6d-8699-d230b9bb6398",
        "cursor": {
          "ref": "8389e099-c1e5-42a3-b205-d2a8c5ac36bf",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8842f2b9-a6e1-494d-b151-67307363677f"
        },
        "item": {
          "id": "269e4dc4-f4d7-4d6d-8699-d230b9bb6398",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f2b4c585-7652-41d2-96ad-1c6a1bacc079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881708dc-b03d-4901-82ec-54f125dbefd9",
        "cursor": {
          "ref": "8643fce7-6137-4bbc-be51-e34cda26a5b8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1e0954be-9a42-40e1-9b48-2b40841ffc06"
        },
        "item": {
          "id": "881708dc-b03d-4901-82ec-54f125dbefd9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ebaffe90-20fd-4bc9-ae2b-8fe9548a7f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8916fd1d-5bf2-4a9a-aa65-6034267235f7",
        "cursor": {
          "ref": "51981b52-f303-4b2c-a4ec-afd5de414983",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e872cdcc-0bd4-4f5c-a604-1a25097c1f97"
        },
        "item": {
          "id": "8916fd1d-5bf2-4a9a-aa65-6034267235f7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1e0368dd-82ce-4867-8ef7-cf3aed20c7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06db6a5d-004a-4d18-910e-6152479b2ab1",
        "cursor": {
          "ref": "a96dfcb1-391d-4854-8bc6-add64261c609",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e2ed3a84-daf3-4ce2-a632-d5fe0ed043cd"
        },
        "item": {
          "id": "06db6a5d-004a-4d18-910e-6152479b2ab1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5c217c3f-187e-453a-8cef-bfd81dcb7c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f4fb44-23d1-4f00-b31d-d2b5f36ad75b",
        "cursor": {
          "ref": "b52e0249-dcb3-43a4-a33d-0430a410c7e7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cae5fbd3-54d4-4768-ba29-4d1db125bdc5"
        },
        "item": {
          "id": "30f4fb44-23d1-4f00-b31d-d2b5f36ad75b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7f24935f-5810-4777-99ba-82020474e61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c828e6-d3ba-4de6-9078-dcb25f56cfe0",
        "cursor": {
          "ref": "75da248c-ece6-492a-8379-57bd835132f1",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bff39524-cdde-412b-8dfb-77f9665aa167"
        },
        "item": {
          "id": "80c828e6-d3ba-4de6-9078-dcb25f56cfe0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0c314f60-fc86-4885-8e89-129e8fec9513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8735a169-c302-44f6-a341-e2b0d39f7581",
        "cursor": {
          "ref": "c816e0da-2bfb-48cf-bda1-0583766757d4",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6d9ba1d9-e993-4298-8471-51e2db9ffef8"
        },
        "item": {
          "id": "8735a169-c302-44f6-a341-e2b0d39f7581",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "21765863-7532-4079-b5c4-9b8c37f205c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5b62ff-d9ae-43ad-81b9-37f8769a3236",
        "cursor": {
          "ref": "ca819e05-8a31-4770-a1c8-096fe4fe66cb",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b55630d8-ca10-4f75-bc13-0497e929ac6e"
        },
        "item": {
          "id": "8c5b62ff-d9ae-43ad-81b9-37f8769a3236",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "70b82c06-61e1-4e6b-b587-c29caf051183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a860845-3853-4ff3-a2db-b09037ee4f7c",
        "cursor": {
          "ref": "ae6e2f8a-9b72-4ecf-bbb1-2564380e0967",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6a37dfba-eae4-4dc0-a252-e74e6eecec65"
        },
        "item": {
          "id": "9a860845-3853-4ff3-a2db-b09037ee4f7c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f44b0e22-dbef-4bb5-b27b-db58a0c00c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675f3146-3ef3-4234-879c-2230944aa2ef",
        "cursor": {
          "ref": "d412ec3f-bcec-49a4-9b58-424a0b42bc22",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ecbd85cc-3315-41a6-bd41-19c13fe5ec71"
        },
        "item": {
          "id": "675f3146-3ef3-4234-879c-2230944aa2ef",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7ef3e009-1e28-46b6-9bd1-e46214421e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55706c49-1505-4168-8fc3-45a7a972fccf",
        "cursor": {
          "ref": "fede8c7d-0b11-4b30-a4f9-98ba675e54e1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ade6e4a6-a035-4491-9678-51f7195382b2"
        },
        "item": {
          "id": "55706c49-1505-4168-8fc3-45a7a972fccf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fb9949b2-07d8-4847-8f54-193e7246eb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f80874-4ce8-44e9-adcb-14eb49466bea",
        "cursor": {
          "ref": "398ca6ae-b0ed-46e5-b04e-017ac1bcec3b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f47926a8-ec04-438c-8fa4-c24fc0970bd3"
        },
        "item": {
          "id": "46f80874-4ce8-44e9-adcb-14eb49466bea",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3a12a655-301f-4b49-ad06-e89714fc3dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb441c4-eb20-4df1-a0e6-806883f620c6",
        "cursor": {
          "ref": "2a8bee18-56e8-4afe-bd9b-c789070419ff",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "69b24527-7d38-4c97-8422-c15ca7e2dc66"
        },
        "item": {
          "id": "fcb441c4-eb20-4df1-a0e6-806883f620c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b87eecf4-2861-410c-8175-9fd31e23814a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb8cbc3-7605-4950-94f7-bdd3ade3352d",
        "cursor": {
          "ref": "f8683e63-542a-420e-9758-a64a352366d8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4844caca-9675-43de-90d1-c735b92718df"
        },
        "item": {
          "id": "cfb8cbc3-7605-4950-94f7-bdd3ade3352d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5fcbc1ab-3057-402d-9d3f-d99a904e6d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6703879f-8026-41b6-affa-dc05193fd399",
        "cursor": {
          "ref": "90587df4-1c63-40f2-a1eb-d7369d39d750",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "673561c7-7a38-462c-bc52-c1eac5441575"
        },
        "item": {
          "id": "6703879f-8026-41b6-affa-dc05193fd399",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3092d44c-a2ea-4dab-9701-b7390cb467ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26515c56-8b56-4523-abe3-b0c9abad9e09",
        "cursor": {
          "ref": "959fc3b3-9faf-4d57-84da-84ec161346ae",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9cd4ade3-bd36-4ef6-a8fc-3975cf2269ce"
        },
        "item": {
          "id": "26515c56-8b56-4523-abe3-b0c9abad9e09",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2122c5ee-88f5-4e8d-953e-fda52289e430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4702a96-50b5-4f26-8c1c-52f378293ae3",
        "cursor": {
          "ref": "2c7b5be5-13d7-41cc-b746-b46a5a827da4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "13827873-bd1d-4213-8c6c-458ce8e4136c"
        },
        "item": {
          "id": "e4702a96-50b5-4f26-8c1c-52f378293ae3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ce3feb42-b11c-45ec-9be3-2da2d9ce79f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662ecceb-ccff-4bce-a089-393630757f28",
        "cursor": {
          "ref": "272f4c64-0194-4ea7-aea3-82355dfd6c50",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "aa38532e-043b-4b97-ac1a-06dd642343b4"
        },
        "item": {
          "id": "662ecceb-ccff-4bce-a089-393630757f28",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7ee8d1fe-74ad-46a3-beff-f1991b2d911e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152fb56b-57c8-4701-80e4-2e98825d2f7b",
        "cursor": {
          "ref": "44ccb8b0-3c8e-4bf7-88d3-2da71a269404",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7cb13415-ccdc-4bd0-ab6e-7d46ea41ad6d"
        },
        "item": {
          "id": "152fb56b-57c8-4701-80e4-2e98825d2f7b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7de583a0-8ded-4f82-9684-43275062905d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a297fbfa-d3b0-461b-afad-146eb0e84ef1",
        "cursor": {
          "ref": "f92343cd-6979-4956-ab16-8527e2248fe4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d5a53c02-2eaa-4ef8-b400-ac76d0cd4a5f"
        },
        "item": {
          "id": "a297fbfa-d3b0-461b-afad-146eb0e84ef1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "10f1fd09-3ef5-4227-a446-84eaec915826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225e27be-3bdc-4c42-9894-b5bf1c66e531",
        "cursor": {
          "ref": "12616501-dfb5-49fa-bf6c-f3940e4004ab",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "54ccf349-0a02-4eb0-8d72-82c9d810756f"
        },
        "item": {
          "id": "225e27be-3bdc-4c42-9894-b5bf1c66e531",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a82349e9-50dc-4708-8749-9616d2260c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d376247-042d-4ce2-97ef-26e349856a89",
        "cursor": {
          "ref": "677fff67-6d57-41ff-8d69-dca6c000ecb9",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "90119b4f-ff72-41d2-a414-7cda1eb70119"
        },
        "item": {
          "id": "1d376247-042d-4ce2-97ef-26e349856a89",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d5021271-6d84-441e-b4a9-0f2044253d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f68197-636b-4b72-aabc-fa9b539545a9",
        "cursor": {
          "ref": "bc1c1c48-e9dc-412c-bce9-3caaf903bc62",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a654c5b3-daaf-4fc6-87f1-3bcd17cb2454"
        },
        "item": {
          "id": "68f68197-636b-4b72-aabc-fa9b539545a9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d43d2530-73c4-4f82-84ff-e47df2f446be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5500c0-3e6f-4df3-9b6f-810cc44caece",
        "cursor": {
          "ref": "d97cbf24-7bf5-4f67-8344-5552e9ef3665",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4d0cd2b0-9fd4-4170-80fb-a974fbf3b2f9"
        },
        "item": {
          "id": "8b5500c0-3e6f-4df3-9b6f-810cc44caece",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f5f4fee8-cc4c-49f8-82a1-1849d6fd8ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8469b61f-3a9a-4c41-8b91-b50ac65baf3d",
        "cursor": {
          "ref": "a0a9be8f-f8ce-4c48-8619-0ed959e8fe9a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9f470039-0f71-4e6c-8849-3e30af2cedd4"
        },
        "item": {
          "id": "8469b61f-3a9a-4c41-8b91-b50ac65baf3d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0a3b4a91-c5bc-46df-991f-c0e489a6e804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2830dd25-e317-4688-a125-b8c60c5603f9",
        "cursor": {
          "ref": "9d4b6975-6746-466a-8fde-10aa58962c8e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ec57afef-2f0b-4f49-ac1b-ae0b2b0314bf"
        },
        "item": {
          "id": "2830dd25-e317-4688-a125-b8c60c5603f9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e3e8ff9d-fd9f-4629-a81d-ba45bd62437c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319d0a80-b3d9-4112-9df2-e4d4ca6c9e47",
        "cursor": {
          "ref": "bf2b6952-333d-45dd-88d4-c022ee04f69a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "12aaca0c-e64f-446c-8816-cf340d0b5ca4"
        },
        "item": {
          "id": "319d0a80-b3d9-4112-9df2-e4d4ca6c9e47",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "94b96058-3fab-4777-8d76-200ba7f1e5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bece8fd-16c3-4309-9203-1895ac767c90",
        "cursor": {
          "ref": "48e71063-6c2f-4d99-a0e0-afcde0b8e51c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d9067b18-3918-4215-99aa-9acb5dd22f09"
        },
        "item": {
          "id": "1bece8fd-16c3-4309-9203-1895ac767c90",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f2d4d830-7898-4e3c-af50-9baff54e0514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e50031-5385-4e18-bd37-83257974713a",
        "cursor": {
          "ref": "55de7703-b8f2-4ce7-8cf2-6607850c3361",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "35d8691f-0334-4274-9300-c6522ec5d81a"
        },
        "item": {
          "id": "e5e50031-5385-4e18-bd37-83257974713a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cc80cb19-5272-49e6-bbc1-17402ef1385e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c16d9d2-570f-4733-bafd-749640a749c0",
        "cursor": {
          "ref": "aea05219-7ecb-4c17-ad12-6f870f5dbf68",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a53bddff-0493-4721-95d9-b61c0668cfaa"
        },
        "item": {
          "id": "5c16d9d2-570f-4733-bafd-749640a749c0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "51db7a35-d93e-485a-a8e9-0cef9bf778d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf08136a-a31c-4120-b4d8-b0dabde8a2b0",
        "cursor": {
          "ref": "40b4979d-404b-4026-a993-0413d27fd380",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4a17fb9c-20ec-4a7e-a957-0032512ae110"
        },
        "item": {
          "id": "bf08136a-a31c-4120-b4d8-b0dabde8a2b0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f6e8ae99-f412-4344-9662-3a7a83e93234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe704d5-d5c2-4f52-89cb-bfd5faaafdb4",
        "cursor": {
          "ref": "e5d113dc-aa28-4321-bf58-1f0a3a4e7a36",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1be317f5-b871-4878-adc1-2267e0e2823d"
        },
        "item": {
          "id": "5fe704d5-d5c2-4f52-89cb-bfd5faaafdb4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1982053c-a8a9-4cdd-8e23-cb4cb28c3ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21efb3d9-4bb6-4d43-9f36-dec0a4d0087b",
        "cursor": {
          "ref": "2a2b002e-fafc-43b4-9298-d28b706be80d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d9a3b426-4b92-46e2-abee-b22d06ae083b"
        },
        "item": {
          "id": "21efb3d9-4bb6-4d43-9f36-dec0a4d0087b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cce8757f-e8f0-44bf-8bc6-cf7c09385d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1be7b2c-4a3c-4fb1-b821-f936d1ea918f",
        "cursor": {
          "ref": "bd443baa-04b6-4bfb-9b13-ffc6b1103bf3",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c9fe628b-7fba-4692-8325-80b33608189a"
        },
        "item": {
          "id": "d1be7b2c-4a3c-4fb1-b821-f936d1ea918f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d083ab35-076a-4c7f-a4a6-fa4f031601b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2724df-c2c4-4dda-9728-bee5b38f31da",
        "cursor": {
          "ref": "d26e3d41-f214-4723-a2f8-d3c5e58e1b2b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2852590a-0fa5-4d5c-b57f-fdbcfad5fd59"
        },
        "item": {
          "id": "af2724df-c2c4-4dda-9728-bee5b38f31da",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4e9524f9-92e9-42f9-9355-e00929053478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d18ca8-873f-414b-9a43-911b7e910957",
        "cursor": {
          "ref": "1beaab00-de3e-4f44-883f-c0bfe8207743",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "61e068ad-01f0-4ae5-9ca3-56c99cd3800c"
        },
        "item": {
          "id": "46d18ca8-873f-414b-9a43-911b7e910957",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f13a34df-f1e4-4f7b-b7b5-f9b6f405eb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0a9c0e-086e-4825-b7c4-85e773d4fc34",
        "cursor": {
          "ref": "382f2ac5-9bd3-4d39-b692-50e663379b6e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0689b580-721b-4977-899e-db8c6831cb7f"
        },
        "item": {
          "id": "bd0a9c0e-086e-4825-b7c4-85e773d4fc34",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8a9588a-01c8-4312-8372-3de3e27af85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac10ab28-b913-439a-a8fe-32d06e93c24b",
        "cursor": {
          "ref": "a1766b1d-de52-473b-a6ab-1768b256ba61",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1030e4c7-c3b1-4f63-a22f-0a4f3c3de390"
        },
        "item": {
          "id": "ac10ab28-b913-439a-a8fe-32d06e93c24b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2a60382e-cc83-4a46-b058-c2cb6b452202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffa0491-1c0e-4571-b267-96384bc8a60b",
        "cursor": {
          "ref": "dca5d3cf-7c18-46b3-86aa-d9452341e9e5",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2fbf6a52-61be-4540-b9e1-e998efb48292"
        },
        "item": {
          "id": "0ffa0491-1c0e-4571-b267-96384bc8a60b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7f35dec5-4a58-4ce9-a4e0-7d5dafa6054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8541086-216e-41ec-8c43-56e94f557a09",
        "cursor": {
          "ref": "7e24047b-010d-49e2-a35b-bf8ca4b97c30",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3cac3b51-414f-4dc2-846e-6581cf4f73fe"
        },
        "item": {
          "id": "a8541086-216e-41ec-8c43-56e94f557a09",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9dad2c0c-67bb-4b4c-947a-ad0de0aff2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cfe269-6edd-48f2-a751-dafc6dc060b6",
        "cursor": {
          "ref": "d78c2acf-e55e-4ecc-a56d-d18db3389ee0",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "67a319de-7f44-407c-a05c-cdc2360b039d"
        },
        "item": {
          "id": "95cfe269-6edd-48f2-a751-dafc6dc060b6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "21f742e3-19c5-41e7-bfe1-0c7c7ed7f0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ed2376-6efc-49c8-ab48-26dd85641ee5",
        "cursor": {
          "ref": "e4654ac6-c99a-41ad-9b06-6ac3c9914690",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "880e9304-8951-4adc-b4a1-23ba6457df62"
        },
        "item": {
          "id": "67ed2376-6efc-49c8-ab48-26dd85641ee5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6168516-692d-4ac8-b819-d18be2df4d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86bf600-9065-4383-9ef1-233c91e05619",
        "cursor": {
          "ref": "0d1b4f0f-294e-4716-bb2f-079085dc668c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71fe337e-5c65-48c1-b70f-9ab625c8fbc0"
        },
        "item": {
          "id": "a86bf600-9065-4383-9ef1-233c91e05619",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "058e8572-b5f1-4327-9f48-67346c28748c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcb618b-c3c1-432f-a096-32273b258da7",
        "cursor": {
          "ref": "b3a541b5-4b8a-4565-917b-0c639f64a683",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "90e0b4c8-7624-46ff-a4c8-73c7314ff13a"
        },
        "item": {
          "id": "adcb618b-c3c1-432f-a096-32273b258da7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e7efad84-12fb-45da-a869-c0d66a58f6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d49d2ba-73b0-4738-bcb0-0b1249ddb57a",
        "cursor": {
          "ref": "51de22ac-838b-4e53-8f0c-deb200ebf03a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bfc48bcd-0d8e-4fc8-af6d-3314c4ad67c1"
        },
        "item": {
          "id": "6d49d2ba-73b0-4738-bcb0-0b1249ddb57a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "605d9ab7-7bda-4107-8502-4f0fc3cd3896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbba848-191e-4f6d-8b63-d4eb2a37170f",
        "cursor": {
          "ref": "198c7071-333e-4b9b-b895-52de585261a7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0c9a4e30-a5d3-4941-ab1c-11aec34b804c"
        },
        "item": {
          "id": "9bbba848-191e-4f6d-8b63-d4eb2a37170f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "953da048-7746-451e-b5a7-3ed1d982c25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc2f244-c03e-4efe-9740-09d38c38c130",
        "cursor": {
          "ref": "27c5428a-d733-449c-a7e1-f881350fadf3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e34770ef-932b-448c-b0da-d6ee382b3115"
        },
        "item": {
          "id": "cbc2f244-c03e-4efe-9740-09d38c38c130",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3d5d960f-da6d-4066-9e4b-1653ecdf0b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c996d7-58a4-4295-95ef-83986d948c3a",
        "cursor": {
          "ref": "6fefc825-1a9b-45d6-a707-52031cc2d26d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d3617a55-1f30-4751-8319-3154768e07c7"
        },
        "item": {
          "id": "c1c996d7-58a4-4295-95ef-83986d948c3a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "32915fd6-912b-4a8d-8702-a400f439693b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85a4e90-77fa-4eba-a822-bf64f25039ae",
        "cursor": {
          "ref": "1bbb651d-fa15-48cd-a86b-3c4bc90afa23",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9ca08402-cedf-4082-ad4f-a4bbde645bcf"
        },
        "item": {
          "id": "a85a4e90-77fa-4eba-a822-bf64f25039ae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "74af600e-9691-41a8-b008-b655764175bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07012772-efaf-419b-baac-9f44f4f87022",
        "cursor": {
          "ref": "f096bfc4-8726-4cfb-9c42-71cf97fb5c5b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6c7b2890-cdbd-4d49-859f-abc2455f6b6e"
        },
        "item": {
          "id": "07012772-efaf-419b-baac-9f44f4f87022",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c3e4cdab-48d0-46d5-9663-5176917a2194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f42c3d0-8b39-481e-a929-fbafc4884d44",
        "cursor": {
          "ref": "806a8683-5e80-42dc-9c73-3aaf5fe8141e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5fea0d01-5811-4005-9ec0-828be76a43b5"
        },
        "item": {
          "id": "6f42c3d0-8b39-481e-a929-fbafc4884d44",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a8af70a4-7365-4ee5-9ac0-6fec2ecd3f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c63bd31-bb47-46d5-8797-c693797e560f",
        "cursor": {
          "ref": "336b1c1e-e560-4e6d-a1bb-94b3ef866748",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "80eb05b8-afe9-4739-ab35-1427117a42e0"
        },
        "item": {
          "id": "3c63bd31-bb47-46d5-8797-c693797e560f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "719d9095-f49e-463b-ace3-4848c2e81327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15e5aa8-2f10-4f43-837f-d8307243a767",
        "cursor": {
          "ref": "c3dcfd34-f1a4-4fc9-b770-2dc239c954e9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b144f6d1-c944-4877-9723-66d8a921b665"
        },
        "item": {
          "id": "f15e5aa8-2f10-4f43-837f-d8307243a767",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c3455eaa-b865-4d8d-84e3-1f165a9b86e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9b6319-9691-467b-8432-c5cdb5a48f95",
        "cursor": {
          "ref": "c78f8db5-50f9-4cc2-ba25-24a4f7064d69",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "63c22b14-398d-44fc-90da-3503428f4b8a"
        },
        "item": {
          "id": "ae9b6319-9691-467b-8432-c5cdb5a48f95",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8def9f45-1646-48bf-88c4-96b226b6017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a89b398-4e27-4a8a-95a5-19b948365526",
        "cursor": {
          "ref": "31c68845-6a10-459a-a35e-86afee0bcb0c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4a6d2b23-a381-494c-ad4b-b2b9acc1997e"
        },
        "item": {
          "id": "9a89b398-4e27-4a8a-95a5-19b948365526",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "95902d94-f71a-46bf-ae48-8a93172eeabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0645abf5-7e17-42a8-acfb-6e9d95f549e4",
        "cursor": {
          "ref": "c28f4b6e-fbe8-41b8-b916-9ce1cef4d170",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0786478e-d603-4949-a10f-07782a6a431e"
        },
        "item": {
          "id": "0645abf5-7e17-42a8-acfb-6e9d95f549e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3a8217dd-1ba6-426d-b57b-eb25ccfc7ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ffce2e-52aa-4fd4-af57-2abc064bb2e9",
        "cursor": {
          "ref": "8390ae19-53e0-40dd-a679-b408e46bdbc0",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "36c3fc50-e5ff-4440-8fc4-3e5efede85c0"
        },
        "item": {
          "id": "e2ffce2e-52aa-4fd4-af57-2abc064bb2e9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6d9ed4d2-6256-4274-8859-c61ce60093f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7b6c86-2e9d-4b03-ab31-4f3278028c14",
        "cursor": {
          "ref": "73e88f95-1689-4b76-8ce0-e275ad308e6a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4e2cb15c-6ad1-486e-bd85-cb299478bc07"
        },
        "item": {
          "id": "3e7b6c86-2e9d-4b03-ab31-4f3278028c14",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7b6de22f-089f-4fda-ab30-8873f69dc0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252b7f75-660f-4486-80d1-ccc6d5d0071c",
        "cursor": {
          "ref": "e8d0bb0a-ec75-438d-9d68-91894e9438ce",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ade2d29b-be8d-4e23-b34c-5a3a6084299d"
        },
        "item": {
          "id": "252b7f75-660f-4486-80d1-ccc6d5d0071c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4dc10a0e-f7d9-4b15-b4a0-bde6cc54919d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc6055c-8ded-4b96-a1de-92b4dbd22e4d",
        "cursor": {
          "ref": "a0eec501-9a40-45c3-bac2-f7b5a3059afb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "754524cf-dbcc-48e4-a8e0-8520b1f273ca"
        },
        "item": {
          "id": "ccc6055c-8ded-4b96-a1de-92b4dbd22e4d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ec7f318f-5db5-44cf-b51e-c526f60dcb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f140e57b-a62c-4a06-bdf7-c17799dd0f37",
        "cursor": {
          "ref": "ff18bb73-237f-4782-8def-628b6394b4db",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8c85fe12-0d32-426d-baac-cf51adba92d4"
        },
        "item": {
          "id": "f140e57b-a62c-4a06-bdf7-c17799dd0f37",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8cba525a-9c56-4eea-afd6-bbe13af17619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beff688-81f1-4f9c-b796-cc55b02ff0e8",
        "cursor": {
          "ref": "be97dbb8-3b0d-4d82-ac78-98a835b8650f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "43b36156-3dbc-4400-9233-b4dd52261bfd"
        },
        "item": {
          "id": "1beff688-81f1-4f9c-b796-cc55b02ff0e8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f18f80bd-3d75-4ffe-b692-5bb5dbe40a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a216371-6e36-4031-baf3-675a02642e6d",
        "cursor": {
          "ref": "3ed2aa31-d408-4e65-8a34-e5ef928c906e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bbb04b57-2df2-452e-86e8-80d3ff69ba79"
        },
        "item": {
          "id": "1a216371-6e36-4031-baf3-675a02642e6d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0fbc9c9f-b6e0-4da7-8c33-985a6ef81866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76df5c31-ce21-4d7a-a0db-1057e3e69f5c",
        "cursor": {
          "ref": "130a6778-77d1-4d59-a7a5-f67ed5e31b57",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "281bd3aa-a81c-4962-a9d7-a4c36badbbcd"
        },
        "item": {
          "id": "76df5c31-ce21-4d7a-a0db-1057e3e69f5c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "360ff40b-4992-41e0-aaa2-9dec75284fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6feb27c-cde4-437c-aa22-86edf7928871",
        "cursor": {
          "ref": "6b10857c-904f-4ed5-8f14-86423abe1a80",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7412ffe8-adf8-4894-9c13-4b0d3523247d"
        },
        "item": {
          "id": "d6feb27c-cde4-437c-aa22-86edf7928871",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7db94129-d71f-4193-94ef-30c067d27773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3edc927-4609-42aa-b43e-78e5d3567ef2",
        "cursor": {
          "ref": "df5f8403-87de-4c02-85ba-1407fe0a4374",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a39a80ed-81b6-45b7-913e-c9b2d5198d33"
        },
        "item": {
          "id": "d3edc927-4609-42aa-b43e-78e5d3567ef2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c33d756a-ebf2-418b-9e21-a81873cd4665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093b5a94-5957-47b9-911a-589ff63c1775",
        "cursor": {
          "ref": "7d3c546f-68e1-4b65-8ce1-a52b10c45ed2",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5a8f532e-3259-4e4d-832f-8e1c524451e4"
        },
        "item": {
          "id": "093b5a94-5957-47b9-911a-589ff63c1775",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b5abab3a-5c64-44c1-a6d6-f12b0fe19508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf4e311-c703-4dce-bb11-a14677e83714",
        "cursor": {
          "ref": "e573a0b3-0e36-4e2d-b11f-8cb808a28258",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c68b44d5-da6d-4631-801b-eeec4f7b677e"
        },
        "item": {
          "id": "baf4e311-c703-4dce-bb11-a14677e83714",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4f3061e5-e987-4bec-ae66-ccbc7de875b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edfa18d-bb7d-4cea-8c2c-8774375735bf",
        "cursor": {
          "ref": "ee71cfba-6c8e-4ca0-943e-1ba8d43e3387",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "60c320d0-fb33-4d0a-978e-2f137b7b4a26"
        },
        "item": {
          "id": "2edfa18d-bb7d-4cea-8c2c-8774375735bf",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "680e23b4-cb34-45d2-a9a1-6b123d820510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c01b239-82b1-4aa5-a5e5-b5697c28c5c9",
        "cursor": {
          "ref": "f0b9717a-42e2-4b66-b776-6a8c694f85f0",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b9634c40-04ea-4fc4-bedf-45f4b5f80ac3"
        },
        "item": {
          "id": "5c01b239-82b1-4aa5-a5e5-b5697c28c5c9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f9284de5-ef69-49a8-937e-40adbf6edf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96a1a5d-e042-40b7-bdfa-2ff23d999fee",
        "cursor": {
          "ref": "e82ee22d-457f-42ef-81be-0f52a99b86ef",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "18e2da51-786a-42fe-8dfe-6019a13228c7"
        },
        "item": {
          "id": "a96a1a5d-e042-40b7-bdfa-2ff23d999fee",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "476d20d6-70fc-4332-b9a0-b909fe67c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a09e97-759d-44c9-9e8f-ab03203c7170",
        "cursor": {
          "ref": "5171996d-90c2-44e4-963d-37a2863cfa33",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5e061afc-5174-4563-b7bf-c84da74e107c"
        },
        "item": {
          "id": "97a09e97-759d-44c9-9e8f-ab03203c7170",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8350fd7d-e932-4af7-8267-9b09eca2b6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c43916-5922-4a95-8700-a374fa90c636",
        "cursor": {
          "ref": "e6ce051a-ab43-414c-b4ed-514e9170727c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "33e0f3a3-670e-429b-b950-066eaed9aac0"
        },
        "item": {
          "id": "31c43916-5922-4a95-8700-a374fa90c636",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "067e7347-77a7-47e8-a0fa-1c6ade2a357e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3409f89-f392-4912-b770-734a1eeff382",
        "cursor": {
          "ref": "27a24acb-1cfa-46ab-b4ca-38a6ab27ed8e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "df3ad33e-66b3-43a3-b2b1-5cb215ac864f"
        },
        "item": {
          "id": "a3409f89-f392-4912-b770-734a1eeff382",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c824bdf8-6159-40cb-bb9e-6ee4a152786e",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc36ece-79a1-427a-a000-e08d67bc2dba",
        "cursor": {
          "ref": "ee1406bc-acd7-464b-b84a-cf95dbde0423",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a9261c52-68bd-410d-8ade-254d2390dda3"
        },
        "item": {
          "id": "cdc36ece-79a1-427a-a000-e08d67bc2dba",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d36ae402-8869-4fc5-9ea0-d732398c54ab",
          "status": "OK",
          "code": 200,
          "responseTime": 2026,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a341e1f7-2d3f-492f-a15f-4696d0f26208",
        "cursor": {
          "ref": "c4a6a440-5c4e-4052-af92-d05651a79597",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b198061f-eebe-4b72-9410-90ebaa92b5d7"
        },
        "item": {
          "id": "a341e1f7-2d3f-492f-a15f-4696d0f26208",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d1a37639-08df-4c89-8605-00ba0dbe08ed",
          "status": "OK",
          "code": 200,
          "responseTime": 2392,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fff3fd-5a3f-4119-9ce6-60e20b3263b1",
        "cursor": {
          "ref": "40b68b82-6b52-46c6-b8c0-156ee4a3be0b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "afdf7be4-bb61-4898-9315-6075a7144f1b"
        },
        "item": {
          "id": "64fff3fd-5a3f-4119-9ce6-60e20b3263b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "119fe007-7684-4cae-b1a0-1653374bde6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fff3fd-5a3f-4119-9ce6-60e20b3263b1",
        "cursor": {
          "ref": "40b68b82-6b52-46c6-b8c0-156ee4a3be0b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "afdf7be4-bb61-4898-9315-6075a7144f1b"
        },
        "item": {
          "id": "64fff3fd-5a3f-4119-9ce6-60e20b3263b1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "119fe007-7684-4cae-b1a0-1653374bde6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6261fd32-b8b6-4928-818b-1d2657b59160",
        "cursor": {
          "ref": "7f35adeb-ae97-4d2b-9e57-18bc6c9aa3c1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "241f3526-152b-4fce-9a48-7717adefd607"
        },
        "item": {
          "id": "6261fd32-b8b6-4928-818b-1d2657b59160",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1c9e3ee3-884a-4ca0-9331-313c6c4bfbef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5435082-ebbc-4579-be01-a63e13b6cf07",
        "cursor": {
          "ref": "b09caceb-b195-49f5-b36b-1f9d80124464",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3a9c3cf1-3b48-4b3b-8e18-6ec32fcb1ce2"
        },
        "item": {
          "id": "d5435082-ebbc-4579-be01-a63e13b6cf07",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "047c612b-4bb9-4dec-b145-571b1aa9b734",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}