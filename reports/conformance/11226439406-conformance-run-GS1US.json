{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f840150c-b7cc-4da4-a45a-79d86b2c0eb8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "42f63c5a-6d44-4ff5-bcfb-7db57555eb78",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3346cd66-cd12-42db-a6a9-83fc6a71ebc6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25ec8a41-4583-4847-99f8-5a7f53e234bf"
                }
              }
            ]
          },
          {
            "id": "a09107b3-3cd0-4774-9ecd-02d9f437e921",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6edcd5cc-fae3-4263-8078-92f268567adf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "502b80a2-5477-47fe-9c2c-ed4872be261a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6f6db6b5-1c2f-46cd-af9e-77c357efa444",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f2102ae0-950c-4f4c-ac94-92ea75a3be73",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44d2bb99-b1ba-487a-af8e-fc1cb83683b4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcf0bdad-5c01-429d-bbf2-8f6146aee45f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02307ac1-e26c-447b-ac3c-c11f192ba23c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08d39c68-b932-45c0-aec8-5d0ee632db91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "772625ed-542c-4028-93aa-ee1ff596d8af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b59924d-adbc-4dc5-9197-ea3a06d16053",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3d00dfd-6c8e-41f5-a165-68e019477405"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88c9e781-8e27-4f48-b347-7d18104960ed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "261ce11f-52db-4d67-af0e-1d075a0015e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f6da540-f227-4f25-9c33-6ff488cf6289",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a68b7af-a7c5-4db9-8116-1259d471176a"
            }
          }
        ]
      },
      {
        "id": "83205944-2c38-402b-8cc7-2f58945ecc1a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0d992e73-2018-4cca-bd4a-0963e38f6fae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c3f0d2f-4508-4b52-b2bd-eab46eb747ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "310b5094-d773-4f89-af3a-5e50a083bf07",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcd91ab-0d1c-4cd5-94e0-0d10d19dfe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b652345-4130-4da3-9c9a-597a4d0cb0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c168e006-a683-4005-a657-dad37e075c23",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6265dae9-edc1-4e4c-b39f-f2c58cfc981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef5d903c-5192-41ae-b601-41357c40abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2405b5-7170-4301-9d36-5ac80cf9f4f4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ef6c3a-82a6-4241-8cce-f05dae3837b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "898a0de0-6c64-4692-9cfb-c3784cc37f7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "023b8605-85e3-4ec6-9400-061eb9ad5394",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f06ecdb-72c1-4dfb-b9b8-9c732bb5d9d0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597b61b7-e91b-4d9d-89c0-66c43b73c38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1a78f9e-1ed0-4ce6-81fe-3d398c6ac96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e3cfd8-dd69-42b3-b5d2-ae2b2ecdbf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02539dd-75f4-495c-bd8e-f4b86211ab95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b185a147-66b1-42c6-b566-4b2c4df42b6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60f40201-c5d3-459f-95e5-f57794fc10ae",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73580842-1e1c-4916-9088-844fd2506915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8b6b0930-3f2d-499d-9813-7ba004999c10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03e8b372-ceca-4527-be01-e625dab57f9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "668723a2-2785-496a-be47-9c7df6229695"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d83dabad-731d-45bd-8a75-bf5d0232f7e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c526f57-f0b5-4db6-987a-0421e8a715ef"
            }
          }
        ]
      },
      {
        "id": "eaec607d-7bab-44c2-8554-c791e628296a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b7990bee-4104-4500-9c85-99fa6b2e6327",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba1277af-3e11-420c-883d-4914168a1ecc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "39ae912b-0cb3-461b-9292-bf8805b14b9c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb876b4b-91f7-4bc1-9298-98aa0eb2a4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacd0e4e-dbff-4c9a-98a8-c3875465aefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a637c1e-3747-49a3-ae41-944128b1f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07d50f3b-f6b5-45c3-a6b0-903bcc805373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3b24f0-f034-4f37-b9d0-424258219f30",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12aebad6-ef47-4478-a51e-325f80ee8965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ff7b37-2699-4ae5-b889-eaafe840c4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bd935e-85bd-43e5-854f-22a224426efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16f41512-a942-4d66-b1b7-2a52203f6255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af55d56-1f7d-47bb-bc03-9d02153e9306",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec9b574-87c9-49e1-8b06-8b733429d961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a4ba49-4e8b-423c-910d-3399cc45fba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88af4ea3-fede-47a8-8725-a9f2555c9496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "302afe9b-fe8e-4c6b-9afc-af740d40c3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbecd5c-f18e-4b38-b15f-cfb1af7a174f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aa661c-8cc6-4a9e-a524-983982bdbe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f502047a-d20a-48c4-9ddc-2f7a1e5639bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5683434b-3bb6-4c66-8edf-39b93bd6c578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29571e28-51d7-48d0-88b9-d2187eafe7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce19741-c6cb-42bd-a122-0418ec38adaf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18ae62e-8956-4040-9b68-296ca5c254b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5302f523-d625-47a7-9d80-acc27fd4a684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613a8468-b15e-48ab-9d8d-ff5f08287c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b9f36b0-3483-4289-a919-c3ec99a334d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770530ec-62c8-48d1-89d5-9288961ed323",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e98f55-d7fc-4cb5-b81c-4d93bf80b29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f99feb-183e-4ab2-b3ec-d9ad59a16cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a1226-b8ce-4f7e-923b-1d4499e835c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84c5e46f-8f31-4ad4-9b06-54f142dc734a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31db064-2a93-439d-b44c-fe2be6bf81f0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b59de4-0a4d-45cd-86e9-63b06b124f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0717fb-2d42-4fa4-8275-466c06db9647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcfcba9-4e29-4408-b08f-961e6e969278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d9e41f2-2f30-41a5-8e2f-7e481dbc207c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec0031c-5fc9-45ec-9895-0385da9e24e6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b2f0e1-5009-4c89-9e72-4f8a287e2a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83672098-f9f1-4d2d-9130-48f951425642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d130a2e2-b4fd-44ec-afbe-1c0b6d881ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4baa4c3-ccbb-4c8e-a07b-40b3e0c941c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6554f0dc-78d0-4720-a524-41b829d98c29",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b994e21-c07f-4972-9421-68a1071ab452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2ed280-9490-4409-a5b6-9df020fa0130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b8b871-d0b0-4272-bf3a-5ec921d1cdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40135b97-aef8-40ec-9039-59355569a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29bda1d-b872-4c2b-94a3-c5f46c1d132b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c953d7-69c0-479a-bddf-9c161173372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1b92fb-f27d-4eca-b7a8-6c075cf5891c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f908e4-cc7f-4a79-a3ea-6ca9cac19088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "015a08bd-f485-4628-aefe-f36490c27dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6588c7-96ea-49d1-b4f9-0866e49d1aa3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae816bb-d9d4-4514-9668-5e4857265bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f33ae94-2298-4166-aa1e-ea7d81601554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1839687d-ef60-413f-9c4b-9153e130f595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a57498e2-d011-4a3e-942d-25c8579c36c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b81752-2cf5-41a3-aaca-2366efe7056b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3725215-d936-4079-acdd-85d8710651a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12482c97-1b8a-4f31-a53d-b7e9dfdab471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709f050c-49b2-400c-8350-0f4491fe7cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "053f20c5-1624-49dd-88b3-168c09ee7990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b630bc7-1345-4095-9f41-6dbc3b7df0a2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48775b3f-edab-4bb0-9798-665d7bc2e2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa143918-4dea-4f09-ae55-9b7de0ec0626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c287588-a512-4996-af1e-8d635b3709ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f2fdfc6-48b3-4b83-a362-522d1901aeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd537085-d96d-41f7-94aa-100e662bd724",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd497abb-053c-4b49-9238-7ae453736d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec0d44a-39fa-4126-a839-e52bdd1c36a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e45da7e-caf1-40f3-8277-aff916392539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02d6f329-e877-4cb4-a0e7-70acba2ccede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aea0b03-ccaa-486e-ac99-ca325be1fdf4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8067eed6-518a-43af-8816-15673544e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e69a23-8f6f-4a0f-a007-f4149b980ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb270d10-b798-46a2-a8ac-88b6b86879cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42322df7-8e91-4976-8db9-a8e296c62ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c097a9-c05d-47b3-aa3b-d0aa7816b642",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d4a0f7-6866-43d0-8552-892e4092ed68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f013bc-d2d1-44f1-b546-46cb51496e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6e1b8f-b63d-4201-b5d3-f5fd825a7b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d91af50e-6df0-4b7c-ad78-5b739dcfc8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3826c0a3-2314-40e6-b276-681afdea08fd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d976314-06e0-43a0-bda7-2ddae8b5e82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d022e898-1b97-4531-ad59-53e527e5fb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e63049-e488-4686-b66e-09724ac2f62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11cb19d2-5b33-4495-9ba2-11a228f760b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36d8555-ce17-4b87-9d33-83364e0d05ea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb0c1e7-bd27-4850-a2d0-391ffb0537b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e116f2de-2c86-403a-8051-c8f2b7907123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31512ec-edb4-4594-9781-3b1cd3af2b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ca7e2c-d7e3-4cd8-a23a-36c3415c6ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8d56f5-1f7e-4459-8e86-049d7081e0d7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b60bdae-9fde-4cc7-b961-bc6f09e70279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba93af05-3f29-449b-8416-207b75a4b831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6032d81f-7a8f-46fc-aea7-bf77dac7f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f62f5e03-9e5c-4d1c-947f-021669bcdc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc077455-8df2-45d5-8d16-3f9999392e09",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b621e7d-2cac-480e-8312-8ebcd77de060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e44b9a-89a7-467f-926f-c3d75bbeb253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39750890-7a7d-43c9-9cb4-ef0e77830dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83870957-af2e-4e10-a862-087befd45a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9929d875-e29a-410b-ad19-9476672129f3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6eb6dc-623a-4467-9e2b-fb31eaf6e4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1b3c42-58f4-4c2d-8e0c-3d65618f60df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06b4a44-9d35-46f8-9757-0b367a676cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5e5316-b72b-44ca-a822-c2bc457c58ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71d6670-36bb-4ed8-b44e-1351f1cad9ac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50017abd-b84d-48f1-affc-5621d5043d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd699e1-a513-4b8f-91c6-da8073e9ce21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56fd00a-2cdf-4c50-95e8-d495473cfd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e8c932-22b9-450d-8fcc-c2fbccf2a7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0b1162-1c43-495b-9b8b-a8feda95af95",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a766aa0c-2676-4cac-add8-b7a7ecc159ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fd6fd1-92ae-4a5e-9743-a974edbdd530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9154d424-2a52-4e43-9700-333756300ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49c8d429-3db7-4bf9-9abf-18546288a948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd704707-f7b5-4e85-a8eb-0e773064f14f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217a2c3f-4991-481c-baa4-1c35d166ddf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4eaf1e-0ce2-4a82-a080-c9eb269d8976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1374fcb5-882f-44d8-9f91-ea1c2b3c4a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "40849ab0-53ae-49f3-982f-009b7fc4f12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffd5400-887d-4361-ac64-126a1f7002f2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0614df59-d830-4bf1-8194-c3eeff8cd8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ca2ec6-ff12-4552-90c5-799f98708a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fb8b98-a5e4-4bc5-93be-12cd4780ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9fd7f3-d5d2-4068-9190-1916e616d351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6907670-061a-4fb7-ad4f-cb4b918e9f56",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f55ba44-bc54-438f-b119-4b1b44dcbfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ac3ecb-29f2-4969-b8df-49285819a7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7687205e-5030-402e-bbb7-34d1481b6827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71005fbf-aa9d-42d4-8e93-7d9dbc744f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06e571a-b59e-415b-933d-9c5c4e0f01e5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c457ce2a-f667-4d62-b7b6-81f1be0da1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024cfdf4-4045-43a2-9416-6fdc213ce032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9c412a-cd8c-43d8-a00d-f080d13c5b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04c2ad6-62a8-40d1-ad8a-cc8bbed964e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee6eae2-4f82-4c98-bb06-e95f63d5d331",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d843e4-2765-4a41-90c7-30ff86e60c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4d7f3f-0882-47c1-8026-1ae687cf7f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44810337-a6c8-4542-a007-949c8c84060b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c788e57d-2a60-4394-b039-ccf7d00be879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c4b567-d8e2-41c1-a250-840db538531c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c6151a-1fcf-48fc-8365-66ff4e6ed7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5416a8d-faa2-424d-8b61-2c4dd9860442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f7fa7a-9a27-49ba-99ce-1d6729af04c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef309903-6735-4503-8044-8a3c90b00c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb097fe-fe60-4273-8090-93ab9201a1a7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c3a36c-3c94-414e-b03e-83d02f8ef892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554e9a10-554e-4f24-be2d-9dde61eab527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98d64ba-fbd2-4309-9bc9-a1e60d47f382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "089cec84-e72f-4295-8b4f-b14890cf9a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cdf2d1-f0ab-4997-8ea3-32c0faeb3c1c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d319f4f-e3c0-42f2-ba1b-17f64b276551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c52dbe-b1f1-47f2-90e3-e5af6de0b44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066b72bc-113a-4ccf-8956-999127cd0d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa0c4b2-a641-466c-82ad-a2a6fda637c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffa4bbd-0401-47d8-8883-4dbfc9f3339a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40bef17-99a1-40e0-a253-26ffccaabbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b11fe3-1c95-4ba9-889c-59f3b39bd859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ce35f1-477d-4eed-a8ba-99998474b14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a50784-3f44-48bb-97f9-09edb7d7f424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38896f3c-5341-409c-8d18-0db131f38d29",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe9fe3c-d459-46e5-a155-fe2bcac28c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cffccde-db27-48a3-aca2-a0535c85e384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b1287c-5c5f-4666-866a-4bcb3291abce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "838b1d54-54f2-42ae-8672-e8fd62a026b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676b83f9-f8e3-433d-b8e3-113a1613a6bb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84acf2a9-a9b0-4eff-bf3c-7b98b43a9af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da5c8a6-e070-48eb-8137-54336ad43744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da58eb3-3d55-467e-b187-c397d64285aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b02554-d30a-4adc-8929-4189e32404bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b01473-92de-4828-a6e8-824f5effa8b6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629b809b-02a1-4875-932a-d60046679634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c02cd1a-24f5-4caa-b573-5cf4d4206f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b2ad97-99fd-4c9d-914c-7485192de413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0ad34d-14f0-4691-b05b-e57457612f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f241385-40b6-4ea0-a7e1-ff260739deb4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de25063-6c38-45f6-acbd-61001cfacaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad3e9c60-a463-4867-a66e-7e44b0c32465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f3baf3-bbfa-4af0-9610-efde9155f565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8db7799a-c879-4ec3-9c59-ff20ccd4dca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb661ad-8a76-4986-8ec1-4f9754746ec6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b34196-3405-4c14-86e4-5e0dae0b6d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63196cb8-f1b2-4b55-a42c-f95d5a867d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201938bf-5551-4e0b-bccb-2f7358fc8496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8e4608-6c7b-4b8d-80a6-4b62b0c4f348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807d6e68-cd40-4263-aaa0-05184c672129",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5c385a-ce9d-4fb7-9792-087704dfaf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef116d8-6936-4871-a4ef-673027002cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd76101b-1792-4db0-9e4e-705754a1e977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "583c262b-8a58-45d4-a676-f66d95d83473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1644034-4da3-4a4f-a23e-86423d2e3296",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7085b48a-168a-4ade-90b6-c1a16b0d33b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929819f3-6782-4a57-ac5e-365e52c0a8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4b5524-d362-4990-9f67-123c99af1619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09517e8b-1d28-47f7-9a64-6959251d01d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d124e31-bb80-4b45-bed5-06acf1d94c6a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037272c2-ccbd-4399-ac10-0d50b897b115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c551cd-8c8b-4217-aff1-701fd1320ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1be05c9-6446-47b5-93f9-521bded55646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "acc790f7-d410-4076-a870-e1f65dca488a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9661774-0968-4091-abf6-7d4370ebc23b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c383c787-b4e3-45bd-9383-25aad4a8970f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd231842-9736-4ff9-a5d0-54b78bbcbf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866e8f3a-047b-460e-9b6d-4406f0b1088b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16766c1b-7e6e-4c4f-8b90-2d6dfd9f8f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0514de24-db17-479a-8ab8-f9a50a47eb9b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b284de6e-b9af-4faa-bfa0-c409a2a493e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe62c5f-a304-4863-a904-5b87a7774c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5873d552-5e87-49aa-b7f0-5bdfc0de1b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3233f6-bc96-44c9-90a0-b4bc241fa087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a049bb-298c-45f0-b7cf-de3c5e1701b3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e657b5-0829-4707-93ac-a2a3a8ed01ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9597b7b6-52a2-4219-bced-95083e990317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a59b76d-097f-439d-991a-f4c9f966206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "539b6336-bbad-47c3-b2fb-6883f3070e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d3af1c-20a6-4990-b8a0-a2a49f9ba869",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76194f9-98d8-425d-9d9e-590c6ed88924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea242c6f-eddf-4cdf-bb07-374ce027076a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6ba9cb-be4a-4eaf-b447-0334bac96d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "56aa2310-4964-4813-8474-6d5aa52dea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a875c5f-a505-4a40-aaff-fd8ee8799924",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bb04a8-8be0-4eeb-a21a-0c489e3d384f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1610bf-e8bc-4c5d-9b6b-d38201a13519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a9a999-8b1e-4a32-aa41-e1d9530e6692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1032d1ce-280f-42b3-9249-767171f7f026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb703bd-8321-4274-bc22-3c823f3aade8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b00f98-8c5e-46f4-bc16-62e56e97e293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84ec400-0ec2-4001-9b3e-a93484a18286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb000add-62ed-4972-9499-d3a871a19915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45de8ef3-1119-4722-b3fb-1644972fb085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b113cc17-b90f-4ae2-9c67-849ce6c61ea7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd5b4a6-68d7-4b44-984e-855359e0e68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcc6409-ddde-4101-96b7-1867dc647f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6148f4-a508-4d6a-adc0-23782ee558a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d713c1-9bf1-4644-ba93-bb21e2316f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a240860-f27a-4c80-abc0-73051c468ef0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e33f4e-4ff9-4f96-9a6f-7ae69f7d55c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afcc66a-8f2b-4c74-8557-c79a55ea6b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6e6cf2-ec3c-4795-8739-252c839c40a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a1e409-2768-40be-b3d7-9e1459e217b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583ae55d-9a19-4d9f-bff6-1665324403ef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723808a9-c912-4bcc-8ba4-6cbdcaf22d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4976ac-3888-4528-9c35-663f24ebe09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be71c1b1-3a7f-451d-a5c8-a0a88afd779d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2adf911-037a-4530-b950-90f5a733ac94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e454af0-8078-47cc-8054-2b220f06ac48",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef312aa7-1fcc-428f-8a35-57c2997996d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bb5ddc-7bc5-4160-b0cb-641bc2bce2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ced5e1-9b9c-4824-ad79-2068a5b64a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a37d68-3fc4-40c7-91e8-01afcf31c7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ea3bb1-373b-4b5e-a673-c439f1ce9441",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c1b041-a611-48fa-a691-44cc27bf8772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa88aab-60f0-4c2f-bc78-faee21f73b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4b44f-8d85-4227-b4b3-bd72df1b2929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff574d0-ca9f-4c27-b8df-523dd3c39fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6182032e-601a-4652-917f-8f1540c4b73c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bc527e-cb88-486c-ae4d-626c2868e1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e874f8a5-dfd5-42fa-8e3b-38f1e844a777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63dc1dc-4efd-4cb9-a6ff-96421b977c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1146d81b-922e-4f40-a999-77ad0e8a7080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51387fbb-dad6-46c3-8ee5-27db4cff0420",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f3d171-640c-4f47-8333-0a2fc691c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef94412-443e-4c82-a9f8-3759fc3eeb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6c3b58-980d-48dc-b402-5b6d6fb61b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d57c8375-b1dc-435c-93a7-c3879c8b03bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c107ebef-33cc-48b9-a70e-f1d1036b8d1f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff0c02d-8a79-4fa3-9e38-a4aeda03f5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef68128-3e5c-463c-88ac-5286a028b3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ec12dc-bb35-4935-8eda-cf50fd385bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67f0b1c0-5097-4be9-b66c-0fb307fc652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58f0e92-56fc-40c9-a868-bdc79e24fd6a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af598f6a-93c5-46d1-b9e7-f441eaf138c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee75622-2bb0-4ea7-b2f0-80cc3bbc0023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4145b4b1-cb20-4fb1-a10a-b9bb8c5148d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c262812f-877f-42b0-9925-ba37677602c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b190ec-7603-45ed-926f-33b83dd85ac2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3bdcde-728a-4280-b145-26e57f7d7a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec836aec-013d-4cd0-b64a-8f9b0381e527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886be763-74e8-40fc-ab4e-24be23feff33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3b607521-c2c7-4b1f-a348-ca749ae79094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e184d1d-b925-4545-89be-b736993b9156",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b4207e-dae3-4347-b02b-5a088a189f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47f244a-f125-409d-9e74-bedbec2519bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6ea57b-41bb-4cbf-8bcd-bf51f5b05b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f24b52af-188b-4aa6-87a8-e6e0abd8a546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4ed51b-28a1-4065-a9b7-19da31ee4a41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3614fb7c-6701-4bfa-8638-915b87ce6265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f377f83d-b4be-47ae-8f01-cd3eeea0b95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a354d96b-c3c7-4a4e-91aa-ee3c2787295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a99e6116-a345-4de9-9987-b88388652e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ae0fe-5124-436c-b657-cb68b0a8b904",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dec1e2-a7ce-49dc-90cb-73958de001af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81de43f3-afbc-46eb-a71b-0517f9676070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a14850-da95-4019-b8a6-7eb128cc1cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75790a35-2798-4c93-859f-d3d485e7c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febb01e2-f9cc-4464-81e7-e18a7e93df4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dfa260-4d2d-42d8-b22f-39fa476fb1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b13d49-f758-439e-9a44-d95ab3a7bb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0618c7-299e-49e4-bbbc-f3905f9fcfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4b47b7-9370-465d-aa6a-294b0044bef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68be51a8-9657-4f7e-a5da-e249d13689e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f01728-2ed9-459a-b8bb-c3824eb98e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6647cc4f-a684-497a-bd2d-2a19df3d9840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b893c7-5e9f-4de6-8b3f-8f0c76bc1c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbda15dc-5750-4008-87f0-d3cf88fd03b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34371450-e984-4f6c-aaa5-362db755f8ff",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d5814e-81da-47e6-88d7-4e768e0e4a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be417e99-3a13-47a2-982d-56ced2d5dc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6c629-60ac-4fd9-b269-a12698f63ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c768148-4a8b-4c6e-8b63-825cd5b72fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c323e6-209e-4069-b696-2320d1c4a8d6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9951ee-38c6-474b-b79c-f6cd33c683fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eecb441-be89-4b81-837f-209f667b694d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbff4509-53e4-41fe-990b-3df3d9cbef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "14736a71-fc99-4a0f-831b-1bf66e48f239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ac0b74-7d29-4af7-9cad-db3668d9fec0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa61473-e992-40a9-bb6b-7a88743ef595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d58976-99f3-460b-839b-483fb771754f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee16ab5-359f-48fd-a1be-dcef1811e74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef37c69-2c88-4a73-87dd-4dcb5ba15475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56df2af7-7a1c-4986-8b80-34a1c60dd7ee",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ef20d9-2c5d-4f6a-9641-3c376dbed69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30618e0e-e056-4558-b897-09fbdfd9fad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d599f202-8b58-4817-bfb7-a03e726677dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b1e6c4-52ed-4e8b-8146-243ab94853dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bbb99d-b7de-4915-9729-f635b16456ee",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66187d5d-29ed-49b8-a9c9-c3f2df2f6ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877f900f-9a49-4f19-b0de-313052554f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d295417-3a07-4f09-bfb3-80b6697afc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be25f22-b061-4f94-a1d0-16201b4c7cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bb1f3d-3079-499a-bf25-0add679c45c2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dc5654-1744-4306-b954-6f7f1eb45d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7f9d74-2f21-4c36-a15a-35fe76bb5c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5675adf9-0baa-4886-8b35-2ae5046053c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88c9f7e4-db09-48c8-983f-56ad2cf23c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914ef0c1-6179-4fa7-94b5-d2f91719f143",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cc4f9c-50db-42b2-967c-4db5e6d3f214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77832a41-78ed-4cf2-90f0-f71cadfae1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb0611e-da97-4e30-aa58-acbcd2432fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6033b2a-0fa0-4ebf-a94a-9580c43f0d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e58f7bb-af70-48ed-ac35-2ef947cd8e3b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266586d5-e351-47ec-97dc-7f851c9ef954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad6d8b9-ef05-4859-afef-5e79469487bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73952084-0823-46fe-a16c-a7e9d7a25203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a042512-7a5d-4002-a3fd-e9075f1e1c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df32510e-203c-4b50-8349-24e5df1f9466",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1f99fd-7f98-4822-a75d-5b3d04cba05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5d182c-fd65-4d33-bc6b-065cf7ea6f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9086115-69c8-4ae3-88c9-4d29e8c3e709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ad220e-e9a2-4c2d-a825-37904a959287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef46b59-5938-4c7f-a847-3e59e0bffb89",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8e1057-db7c-4fd6-97ca-188d0ef198ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b723254a-0521-4cec-9d02-8991ab0b1852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67a6526-477f-47e9-8a96-4e95d15bf502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e45ab6-bee7-472c-9c58-502300de582b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ece5265-fbfb-438d-9498-bad28475819a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d3c714-d10a-4b36-a7d9-d320d8f2b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff902cd-5572-42f9-be94-c0d6666e4106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d42815a-9cdb-4cbe-a61d-ea42d87c8b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5f3eab-f46f-457d-bbc7-17a61b9f0fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bb927e-ebf9-44c0-9b32-ed5e0c20320d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952599b1-ec69-4621-825d-b11b3cd6cf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2828913-0ad5-4d83-af0d-168fcd2b1d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2ddd7e-db3a-400f-9a96-fcb505875e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf73cc3-4cf9-4de8-95d9-58e84eb65251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27e2d0e-5253-4119-81c7-879b883b5a53",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c7be3f-51c8-47f7-b6cd-9a99377fc3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc30b8d-bec4-4a47-b9f9-e5bf842d3652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742ed2e3-dbd3-4f92-81bd-eb985dccf4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d63df11a-b032-4fb2-b452-b98c88e1eaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f950b97-bea5-481f-992a-4b43821e748b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580f59e8-1635-44e5-addf-5bfc5a914c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f550a2d5-ee4d-4fcb-a002-0b1058d1b312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e7101b-f1d3-4ce3-9de2-6d67babdae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "343ced41-ab39-4310-8a90-815615c1e422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde48f38-d236-4c40-94ab-0d11071cba7b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8f6eea-9a40-45a8-8dc3-9a2549f03c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b700f2d-1f09-436b-84e3-c994c9c56469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5ece92-6cb5-4d41-bc69-742eb83d0b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbb69a2-b132-4b72-9ff8-a9f81fcc264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775007e8-3e51-4b13-9dfc-946e45f85018",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb78af-5c22-4e57-91a8-8ef4df4aab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04201688-6d7f-49f0-b7ea-ed6994065bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3f7c86-2ae9-4b74-b779-90b8831287b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b51def-fa37-4822-8b80-9d7c587f0280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63583418-bcd4-4b90-9ca4-50528a44b7d8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f31fa76-61ad-4246-abc7-a7306ce1cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b71456-81c3-4dc6-9778-e1e1b1bae913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e35ed5-bf5d-4e03-973a-1d5b722f0546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe2e73a-3bae-4abb-8eb8-f73d2b6843bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11700603-2dd8-4a80-886f-2729a6b9b011",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f018c981-ba01-4d4a-ab2a-b949f481fcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e2f7a8-df05-4a44-a236-e17a0f4b1610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f064a2-1b5f-4475-9e66-e43a72437eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6493b874-810d-461d-9817-ae0b9277f545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e64474-afce-462c-8eeb-fb21d5951b7c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f40f60-597a-4afe-801e-ee844a082093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057aebea-1c5e-4f87-b9d4-8c00e5d2cfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da99a238-c559-4c7b-a19b-29afab4f0998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb310d96-e225-473f-a2bf-2e8a2860e7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47a1da2-880a-46ae-a1bf-b43dee0cff9f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed711e-7c67-433c-829f-fc0680b498df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be6b0a4-96f0-45a1-8bdf-6d0b64c29f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c0b550-3fc6-4aba-8056-d244e6ae0dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bfb83f-ae0c-4659-acc9-69201a1cfb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfa9ef3-9290-4ac0-b9ea-c996d5c8eec4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8630f4-6cb3-4d22-8df2-56827bbd209d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acf1e05-fccc-40ae-8975-2171098dbb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa3b8d6-b2fa-4612-a9c5-2744852af3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef083347-66d9-40d6-8b9a-7c27faace1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a9287-39d0-4159-a403-12a4396f36ab",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5742e5-7e55-4789-a989-990200e91c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cc646f-ef7b-4633-a7dc-0524a7e64e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee4973e-1be3-4d7e-acf4-e9ee0cc97b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7375fe3-fb02-47bc-aebb-fe498ebc49fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5af611-4c2b-4cf6-997a-8f8827827395",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e833854d-1004-4337-9509-d34bebbed60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8d1a30-aca2-44c3-a4bc-58dc11edbb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d5904d-a0fe-4a54-a7bc-1872c64d785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac0d9be-9c99-4858-a6d5-8bf25c237d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9816f956-fd61-4057-8b5a-1e4f44425c1c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5268ace5-be92-49dd-bb48-0aced5c841ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fcadee-60be-4eea-8307-83f52e5d96aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806bc70f-2977-47aa-a28c-d01e8829e596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb619a6e-80a2-42cc-a73e-0d111f647226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda5ee32-861f-40a2-a8f1-64fa6cf5a305",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20e49c2-b6e5-4ca8-b79d-0d2cf23f223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82fbb52-596f-4366-b4b7-025a7d0a96b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a274c715-4f93-4019-8141-65d4059e38b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1570fc8b-68d9-49e2-9ba7-08e4a2d20b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084ebcaa-c19e-499f-acce-8070e9dfa23d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b5c8ba-36f9-4b90-9bbe-2043aee5e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4a182f-ce64-41b0-a91c-731ad70a4cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a769fd-e561-4aee-8c03-e9b376dda799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09de525-4cd8-45fb-bbe9-817854efbf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165fb561-c68e-4039-be22-522bc97c3ab3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c343c023-a888-4658-8d1f-4cedf83896ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61d4e67-3bc9-4019-b8cc-999134691176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a79e75a-c809-4e5a-a72a-bcf9ea57ea79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb79968b-853b-4c92-9af2-f4c3908b4571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ea5307-5c92-49ce-ab0d-fc49bfdbc49f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b5abab-bbd3-47a9-8c73-b57bf9ed2a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ec8914-e4fa-4502-80d5-193d0d94d605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72da13f-a13c-4d11-ab03-598ef1f4efae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efbf436a-20ff-4292-8c68-ea20d915f52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666594ac-ae28-499f-beab-69571860c812",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2d16e6-416e-48b2-ac61-4b27b41fdca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5256cc2e-2333-470c-a1bc-834baedea116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f38bba5-daf6-44d8-b144-c399647e3fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1298ebec-3e2a-4445-924a-e3205e4ea68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de1e3a-3e85-4efa-a70d-18e96ac9955e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc06f77-fcee-4cd5-8967-660e393651dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae645df-7bf5-4191-a2c7-a79dda50828e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979a1272-2eab-478e-b554-28936aca3766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "48caaca0-0c6d-4903-bdfc-cc7671f463f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36420dd5-15e4-4462-9034-8f46d031fbc7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79e5ceb-948f-4f72-86ed-c81e0ce1cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bfa3ca81-8cab-479e-8afb-9446be3be547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65f6996-6caf-4d1d-859c-325de3dd0b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdbc4df-3f59-4bd3-aec9-80c65a5e220c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e89b6af-1084-48b0-8f00-fa42e231f678",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57dd7539-8d1f-44e7-88cf-e7cedaf7d0b5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8e2963-ecef-4b51-88d3-edf27df7d024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9acd2035-19b4-460f-a627-18de944988d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e734381a-8ac0-4f78-9865-838b9d736db0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3958b5ae-b3b7-4710-9caf-d5dea87852fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e4b1077-445e-407a-b360-aefd491bb274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e16725a3-bf5a-4df5-a09f-b6ad4f029fa8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32900209-915b-4a90-bc07-6a26f9ec38bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b773d954-640a-4332-8dd3-13dceb9dfcb9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f40f4fa-f0e9-477e-aad4-ab7593696bec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56607b1b-f9bc-4c9b-adc0-fa06d724fd6c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78c8d615-5533-4f86-bab7-1a2cb27130a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11e9a200-c05a-4566-9872-859da60f8619"
                }
              }
            ]
          },
          {
            "id": "35b6de0c-c868-4a6a-b028-c952cc44dc3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b049a8e5-2f2d-454b-9d58-20deb4de0436",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bfe6de98-514e-41bf-8678-ac4348b5f95c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12359651-e8e1-4979-8a27-b6094a30beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a3e3ffda-2f5a-4912-aab2-f7f13eb1c141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7360b53e-2ea6-4fbe-b6de-d6f48854353e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cca956b-27e2-4d00-bfcf-f92b8b547199"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14eb5bbd-7801-4a3d-96d2-fbb0672ddedf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d99d23ec-f949-4f79-803f-badb5cedcbcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "759fa769-2497-44e1-a110-535ffb2c235a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c26e545-ab26-45ba-a5ea-da75dd16f322",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62effa30-ce54-41f8-857b-66d0c75335c0"
                    }
                  }
                ]
              },
              {
                "id": "40b19810-b3d2-4ebf-9ed1-a6caf5dd72bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51d09009-56db-4094-b3e4-6ea95ed1d056",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7460b5c0-908c-4f49-b767-4f1ebd1f76d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfa4db45-0f88-46cc-a5da-96fa48362176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "512fa3d3-c225-4ea0-b56c-c6cb482c2898"
                    }
                  }
                ]
              },
              {
                "id": "59bbe62b-7cc2-4b5c-a789-0938d09b551a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7665b453-eb3e-45a8-b62a-a823db712477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c026d719-d296-4c23-9798-747ca45ddc3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ec934d3-a13c-411f-a09d-0c1a767e2293",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51fca07e-abc9-4c2a-977b-292d0cfdaa97"
                    }
                  }
                ]
              },
              {
                "id": "bc312354-b992-4878-999c-248a4c59edd1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aa1f4fe-c35f-48e2-9d5c-1482eacf69ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3894d205-f6a4-4668-9a7f-bc541899cc21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6fb6a3e-dcdd-45ad-aac9-2448bd18d00e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "becac130-abd1-49d9-9830-d8631199b2d0"
                    }
                  }
                ]
              },
              {
                "id": "78d6b5e7-5bdf-42ec-9c8e-17b921ebfddc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd573bba-e60e-4185-9f03-dd2374129415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c2ee2bc-8577-4968-8a5e-8545b8ee9c34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2864d66-ed30-473e-8b67-a36e0e5991ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c586755f-6d6b-47d9-b18e-ca5c808ff153"
                    }
                  }
                ]
              },
              {
                "id": "31330fd5-ba52-49ce-9dba-fb094a0197d7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9f94b34-3372-45d6-84e1-4fc5b04aedb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96c81e7e-a937-46c5-bf61-bf3d772626d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4baabfb9-ed4c-40f6-ad9d-221262e1ec87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f185e83-6588-44e6-9f77-aa24f2d06cf9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b7cad95-fdd4-474d-8f88-f49e82819128",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecbfb200-2e6b-477d-a854-f44d1518c9de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3a18617e-d4c4-4fb7-9fa8-2a43c3166246",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62e71118-ac54-42a2-8c92-7fc6cf826bc6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecbdc7ee-d21d-4167-aeee-b96625074d78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f36b2d4f-0d41-4f86-a0d9-9199c27307b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50aa1a11-a752-44dc-ac68-099d7f0494f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18bca6de-0c0e-462c-9c67-f2bf7f746a2b"
            }
          }
        ]
      },
      {
        "id": "899aa74d-9c7f-405e-8adc-1b2228c4a19a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "94af72ad-e7bf-47b0-bcb1-d1a845957160",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a41b6114-df26-4a94-8dfa-00c0552324ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8524fae-ea24-404f-af28-476e14b18fe1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6987ced3-87d7-4b24-a38b-224f24af442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b1fd1a-6a80-4417-bd1d-e6e7f4e8112e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea41e8a-23c6-4485-b6bf-35fefce18b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c50e90-6d7d-4880-94b4-f03c6cdf255c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5977eb01-c947-4d69-a04f-52e7f0aa071a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920ee573-79c1-4ba1-8f53-05ab0e96caeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f3398c-4990-4d5d-a0df-39bd81ce3278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280ee416-5eb0-458b-8011-22addeda582c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e60d5769-7296-4888-b893-5525eb7d4c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bbd415-a8a6-4643-8e1d-e428fdacc66a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d54626a-b3a8-4921-9c96-5448c4827a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1238e0-8ff9-4009-a554-c877df15f01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80faa00-1390-4ec6-a21d-2db578f4f5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b14f5aa-1445-4068-a246-9158ead691bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98ad9bc-d936-419e-ae16-c315ff9e7963",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9f48a3-6904-46e3-883b-67316bd3fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955ca0ba-f37a-49e2-9b6b-c2513f3a5a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff787fc-17ac-47af-b457-ef5872d7bc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb739bd0-ff45-499e-9adf-5ecae1639fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbce065-780b-487e-bfdb-a5ddf9ba55f5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e91bbee-1f48-464a-afb2-f3c057373710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d0c14e-9c6b-49e9-87e7-707a44552137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd6a9f5-5448-473c-8fb0-824ff4b6c51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaf815e-9e19-4ee5-940b-706ca591a719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61356181-d56d-4d7c-9ee8-febdaabb90cc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72396c9b-b7c1-4555-a4da-02a1dce2aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea529d82-c66c-40f6-b2bb-40c085a72042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b051562-776c-44d9-afd6-d9d3e75b6a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d8ef7b-9b2d-43ef-ac08-263a74f60e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5d5ee2-8981-46ec-a7ab-67f60b4dfa79",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3917ec90-7438-4347-a2aa-808d51c9b418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0c672b-3bdb-457e-a87b-4ff37a516ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa8354b-7ba0-4a19-a84a-188b87a13185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fec6431-f98b-406e-bd3a-8c4608361965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42856b31-1bd3-405e-aa9f-5471e3baaa3a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2690dc34-1f03-4b11-9e4c-2cdb134b3dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7886081-1048-4b5a-ae15-2722af8d4842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edefa60-8d25-4def-9d97-0a889de5ff9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e2aec9-e194-4a71-bbbb-ac2515fcabe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cdd5d2-4036-4813-ab17-86e21f841faf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc43711f-3b1c-4b80-abb0-257054d18b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5892254a-2a31-45f7-ada2-ce61c4d7b7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a223ed7-c220-46b9-9d48-aebef5858416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60e62a6-6260-4ca4-81b5-4d7133050a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834e2cb4-f43a-4f54-976c-47af300ef023",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1fb22a-68ef-447f-88e3-0d1d5b233cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12eb9112-9a79-47b8-85e7-21b0e5988690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74084ebd-43a8-41a8-9a38-b56b3be9e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c9c58c-9872-451d-bd7b-2ff5057b252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4fdea2-f5c3-49b8-90b4-351b13b8942e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d01098-ed6b-4fc1-b8f3-a8434fdbd64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35449742-f864-4457-af6a-1f626f4c886f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589fea00-5444-4a71-a7be-ea853b0ded63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcc19cf-237a-4dd0-a9ba-ce514d8ab63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c341d1-d927-4f71-b266-45a18c57a9b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b134d93-a948-4082-9ac8-ba2ee9bb8379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273a41b4-d8cf-4ca4-83ce-c48b7db675b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f863b69-440f-4948-a7b0-8cd9612eb8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e41733e-aaf5-435a-8816-8a46ada62900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d76dd8-20fb-4330-b900-56d7cddaf4ba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9266b3f8-cb67-4f5e-ba68-164a982dfac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadd5b57-05d9-45ab-bbca-8e0f7031b813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93da8cf7-18b5-4bbd-91d8-25b326fb8e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ed869b-9db3-4da0-bfc4-d1055b8c510f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7952ac24-c20f-4451-b3d3-309c9cfc5763",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ba4f84-384d-439e-a2ec-0774decb970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6be843a-c628-4639-b892-3a9e219ebd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c07714c-b156-43c4-9098-4ae3a48f42b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc634250-3e11-4552-89d7-29b03c333e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952a8f2a-c83b-422e-8bc4-e38c964ffa74",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3591c6-5d4a-4364-a6bb-d2bcb83baec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77698fa6-1b8b-4913-a9f3-2cacfcb5cc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8097256-2403-4714-af9d-9f6601e98b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4335605-38cd-408a-b154-0ceaef156194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d78da1-4c53-4222-949f-018c635e7579",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c394dd6f-6a1e-4316-8345-571b27b361e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8735e309-0370-4b4c-be95-dbf247f068de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92a2527-0ad2-4ef7-bd06-f2eefaa8944a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa101845-a84d-4dec-8d6b-6c3572459c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f1fca1-5eb9-4c3a-89d7-7c1a977924bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a354d4b-b71f-40e9-b9c4-cd4d7c6d6181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e369c63b-8cb4-401a-b4b5-f43aea0476de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1bad3b-36b6-4c17-9e4e-b6b3e7ca3c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7e70d8-43bb-41ee-826e-79bfe6198f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ee82b6-7a57-40f9-9f8b-9fd1913b1bbe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf0a2bd-9a57-4e45-8b33-b7b7ad74c9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58289070-df88-46cc-bd7e-ccf3cb3f4f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620f10e9-c10e-40ee-a5c8-b89496ebb682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "915d0e36-f2b3-4320-a0a7-8bda7c6c7811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c819b57-e636-49d4-98fd-4ea6a90a6cc7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f09942-7102-4a20-a640-d500df9bee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9767c37a-77e5-4960-b144-71f30f941116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8999ed-a03f-4297-aa43-1c4da3fe51cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0996162-3723-4df4-89d3-ce0f0c40dc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bc86da-ccc5-4ae8-8ff5-a136c5f3921b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08d3d70-bee0-42de-8681-575c3b7e7b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c11e40-ec84-4c4c-9374-20bba5a10fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23451e41-567b-4848-94aa-1cd8cb3f4f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbc4111-62eb-4b16-89a3-af1e2eb3beb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2316b5c5-6b7d-4c26-a6b5-ebfe5a003995",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206c8be3-e593-405c-a91e-90ac64d4486f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dce62bd-9f5d-46da-af6c-8aa1e99b7e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba98b3f8-f25f-485b-8bab-8974f4511a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be694f8-84a5-4c61-a9d9-74008b566c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e41c32-ae8d-48a6-8c9d-420621ea368c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052327f1-bb49-4268-a811-468cef06cb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1c46e6-9949-4f28-9518-1e58119d5ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b03df39-ec46-412b-9c26-eb09f3c2fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a4fd5f-c5d7-4a9d-8ff2-31e6313a452d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b1e93b-4540-43d4-a908-2de28b44b459",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c69054-b342-4ae3-83ce-c531e94c1639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a7ed16-d100-4fc6-8ff4-63788063275b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8701fe21-b1b8-4fc9-bd35-1bcd68bf8fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af0cfe88-ae44-42a7-bff3-670aa4c9de30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62b72a8-f6ca-473e-b88f-4d812b7b0d70",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d336f4b6-0a94-4149-bde9-32da5fa06c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c47440-94ec-4339-a3b3-dc25fbf191c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1d8e02-d010-474f-8734-758c3e1ef69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e36a14-b5f6-4edd-b93a-abe358af07d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f9271e-f600-425e-8fde-c1f7462ae044",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd9d50-1635-48a2-9717-a05011d742f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348a236a-f70c-4f0d-81ae-2aaa568f2b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f2859b-f4c4-4081-b69d-44d725367fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ec14f1-31ea-4764-b593-2caf2c02bbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4485cd39-c503-45dc-87e9-b9655b7322c2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d40873-b994-4b49-865c-e9b25ed4e174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b31a8a-ddd1-44e8-a63a-76819c73819f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebf3046-97f2-48ec-b4fc-52a5d1ee7a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abfc33f2-54f1-47ad-b5e9-1f97ddc5e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8f190a-04d5-4320-bf4a-d76c8e206d72",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7934a12b-8e5e-439e-b927-b48254c7a5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07255c1-8e8f-4586-8399-260c77118dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d090c88d-9e5f-4214-b831-455ad1aef0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f41049-cf5e-493a-b095-a40f3a324f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3168c7-4c3f-4b4a-928d-926ce6d235a2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97154e27-0f18-4f2c-b9ab-c586d5788a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3d3b55-175d-40e1-813f-82d81f1816fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e104373-183c-4c79-9e2f-02db820608fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7115134-8269-49d1-a768-10cff0a66ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c1c69-dada-4c15-8998-d23352242331",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a46766-1f87-44d3-8d73-bf7871ec2473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9e6e87-c323-419f-8daf-158a021757d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b10668-3222-44df-a381-2054702e60a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aece21ca-dd6f-4df5-a4e7-ada7aa2e8e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e7078a-140e-4a9e-81ad-48d21d0ef355",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613cc890-537b-4528-b086-7130ed275156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb50b4b9-277b-4d2d-aff3-81207c08a56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c216ace5-889c-4578-8300-7ad98963603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96934c8c-98f1-40b8-9cbd-bde6ea10a66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1336b51f-cb37-4a37-b4bc-51b108312b8c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74128de3-3c86-4bd2-99fe-a0499840ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef11645-a95e-463c-9f47-c3651d7e8ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c325cf0c-bf6a-4b8a-8869-d0ae41e8bc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13deffde-1715-449f-bbc0-9be7776a67ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998fbb6e-f6a6-4841-ad39-2b2987d6d09b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3155e78-e1ee-4706-a228-7dfb1574efe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead83d2c-6636-4a39-8013-2003e8f8631e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c195ff99-2562-42a9-bea1-79662e248ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85c5482-3739-4e3e-a916-5d313054a7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b0b8eb-cb4e-4b8e-b01e-e1de894f2fd9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7348d108-3ebd-42d7-b3c1-ad90a26a4c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d35af3d-0f81-47da-8f03-447ec2d91e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120a8eb7-fe08-4d1a-a563-3a4017c786ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1daeb6e-8ca5-4751-8f76-92f2a01bc6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d00c00-c7cf-4da8-a3db-cbd19a178ea2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ff9b25-e46f-4fa2-8b19-c332f62cc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bda0c83-7167-40e1-bf38-2a308186740a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7c1ff3-ddbe-42b6-b05b-41ab2081c052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "facf1bdb-14af-4c9f-a19a-3ec1a97461c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210556d0-bc1d-42eb-8ac0-baebd5f9baf7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0aff1f-6f2a-4467-88f3-7f9b056ad8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48da53ed-d9b2-4e9c-bd74-777706dd578e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6da8c38-5f08-42f7-8590-bb994f1d75f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85342ff-1146-4b84-aeb1-9d62abf7d6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eb0174-aae1-4d4a-8fa3-911f78be945f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c718e859-530c-47ed-ad0a-373c44798aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7369574d-3a41-42cf-b642-de13f0822110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb54d619-1cb9-49e6-9afb-d89717f85f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac08b100-5554-4e51-af4b-1b3970793a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3217009e-81d0-40a2-a17b-489b568c6296",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76978959-c90b-4aad-900e-07aba38800b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5e2cf2-9378-4cdd-a463-c956f7882870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6560bd56-377e-48e2-8f4a-d0bc1c30f322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8ae809-7571-4822-9bac-a8bef4a7850c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "193a75fc-6a0a-4e40-b7b5-a83eb91a8a2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8c81fa3-c3f3-4a01-a90e-4e49595aa834",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258082e3-e102-450b-af23-6d7c05f51fcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44b9a6df-4790-4f02-858d-6ebed1ec230c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e086cd-04e0-4a38-94d3-ee21d7a2b0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0889eaaf-9454-4198-be2e-4b5f652f4e46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "586af6b6-17a3-4916-9c8f-60cb58ef1899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7551cef2-e688-49c2-9303-ce60cf299267"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93589387-ed53-4678-8b4c-ead4558af8ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2846fb9-12e2-4ee8-9107-30c79f1986f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd233780-7dea-4e1c-8d32-0fa591284ca0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "525d9d78-1bff-400d-b6cd-b8634fb36c32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71d1a52f-07bc-4dbe-a210-b909a0ba35da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6147971-1a39-40ec-afd8-b86fc9c8ab11"
            }
          }
        ]
      },
      {
        "id": "75813dd8-5883-49ac-bb51-cc2e1ff4739f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cf41011b-72c1-4907-8319-6d685aafc136",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b30c353e-ac37-4d12-be1f-dcdf98601ca4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f1ddf7a-133e-4e18-8d19-d37fbdeff72e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2657e3cd-a2d8-4072-a2d5-b1b9519e7a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c96937-af28-4bf8-94c4-8685cf0eaf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a301c4-894e-4ee1-95e6-056fa59fe38e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a15001d-bdb3-4dc0-94e2-c21d26bf7019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bac2772-cf4c-4963-bf4d-893b65f9e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14a8d73-86ec-4496-b553-6d518bf2df9b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5ee288-75dd-4d67-8427-b3a24525b5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c362f71d-2978-4126-aff8-b7477296f77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b4f79b-3445-4d12-b179-bb5c84b81079",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a75164d-6e3b-47d1-84ba-c2e4ed0aee01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d594639-1046-4d17-8e43-d64684bc475b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25622105-1daf-4c7d-848a-f05c4f2500ff",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a21ea2-1d97-41f0-815b-d0fa95b3864b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfae3375-f9fc-4dd9-a385-699738296e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434ecaa9-90ba-4326-8a11-8dba35fe5b73",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d165ad5-3647-479d-a08f-82fc36310461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ded6a4a-8a89-45d7-88ab-4556fb911e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02252738-2e93-483e-b13b-5d8dfdcd53cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef30152-d6b2-4dcb-9179-661b2c775b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab7799c-ccb4-4f02-bd00-7ef614005917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bd13eb-cd75-436d-9e1a-2fa898988998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc353c8-732f-4d12-a570-f3c2225d8947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b3655a-52c8-4764-84ab-832c026a805a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2e6cc8-98bd-4900-9a0b-f856a5204577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb61cffa-1605-4414-b24b-34a2aef16625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae6eaba-1af2-4077-817d-9f0e1d01b644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb00bcc-fe59-4506-839b-7de8b5cf9221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ab83cc-a456-4321-a00b-cfb3265eebae",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e36985-f67e-4390-8e18-33e1cf510b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebf9629-06a8-45dd-afc4-8e2cf43fba45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bdddcf-5839-4e77-a39e-9c100d08838a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714c887b-7142-46db-8d91-b4e4d348115e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c899d1-72fd-4a66-adf8-6277a75c9eed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af99866-0395-474f-a86e-8b8a9aca2251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185f5696-0655-4b4d-9eae-ebb966f470a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad7ccf7-202c-4642-8cc3-fc0a425b894c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03ff314-4add-4510-8893-5d709bc72e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8bf2f8-f227-4082-bca4-80d05a48160f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b88f00e-ecfe-45b1-9e73-eaaf89a5e465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277fde4c-a68a-4278-8cea-a050c37b13cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ffd818-c3bf-4415-af07-ac865eb64e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb13fb4-a31a-4342-9d24-ba5c54db2bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab807121-8e7d-4687-a5f4-a17305b78397",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f477c47-53a5-48da-9405-40b39f80be3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f30622-4e23-46ba-8718-a9ef6f5bf381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8032e84b-af6c-412a-9b7a-f4063ca8e845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7cfb41-216f-4413-9a11-b1c650bb1009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be3e6d0-9151-4734-b54b-6c480b1ea7d5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77826537-550b-470e-837b-4879e14ebfb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "559ac7b7-7cb9-45c0-9367-be8a0bc73d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b0457c-d935-4f1c-8e19-b4247449ccef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcbb5c0-c02e-4338-bf7d-dd6597f336c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e797c6-1738-4e35-8dfa-10be4371dabd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adf1d15-bea6-47bc-a753-80bfd33753b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9434f6d6-025b-4c7c-84b2-478658e25629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840173dd-2c5c-412b-bdb9-8dfad1e529fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c192e510-ab3b-4e7f-bf2a-83297c8d0b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e47ddd1-0b1e-43a8-894f-fbbfc89674a2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a002a83f-b42b-49bb-bb4b-76fafab30bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64340185-6f18-4c72-a338-f3feb4b906c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12be6ba1-5767-4692-aa79-34b215f27966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1540fa8d-ef28-40f3-86c0-81a6bdd786a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd69ecc6-eabd-47f7-81f4-7b6d31718d90",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f7c206-b787-43e6-a1a3-2131207a3a99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5c0264-b274-48ff-aa5e-bd1eb30d0c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a064af67-9278-481a-ac19-647e615ff460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abae7d6-ca13-4d37-98c7-c75869d57d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a79d05-a775-42ac-8965-e53ecc53932a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41798962-dd35-4144-897a-cfcde76ee134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd8eef3-a5a8-49d5-bb07-43781b884676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1160b9f-c246-4938-b5a5-835f3670899b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd488c6-cf02-4dc5-a542-b506bac84442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72af66f6-85c3-45fc-9c58-257ad07a317d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afba308e-ef01-434a-b476-0b6c50618533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d73b3a-f3aa-4631-98cb-10b3d396385e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653f06f5-7a63-4e49-a8de-5515c0b4ba9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69d946e-038d-4836-a27f-a8cc248cdcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa2fc7c-d112-41d4-8beb-29a90a631cad",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da09648-92a1-4997-b115-3e9367baa38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc11c76-4eb6-4e2a-9e94-547e13c8d82e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156d6ad8-7710-4126-b2d1-094cb722c91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed21351c-679a-48ef-927d-ca17bb60919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6019a7-2ad2-4770-b8cc-32fbd083d9d8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03450f9-523f-4257-b7cd-448aadcb50e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b8b38e-b1da-48da-bd4c-4bbd47e95252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a7be55-bee8-42ff-8cf8-618a65c20654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3443f9-b62f-4ff6-8e88-728a67ed750c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ddf654-f935-4134-b2fb-322d1600b578",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccec866-ca00-46b5-a846-e7a36be5d3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d5f662-2535-499a-b18a-7c907132b643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7664b760-0cd3-4678-9d39-51e87ea63218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b2f707-5de4-4f2f-99e9-682aad3c6bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adccc631-ad8e-4e4d-8279-e83cf4de6929",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f72aeb0-3c41-4cd8-806e-c166b8fa095a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a241aacc-08c9-49b6-a6ea-0d59df95af36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad199714-ff6f-467f-b6bb-270a19f57b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cf9a1b-881e-4bc3-982a-d1aed04010a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2080a56-1c4e-4a05-86d0-d63b22bab0ed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf78cb92-c2cc-463a-b379-d128004a97e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca6c9db-b5db-4bcc-b18c-9d0f833bb58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9c5c41-2834-408a-b222-811a89d449f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70609db-fa99-40ee-b224-77b5505a832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda76959-9153-465c-a37c-ffb30faaceb7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef4462c-f3af-4169-b2a1-3b9759acc079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6648118d-7734-450c-8dfa-3b54a203279a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d84283-0919-4eed-80c3-1b0d00edf1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f461a338-1598-4f0b-a764-8112ec2b05e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c882c03-a1cc-4705-a940-1c0369a027c7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4346e4bc-e2bc-4423-af77-b80e45ae161d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8bbcff-fed6-4cfd-a156-035ef2586e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5655abd-906a-4b7d-95e4-85acf091b5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8bbf35-083a-4675-8533-9f0908cd6f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfa83ef-8eaf-4ce6-bcd4-1aa48feeadc6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2be61de-3ce7-4911-852b-84d2dd32cd63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f6fce39-5dff-4953-9240-efec940ff10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4168c43d-b56d-49aa-9339-8d3d82e8c1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aed8ed2-cca1-4591-9eb5-6161512ee321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccef9955-be31-4152-9a72-f0740d2bd06b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85edb31c-ca06-43ca-bf4e-e953c9185548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d8c350-1ce9-4623-8716-88fcdf8edaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b648b791-5e50-45f8-b496-39e4aa2990fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099dc6df-4750-48c4-b29c-44568ef1a5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded89532-500d-451b-ab77-66f3446efd66",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba604c1-c2df-4ef9-a6bb-20cba2985503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45e966e-3c54-461d-947b-980dadbc6e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612231ef-1347-4b07-80b2-93412b5ca261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94f3492-c3de-4105-8bc9-9bf86ca70741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6fd56e-30a9-460a-ae6a-28f36ba77f01",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee9035-04ae-4c41-9a48-e986e0b26a37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04dbbaab-9ba5-43c0-b994-9db50519114b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dc16a2-5c6d-402a-a230-76d49f24c9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edb4911-42de-40dc-8761-ed4103ce6aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b16c8c-06fe-485e-b99d-95365f47281e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a70e3e-bb12-4f5c-aa90-98fdd4f7f311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e82625d-f120-4145-8c40-e35fe1d001ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ceac94-d670-42f7-8b0a-e999d8a4c25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94a270c-d620-496b-ab18-47f52959106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d6d5d8-942b-4390-b770-b977a8f295d9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034018a6-6141-405a-a7fa-977280782ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "498b901d-d1b5-4b08-a718-ddc2b2d4318c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc24ce-9183-4ea0-9bb9-c7b378aa8fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3004418-af77-4a1c-ba47-d6c07b3057e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65c5c9e-da2d-4a1a-9f31-9d433d732bdf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919dd2e5-82e5-4bec-858d-6e9173076613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa5ac53-8d09-4612-a386-6452a5e25650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86475670-220e-4609-8f0b-6e27aeeba3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2625948e-f1cb-4a9d-bbc1-34d0461a664f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdafdf32-52aa-4f48-8b13-8d825e1c6118",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca81277d-cb6d-4a7c-b160-923db1888ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d9224c7-bcd2-4b46-be90-bb7d36b5395e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261e893a-b452-4e22-b747-7745e8e3d806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e52648-7377-4c1c-85c1-9c2588a8344e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4527e0-f3af-4d4c-908d-f3a33502a2a1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e5d0ad-38fb-429a-a4fa-86b770fd4d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33bc6923-a41b-4d40-a3f0-f30834320cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c8a9fc-0266-497d-a500-fe7696faad0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609f6158-d2dd-4411-a888-1821aa8792d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23ec8b8-2475-4e95-aa51-87a5eb4dce26",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310cb1a8-3aac-4c68-83ab-fc75d3b7590b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc8c4bf-3e42-40de-a79a-e88d403d0a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a53e901-d9f0-4fd1-8cee-546a0b090245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aff2bf7-66ab-4d44-ad56-6e0ec2053493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3d6b43-53ac-45cc-a80e-2d674e01877d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb902d96-e40a-4731-9f8b-b941d7d37fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d2d13c-2c85-41ef-9c23-5e43e6128f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05fb480-1460-4b6c-8a5e-c0accbe057d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1cb96d-021d-4023-82f8-b70fdccb7d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febce40b-b78b-4043-9396-f3cd8aa730b5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7546483-5017-4709-a52f-ebfce56efee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e2f4dc-dca5-47ed-80b1-6c6e13295d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf3ce0f-7833-4a37-9a9c-c9d68ee208e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34601b73-0d0b-4e8c-b350-a7d796eb74a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9797b0e1-739c-4cbd-9961-efbde91c22f4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d90252-790b-43c3-a3c2-b8bade0f5a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a95f626-6a85-48ca-a00d-64c79454dbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ab3853-a91e-4521-825b-09f3e69b4930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c583b798-37fc-42dd-b6d7-3ac8f86c2f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78901449-c50e-4f9b-9fab-2f99c4b3ec00",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c72299e-0001-4a97-ae96-fd3446a821eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8e89cd-3329-4178-839f-f1cb80e43593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75899078-201a-4bb2-8983-7cecd55a3048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482b78c1-3a39-4270-a954-65bdb251579b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12434ecd-8fbd-4244-98af-e780b807c835",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d6534a-5694-40bb-adcf-58e809c0fa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90f0beb-604c-45f4-a3ea-6ad3573e4690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d010e754-4e45-4b83-ba26-73175f04c0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178fabe5-daed-44b1-a2ab-cbcf99eff4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eb2e1a-0b73-4d46-a712-b12a6f1ba44a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71876f7-eb5f-4d48-b077-d91e35450f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c664f9-f71c-4fb4-9daf-5683910b2ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2b5ca-a44a-4f3e-a438-526d16daca1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969baaf8-647d-486f-8a00-6505fcbaa03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91932ea-ffc7-43e2-87f2-e12ade5a1630",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f1d1ad-1c52-4038-83d8-011d0edb390b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3301f3e9-aec1-4ab4-a274-6d65d0df1c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1827e-8d94-4f6b-903c-e8927a29f0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35696002-b745-44d2-991c-466cf78b2444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6befd1-d998-4da7-95a2-0f4d796ef28e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2001d1c0-ddcd-4db6-af83-1261da81d5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1fc12d-2552-4586-bf3e-ce536339bae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d36a38-a8ae-4c0a-8e7a-a9b09370d9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7559e126-fcf8-4e0f-911c-237cd129660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60af002-fe39-49a3-b19c-5eba6253cf30",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72530d27-cf67-47a0-8768-98dd10372966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811f503a-d805-41f9-8087-77adc3b32b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a2a6c8-423e-4c6a-bdce-3f99e36c155c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2501587f-96f9-433c-9d32-67d5bf000885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70892ebf-8637-44aa-bd80-5a845ed7bb19",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93cf736-45e2-40f3-a9aa-0464a85665c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4823e210-bf1d-4992-8952-34f5007afd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0899700e-da10-400a-8c9d-cba2608568ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1890559f-fff6-4ba0-b4b2-4976a21a081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d234fd-0cd9-47ba-b336-4aee67aae775",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91442ac3-8b56-4ace-8792-44b5f825a18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78987696-8029-48ce-9df4-896e9b43eb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56ca0d0-ad9c-49bb-9b9e-dd13587b2718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87423f9a-53ee-43c9-87cc-46d7d010b56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48d1702-eb37-40d7-b812-f52c2c461a61",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cba90a-19ea-478b-abba-af0f43d9beb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cff032c-dd25-4db4-a764-286b40ae962f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a15c0e1-7fbf-4310-a1a9-f2ea49cd065c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2552c240-b86d-45f5-957d-e18f688c9ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a919059d-b5c1-4b8a-b7d2-39d7f486db88",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b1ee9-30a9-41de-ad16-8ba2a0549c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20ff7de-c40a-40ba-b4ce-71b7f2e08378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1030594-16ff-4e00-a27a-24ae937bc491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e86f8fc-6f1e-4e55-8782-be11c18d6d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bd7e20-24dd-4146-9bdd-b323960c59ad",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9cbb90-0523-4a60-a510-5207e80276bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d68c945-4482-4f63-a3c8-329ba80ec983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bf994c-7f74-4723-9307-978db010507c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97b57c7-63bb-4011-93d6-240cf6458735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8870cd-e384-4d18-ae53-d2d5750a0c9c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cd5010-8682-4ffb-a321-dd9172423bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683523e6-4db3-4b49-b835-3b54cb035c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aff21a3-371b-4905-89d5-e5ddf6eaeace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fa0767-54d8-4e4a-8f33-cbcf1e42c871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f2bbbc-d54d-45d0-be62-2bfc52f5cac9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a0b9b7-fc54-42ef-926a-09bf6d6d8b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11d7f4e-84a2-4a1f-8a62-e992a727dcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccb0e47-8df8-48d1-93ea-f03c43b1072f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294ae81e-f5a3-4340-aa42-6d26851d95d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b98cadd-a5d2-4dd5-b64a-73c04f7ed67a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59f7572-f46c-49c7-af80-81896d60f49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2937ea2-2576-4638-a245-d9e24f4c9a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfed09a3-b50c-46ff-bd87-ce385f81b423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a30bdb4-a924-4ce9-9be1-cb7afddc1954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce060ebb-69af-40c6-9e94-3588293243d7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d5ded9-58c8-4ab4-a1c6-f7bc6620ef5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2325c26-2dd4-49c3-93e7-f3bca346aba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47938859-e8fc-41fb-9583-5d6278752a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5744db27-b873-454c-b203-54bbe31cfa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5d99b3-22e1-4aac-99b6-af9ec1cfd100",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4749819f-b157-4ae5-b9a3-5f16fdd9d5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc2b06b-7a46-48bb-9374-8cf5865f425d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf0c91e-72b6-49e2-83f6-2799ee2221d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5687da8e-7d57-4be4-9827-32655341e8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00519dc6-b1e8-4465-befe-e143555ec104",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f01dd16-cc4d-4121-a93c-ceb4e6a59e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7929a23-7cfe-442c-abe4-485f6139ccee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040188ca-61dc-472b-8757-357d9233a410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122d5629-b39b-41d6-ac8f-1c37e9931aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4979c6-7e61-45f7-9d5c-87b509ce24d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147503cc-c508-4d92-9e8d-9cd90140379e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706d4c9c-ceb7-4b19-a673-faa477371fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9809cdff-7d40-4a7d-acfc-a80e50008584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fdbc03-994e-4b2a-bd60-77122c4c0c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48c4154-43c7-4738-afe5-8eb49d912bde",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e230adc5-6a91-4baf-8a4c-2d5464959862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91430464-86b6-4377-bd8c-657e6a2dd94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf1b4a0-7e05-46d7-98e0-2f3ebe30077b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e26881b-351a-4a17-aa1b-0a78d1b95719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e7f79b-6958-4156-be4c-e45bac2c11ba",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e936096a-95ef-4b0c-b100-055b6fa0b0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82df877b-355a-4470-8f34-4359e5e4c3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea86a50-7a89-4a9d-ac38-432ee258e8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1b914e-ec23-4469-8ff0-e00527be0bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc161e5-f1b2-4abf-a946-567a68580d1d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d7f171-fc21-413d-8598-1a6d1c99e62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cd0171-97d4-45ac-a99a-509ec856e3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e90948-8a88-4e65-92ca-6c2b2fb14c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96527df1-6c49-4256-a87a-ecef9abd1d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73896d25-e4c3-4ae3-80e8-a690b91adc16",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc9328c-2ed5-4651-9136-4a272da78de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc97f608-36ce-46b3-8b91-bac6cd7af50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcf7859-48e1-4e33-b043-c64853fb2c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe737a1d-4ac1-41ed-bf62-ff34e86e90ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db71306-d190-4adc-9783-541f85b9ea07",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8cb4bb-fc67-4d48-ad2f-f79eddaae141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857e316d-67c9-479c-9999-3be03eb930ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2825810e-97de-4717-9d85-d062418abb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfc8170-07de-4677-a828-ccc1f99fd8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9241acf5-ad4d-41e2-a248-22a67df1e3c5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8986feb5-ab38-4384-8976-dd245222d9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c58124-0eb6-45c6-837e-acd362d06486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be83760-e1f0-497a-8688-dbe0be0100ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462c5f9e-a9a9-434d-9de4-87fd9788eecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c0f777-0247-4fca-95fb-3f62be327113",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedb75b8-7947-4b08-bc02-eb95b5ad57ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff0d40b-15e8-489e-88e1-9c7b6d4f36a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6363c4-991c-4df2-9b99-516cfba86a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8720ac17-6acd-42b8-a532-88ab596cc8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16be1d0b-527c-4545-89d0-d60a16bd9061",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a12ada-257c-44a1-bdc2-b571b5a58ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6004a31-fe20-4289-8812-463932968725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b8f481-1d14-456f-8d78-8bd0181dfb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d56b6d-defc-4fcc-ba1a-0600a9e92dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d8244-5b7e-4273-b473-9b0ac663c13c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00bc684-8357-4cdb-9217-a4e0678a2935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a22e0c5-fca1-4d79-be7e-64aa3ac2d4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7dc466-8e20-4166-9a55-05014b6ba99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfd4322-e759-4c86-bf26-8ac76bbf9b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76488e9e-61b7-41e7-9e81-ca056ab64024",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd636e6-8f87-468d-9894-bde5701e3ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7857dec1-e0bc-4ac2-ad30-e61d8c0cff51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2e17f2-2dfe-42b6-9a96-32ff50a94c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc63bde-4d62-41dd-83af-30428cd16ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d9e366-d34f-4bd7-bc16-bf2d777e0b33",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e1aa7c-2809-4608-97ef-11ebf5391717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7db535-80cc-46fb-bdb5-abb82e941e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08049a3a-1b09-40e9-942c-9ae8244042cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68437cce-b8c6-4c38-9920-d109cb5bad9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6399634f-4d72-42be-a623-18382fdf3500",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efad8ca-224c-4627-936a-04803e702e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d74abc-d25d-43d8-83ef-30aacc00b0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ffb36-cd84-42ef-87f0-49a8f41d77f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbf204a-3c93-4b4b-856b-d2df65ab9713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd658f7-6824-4130-a31c-c3527ab1fc66",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3479313-2c2b-4fbf-bc4a-73bb3c1f1d83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bf3076-5471-4b1e-a105-bff0af990299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656b61f3-d5e0-447b-9471-663d0a93d939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea61ffd-be37-426a-8aea-474ed56c8f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774cfe52-ddc2-4251-b5eb-e690905b0c98",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85bc597-882e-43b5-869e-00bdd97be16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c117589-dc23-4ae5-8dcc-c5aef5f63144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4769fb-771c-47e8-ac71-6782f574e43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba03495-7493-453a-9ce3-8041c076e41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea21884-79b6-4458-8b1a-cf0b88c97d2d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d47262-9f66-4182-9c49-51bd9fe34088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f4f69e-2203-49fb-be64-1e36f123bf73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ae179d-e74a-420e-9c9e-4796ed40076b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413f9227-b1d7-4e55-85db-cd64ad65abec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff0a653-321f-4792-b829-5277a57f099d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3f7f13-fa8c-43a9-a7b4-7d1e2aab3457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75454730-19ab-42e1-b798-19ee98bd6f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9ecbbd-47eb-4772-b639-5fded79b63ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f0daed-b075-4089-8217-70673b0d3a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3c98a5-678b-43a3-b0d0-e1d25e792631",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f4a54c-55cf-4c8d-b70e-5c0da2bcdf64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad75bed3-87aa-4e9f-8e37-0c6bca1d7210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50de7df9-6dff-4ccf-940d-e7bc8b3031eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549c2aa6-52f2-4fb4-abc4-004b98d19a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ba3bee-5f40-4904-9837-e96abd7544b3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24faf989-bf6a-4b64-b2c7-cfd596a33a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d1f93a-2f79-439d-b31c-eb18b997478e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3289381-741a-4f06-be27-3765d8fce1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a774e1fb-8be3-4822-8395-6655beb75a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76840705-a1c0-4db3-ae5f-ed8bd978c02c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27f2886-3cb8-43c3-8898-236f9c4b6e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac36a341-7796-44af-802c-63ce617814a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370e7840-6ab0-480f-9c59-72497c476eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117701f2-91f1-42bc-849c-adc6728413c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752b094b-8567-4d5d-902b-abdf9a5d46c2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711b9758-927a-4387-a1bc-8646e550cdab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a9e7aa5-d9b4-410c-8902-94ad41d9e5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281f98df-2334-4525-a227-28d0ca1913a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd656a9-abcf-4a19-8c39-c8571de6224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6340d2df-2896-4cc5-9d11-e0a44a6ad471",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716f881c-bb0e-494d-8555-892148875688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77256b66-a67c-43fe-9e87-e9545e42b917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00547beb-e03c-4792-9f2b-afd10a5b1bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a076007-d9b3-4586-917e-525f5ab06b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8f635f-19fb-47c7-bcae-c06df0bd5e7a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46bc32d-609c-40b1-aa18-b2d2c9639ebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cea4701-72db-419f-8ff8-9731bea8ac76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac8d7cb-402e-4722-9195-c9b61ee73843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4580b810-fde8-4447-a764-fd2b0f05b5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c31040-2e78-4293-8552-d61b0939fbea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921fcece-b264-4251-902f-d77bc3f0abfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c76f767-ad23-4fa5-b00a-48fd040a3bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0bbe30-e743-4fc4-92b1-eddff82ba71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14495016-0cb4-4257-aab8-bca900d04d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3595bcda-187d-45ca-85fb-6d16f27fc383",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c2e35-0e84-4e1f-ba1d-b0d015294349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09fc5a37-a711-46e1-83f4-c34de7fcd7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dfccd2-7b5a-4d48-bbee-c773f41ac53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2d4b89-c34e-47b4-8db9-b95f7c499844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6b7ab3-a4dd-467c-b160-9138ec13790b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0005e8-7121-4754-9e38-289cb116fd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd606f6b-5891-4f53-acd5-1490eb5ab376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bcc1f6-8066-4f25-a83a-50760d75dcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1be2ce-4fb3-40a9-b499-d5323dc49e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629ca90b-b8a6-49f2-a610-625609e774b6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98281ed-6c8e-466a-8331-d4f8ef2b0631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c39b564-3d5d-461b-a92d-0bad1a90c69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdc6f1a-9bd8-4104-9dae-e384d6f66362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5653a9ad-a1a5-45f9-933c-e185b7c8aafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8547ea47-db5a-45ff-ae02-64ae14866b68",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d316b-8140-458c-b1e1-7f5443076c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2c4101-850a-47c6-924a-85a908abfe74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee82bdd-9753-4c28-a65d-1f76261b40a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8aba9d1-8b6d-4c19-81e0-77558d6ab132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77c509a-2bd9-4630-a52b-c6a365294eed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f2c392-4755-43eb-aa58-bc19f8542151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8182b6-1ee7-46ed-b715-c9695bb505b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63368cfb-75aa-46b2-a678-0c4010f3699f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b19497-4754-48fa-ad00-909deaddf757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86811723-36c5-466a-b026-391b084e9dee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba55268-8971-4fa1-86b9-ad63d1ccaa36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e46289-53f7-419e-95e8-7e19261f05ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5021d98b-35d0-427c-aed6-554c7149c887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9cbaf9-a95b-475c-a4b4-af750dd5f54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e7c2e4-074a-4cb2-8aae-7aa2153793bf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6ea550-b090-4133-b035-612285f5f296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43717d17-81ca-4985-91ca-a7b0830eecef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81394248-d692-4cdd-917d-61456836ed96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98da8c39-0762-4b42-a7cf-1ae44c77926c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ed61f9-014d-40d0-ab91-6bdb299a8912",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1da0ddb-1928-4110-9966-673d3a473dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bede84-1481-4e95-8ddd-a66753c0bbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0ae59e-331d-4e48-ac9d-376458fb5816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271becb8-c66f-4728-811a-5884dc59518c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd41d25c-65b6-412d-acc2-d354d4d15eb6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d2a4d6-5a6a-4e66-b624-2f355770ecf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba01c3da-7351-4a6f-83c5-4c32187af287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a390fb04-2125-4d18-a2c6-f74fdc2a8559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da50de9f-72e3-43ab-bc1f-b87d7ffa4889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8059510-9a9d-471b-8f02-566ae4b77c0b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36afd6f0-4ae7-455c-b541-fca0b12efbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68ee6c6-d3e9-4ab9-b7b5-32f3dfa95407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b6110d-a8f9-4d5a-929f-e02366e99e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4e19aa-de84-47f3-96e3-141b5adab442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a54289-451a-49a6-8fdf-d750c8bd8eec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76a203b-0883-4889-b40b-5676a0ffbf17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd7b0e1-d5fa-4f94-a2b9-c183fe391af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcccf50a-74f2-4945-b53d-2deae4c1c624",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a8e687-0d56-45a2-90fc-67673260c585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b632bca8-8646-434f-9544-59cf6636dbd1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acfa3ff-65e1-43c9-b5c1-4c90d5e1ab5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07792ae-4cf2-4ef9-a405-b4145ff7001f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733cf197-be87-4ffb-b1e8-8127105b424a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2c013f-6073-4ddf-a3b6-59122e0a7b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb80ff70-c2f3-41d5-bd82-48397ec0ea48",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a16589-51bf-42fe-b8bf-472f41f17546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98aa49a-e82b-46d4-9ea0-0f64dca4f2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a743465-d25f-4efb-9efe-9e3f470bc9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f63250-4a4f-49cf-bddf-0cfa1e82410d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e38e7f4-ca68-4bec-899a-1bd7b3e27b02",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297b7d64-9da4-4a4a-9898-530fec1cae81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f5d663-8a02-4f34-aaca-2aa23127c0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37d3795-3ff9-4674-b820-bbd7b9b8b1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b68f2f-289c-4f28-86d9-0082b9299c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c59e86b-1faa-4f17-b9f7-5da4abb47d5d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb88e38-b89a-4822-a833-b00be5bffb48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d2b885-953b-4634-8e35-3b5a88eab62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cfb6e1-8618-4087-b3af-cdc3faadfff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991b4b40-4858-491a-a0d3-a83943f156b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b94e2-2af8-4f55-9f4e-da960357d405",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5742fc64-79d8-4777-bff5-69004c35abd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eca15fa-fe8e-43b1-ab08-b9d9b7be8348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046b0ea4-47c4-4898-ad4b-46b9fcec00e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42af23a8-d75f-4a77-9536-df8439bc7b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4659aad4-7934-4099-9f98-0372e51cacc0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd994ce-b140-41b1-a920-995eb37b05dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ecdfd6-107a-4bbf-95e7-542bc05acd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ebb4c1-cf51-4e8d-a318-56fe97dd9e91",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f328d2eb-2446-4076-a346-e2d903ef8c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4f6821-ac1d-433a-b481-23f059005a3e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c412670-7291-49c5-a257-9f79d45944ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0529bb01-8142-42c8-94c8-ef499e781cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f84301-fba5-4a76-a64d-cc80b5fe76cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671411f9-f617-4a5e-bacf-dc72c4d4cb2c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af7224c7-f683-4621-8bfc-3d82fc44b743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02544875-b2de-4258-b71f-58399368d4c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bdcaadc-db68-489f-bace-135e555b2fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e7f481a-44f2-4edf-afd7-b9387fb3a06d"
                    }
                  }
                ]
              },
              {
                "id": "2078834f-49b8-4a38-a7ba-e59956c1c38f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2541d3a-ba05-4d83-b78e-26eb6a97d738",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0846b058-d4fa-4d0e-94f9-32a5b17dda48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "27de53a3-5416-453a-a9d9-45c1f66abccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2639bbf-a8a1-4e3e-823e-7fcf773e4df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c008d876-705e-4be0-b2f9-846d65a8b52c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99644c74-84f3-4345-8525-5d02ee794d40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c1e218-19eb-4c0c-b60a-5bce25f726f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa8ad0ab-1545-4504-b5c0-fddf39cae59d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5577e604-5a50-4828-8714-f3fe233bab54"
                    }
                  }
                ]
              },
              {
                "id": "b9056804-8ac6-4bc0-97d6-46c209ea2d18",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d8bce8af-8209-4aa9-bb34-b80cf425d7db",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f75b186-c855-434c-b1e2-4ef769e6b320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "483cc2f6-ce41-4da2-b70f-5bbc3cfcf77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0dfdd3-68f7-4dd3-b1ec-0f905f703238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310d0bec-6e0d-4437-b4e9-71e5ae80aee0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2eaa2b93-8f58-4696-9206-41c3fe1066e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c5af338-279d-448e-8a30-a66117e180c0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55e97628-6fc5-4799-9aca-1c75a33e412d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "778c0bfd-158a-4eb2-b557-36963b3890c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b461b3c5-2861-4de5-88af-477d9d974599",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4383cb45-1c32-49d6-ab61-3c965664740b"
                    }
                  }
                ]
              },
              {
                "id": "da392c74-e04b-4d28-a9af-7a5890555960",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8a5e44-768d-4d6d-b8e3-53a350297a14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9521ca6d-cdf9-4bab-829e-52181ae19b48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44138d47-8853-4a7c-b2a1-9dd32b603f61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b266934-ae94-43e9-b829-21d7f4e15270"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1107e015-5dcf-4812-ba03-ea93d1e874e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fbace5ad-f06b-4fd9-8bf8-4a279e165bbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2edb07f0-20a8-4e1b-949e-05c4f601c36e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8c8920c-67d1-4d7d-a072-6faa5aa20f9f"
            }
          }
        ]
      },
      {
        "id": "e2116d28-05db-43d3-a692-3cd36e310486",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b94268cb-b722-42f4-a1ac-5aa708cf394b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "166e03a9-c3c1-4ff3-a9c6-a5068a24856a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc3872de-d179-4321-bba9-d72a54c528f3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7af3548-c183-49d2-a946-d1d87a666e19",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d1b2d0d3-067c-4d63-a4ea-412be85feba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14f42db-6dfb-4c43-ae88-a65b22293ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33fd8b01-298d-4a2e-995b-7cdae1642506"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc7a7bd8-b687-4819-90de-788c316a8da5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aac9a135-8e3f-4c6a-a829-44721a80ece6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cbc5f65-a275-4c02-b6db-a9934039f66c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c18c10f-691b-46cc-b10c-7966a266ed7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1195cec6-3632-4390-82c1-6849fa1eefe9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0503f5e9-c8cd-4a50-be9a-5ec96b1154b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d0c517c-ab0a-45e2-a297-5d1f8d7c9d14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85c29fbc-7482-4633-8826-984113e6f3f5"
            }
          }
        ]
      },
      {
        "id": "c68fd992-0bf4-48d7-9ea6-88b545cc6361",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c3c178f4-e00b-4f0d-ba5e-fdd35ab4af5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c61ae8af-cacc-468c-a956-314b032bc14b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16472c45-762c-4155-8d28-9057bbe010d0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5060d797-20bf-4d8b-882e-18363f326e05",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93468174-84b0-4308-90b2-bf6ae660cb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c2506e-2329-4652-9d81-2dbb75693534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a1799c5-1125-40ad-a799-0d85832962e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aa317b2-faad-4884-a915-17a465a6e13e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f35d6017-5bb2-4a7a-b8d1-a7fe626e1fc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b9e808-6d65-4102-8c9a-8414db256300",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69525bfd-7869-4d3b-86a2-9ddce65c484a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ebef143-39e4-4949-8071-9a054bc335ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea124d4c-b601-444a-80ae-500309bb1e43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2092bfc8-bc2e-40ac-825f-8bb6b4ea8200",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e790bb9-b059-490a-87bb-8a99f32dae7e"
            }
          }
        ]
      },
      {
        "id": "f291e7f2-9925-4329-9e73-aa2f08510f64",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3b42353b-baac-4f3b-99fc-f9f3348f84db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01e800b3-60f4-42b4-aad8-a6be3962c0ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16a7db46-2030-4582-82c0-a01665bd2bb6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a96e693-6a77-41de-b26a-2f72d4c9655d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f82dcad4-2fbc-4508-ac83-df2bb5916a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d600f0-96e2-4c90-a88f-5861b0aabb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df872cc7-dfb0-4018-974e-790ec4d1ab1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8bef870-f3a9-42a0-b985-ab1eced85abe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88236b1b-fb9a-4f05-81f1-373715878f78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd760e3b-f6e7-4514-a6df-4ec6b3d2babc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2cfd9e0-49d2-4489-9459-06ea3f116c5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f011cc32-fffd-4a90-8471-4928cc710646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebfe45b1-bca9-4c69-b694-29788e1f6ea5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c95ca408-9723-4545-a567-343a8e3e3b76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c8893fb-9ce3-423b-ae4a-8a3053c3902f"
            }
          }
        ]
      },
      {
        "id": "91685b52-0bfa-4faf-b765-ec100c8ba3f2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92f7ce5d-8830-46c2-95c2-29e18f62ee2f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f126388c-059f-4c66-858d-3bfeaf902e8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "db2a56d6-c550-4e8e-b439-9e4ce536168b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cf5aa40-0cac-4ae6-a5c3-398a13aa6199",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49c3132d-6c8c-478e-bb0b-0d6e16ea8ecf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 39
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 151.34523809523807,
      "responseMin": 7,
      "responseMax": 12085,
      "responseSd": 800.9680327833419,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728348311928,
      "completed": 1728348358385
    },
    "executions": [
      {
        "id": "42f63c5a-6d44-4ff5-bcfb-7db57555eb78",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "647d36e2-058b-418f-b6a0-cf57361389b8",
          "httpRequestId": "cb638159-28d9-4b32-a440-f25f7e3b6794"
        },
        "item": {
          "id": "42f63c5a-6d44-4ff5-bcfb-7db57555eb78",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "716bced0-f533-4f12-8483-258c338f82c8",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "a09107b3-3cd0-4774-9ecd-02d9f437e921",
        "cursor": {
          "ref": "20cb64a7-0373-4792-9d4d-4e1eb55717df",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6fe08980-85a6-47b8-b62e-1922534da8c9"
        },
        "item": {
          "id": "a09107b3-3cd0-4774-9ecd-02d9f437e921",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f41ba8f1-fc45-457a-9656-ca067398a209",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "44d2bb99-b1ba-487a-af8e-fc1cb83683b4",
        "cursor": {
          "ref": "a28f97f9-7c59-4ed3-a887-aff6d865dc6f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "51d007f9-395b-4427-8509-a83638d5c275"
        },
        "item": {
          "id": "44d2bb99-b1ba-487a-af8e-fc1cb83683b4",
          "name": "did_json"
        },
        "response": {
          "id": "6a47eab6-4e66-48e4-94e5-b16f51a9f81b",
          "status": "OK",
          "code": 200,
          "responseTime": 538,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b5094-d773-4f89-af3a-5e50a083bf07",
        "cursor": {
          "ref": "d5304c1a-8ac3-4eca-b567-bb47f98f0d45",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4bea9c3-94d2-4738-aafd-716897b1747e"
        },
        "item": {
          "id": "310b5094-d773-4f89-af3a-5e50a083bf07",
          "name": "did:invalid"
        },
        "response": {
          "id": "5481aa5d-c660-4e40-a77f-f9ba76b9c1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b5094-d773-4f89-af3a-5e50a083bf07",
        "cursor": {
          "ref": "d5304c1a-8ac3-4eca-b567-bb47f98f0d45",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4bea9c3-94d2-4738-aafd-716897b1747e"
        },
        "item": {
          "id": "310b5094-d773-4f89-af3a-5e50a083bf07",
          "name": "did:invalid"
        },
        "response": {
          "id": "5481aa5d-c660-4e40-a77f-f9ba76b9c1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c168e006-a683-4005-a657-dad37e075c23",
        "cursor": {
          "ref": "8fca1d12-4d34-4d4a-ade9-938c9efb4559",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ea851c13-6454-46d1-8a6c-4463e0e48b5e"
        },
        "item": {
          "id": "c168e006-a683-4005-a657-dad37e075c23",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c9edddfc-2980-46e5-9e21-9b1c21347a15",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2405b5-7170-4301-9d36-5ac80cf9f4f4",
        "cursor": {
          "ref": "cf662b8b-0b8c-4eb6-9ea5-967a69035d4b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0d5f4731-dc4a-4130-8d4c-a9601fe06d19"
        },
        "item": {
          "id": "aa2405b5-7170-4301-9d36-5ac80cf9f4f4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bfaec548-438e-4698-9f91-1e78e0492255",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f06ecdb-72c1-4dfb-b9b8-9c732bb5d9d0",
        "cursor": {
          "ref": "e72d4589-c564-4850-91a9-b484f1918ad6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2e29b02d-d1dc-41ba-ba8e-86f0a14c0e46"
        },
        "item": {
          "id": "4f06ecdb-72c1-4dfb-b9b8-9c732bb5d9d0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a7d7410-d2fe-4cd4-a992-ab5d672eea61",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "60f40201-c5d3-459f-95e5-f57794fc10ae",
        "cursor": {
          "ref": "0fb9ff4f-45e8-40df-9cf5-4a7da099e846",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c50c1dec-0b5b-4342-abcd-85bb22c43448"
        },
        "item": {
          "id": "60f40201-c5d3-459f-95e5-f57794fc10ae",
          "name": "identifiers"
        },
        "response": {
          "id": "864a3f66-6455-4fac-98e6-5d984bb96487",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ae912b-0cb3-461b-9292-bf8805b14b9c",
        "cursor": {
          "ref": "17442d1b-5d67-4a80-9efa-feefa9055878",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6912fa95-11ff-4694-aa7b-ba8b6cec9cb8"
        },
        "item": {
          "id": "39ae912b-0cb3-461b-9292-bf8805b14b9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea1c0a9c-1c45-40db-993a-6d5721684449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3b24f0-f034-4f37-b9d0-424258219f30",
        "cursor": {
          "ref": "984e08f3-0f30-4fd0-b161-f76e20c7ec00",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a0adaa74-54c3-4606-a2aa-088177dedb30"
        },
        "item": {
          "id": "5d3b24f0-f034-4f37-b9d0-424258219f30",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2386aeac-ab3c-4f73-ac9a-47d7b58b8672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af55d56-1f7d-47bb-bc03-9d02153e9306",
        "cursor": {
          "ref": "60672971-c572-40dd-811e-374c390e3028",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "471201ce-0c8f-47bc-a5a6-031f1f216030"
        },
        "item": {
          "id": "7af55d56-1f7d-47bb-bc03-9d02153e9306",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "53c8918a-caa5-45d5-ab37-30f0f1b28e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbecd5c-f18e-4b38-b15f-cfb1af7a174f",
        "cursor": {
          "ref": "61db51a4-bb29-4f8d-9e7a-e4dcd6daf212",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8e690ffb-b6e1-4fce-9478-dc439e8f8254"
        },
        "item": {
          "id": "fdbecd5c-f18e-4b38-b15f-cfb1af7a174f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0ccf9454-ec24-434b-8398-7a19674d3d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce19741-c6cb-42bd-a122-0418ec38adaf",
        "cursor": {
          "ref": "560e2968-b1e1-4c1e-bb26-b21a4427560b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "66bd866d-06a8-45e2-87f8-f2f1f01fa7f0"
        },
        "item": {
          "id": "dce19741-c6cb-42bd-a122-0418ec38adaf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "42f232b3-4c33-4ce1-be44-cef1a21aadad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770530ec-62c8-48d1-89d5-9288961ed323",
        "cursor": {
          "ref": "5c102776-f7a5-4339-a4b5-be80df752e34",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6795de69-9dc9-49ca-9e36-efd48f5e5e0a"
        },
        "item": {
          "id": "770530ec-62c8-48d1-89d5-9288961ed323",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1e76d7ae-25a1-4e42-bfdc-e002c95a1825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31db064-2a93-439d-b44c-fe2be6bf81f0",
        "cursor": {
          "ref": "6cc0f71d-9ed5-430d-b3c5-99a04f1ad589",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c15c84e6-1927-4071-83a4-74a1d7d73b44"
        },
        "item": {
          "id": "e31db064-2a93-439d-b44c-fe2be6bf81f0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "34631a99-0306-4225-80e9-f7c10bd2878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec0031c-5fc9-45ec-9895-0385da9e24e6",
        "cursor": {
          "ref": "d7c5a568-8301-40f6-bb2a-18572a9f89a3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c6c5483a-233a-486d-afb6-24cfaaf40d3a"
        },
        "item": {
          "id": "bec0031c-5fc9-45ec-9895-0385da9e24e6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b8134daa-6c05-442e-8713-1d770c338d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6554f0dc-78d0-4720-a524-41b829d98c29",
        "cursor": {
          "ref": "d3612dde-9a41-4260-8ea4-7bf15a845033",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "33999fe2-f705-4bf0-9074-5a2273c215bd"
        },
        "item": {
          "id": "6554f0dc-78d0-4720-a524-41b829d98c29",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b3734e95-76de-409d-99d6-652529fefcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29bda1d-b872-4c2b-94a3-c5f46c1d132b",
        "cursor": {
          "ref": "48d46eb1-1182-4c9c-b6d8-375c7e0b3b8d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d69c4938-816b-4118-9171-628a79f23453"
        },
        "item": {
          "id": "f29bda1d-b872-4c2b-94a3-c5f46c1d132b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f68617d9-2a6a-4fe2-9fe9-465ff7827be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6588c7-96ea-49d1-b4f9-0866e49d1aa3",
        "cursor": {
          "ref": "ac4c1653-4043-47bc-a926-274c8ce5a056",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9355095b-9b8c-4ba5-95e2-b12477693f26"
        },
        "item": {
          "id": "4f6588c7-96ea-49d1-b4f9-0866e49d1aa3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a11a2127-65c6-42b7-bb45-0c138800efdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b81752-2cf5-41a3-aaca-2366efe7056b",
        "cursor": {
          "ref": "9a061f6a-e2a9-4f1c-aff3-1a10749a4354",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "32a1e9f6-9bab-472c-9e32-2bdda0e94375"
        },
        "item": {
          "id": "d4b81752-2cf5-41a3-aaca-2366efe7056b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dba92224-d21a-44f5-b461-e193e5ce6ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b630bc7-1345-4095-9f41-6dbc3b7df0a2",
        "cursor": {
          "ref": "28adfd61-4092-4e58-9330-34cce5ab59b9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d8d388df-a1b6-4de9-9c46-45daf1a1cb21"
        },
        "item": {
          "id": "7b630bc7-1345-4095-9f41-6dbc3b7df0a2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6703307e-5d70-4743-bb02-42445c17843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd537085-d96d-41f7-94aa-100e662bd724",
        "cursor": {
          "ref": "2ed474c6-baf7-4c2f-9e6b-d1c0d2cc7e87",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "29d8a4f0-fc26-44d1-a7d9-eff1a1445ebc"
        },
        "item": {
          "id": "dd537085-d96d-41f7-94aa-100e662bd724",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2fa614ed-c110-41e0-aa65-9c7c6ce4e69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aea0b03-ccaa-486e-ac99-ca325be1fdf4",
        "cursor": {
          "ref": "bd99a1cd-445d-491e-a9a4-08ea23869204",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ab5ac765-d58b-4ff6-8ee4-012ef41a1933"
        },
        "item": {
          "id": "0aea0b03-ccaa-486e-ac99-ca325be1fdf4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7b37500f-fd81-438e-bb8b-425c468df131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c097a9-c05d-47b3-aa3b-d0aa7816b642",
        "cursor": {
          "ref": "704b5993-2a06-41f5-97ef-22f74abca94b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f4c11d74-c136-4ab9-b7ee-ee70df70c1a0"
        },
        "item": {
          "id": "74c097a9-c05d-47b3-aa3b-d0aa7816b642",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b5aea444-9d05-46d0-9b7b-cf02b5f29a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3826c0a3-2314-40e6-b276-681afdea08fd",
        "cursor": {
          "ref": "c9d0412a-4f03-4e91-8d8d-b22e10e2b95b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "688ed0bb-9e87-4be1-bc32-1bc899d993e9"
        },
        "item": {
          "id": "3826c0a3-2314-40e6-b276-681afdea08fd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c09c2574-693f-49b2-ac86-ffff51e6aabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36d8555-ce17-4b87-9d33-83364e0d05ea",
        "cursor": {
          "ref": "25107f66-ff21-4bc4-bcbd-40d92fd988d9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "58b00676-b880-46aa-95ef-fbfc265925b7"
        },
        "item": {
          "id": "c36d8555-ce17-4b87-9d33-83364e0d05ea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "60265893-d52a-4260-aed4-fc44700ceee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8d56f5-1f7e-4459-8e86-049d7081e0d7",
        "cursor": {
          "ref": "12a06de6-14aa-4207-856a-07b3198e34d7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1261054b-c5c0-4981-a389-e2255e565309"
        },
        "item": {
          "id": "8a8d56f5-1f7e-4459-8e86-049d7081e0d7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ce2eea2a-e346-4131-8a11-9d5e1db64e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc077455-8df2-45d5-8d16-3f9999392e09",
        "cursor": {
          "ref": "55a95ef8-788f-427b-b925-60ae8c72e5bf",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "53c76f39-e1c6-44bd-a5f9-b62414b56cb6"
        },
        "item": {
          "id": "cc077455-8df2-45d5-8d16-3f9999392e09",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eddad8e3-1fda-4c61-9ba2-896e3b978388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9929d875-e29a-410b-ad19-9476672129f3",
        "cursor": {
          "ref": "b1a532c6-53df-4552-9456-c29f1333473a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "29b461b8-cfd7-4163-882a-f63aee77940d"
        },
        "item": {
          "id": "9929d875-e29a-410b-ad19-9476672129f3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d459e5fc-8c39-471c-9a87-da981eb67a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71d6670-36bb-4ed8-b44e-1351f1cad9ac",
        "cursor": {
          "ref": "62bca225-c50d-4b2a-b742-2a12ee2bcf48",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fbebb0d6-055e-4a7f-acf4-498db82b5aee"
        },
        "item": {
          "id": "e71d6670-36bb-4ed8-b44e-1351f1cad9ac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "98b03f5d-e8f4-4fed-8e1c-9acf28974453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0b1162-1c43-495b-9b8b-a8feda95af95",
        "cursor": {
          "ref": "18d9e0ab-a254-4e13-a6a7-adf8a7ae1eaf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c41b3c96-beb3-4f3e-94fe-4fd32e4ca394"
        },
        "item": {
          "id": "df0b1162-1c43-495b-9b8b-a8feda95af95",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b8e30de1-d0fa-4e5d-b62f-81aa874b7df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd704707-f7b5-4e85-a8eb-0e773064f14f",
        "cursor": {
          "ref": "7f8cdbdc-3756-45b4-99c9-6cfc32010534",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ac337e24-9b1d-453b-b10e-31822949f9ff"
        },
        "item": {
          "id": "dd704707-f7b5-4e85-a8eb-0e773064f14f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b0ab1cdc-27ff-4df2-ab64-eefcd25bcc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffd5400-887d-4361-ac64-126a1f7002f2",
        "cursor": {
          "ref": "bcadf583-686d-4b13-b6aa-14624768560d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c3f536a5-a546-4390-80f5-c99c939fe807"
        },
        "item": {
          "id": "dffd5400-887d-4361-ac64-126a1f7002f2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "17bb342d-abdf-49c7-a66f-907942f6f36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6907670-061a-4fb7-ad4f-cb4b918e9f56",
        "cursor": {
          "ref": "8d671501-884d-4634-bea0-b7e9f714072f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "03b4c959-3293-429d-b016-31468886437f"
        },
        "item": {
          "id": "d6907670-061a-4fb7-ad4f-cb4b918e9f56",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "994c240a-4f92-47db-80af-9b190c8836ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06e571a-b59e-415b-933d-9c5c4e0f01e5",
        "cursor": {
          "ref": "43cf678a-f065-4ccd-af91-59ebb860b7d0",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8426e147-d930-4f6f-9157-1c9d3367957d"
        },
        "item": {
          "id": "f06e571a-b59e-415b-933d-9c5c4e0f01e5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "084c9974-4c66-4378-a678-3e0767c46ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee6eae2-4f82-4c98-bb06-e95f63d5d331",
        "cursor": {
          "ref": "e5ba4b96-ad42-4478-a9a5-4c5ad181a042",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2af9106c-21dc-4286-bde4-3c27bbaa15fc"
        },
        "item": {
          "id": "dee6eae2-4f82-4c98-bb06-e95f63d5d331",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6fdde97e-30e1-4aee-b6e2-b2527277a636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c4b567-d8e2-41c1-a250-840db538531c",
        "cursor": {
          "ref": "3da4d419-6d88-4d3e-a0cb-e09fed7d8eba",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b1741758-339e-4210-ac5f-9cc0c509a61e"
        },
        "item": {
          "id": "44c4b567-d8e2-41c1-a250-840db538531c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0a3776e7-3272-465a-ad2a-36efb4af46be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb097fe-fe60-4273-8090-93ab9201a1a7",
        "cursor": {
          "ref": "b6046107-0b86-4ac9-98fb-116518131d43",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "52f73f52-b1f0-4125-830b-50eb1f367b31"
        },
        "item": {
          "id": "6cb097fe-fe60-4273-8090-93ab9201a1a7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3564fb63-d2fc-4f83-af55-85316864959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cdf2d1-f0ab-4997-8ea3-32c0faeb3c1c",
        "cursor": {
          "ref": "139c7a0c-e5ff-42cb-9de0-85bc2e5aaf53",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "961a8435-3e8c-4fd4-bee5-bc5b8be22895"
        },
        "item": {
          "id": "56cdf2d1-f0ab-4997-8ea3-32c0faeb3c1c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cad61586-e4b9-456d-8620-24a8d13da9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffa4bbd-0401-47d8-8883-4dbfc9f3339a",
        "cursor": {
          "ref": "63c71032-060f-4ea6-9cc7-af8ec8dab2ec",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "922b89de-8115-4d50-90cf-35e976d6e24b"
        },
        "item": {
          "id": "6ffa4bbd-0401-47d8-8883-4dbfc9f3339a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "62b65df0-8f86-4193-8012-75c39ac22ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38896f3c-5341-409c-8d18-0db131f38d29",
        "cursor": {
          "ref": "16859e98-e012-48ed-ab01-19699d0a11e5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7b9099cc-eab4-41c9-a85f-5a4db4d693f9"
        },
        "item": {
          "id": "38896f3c-5341-409c-8d18-0db131f38d29",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c5946d26-4aac-4762-b28a-bb0bee10b3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676b83f9-f8e3-433d-b8e3-113a1613a6bb",
        "cursor": {
          "ref": "af0e2916-8393-47fe-9971-0804ffa0ddd5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2027b169-10a2-4743-954e-a47389184741"
        },
        "item": {
          "id": "676b83f9-f8e3-433d-b8e3-113a1613a6bb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "785c49d1-5658-40f6-a78e-bc841ebaa409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b01473-92de-4828-a6e8-824f5effa8b6",
        "cursor": {
          "ref": "23cd8f7e-6be3-436b-bcf8-f1dcf963ffcf",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7da374d8-3ace-4095-8e06-ee7f480c8c93"
        },
        "item": {
          "id": "25b01473-92de-4828-a6e8-824f5effa8b6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5bf202c5-d206-4824-82bf-a63fad120851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f241385-40b6-4ea0-a7e1-ff260739deb4",
        "cursor": {
          "ref": "35a0476a-0621-44e2-ba51-6fef90d004f5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1f665b91-a617-44a9-af32-1afd646dd752"
        },
        "item": {
          "id": "1f241385-40b6-4ea0-a7e1-ff260739deb4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "85941653-0093-46c8-8f9a-d4e95553bbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb661ad-8a76-4986-8ec1-4f9754746ec6",
        "cursor": {
          "ref": "8a5da3cd-70f4-47dd-bba1-afb9c9287e5a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a24cccad-1b69-405e-965e-c2977ee5cebf"
        },
        "item": {
          "id": "aeb661ad-8a76-4986-8ec1-4f9754746ec6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0e0e6d32-aaa3-4b14-b557-c054af13f2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807d6e68-cd40-4263-aaa0-05184c672129",
        "cursor": {
          "ref": "2eaa0065-aeab-4fc7-a9e1-4ee2d8762a68",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dbfcf852-7304-47b6-801b-9f55d79e32b9"
        },
        "item": {
          "id": "807d6e68-cd40-4263-aaa0-05184c672129",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7f9ebe0a-2ef1-409f-96d6-e2c81368d774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1644034-4da3-4a4f-a23e-86423d2e3296",
        "cursor": {
          "ref": "894e523f-eaa0-4a41-9836-40f79b9fcc41",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e338b5e9-d535-40ad-bbc1-82e6f6ae4314"
        },
        "item": {
          "id": "b1644034-4da3-4a4f-a23e-86423d2e3296",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f90564a6-350e-4a13-a5ba-e2e3231ec552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d124e31-bb80-4b45-bed5-06acf1d94c6a",
        "cursor": {
          "ref": "f57aab72-f515-4ef7-882c-f320a068bbed",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "49269c64-e410-4cca-8a5c-61d25cb2b6de"
        },
        "item": {
          "id": "7d124e31-bb80-4b45-bed5-06acf1d94c6a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ba8b1b7f-d155-4b21-a194-0f15b5841122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9661774-0968-4091-abf6-7d4370ebc23b",
        "cursor": {
          "ref": "00954846-c3f1-4927-be87-a71ec770a5d9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "411d0fcf-72a3-4b01-ba8f-c1afc915fb13"
        },
        "item": {
          "id": "a9661774-0968-4091-abf6-7d4370ebc23b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c90a826d-f863-4b2f-85e7-773b0315391c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0514de24-db17-479a-8ab8-f9a50a47eb9b",
        "cursor": {
          "ref": "89f26323-00c0-4c1e-9af9-ef4cee655248",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "668cfc09-d456-4b41-bfe3-6c0b8b4072a4"
        },
        "item": {
          "id": "0514de24-db17-479a-8ab8-f9a50a47eb9b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "21ba2e74-3b43-451f-a3b7-82c7045bf264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a049bb-298c-45f0-b7cf-de3c5e1701b3",
        "cursor": {
          "ref": "37d64aee-89dd-4c69-98bd-114f20378460",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "28c51fb7-469c-499d-90e6-d8b2e3224ff3"
        },
        "item": {
          "id": "28a049bb-298c-45f0-b7cf-de3c5e1701b3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d6e5256d-bf69-4190-bf79-e32c88c476f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d3af1c-20a6-4990-b8a0-a2a49f9ba869",
        "cursor": {
          "ref": "a5963c7e-8fe9-4fcd-8104-546ebafb50d4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "21dd4ad5-bf5d-4362-a00e-29ad4fa43cd6"
        },
        "item": {
          "id": "82d3af1c-20a6-4990-b8a0-a2a49f9ba869",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f356db45-966b-4530-b4c6-74452352b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a875c5f-a505-4a40-aaff-fd8ee8799924",
        "cursor": {
          "ref": "ca0e1b3b-632e-4277-9f90-57845661d3e3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "589a8e2a-44ee-4373-9bec-a7b69f17f36c"
        },
        "item": {
          "id": "9a875c5f-a505-4a40-aaff-fd8ee8799924",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "321aaa34-7a89-4f86-8745-a983a9eb7111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb703bd-8321-4274-bc22-3c823f3aade8",
        "cursor": {
          "ref": "19c2e075-20d2-437d-8236-631b53c0692b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8640043c-6842-4584-b053-088f005e5990"
        },
        "item": {
          "id": "5fb703bd-8321-4274-bc22-3c823f3aade8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0f0b0d1d-5708-460e-a69d-9e7e1478e746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b113cc17-b90f-4ae2-9c67-849ce6c61ea7",
        "cursor": {
          "ref": "9c5ca254-83a0-43c1-90a9-cde293dde597",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f67578ea-7640-4d07-81e9-b4051cb58d21"
        },
        "item": {
          "id": "b113cc17-b90f-4ae2-9c67-849ce6c61ea7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1fef6bf8-0f69-4454-9667-843c2d47c796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a240860-f27a-4c80-abc0-73051c468ef0",
        "cursor": {
          "ref": "4c0982bd-a2e2-44ad-bb0f-73e0cbf58cb3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dfa8cc11-0c1d-42a9-9da2-5736459a1c78"
        },
        "item": {
          "id": "7a240860-f27a-4c80-abc0-73051c468ef0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dc9e56dd-144c-4cae-82ad-8206856d7772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583ae55d-9a19-4d9f-bff6-1665324403ef",
        "cursor": {
          "ref": "5045069b-59a7-4f5a-b420-f4dbe52f2c3b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2e693d34-959a-4131-a46c-abd1da5737c8"
        },
        "item": {
          "id": "583ae55d-9a19-4d9f-bff6-1665324403ef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c033f6f6-49df-41b9-860c-91545ff805c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e454af0-8078-47cc-8054-2b220f06ac48",
        "cursor": {
          "ref": "6029fb07-2e30-452b-9d00-c291415171da",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3c53e6ce-d1ce-4732-b20a-a5a66e2b0f08"
        },
        "item": {
          "id": "5e454af0-8078-47cc-8054-2b220f06ac48",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f4664255-31da-4b26-b13a-570fccb0e21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ea3bb1-373b-4b5e-a673-c439f1ce9441",
        "cursor": {
          "ref": "340e82f4-a069-471e-bf27-6d55f6187662",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ddc6423b-3573-48fd-b245-32b3d536c3e6"
        },
        "item": {
          "id": "c0ea3bb1-373b-4b5e-a673-c439f1ce9441",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33f4726f-d8bc-423b-8894-25b81ad760a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6182032e-601a-4652-917f-8f1540c4b73c",
        "cursor": {
          "ref": "cc337466-3c99-4f7b-9cb2-85662aa3aa27",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "27218c29-6470-46a9-a69e-6bd4a598ba7e"
        },
        "item": {
          "id": "6182032e-601a-4652-917f-8f1540c4b73c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f11ecfd6-7c4d-4940-bafa-944da114877f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51387fbb-dad6-46c3-8ee5-27db4cff0420",
        "cursor": {
          "ref": "52e33887-e474-43d9-885c-585ee4a98573",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e6f6feac-1703-4e90-8a71-4edfafbf1546"
        },
        "item": {
          "id": "51387fbb-dad6-46c3-8ee5-27db4cff0420",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f9e9616a-f47c-4d82-8789-668e8dbc88a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c107ebef-33cc-48b9-a70e-f1d1036b8d1f",
        "cursor": {
          "ref": "2a2043c4-536f-40aa-a487-050afc59135b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "82a24ece-4dae-4cc8-b6d0-c8f2ee500b42"
        },
        "item": {
          "id": "c107ebef-33cc-48b9-a70e-f1d1036b8d1f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f5130175-51b0-4a52-86ce-88662c0ba5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58f0e92-56fc-40c9-a868-bdc79e24fd6a",
        "cursor": {
          "ref": "8c8f4fdb-ab27-4f9c-8eb9-27a1f96bcfcf",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ef6e3a23-e1cc-4100-81c6-bf29b66904a6"
        },
        "item": {
          "id": "b58f0e92-56fc-40c9-a868-bdc79e24fd6a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c0e7b7d9-c82b-4720-a1b6-ea5201a39184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b190ec-7603-45ed-926f-33b83dd85ac2",
        "cursor": {
          "ref": "0c7736e7-f061-4a73-9762-5ab33911628e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ab2c6bbd-1ac9-49dc-939b-b17e2433387c"
        },
        "item": {
          "id": "23b190ec-7603-45ed-926f-33b83dd85ac2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "227e9b8f-4505-4278-9ef0-b0011f835aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e184d1d-b925-4545-89be-b736993b9156",
        "cursor": {
          "ref": "6a272c00-7d3b-4fa5-a331-480650c3877f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "87e3d268-b5ca-47d4-81e4-544812ac59e1"
        },
        "item": {
          "id": "0e184d1d-b925-4545-89be-b736993b9156",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0a049dc9-5e49-413e-8ff8-83401768c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4ed51b-28a1-4065-a9b7-19da31ee4a41",
        "cursor": {
          "ref": "115bc64f-7b78-47cd-adb5-c3074d0866ab",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ef0a8d90-32c1-4b2e-b128-e6e439f54ea6"
        },
        "item": {
          "id": "ac4ed51b-28a1-4065-a9b7-19da31ee4a41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "812f145a-8fdd-4d1e-bd5d-25551080ee8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ae0fe-5124-436c-b657-cb68b0a8b904",
        "cursor": {
          "ref": "3c6df2f7-8249-40e9-9f4b-3e729c09d53d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f55cd2f8-f1e1-4826-948f-aeaaf485970e"
        },
        "item": {
          "id": "413ae0fe-5124-436c-b657-cb68b0a8b904",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d683a0b2-3502-453a-83aa-506f362e550f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febb01e2-f9cc-4464-81e7-e18a7e93df4e",
        "cursor": {
          "ref": "42089d97-806f-4d53-a79c-dcb4a9af2faa",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a56835b2-74be-45e4-b76b-468d5496bbb5"
        },
        "item": {
          "id": "febb01e2-f9cc-4464-81e7-e18a7e93df4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b603673c-a53d-47a6-b524-5fbcb204fbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68be51a8-9657-4f7e-a5da-e249d13689e2",
        "cursor": {
          "ref": "ef0cea1f-f6b4-45f1-be22-6082d58b4838",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b1fe7a9d-62bc-48bb-b17c-045564458bbb"
        },
        "item": {
          "id": "68be51a8-9657-4f7e-a5da-e249d13689e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "811da399-7782-4613-af74-356f3561ed1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34371450-e984-4f6c-aaa5-362db755f8ff",
        "cursor": {
          "ref": "3e6e7f6b-83c5-4fb6-8d12-1bd8cb77fbe8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "64249c61-c775-4215-9c08-a1251474b7cc"
        },
        "item": {
          "id": "34371450-e984-4f6c-aaa5-362db755f8ff",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8a09b651-2872-4efa-aa5f-442ffa4c41b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c323e6-209e-4069-b696-2320d1c4a8d6",
        "cursor": {
          "ref": "c0fd0f80-90a4-4be6-b148-fa38f76fcdce",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "61322226-183a-4e34-b7a2-4fad49320194"
        },
        "item": {
          "id": "a8c323e6-209e-4069-b696-2320d1c4a8d6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "59ad7bb2-ddd4-415b-8904-ae6d18b7c454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ac0b74-7d29-4af7-9cad-db3668d9fec0",
        "cursor": {
          "ref": "208380ad-b35e-41e1-b372-934941752a3c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ff783839-819f-4ba9-9356-d6214c3158e0"
        },
        "item": {
          "id": "99ac0b74-7d29-4af7-9cad-db3668d9fec0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e187889e-6c32-43be-a769-c86e19281279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56df2af7-7a1c-4986-8b80-34a1c60dd7ee",
        "cursor": {
          "ref": "ca0a82bb-4670-4e8f-b835-3b10836bddf5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d7212bbd-0ba5-498d-9da1-cf06d3c33a95"
        },
        "item": {
          "id": "56df2af7-7a1c-4986-8b80-34a1c60dd7ee",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e59fa88b-ac9f-46b7-96cc-a340a6a2155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bbb99d-b7de-4915-9729-f635b16456ee",
        "cursor": {
          "ref": "24dfd87e-ce29-4cf4-8d48-bd25c1cb0a13",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "85000a31-43da-43b3-b72b-005d2e9d637c"
        },
        "item": {
          "id": "39bbb99d-b7de-4915-9729-f635b16456ee",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab3f3fe5-1953-4d5f-a774-0cb80ed7d54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bb1f3d-3079-499a-bf25-0add679c45c2",
        "cursor": {
          "ref": "4b86d445-9991-4f38-828a-e9d4426bf364",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b795b90b-fd85-480e-b744-dc54b3a023ff"
        },
        "item": {
          "id": "80bb1f3d-3079-499a-bf25-0add679c45c2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "259c8638-6ba6-49ff-a994-16ff4f35d2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914ef0c1-6179-4fa7-94b5-d2f91719f143",
        "cursor": {
          "ref": "a0c5a0b4-5c24-471c-9ae2-a838d9f0ed3f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "be1d87b0-db79-4b29-a27e-c9831f56c77c"
        },
        "item": {
          "id": "914ef0c1-6179-4fa7-94b5-d2f91719f143",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d992915f-e7be-4eb9-a425-5e5ccb355527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e58f7bb-af70-48ed-ac35-2ef947cd8e3b",
        "cursor": {
          "ref": "c7f02780-7f84-4a74-8f3e-3fcd546db0ee",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3198b5d9-cfb4-4339-903c-690172819b04"
        },
        "item": {
          "id": "1e58f7bb-af70-48ed-ac35-2ef947cd8e3b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6a73d9ce-9e7b-42e2-9bff-8362afbebe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df32510e-203c-4b50-8349-24e5df1f9466",
        "cursor": {
          "ref": "1c167ad4-6ce8-406b-9530-51d79f5cfaba",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1b080f52-9ba7-45af-88e9-b056c39e18b0"
        },
        "item": {
          "id": "df32510e-203c-4b50-8349-24e5df1f9466",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f407a6e6-0bb8-42fb-a204-5cb16dcb17e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef46b59-5938-4c7f-a847-3e59e0bffb89",
        "cursor": {
          "ref": "a8e8ca10-ebdd-4537-b628-66fc1a27d82a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f6d656a2-1bef-47d9-9fd8-6af7c267dd0b"
        },
        "item": {
          "id": "2ef46b59-5938-4c7f-a847-3e59e0bffb89",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2e7f3e6d-8540-4144-9e60-8e0b1639cfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ece5265-fbfb-438d-9498-bad28475819a",
        "cursor": {
          "ref": "6f18d243-134b-45e5-875e-85220be0c6e8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "96d86ef7-ac35-43ab-93a2-2d60a13e47f1"
        },
        "item": {
          "id": "1ece5265-fbfb-438d-9498-bad28475819a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "45527420-b77e-48f6-b22d-88b288147321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bb927e-ebf9-44c0-9b32-ed5e0c20320d",
        "cursor": {
          "ref": "f8dda639-dfeb-4d40-8efa-adb34c638e21",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2e10b76d-4c58-4975-8786-e022c0b5866b"
        },
        "item": {
          "id": "d2bb927e-ebf9-44c0-9b32-ed5e0c20320d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f8bf2a9d-d205-4ad5-8edd-9e1ef4d73d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27e2d0e-5253-4119-81c7-879b883b5a53",
        "cursor": {
          "ref": "087133b7-8b43-4f1e-84ac-e3175b7630f0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0c483532-b520-4907-844f-04e765950d5e"
        },
        "item": {
          "id": "e27e2d0e-5253-4119-81c7-879b883b5a53",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4f58ca2b-c23b-4d3b-9dfb-51b4e7365996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f950b97-bea5-481f-992a-4b43821e748b",
        "cursor": {
          "ref": "a0397167-f0a4-4da4-93ff-a741cc9e0abf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2c38849e-8039-4db0-bbec-7d0529b8dad6"
        },
        "item": {
          "id": "8f950b97-bea5-481f-992a-4b43821e748b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9cfd6b12-fa62-4ebd-ac79-0963dd2cc8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde48f38-d236-4c40-94ab-0d11071cba7b",
        "cursor": {
          "ref": "5a9e3ea2-3af9-4c10-b70d-27da30a07feb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3655686f-3d8a-444f-a28a-d1579aab1d65"
        },
        "item": {
          "id": "dde48f38-d236-4c40-94ab-0d11071cba7b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7f87ef43-7a67-418f-a92e-4f35faf3b7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775007e8-3e51-4b13-9dfc-946e45f85018",
        "cursor": {
          "ref": "5508907e-ef09-4168-bb40-58501c1b77c0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8a420978-4c9b-4192-a963-89ffc05e4b20"
        },
        "item": {
          "id": "775007e8-3e51-4b13-9dfc-946e45f85018",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eb1d0976-f569-402e-a338-9c4a499602ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63583418-bcd4-4b90-9ca4-50528a44b7d8",
        "cursor": {
          "ref": "7dd66538-d20f-413b-bdfa-61cb15a9d4f3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e9abab5a-b0a2-458b-b65a-197369900e2a"
        },
        "item": {
          "id": "63583418-bcd4-4b90-9ca4-50528a44b7d8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "15bb577e-562a-409b-b181-6298ffebad91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11700603-2dd8-4a80-886f-2729a6b9b011",
        "cursor": {
          "ref": "99bf1e2d-0b86-4180-be86-00361e0a17f5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fb547b3b-a34d-4b8e-9e9c-e1392ac9d17f"
        },
        "item": {
          "id": "11700603-2dd8-4a80-886f-2729a6b9b011",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f87b1fb9-0d95-48d1-bf1d-7d2b94341f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e64474-afce-462c-8eeb-fb21d5951b7c",
        "cursor": {
          "ref": "7cbb839b-818c-4cf2-8a91-1946d573d1cb",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "de34e6f5-7110-4750-b668-bf1e855a9fd9"
        },
        "item": {
          "id": "c8e64474-afce-462c-8eeb-fb21d5951b7c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e7ba9647-ee47-4f95-8067-fd4aa198b0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47a1da2-880a-46ae-a1bf-b43dee0cff9f",
        "cursor": {
          "ref": "ac218b55-5bce-4c7c-80c7-bbf04922ff09",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5ff49d18-c429-4a3c-9af7-8384fc30914c"
        },
        "item": {
          "id": "d47a1da2-880a-46ae-a1bf-b43dee0cff9f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d47045bd-7b91-4e84-82c3-2a9339861c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfa9ef3-9290-4ac0-b9ea-c996d5c8eec4",
        "cursor": {
          "ref": "1127424a-54da-4cc5-9e38-05930c53c23c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "76176d14-886d-4faf-a507-a3b15bef3ce1"
        },
        "item": {
          "id": "7dfa9ef3-9290-4ac0-b9ea-c996d5c8eec4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b3a7e0e1-f3da-4e3d-9975-5830cd9b9255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a9287-39d0-4159-a403-12a4396f36ab",
        "cursor": {
          "ref": "ee78c97a-259c-405c-b459-d2c7c2c23ad9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e2ffcfab-1181-487b-bb4b-253a5e560ea5"
        },
        "item": {
          "id": "238a9287-39d0-4159-a403-12a4396f36ab",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "87ee66f5-05aa-42b7-b9c3-80bad03f5797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5af611-4c2b-4cf6-997a-8f8827827395",
        "cursor": {
          "ref": "e9d60980-06dd-4809-9dec-5584f77cd6f6",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fa1ed442-6f1a-493f-b599-7e41c62df282"
        },
        "item": {
          "id": "bb5af611-4c2b-4cf6-997a-8f8827827395",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8abefafd-90dd-43a4-adf6-3fc06b915d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9816f956-fd61-4057-8b5a-1e4f44425c1c",
        "cursor": {
          "ref": "00f23998-c924-48ef-978e-94b826ee90d9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4089d3ae-e95b-4f63-bcb5-5eec05076818"
        },
        "item": {
          "id": "9816f956-fd61-4057-8b5a-1e4f44425c1c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "51cc345d-edc8-4aa8-9456-02422c9db95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda5ee32-861f-40a2-a8f1-64fa6cf5a305",
        "cursor": {
          "ref": "c7121028-0b31-4eda-aa6d-d843274d3b53",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "08452e7f-0f12-4768-8d63-41aad02a45a2"
        },
        "item": {
          "id": "bda5ee32-861f-40a2-a8f1-64fa6cf5a305",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5ef8bf75-e783-49b8-8be0-39851800d3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084ebcaa-c19e-499f-acce-8070e9dfa23d",
        "cursor": {
          "ref": "73c4bc96-1224-40db-a8de-702d384a5e27",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "107a5210-2360-43d2-bcdc-464b81e01f88"
        },
        "item": {
          "id": "084ebcaa-c19e-499f-acce-8070e9dfa23d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "91ac5ca3-27d0-4b7e-84b6-4c8f08ece4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165fb561-c68e-4039-be22-522bc97c3ab3",
        "cursor": {
          "ref": "e8bf6b2c-1d93-4468-9f3a-821832cdfc71",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e7d21104-9fe8-4d87-b607-a49a997b196e"
        },
        "item": {
          "id": "165fb561-c68e-4039-be22-522bc97c3ab3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5f386967-575b-46a7-9766-123edf9eeee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ea5307-5c92-49ce-ab0d-fc49bfdbc49f",
        "cursor": {
          "ref": "f86c8c7a-7994-41bb-bb52-6603000091b0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "39de4097-1019-4d16-ba93-2310b88c6762"
        },
        "item": {
          "id": "a5ea5307-5c92-49ce-ab0d-fc49bfdbc49f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fc77596c-d186-4060-9374-d86d0ed2dd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666594ac-ae28-499f-beab-69571860c812",
        "cursor": {
          "ref": "ed4e7f0a-3984-426b-b551-33a9d7d14850",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e0272fa3-916b-4c8b-947b-3b4a3db065f7"
        },
        "item": {
          "id": "666594ac-ae28-499f-beab-69571860c812",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "55680c4b-d3ad-4f52-bf34-c9235ccf95a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de1e3a-3e85-4efa-a70d-18e96ac9955e",
        "cursor": {
          "ref": "4cd787f9-6c85-4538-b711-a53da4af5f4a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "db37717e-8fa2-4ad9-9a3d-7c57ad3cd5c4"
        },
        "item": {
          "id": "94de1e3a-3e85-4efa-a70d-18e96ac9955e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3a013bbb-da95-4870-bf86-5540b1c14206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36420dd5-15e4-4462-9034-8f46d031fbc7",
        "cursor": {
          "ref": "405fc2de-196d-4baf-9684-222bf90a2f23",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bfd403ad-0bab-443e-8180-51dcfc4521b2"
        },
        "item": {
          "id": "36420dd5-15e4-4462-9034-8f46d031fbc7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "95cd0ba0-b228-4848-b904-14357f804319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dd7539-8d1f-44e7-88cf-e7cedaf7d0b5",
        "cursor": {
          "ref": "1b9b2978-32cd-4991-94e0-2ddef524dda6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "990c6fea-ff37-4495-87b0-254b41f9bdc5"
        },
        "item": {
          "id": "57dd7539-8d1f-44e7-88cf-e7cedaf7d0b5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "af5f3a2e-9c44-4e7f-83ad-bf3d1f77caa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe6de98-514e-41bf-8678-ac4348b5f95c",
        "cursor": {
          "ref": "20ce302b-4d8d-45bb-9c90-d3be72df9e89",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "667576ef-bd29-4c45-86fc-a0aca7f1db4c"
        },
        "item": {
          "id": "bfe6de98-514e-41bf-8678-ac4348b5f95c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "85f75af4-7656-4e90-beb4-212e4881f300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "14eb5bbd-7801-4a3d-96d2-fbb0672ddedf",
        "cursor": {
          "ref": "45201422-1076-4a90-b294-ba70350ea069",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f6169e11-b17a-47aa-81c8-33a042c79c33"
        },
        "item": {
          "id": "14eb5bbd-7801-4a3d-96d2-fbb0672ddedf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6b30d00a-fcc9-4e66-ab46-5824c8d3db72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "40b19810-b3d2-4ebf-9ed1-a6caf5dd72bc",
        "cursor": {
          "ref": "e80ba532-fb7a-4642-a312-86e3ac7cbb72",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0f9aa918-674a-4f1a-a9ee-e7f482a52b27"
        },
        "item": {
          "id": "40b19810-b3d2-4ebf-9ed1-a6caf5dd72bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3a2b583d-a784-4722-8ed2-db4c2690708a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "59bbe62b-7cc2-4b5c-a789-0938d09b551a",
        "cursor": {
          "ref": "24f4538d-7963-4462-835e-31512a4930ce",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "da2f63de-ba64-4ff2-a55b-573fdef1c18b"
        },
        "item": {
          "id": "59bbe62b-7cc2-4b5c-a789-0938d09b551a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6ed54ee5-bb28-4785-b892-47b18e056535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bc312354-b992-4878-999c-248a4c59edd1",
        "cursor": {
          "ref": "a0967115-c256-46b7-9085-9b158f9ff08a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bd28ce40-6b4e-4982-9558-59720f417ffc"
        },
        "item": {
          "id": "bc312354-b992-4878-999c-248a4c59edd1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bde9d127-a188-473b-af75-9942a1bff163",
          "status": "Created",
          "code": 201,
          "responseTime": 12085,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d6b5e7-5bdf-42ec-9c8e-17b921ebfddc",
        "cursor": {
          "ref": "f7bbfea8-40a9-47b8-9b5b-7194d9fa9c1f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6d34a890-3fd0-42e9-b2f8-d266787dbef7"
        },
        "item": {
          "id": "78d6b5e7-5bdf-42ec-9c8e-17b921ebfddc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f0e73b19-0ae2-405b-bc7b-77e3154bfb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "31330fd5-ba52-49ce-9dba-fb094a0197d7",
        "cursor": {
          "ref": "a683acbf-a5a7-4130-839c-3118bd0d31eb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c989301b-0772-4809-a7e4-10091de874a7"
        },
        "item": {
          "id": "31330fd5-ba52-49ce-9dba-fb094a0197d7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2ad35b3a-657e-4a78-8ec4-befc64d6888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d8524fae-ea24-404f-af28-476e14b18fe1",
        "cursor": {
          "ref": "86569593-5e59-4400-80cb-de60d9270b16",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e794c6a1-7007-4116-8213-6de1be9851ea"
        },
        "item": {
          "id": "d8524fae-ea24-404f-af28-476e14b18fe1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8286430b-2b11-4d21-8ac1-8fd3aee78518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5977eb01-c947-4d69-a04f-52e7f0aa071a",
        "cursor": {
          "ref": "41f028de-0279-4d4e-a37d-319171e336c9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "889dfdb8-46d1-487d-a85e-cfb9699ca6fe"
        },
        "item": {
          "id": "5977eb01-c947-4d69-a04f-52e7f0aa071a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a4b84ed-8b4d-4b44-9c0e-152e494b1b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbd415-a8a6-4643-8e1d-e428fdacc66a",
        "cursor": {
          "ref": "fb4a83bf-956b-4b63-8bdc-94a87031e661",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dfd71438-a214-4801-9372-2a0c5e1f1c44"
        },
        "item": {
          "id": "07bbd415-a8a6-4643-8e1d-e428fdacc66a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d2b5486d-3499-4034-81dc-801597d58f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98ad9bc-d936-419e-ae16-c315ff9e7963",
        "cursor": {
          "ref": "9b81a4a5-7770-4bca-ac51-19793477ca1d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ec8a7e7-ec84-426c-ae5f-78c55cc8a275"
        },
        "item": {
          "id": "b98ad9bc-d936-419e-ae16-c315ff9e7963",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "90d4fffb-82f8-4114-9943-acf91ab11921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbce065-780b-487e-bfdb-a5ddf9ba55f5",
        "cursor": {
          "ref": "f0258761-88dc-412d-a4b4-6d1cc8f7db05",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e1fa1d85-bd87-4593-bd7a-f39ba2c404d5"
        },
        "item": {
          "id": "4fbce065-780b-487e-bfdb-a5ddf9ba55f5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4cf9f3b0-7420-45fb-8071-a29dea9847db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61356181-d56d-4d7c-9ee8-febdaabb90cc",
        "cursor": {
          "ref": "f9291c09-f5ab-4785-ad97-513d6d9c1eeb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5e806398-a369-4954-af2b-f6f67923c02e"
        },
        "item": {
          "id": "61356181-d56d-4d7c-9ee8-febdaabb90cc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "39b35f9c-3c04-4eca-bda9-7fa5f809b052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5d5ee2-8981-46ec-a7ab-67f60b4dfa79",
        "cursor": {
          "ref": "8daa484d-46b9-4389-a2a5-7ca59a9bcb61",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "72159f40-14c7-4f75-8aae-3665997f2d0f"
        },
        "item": {
          "id": "6a5d5ee2-8981-46ec-a7ab-67f60b4dfa79",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "73a9f892-9b06-4bd3-a290-c60c45a2f2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42856b31-1bd3-405e-aa9f-5471e3baaa3a",
        "cursor": {
          "ref": "1eb1f656-eb8c-4980-bcda-f3f7dc3ddabc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e2f88911-eb68-43d7-bccf-4fe62619f9fa"
        },
        "item": {
          "id": "42856b31-1bd3-405e-aa9f-5471e3baaa3a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2872608a-93d3-4766-8c6a-da64992cb228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cdd5d2-4036-4813-ab17-86e21f841faf",
        "cursor": {
          "ref": "84200f69-c3c6-4f49-906b-bdf3dd2b86ea",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "93e98844-6c8e-498d-81ce-ef00d38ba9cf"
        },
        "item": {
          "id": "77cdd5d2-4036-4813-ab17-86e21f841faf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4e94708c-80b1-4f3d-b1ed-bd89a84cc144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834e2cb4-f43a-4f54-976c-47af300ef023",
        "cursor": {
          "ref": "a5446076-f26b-43eb-865c-4c8165c5a875",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6775fd69-8e79-4bd1-b1eb-02aad760ef18"
        },
        "item": {
          "id": "834e2cb4-f43a-4f54-976c-47af300ef023",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "785cda7b-028a-402f-8ee2-2958debd7671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4fdea2-f5c3-49b8-90b4-351b13b8942e",
        "cursor": {
          "ref": "d28d59ad-75b9-4c20-a1b3-6b3837c1c181",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "59e0aa0f-ae94-46a4-bb12-1dc10dcc3613"
        },
        "item": {
          "id": "df4fdea2-f5c3-49b8-90b4-351b13b8942e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e19140a-64f6-4c4b-ac3b-577529a85e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c341d1-d927-4f71-b266-45a18c57a9b3",
        "cursor": {
          "ref": "9549ca7f-ccb9-46cc-b95f-ff5242127852",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cd02b180-ca5f-4a95-bf8c-88cd291093e1"
        },
        "item": {
          "id": "f5c341d1-d927-4f71-b266-45a18c57a9b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "af16d0bb-f80b-4407-90ad-b8bf33be7014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d76dd8-20fb-4330-b900-56d7cddaf4ba",
        "cursor": {
          "ref": "3892062a-5a31-49ac-aa0d-72e002930b52",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d252d2b0-5911-4eb9-b232-1318007a894b"
        },
        "item": {
          "id": "c5d76dd8-20fb-4330-b900-56d7cddaf4ba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dd0e6c7e-bbe0-455d-8eec-eb36876e039a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7952ac24-c20f-4451-b3d3-309c9cfc5763",
        "cursor": {
          "ref": "f9492559-a19d-4c92-acc5-2cf86d0cd066",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e808262b-4d90-417c-ac22-af9025dd4b51"
        },
        "item": {
          "id": "7952ac24-c20f-4451-b3d3-309c9cfc5763",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "366be077-abab-49a5-96ae-22582eecc842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952a8f2a-c83b-422e-8bc4-e38c964ffa74",
        "cursor": {
          "ref": "76e70cac-8065-462e-b719-98e3cc474205",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "78989393-2115-4098-b360-950661f77353"
        },
        "item": {
          "id": "952a8f2a-c83b-422e-8bc4-e38c964ffa74",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9aabafdb-cd3b-4588-829f-8189c3eac4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d78da1-4c53-4222-949f-018c635e7579",
        "cursor": {
          "ref": "aefea0e6-7787-4b8c-bca3-5042409b6e47",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0fc6a9c4-e57b-4da1-bb23-e570af1f0105"
        },
        "item": {
          "id": "c4d78da1-4c53-4222-949f-018c635e7579",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "628e6ff5-2dff-4878-99f5-29ee3143a109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f1fca1-5eb9-4c3a-89d7-7c1a977924bf",
        "cursor": {
          "ref": "bdca0efb-e729-4c52-b071-c287617138e6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "42bfee38-de2e-447b-9a4a-3df1fecc1858"
        },
        "item": {
          "id": "56f1fca1-5eb9-4c3a-89d7-7c1a977924bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4216430a-a50a-4c53-8c34-4e007da84b21",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "40ee82b6-7a57-40f9-9f8b-9fd1913b1bbe",
        "cursor": {
          "ref": "0a7f309d-2954-4284-8cbc-40d5dd23f3c6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d74caa4a-1dc5-4987-b246-0d247ca02259"
        },
        "item": {
          "id": "40ee82b6-7a57-40f9-9f8b-9fd1913b1bbe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "26a4fe70-40ef-43b1-9ca9-dba8a737ab7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c819b57-e636-49d4-98fd-4ea6a90a6cc7",
        "cursor": {
          "ref": "f708ede5-1bdb-474f-9835-05562ed73c51",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "75bf32d8-4838-4e9c-8b03-a0a8e0758c65"
        },
        "item": {
          "id": "2c819b57-e636-49d4-98fd-4ea6a90a6cc7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a6302078-f4f2-45b3-a146-c8f8b2933e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bc86da-ccc5-4ae8-8ff5-a136c5f3921b",
        "cursor": {
          "ref": "dcf6aeea-29be-4980-a7ea-20cc55618151",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "71ed94d3-f8b0-434d-b4a1-e6006dc2c6f8"
        },
        "item": {
          "id": "d6bc86da-ccc5-4ae8-8ff5-a136c5f3921b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3b581145-1006-475f-a201-5a12ff30dbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2316b5c5-6b7d-4c26-a6b5-ebfe5a003995",
        "cursor": {
          "ref": "70fe61d8-d138-44ef-a9e4-50b2a602745b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "97e9e176-b1a4-4eee-a60f-4a3b6f77c7e1"
        },
        "item": {
          "id": "2316b5c5-6b7d-4c26-a6b5-ebfe5a003995",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "68e61450-d72a-4989-aa89-f84a218184e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e41c32-ae8d-48a6-8c9d-420621ea368c",
        "cursor": {
          "ref": "e68aed4b-edbe-465f-9a0b-69b3dc953984",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "acd7a566-4825-4bb8-9372-debd78593e6c"
        },
        "item": {
          "id": "a6e41c32-ae8d-48a6-8c9d-420621ea368c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3e61ae47-2dec-46c8-b7cb-1734027ac313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b1e93b-4540-43d4-a908-2de28b44b459",
        "cursor": {
          "ref": "8b8b51e3-64f0-411c-9fd5-e5fa0817ce25",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "60e0f798-16fc-4216-9089-a624061a99ca"
        },
        "item": {
          "id": "c3b1e93b-4540-43d4-a908-2de28b44b459",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6c6d696b-c626-4e52-a065-cc4ee4bf7bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62b72a8-f6ca-473e-b88f-4d812b7b0d70",
        "cursor": {
          "ref": "b52a1a3b-1472-419c-bf9a-081aaa1401e2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "669688e3-9c1d-4ef4-a2f6-c59468b667d6"
        },
        "item": {
          "id": "c62b72a8-f6ca-473e-b88f-4d812b7b0d70",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5334490f-7a99-4afe-914c-b937447127fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f9271e-f600-425e-8fde-c1f7462ae044",
        "cursor": {
          "ref": "bae6a26a-511a-41ba-8a78-adb6390b8a3d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "81d15f4d-eb33-4e47-b1d0-e59b5909b577"
        },
        "item": {
          "id": "b4f9271e-f600-425e-8fde-c1f7462ae044",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8d6993fd-e0f9-4c8b-ae45-801723aa7102",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4485cd39-c503-45dc-87e9-b9655b7322c2",
        "cursor": {
          "ref": "d618b3fb-3615-44db-910c-2114d6af3b92",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7fa5784e-d070-48b0-9072-9ea12ec1cf58"
        },
        "item": {
          "id": "4485cd39-c503-45dc-87e9-b9655b7322c2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "53482f56-2505-4421-8d3c-0846be69dbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8f190a-04d5-4320-bf4a-d76c8e206d72",
        "cursor": {
          "ref": "a61862a7-d34d-44cb-a593-6cce19aadc53",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "91685f0e-afa3-4486-b21d-726d30c9beb1"
        },
        "item": {
          "id": "6f8f190a-04d5-4320-bf4a-d76c8e206d72",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "15fb42bc-e3a2-439a-b3bc-d707150341b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3168c7-4c3f-4b4a-928d-926ce6d235a2",
        "cursor": {
          "ref": "b863b042-4d39-4843-ab24-c29cd830bbb2",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "37790dbf-d554-4136-87e3-10b3c221d0f8"
        },
        "item": {
          "id": "3e3168c7-4c3f-4b4a-928d-926ce6d235a2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bbfc1992-7f5a-470f-8118-aea4071fc8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c1c69-dada-4c15-8998-d23352242331",
        "cursor": {
          "ref": "0136ecfa-5a12-44d9-90e6-234ad47344c5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2ea972d3-6fc1-4d28-bd06-ee3ae1515e99"
        },
        "item": {
          "id": "603c1c69-dada-4c15-8998-d23352242331",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2e0c0f86-2f30-47f3-ae8f-9651c956d307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e7078a-140e-4a9e-81ad-48d21d0ef355",
        "cursor": {
          "ref": "1e8ba511-8225-430b-ae80-059cf1e95fb9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fd3cb406-fa21-47a0-bb95-4e1d44b277ce"
        },
        "item": {
          "id": "d7e7078a-140e-4a9e-81ad-48d21d0ef355",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2777a853-8c12-462e-863d-74782810ee0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1336b51f-cb37-4a37-b4bc-51b108312b8c",
        "cursor": {
          "ref": "b3dbde22-c8e5-4043-bb75-3f81875ddb48",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b20718c8-8ac3-4cd8-968c-f1405b88696d"
        },
        "item": {
          "id": "1336b51f-cb37-4a37-b4bc-51b108312b8c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d6ab468f-078d-4cbc-9ae5-9b9d5491b47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998fbb6e-f6a6-4841-ad39-2b2987d6d09b",
        "cursor": {
          "ref": "e6e4896b-d941-44a0-9521-82ec930c4833",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2d72f2d0-82c8-4596-a001-0653cc9d5d7e"
        },
        "item": {
          "id": "998fbb6e-f6a6-4841-ad39-2b2987d6d09b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d56cde10-f40d-40da-8aea-aa8823638632",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b5b0b8eb-cb4e-4b8e-b01e-e1de894f2fd9",
        "cursor": {
          "ref": "06ac1d9d-26af-4a37-a648-3652ec4de57e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fe74bca3-0d4c-4cbd-93a0-2c476c685745"
        },
        "item": {
          "id": "b5b0b8eb-cb4e-4b8e-b01e-e1de894f2fd9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "988ad9dc-6455-478a-a9c1-36c8eac1f088",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "a7d00c00-c7cf-4da8-a3db-cbd19a178ea2",
        "cursor": {
          "ref": "245ee558-3984-4c23-80e9-487269f39360",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "310d02a3-71b8-48f3-97e8-033fa2283188"
        },
        "item": {
          "id": "a7d00c00-c7cf-4da8-a3db-cbd19a178ea2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "33be7e50-d71b-40b5-8df9-cfefc0ec3370",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "210556d0-bc1d-42eb-8ac0-baebd5f9baf7",
        "cursor": {
          "ref": "4b6fb852-67e2-47a5-a94b-b39470cc98c8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c8e8b75c-4215-46fd-8b36-5a4c2c5793c4"
        },
        "item": {
          "id": "210556d0-bc1d-42eb-8ac0-baebd5f9baf7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "09de9d38-b17f-4239-bc76-61d27f2d92a4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "04eb0174-aae1-4d4a-8fa3-911f78be945f",
        "cursor": {
          "ref": "cb2c1b48-4e58-4c1f-b4d3-a0d24ae0d7cc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6d8c2c61-4128-4d60-8488-7549873720a7"
        },
        "item": {
          "id": "04eb0174-aae1-4d4a-8fa3-911f78be945f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c50e4ef8-6e4f-4300-ae6c-1cb8f0853413",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3217009e-81d0-40a2-a17b-489b568c6296",
        "cursor": {
          "ref": "a3165a2a-c064-4175-b946-f10ddef10099",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1cd13c5-32cf-42a5-b743-cbcf4f38d6b0"
        },
        "item": {
          "id": "3217009e-81d0-40a2-a17b-489b568c6296",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bb14c49a-2c91-4de7-ba47-fcbb2d6b45e6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c8c81fa3-c3f3-4a01-a90e-4e49595aa834",
        "cursor": {
          "ref": "04f5a420-14ea-4b35-8631-acf15cc41811",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c8ce117e-a696-4995-9d63-254443237e7d"
        },
        "item": {
          "id": "c8c81fa3-c3f3-4a01-a90e-4e49595aa834",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "73e1265f-df34-409e-a929-ec93020b979a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1ddf7a-133e-4e18-8d19-d37fbdeff72e",
        "cursor": {
          "ref": "1260f044-d0a5-42c1-b970-f22cb90e169e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49b7dc59-72eb-449a-adf4-af3f0689f551"
        },
        "item": {
          "id": "4f1ddf7a-133e-4e18-8d19-d37fbdeff72e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8e394b92-47c6-492a-87d7-6cdf2e402e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a301c4-894e-4ee1-95e6-056fa59fe38e",
        "cursor": {
          "ref": "1a85336d-778d-4acf-9766-a91e6b4bc8da",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "07d9e292-d66d-42ef-9bb3-affd1ea946c1"
        },
        "item": {
          "id": "b7a301c4-894e-4ee1-95e6-056fa59fe38e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0a4bd28c-fc0a-49d6-ac7b-6f52f262c277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14a8d73-86ec-4496-b553-6d518bf2df9b",
        "cursor": {
          "ref": "c0619191-fd9a-4a7e-bfaa-084d9abd3021",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a3f5bbe2-d6d9-46b6-b92c-2249969336be"
        },
        "item": {
          "id": "b14a8d73-86ec-4496-b553-6d518bf2df9b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "289a3488-f9c9-45b0-a427-e0b3eee39283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b4f79b-3445-4d12-b179-bb5c84b81079",
        "cursor": {
          "ref": "8f74b0df-1b4a-4116-a62f-cd719d89ffbc",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a34c8c58-b473-4908-9e79-de4961386be1"
        },
        "item": {
          "id": "83b4f79b-3445-4d12-b179-bb5c84b81079",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d1fc3912-a104-42de-a59f-f1d83bdc23f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25622105-1daf-4c7d-848a-f05c4f2500ff",
        "cursor": {
          "ref": "e915e2a6-83e0-437d-a456-f914d247ec00",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b153b816-10dc-49b5-ad39-9336cb4cda46"
        },
        "item": {
          "id": "25622105-1daf-4c7d-848a-f05c4f2500ff",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8822186d-142f-47ba-99fa-688719f299e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434ecaa9-90ba-4326-8a11-8dba35fe5b73",
        "cursor": {
          "ref": "3aa63acb-93a4-42b8-9c2b-4e9630e7a198",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "56aad620-c0d2-4c0c-93d6-c8f2a31cc601"
        },
        "item": {
          "id": "434ecaa9-90ba-4326-8a11-8dba35fe5b73",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "63e5a44e-3f03-4bef-8312-2fb89943f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02252738-2e93-483e-b13b-5d8dfdcd53cc",
        "cursor": {
          "ref": "c987b403-d725-45f1-90fa-d3627e4cfba6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6dcd1e66-915b-4de7-88ce-6e030876df2f"
        },
        "item": {
          "id": "02252738-2e93-483e-b13b-5d8dfdcd53cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5ceab962-7de1-4d56-bfb7-8e84b21f4c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b3655a-52c8-4764-84ab-832c026a805a",
        "cursor": {
          "ref": "d216b363-e965-40a4-889e-a9e3918126d3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "40135305-9267-47ed-805c-2df6a7fd2178"
        },
        "item": {
          "id": "93b3655a-52c8-4764-84ab-832c026a805a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b14d1a87-4993-4028-85df-ea90d5403f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ab83cc-a456-4321-a00b-cfb3265eebae",
        "cursor": {
          "ref": "dc26de08-b45b-41a8-8435-84f48103d664",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3c3dc219-cf18-49ab-b61a-13501aee75b0"
        },
        "item": {
          "id": "61ab83cc-a456-4321-a00b-cfb3265eebae",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8163579c-6d79-4a71-b63c-f0055fcb38c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c899d1-72fd-4a66-adf8-6277a75c9eed",
        "cursor": {
          "ref": "720a9824-81d0-4014-ab56-d7efa62dba11",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5308c888-3091-4320-996b-341e2c3f741c"
        },
        "item": {
          "id": "80c899d1-72fd-4a66-adf8-6277a75c9eed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de602d25-01c3-4e81-a6c9-1358ac92b65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8bf2f8-f227-4082-bca4-80d05a48160f",
        "cursor": {
          "ref": "96fc696d-93e5-4ea0-af28-f762172b61f9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4c939d36-1a1e-47a1-88b7-a6c4cc44818a"
        },
        "item": {
          "id": "7a8bf2f8-f227-4082-bca4-80d05a48160f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d19f72d0-1933-48aa-b384-9e92d8ff2eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab807121-8e7d-4687-a5f4-a17305b78397",
        "cursor": {
          "ref": "8caba3ce-b9d6-466b-9a6a-e20ec8ce5725",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30569500-30e3-4fc0-9fec-b3304d986e0c"
        },
        "item": {
          "id": "ab807121-8e7d-4687-a5f4-a17305b78397",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b7235d46-a344-4f52-a3e4-ec1d58597fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be3e6d0-9151-4734-b54b-6c480b1ea7d5",
        "cursor": {
          "ref": "cda0a83d-086d-4833-888f-b6d0a8e754ad",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "482f9846-08d2-47e3-9446-79abc3dfaa1f"
        },
        "item": {
          "id": "8be3e6d0-9151-4734-b54b-6c480b1ea7d5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "36b9d7df-caf6-4c80-a209-70358d9356a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e797c6-1738-4e35-8dfa-10be4371dabd",
        "cursor": {
          "ref": "07a5ebd9-5753-4da5-9258-6d74d35c92ee",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1290ccbf-f410-4bb9-9498-6ccf46e756db"
        },
        "item": {
          "id": "e5e797c6-1738-4e35-8dfa-10be4371dabd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "59af410e-5b7e-423e-b5bf-de3d1de7327e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e47ddd1-0b1e-43a8-894f-fbbfc89674a2",
        "cursor": {
          "ref": "9d0159ef-e4af-4890-aa6f-e1c22848fbf0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a42477a1-2969-41a5-a899-673c8a43680d"
        },
        "item": {
          "id": "5e47ddd1-0b1e-43a8-894f-fbbfc89674a2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4a8b8820-fcd5-40f4-bfec-e3af901cd786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd69ecc6-eabd-47f7-81f4-7b6d31718d90",
        "cursor": {
          "ref": "3451a1da-4dff-497e-ac6f-d8b3ebbf8596",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4a44ae0d-5da3-4e89-afdf-a155fff4c734"
        },
        "item": {
          "id": "dd69ecc6-eabd-47f7-81f4-7b6d31718d90",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6ba657d8-243c-4aa6-ba9d-7f55863bb890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a79d05-a775-42ac-8965-e53ecc53932a",
        "cursor": {
          "ref": "d0078379-4ddc-4e3e-965e-41cda81602fc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d6014ff4-5398-4ab2-a207-02a85fee8960"
        },
        "item": {
          "id": "98a79d05-a775-42ac-8965-e53ecc53932a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9c7afb09-7218-4354-b77b-9246fc0321e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72af66f6-85c3-45fc-9c58-257ad07a317d",
        "cursor": {
          "ref": "a94a2dfd-6f8f-4072-aee9-bb290bac9273",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "81c974bc-0eac-4ecd-a2d9-4efdb4ed31c4"
        },
        "item": {
          "id": "72af66f6-85c3-45fc-9c58-257ad07a317d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c936a776-71a0-4acb-aa62-8a1f91ce3634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa2fc7c-d112-41d4-8beb-29a90a631cad",
        "cursor": {
          "ref": "3d0deca4-3fcc-42e6-824a-6994241579a5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1ed90601-2ae1-4447-abd4-4d30ef5ca022"
        },
        "item": {
          "id": "8aa2fc7c-d112-41d4-8beb-29a90a631cad",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c046005b-9450-48cb-819b-34895934e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6019a7-2ad2-4770-b8cc-32fbd083d9d8",
        "cursor": {
          "ref": "947c2070-c4d7-4ac6-924d-aba347648ce8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7d38057f-ded0-44d7-a28a-9e08db499352"
        },
        "item": {
          "id": "7c6019a7-2ad2-4770-b8cc-32fbd083d9d8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0a0e5ebf-57cb-49a4-950f-8bc5471cdf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ddf654-f935-4134-b2fb-322d1600b578",
        "cursor": {
          "ref": "97383517-113a-480d-8d2d-69b5d2033e65",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3e6fd4dc-e110-48af-ba21-c68fa4522a7a"
        },
        "item": {
          "id": "c7ddf654-f935-4134-b2fb-322d1600b578",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a1381c50-8f6c-4233-ba00-29118bcd2582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adccc631-ad8e-4e4d-8279-e83cf4de6929",
        "cursor": {
          "ref": "76bcf1c6-05ce-443c-8a53-0a0af46b2927",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "19a6b00f-a11b-4b64-bd89-a58e2e7b95b9"
        },
        "item": {
          "id": "adccc631-ad8e-4e4d-8279-e83cf4de6929",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "da196c6e-a445-4a4b-b912-9285c5dacbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2080a56-1c4e-4a05-86d0-d63b22bab0ed",
        "cursor": {
          "ref": "84b83a55-6e35-448a-8bc2-e2ec7f01856c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "26c258d8-f91d-48e1-a8c7-8ecbc138de94"
        },
        "item": {
          "id": "f2080a56-1c4e-4a05-86d0-d63b22bab0ed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b20e63ad-eb64-41b0-adfd-b9e0ef62ed09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda76959-9153-465c-a37c-ffb30faaceb7",
        "cursor": {
          "ref": "f3e9d363-4a7c-4376-9644-d13e0af0530c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bd24b95c-739d-48b0-847c-0c24b4f712b8"
        },
        "item": {
          "id": "bda76959-9153-465c-a37c-ffb30faaceb7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8ef7f6b7-2e3c-46ea-866e-2aa1542f8900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c882c03-a1cc-4705-a940-1c0369a027c7",
        "cursor": {
          "ref": "537eeaa8-c950-4c77-9c13-3fa387298c56",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1e52ccb6-4c5c-4fa6-ac9b-73da5933d306"
        },
        "item": {
          "id": "7c882c03-a1cc-4705-a940-1c0369a027c7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d809346-dbcc-44e1-ab1b-80865cb54546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfa83ef-8eaf-4ce6-bcd4-1aa48feeadc6",
        "cursor": {
          "ref": "08a2d45e-575d-46b5-b865-49680d35bf78",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9eef1671-5d17-4430-a9ee-b5f686edaff4"
        },
        "item": {
          "id": "bcfa83ef-8eaf-4ce6-bcd4-1aa48feeadc6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3e93e383-6200-4fbd-8081-1a9e3a754dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccef9955-be31-4152-9a72-f0740d2bd06b",
        "cursor": {
          "ref": "a0ce3be1-b2a3-45f3-b92c-783e82132481",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7cb178cc-b40a-41fc-b4e6-1bd3ea784544"
        },
        "item": {
          "id": "ccef9955-be31-4152-9a72-f0740d2bd06b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7cca2f3b-38b3-4df0-aefd-c79a6e9e6ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded89532-500d-451b-ab77-66f3446efd66",
        "cursor": {
          "ref": "34a3c7f6-4026-40ff-a995-f2253017899b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "387789df-6637-4d71-b195-547d9dd3a6a4"
        },
        "item": {
          "id": "ded89532-500d-451b-ab77-66f3446efd66",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ae38e5e-d852-4f09-98d3-864f2c3e795e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6fd56e-30a9-460a-ae6a-28f36ba77f01",
        "cursor": {
          "ref": "5b398a2e-b252-47e3-8ecb-d988f1772223",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7dac3185-e29a-48aa-85a0-30439ecf6c11"
        },
        "item": {
          "id": "9b6fd56e-30a9-460a-ae6a-28f36ba77f01",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cff58bb8-fd0d-4d22-98a4-e5d3524af171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b16c8c-06fe-485e-b99d-95365f47281e",
        "cursor": {
          "ref": "6b061dae-bca0-4c6c-95a9-e6c8dccb46aa",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c19a61c8-1b8e-41de-a9ef-6f8ba897b635"
        },
        "item": {
          "id": "98b16c8c-06fe-485e-b99d-95365f47281e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69681d11-425f-43f7-b0b4-ff1ccb3e4939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d6d5d8-942b-4390-b770-b977a8f295d9",
        "cursor": {
          "ref": "5ead09f4-fc7c-48d8-8b7c-2f23a63d4849",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bc71b876-bd43-45bc-8cdc-35035aafd0cd"
        },
        "item": {
          "id": "87d6d5d8-942b-4390-b770-b977a8f295d9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb2694f2-f945-4981-9f89-91f6f1357106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65c5c9e-da2d-4a1a-9f31-9d433d732bdf",
        "cursor": {
          "ref": "749494a3-453b-4e4a-84f8-391e12cb5182",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e2365c7a-7997-429a-b35d-6f37dc1e7a71"
        },
        "item": {
          "id": "c65c5c9e-da2d-4a1a-9f31-9d433d732bdf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3327d769-2b99-4645-a8ad-981ba2c913ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdafdf32-52aa-4f48-8b13-8d825e1c6118",
        "cursor": {
          "ref": "c9561640-ef73-4a7a-8ac7-0f55edeb0b56",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "81e53bbd-8e47-43c9-a367-0fbafac43845"
        },
        "item": {
          "id": "fdafdf32-52aa-4f48-8b13-8d825e1c6118",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bacacb09-5331-4af6-a6d7-e09395e5cb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4527e0-f3af-4d4c-908d-f3a33502a2a1",
        "cursor": {
          "ref": "06bb7116-e11f-49d4-996b-3898ae2674b2",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2783c379-2876-4e17-9dcb-0c70568efa18"
        },
        "item": {
          "id": "4c4527e0-f3af-4d4c-908d-f3a33502a2a1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5d501477-ce1a-44c5-a87d-a5cd97b64c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23ec8b8-2475-4e95-aa51-87a5eb4dce26",
        "cursor": {
          "ref": "121c348f-5a1a-4fa3-8ea2-b8c51eb5a690",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c79325a2-5ff6-475b-ae44-8d27a47e95c4"
        },
        "item": {
          "id": "e23ec8b8-2475-4e95-aa51-87a5eb4dce26",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "493b935d-3e40-4f77-ab0c-c5bac3d5e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3d6b43-53ac-45cc-a80e-2d674e01877d",
        "cursor": {
          "ref": "b2d35fe0-2f66-4d30-9974-6935196614e9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7dad3263-2d89-4a38-a6ff-70a89836e51c"
        },
        "item": {
          "id": "4f3d6b43-53ac-45cc-a80e-2d674e01877d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ef486e20-fa5d-422e-91e5-99d4be614938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febce40b-b78b-4043-9396-f3cd8aa730b5",
        "cursor": {
          "ref": "faad2233-9bac-4da7-a786-a1d3b0552d3e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aa9706d5-b4a3-43c8-9f19-13c954ba6156"
        },
        "item": {
          "id": "febce40b-b78b-4043-9396-f3cd8aa730b5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "25f3f0ed-0325-4bd7-bc6b-0f361db9eb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9797b0e1-739c-4cbd-9961-efbde91c22f4",
        "cursor": {
          "ref": "6668a3d3-23c3-48e0-ac2d-e957797ba77e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7d0d7f9d-9b2c-4bef-b96b-e6ffa2c21e5a"
        },
        "item": {
          "id": "9797b0e1-739c-4cbd-9961-efbde91c22f4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "703a8333-393d-41a8-9a5d-bb2c70a0a837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78901449-c50e-4f9b-9fab-2f99c4b3ec00",
        "cursor": {
          "ref": "8d71d584-a00f-4540-b542-c5fda5ad793e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "33a9b191-5f2f-4b15-9e16-5e5356bd0b54"
        },
        "item": {
          "id": "78901449-c50e-4f9b-9fab-2f99c4b3ec00",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b7c91996-370b-44c4-bbf8-d3bc502a6898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12434ecd-8fbd-4244-98af-e780b807c835",
        "cursor": {
          "ref": "f4f3fea9-8974-4a56-bf1c-c94b54311b74",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c4217edf-6f4b-48e6-92c9-9845e111cc31"
        },
        "item": {
          "id": "12434ecd-8fbd-4244-98af-e780b807c835",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f41b8a84-84fd-421f-b48e-80e7b4a0bfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eb2e1a-0b73-4d46-a712-b12a6f1ba44a",
        "cursor": {
          "ref": "fb951851-db87-48cd-95ba-6fad0b4994c0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e00e7d44-3447-4915-8a52-df4043ccf6a8"
        },
        "item": {
          "id": "57eb2e1a-0b73-4d46-a712-b12a6f1ba44a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ebc3a832-d553-40ab-b75e-d88125ea9874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91932ea-ffc7-43e2-87f2-e12ade5a1630",
        "cursor": {
          "ref": "49f610d9-cf0f-436e-a1ce-404cab5ada1b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "53341726-dde4-4271-afc6-0e0b8ffeda47"
        },
        "item": {
          "id": "d91932ea-ffc7-43e2-87f2-e12ade5a1630",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d519ed1b-f46a-4eb3-90cf-de731f7e9865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6befd1-d998-4da7-95a2-0f4d796ef28e",
        "cursor": {
          "ref": "b45d7d94-1c28-4212-9e7a-b0ea8d351a05",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "51fab214-54f0-4697-bc02-0901a9c6d54f"
        },
        "item": {
          "id": "7a6befd1-d998-4da7-95a2-0f4d796ef28e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c7e73e43-1b2f-4317-9c4b-334cc99971ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60af002-fe39-49a3-b19c-5eba6253cf30",
        "cursor": {
          "ref": "1a9e9964-3d11-436e-af67-ba9d22258c84",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1f503c8a-9361-4e2c-a945-102ff3657f1d"
        },
        "item": {
          "id": "a60af002-fe39-49a3-b19c-5eba6253cf30",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "288eaa9c-f9bf-447d-b096-23b6615a8cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70892ebf-8637-44aa-bd80-5a845ed7bb19",
        "cursor": {
          "ref": "14ba34a4-a4b7-4d68-8715-188d230975fb",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0af78990-a5cb-4aa1-a09a-9d1d2b3adb1c"
        },
        "item": {
          "id": "70892ebf-8637-44aa-bd80-5a845ed7bb19",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e3f21a45-4ac0-4cdf-8a75-ce7e6240c420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d234fd-0cd9-47ba-b336-4aee67aae775",
        "cursor": {
          "ref": "ec47a83e-b187-4741-952b-6958014a21a7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dc882b3d-3270-40a9-b869-b0ab10bee854"
        },
        "item": {
          "id": "b6d234fd-0cd9-47ba-b336-4aee67aae775",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "af172537-7892-47cc-bf3b-ed9c38d1b9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48d1702-eb37-40d7-b812-f52c2c461a61",
        "cursor": {
          "ref": "e4738348-7470-4fc0-a007-69688d68eafb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "406a2dcc-0510-4043-a717-03ec59845d72"
        },
        "item": {
          "id": "f48d1702-eb37-40d7-b812-f52c2c461a61",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "83464df3-3358-4571-8c3a-de4602e045da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a919059d-b5c1-4b8a-b7d2-39d7f486db88",
        "cursor": {
          "ref": "c6fac9f9-d8df-498e-b8f6-000c70e63327",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1f34f55d-dc50-4e0b-bbb8-123621890525"
        },
        "item": {
          "id": "a919059d-b5c1-4b8a-b7d2-39d7f486db88",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d04b8642-c717-4389-b651-3c4de47da736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bd7e20-24dd-4146-9bdd-b323960c59ad",
        "cursor": {
          "ref": "478254f0-62ff-49ab-8bef-ffe947e71150",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1dff8bcf-45f1-40ed-9886-9b622ceff319"
        },
        "item": {
          "id": "b3bd7e20-24dd-4146-9bdd-b323960c59ad",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9e4c0021-3b02-477f-a76f-0803dd84759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8870cd-e384-4d18-ae53-d2d5750a0c9c",
        "cursor": {
          "ref": "6bca05a4-151c-4a00-b96a-3424ce6d2715",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eb1b1034-92e1-499d-99bb-e0cee8081834"
        },
        "item": {
          "id": "cf8870cd-e384-4d18-ae53-d2d5750a0c9c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "edc6da8d-b122-4871-b498-6415ca002475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f2bbbc-d54d-45d0-be62-2bfc52f5cac9",
        "cursor": {
          "ref": "445d28c2-c547-48c0-bc99-c45ee678c5f7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ab33fe4a-e852-4305-a52d-9b1bb3b58964"
        },
        "item": {
          "id": "17f2bbbc-d54d-45d0-be62-2bfc52f5cac9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "97e6810d-5ae1-44bd-a874-5fb6563abfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b98cadd-a5d2-4dd5-b64a-73c04f7ed67a",
        "cursor": {
          "ref": "9bfca0cc-1919-4a90-a8aa-6e5e751cc8f3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c454ec6-63b7-4e5d-b6d0-61d51c6c69aa"
        },
        "item": {
          "id": "2b98cadd-a5d2-4dd5-b64a-73c04f7ed67a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "356ea893-71bd-46cc-bd0a-d2cd44d99c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce060ebb-69af-40c6-9e94-3588293243d7",
        "cursor": {
          "ref": "a3fadecd-39bb-4ab7-81dd-2644b8ed1574",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "722de484-d52e-476d-8267-f5670dcc93b0"
        },
        "item": {
          "id": "ce060ebb-69af-40c6-9e94-3588293243d7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4a670592-08ba-40ed-96ad-72a3fded01a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5d99b3-22e1-4aac-99b6-af9ec1cfd100",
        "cursor": {
          "ref": "d5972d2c-9903-435d-a15b-fd65f8c736f7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "eb48d3c2-ae57-48e5-85de-c9c8d929bb46"
        },
        "item": {
          "id": "af5d99b3-22e1-4aac-99b6-af9ec1cfd100",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d704b587-1404-49d2-9ed2-335a732ac497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00519dc6-b1e8-4465-befe-e143555ec104",
        "cursor": {
          "ref": "083ac25a-f9ac-4df8-92fc-56ab43eb18e2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31b04780-7975-4873-a5c2-f72b888a8d88"
        },
        "item": {
          "id": "00519dc6-b1e8-4465-befe-e143555ec104",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1824c6c2-a86f-4cef-99a3-ca8e895a9e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4979c6-7e61-45f7-9d5c-87b509ce24d7",
        "cursor": {
          "ref": "08013948-eeee-4c0e-af0e-df655fb1aca1",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ebc579a7-1ebb-4b5e-8aa9-999374ab227e"
        },
        "item": {
          "id": "af4979c6-7e61-45f7-9d5c-87b509ce24d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1a4c9a92-1ad7-4345-b320-423f724358ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48c4154-43c7-4738-afe5-8eb49d912bde",
        "cursor": {
          "ref": "d089b4e6-50c5-4aa7-a06f-4f8fc3a14a80",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b2717fd-c75f-4a67-827d-1d8057443ee1"
        },
        "item": {
          "id": "f48c4154-43c7-4738-afe5-8eb49d912bde",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6c40771c-ac55-42c5-8a1f-b21d77a86424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e7f79b-6958-4156-be4c-e45bac2c11ba",
        "cursor": {
          "ref": "5156bf9b-b63d-4991-8f3d-c8927f168f54",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ec72d62e-b167-4337-aee4-ef2977079ed9"
        },
        "item": {
          "id": "f2e7f79b-6958-4156-be4c-e45bac2c11ba",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f0b3c2c3-7191-4348-a172-a9c7567e7e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc161e5-f1b2-4abf-a946-567a68580d1d",
        "cursor": {
          "ref": "ce02d66c-1b2c-4b5c-ac9d-307c869cc1d0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7c3fff9e-5d98-41f8-b23b-50aabdd83ba9"
        },
        "item": {
          "id": "2dc161e5-f1b2-4abf-a946-567a68580d1d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5fd88d41-4c0b-40ef-9541-8bdd70b5b524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73896d25-e4c3-4ae3-80e8-a690b91adc16",
        "cursor": {
          "ref": "8d08180f-f4f6-4cad-9022-7278a5641f54",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1ac1c1ed-19eb-429c-98f1-b709b8ef0aa6"
        },
        "item": {
          "id": "73896d25-e4c3-4ae3-80e8-a690b91adc16",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7a3a960c-78ef-4e86-bdef-45aac5d52a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db71306-d190-4adc-9783-541f85b9ea07",
        "cursor": {
          "ref": "3e255cdf-da1a-4dfa-a7a4-3148b1aa6596",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d1c8c933-0c63-4465-829f-e60cc3eeb735"
        },
        "item": {
          "id": "8db71306-d190-4adc-9783-541f85b9ea07",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9ecbf81-31e6-432d-859a-0c1c224eedb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9241acf5-ad4d-41e2-a248-22a67df1e3c5",
        "cursor": {
          "ref": "f9012456-e176-4050-9327-ba6f3ca335ce",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d6368189-5cce-42ce-ad5e-48013dff7bbe"
        },
        "item": {
          "id": "9241acf5-ad4d-41e2-a248-22a67df1e3c5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb03b290-12d0-44ae-b69e-f420c46db7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c0f777-0247-4fca-95fb-3f62be327113",
        "cursor": {
          "ref": "d48e4e81-cba9-4f54-8c3a-85abd9778141",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "29feff24-13ce-4579-b577-2186ac8e2335"
        },
        "item": {
          "id": "69c0f777-0247-4fca-95fb-3f62be327113",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f97884bb-9082-431d-8abe-3c3a9f96e0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16be1d0b-527c-4545-89d0-d60a16bd9061",
        "cursor": {
          "ref": "3a59fcc3-34e9-4114-9d96-ca153b3ae11b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "70d7a4f5-f5a1-48c7-b787-65623deb2016"
        },
        "item": {
          "id": "16be1d0b-527c-4545-89d0-d60a16bd9061",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2658a1ba-888a-42f7-8e57-018ccf9c996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d8244-5b7e-4273-b473-9b0ac663c13c",
        "cursor": {
          "ref": "aa9c8930-9bcc-40c6-aca0-42670e20bb33",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4e1441d6-a7dd-47da-9a65-5a172f6d772c"
        },
        "item": {
          "id": "f66d8244-5b7e-4273-b473-9b0ac663c13c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cc89882c-9cd0-4205-9bde-abe68bf071ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76488e9e-61b7-41e7-9e81-ca056ab64024",
        "cursor": {
          "ref": "393357c5-fe38-4f5b-9b50-a9c9e710e4c7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e6c75643-997e-4d59-adab-67e47459669c"
        },
        "item": {
          "id": "76488e9e-61b7-41e7-9e81-ca056ab64024",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "84b43854-ea10-42e1-8034-665ea4d11762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d9e366-d34f-4bd7-bc16-bf2d777e0b33",
        "cursor": {
          "ref": "a60cf1ac-8026-4808-8470-774dcff05fad",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6cd5542b-3392-46ba-8853-2354c56c956d"
        },
        "item": {
          "id": "07d9e366-d34f-4bd7-bc16-bf2d777e0b33",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c8122f80-ec7a-4246-9678-db1430196f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6399634f-4d72-42be-a623-18382fdf3500",
        "cursor": {
          "ref": "2f0fbca9-8c48-41f9-86b3-ed1f07e842af",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3c0822a1-b0ba-4a61-94a3-fad1382646f8"
        },
        "item": {
          "id": "6399634f-4d72-42be-a623-18382fdf3500",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d4ab797b-3167-4858-a4c6-d1e17f9a9a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd658f7-6824-4130-a31c-c3527ab1fc66",
        "cursor": {
          "ref": "f83ed5c3-15af-40c2-9e0d-7834dcd23a58",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c17993ae-a81b-49ab-91bb-d58cac16f51b"
        },
        "item": {
          "id": "0dd658f7-6824-4130-a31c-c3527ab1fc66",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a9b177fc-7518-44d0-9dd3-5674dffb22cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774cfe52-ddc2-4251-b5eb-e690905b0c98",
        "cursor": {
          "ref": "0f85c61c-517a-4541-9d45-a6fe053fb898",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac2c2d91-f69d-48df-a093-ebb59a1517d4"
        },
        "item": {
          "id": "774cfe52-ddc2-4251-b5eb-e690905b0c98",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "88823e3e-1ac4-4a72-958c-00d05c52476c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea21884-79b6-4458-8b1a-cf0b88c97d2d",
        "cursor": {
          "ref": "f0d56c2c-0509-434c-9293-7ab5b0d0c348",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6d29739e-9023-44e6-86e1-ff4a2040ea27"
        },
        "item": {
          "id": "0ea21884-79b6-4458-8b1a-cf0b88c97d2d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9b852bb3-d2b2-48c7-bc19-03db6ab2f7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff0a653-321f-4792-b829-5277a57f099d",
        "cursor": {
          "ref": "8312bcfe-b27f-448c-91ec-bb6bef3668a7",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "90c3a7b9-8dd9-4914-8ba1-d214ac7bfb3a"
        },
        "item": {
          "id": "8ff0a653-321f-4792-b829-5277a57f099d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f467a5e0-19ee-4e16-8488-729430291871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3c98a5-678b-43a3-b0d0-e1d25e792631",
        "cursor": {
          "ref": "8e84116a-df13-4b32-8ed9-d044309de679",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "232832ad-ad24-44ff-9088-60d7e2dd931e"
        },
        "item": {
          "id": "5e3c98a5-678b-43a3-b0d0-e1d25e792631",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "52dcf0cc-47d8-43a3-a77b-08e7e790d7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ba3bee-5f40-4904-9837-e96abd7544b3",
        "cursor": {
          "ref": "11c411d0-343c-418b-8da2-65692c97fb56",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "04949ba7-007b-4d7f-b1de-e6e3f9b7dbd3"
        },
        "item": {
          "id": "08ba3bee-5f40-4904-9837-e96abd7544b3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "04aad564-0ca4-46ce-80f0-da35b5d78a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76840705-a1c0-4db3-ae5f-ed8bd978c02c",
        "cursor": {
          "ref": "5b2f9bed-3824-4ff1-8493-d6ccbd4061af",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b88d7a88-06a9-4968-9e42-e44ab8edce61"
        },
        "item": {
          "id": "76840705-a1c0-4db3-ae5f-ed8bd978c02c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a5d5a03f-4fad-48d5-8f6b-f29d50126d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752b094b-8567-4d5d-902b-abdf9a5d46c2",
        "cursor": {
          "ref": "18a8f6c9-3453-4d4f-b9f7-75dbe23807d7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5d79c506-b39f-4296-b518-04b5d9e3e6fd"
        },
        "item": {
          "id": "752b094b-8567-4d5d-902b-abdf9a5d46c2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "64d6bdd2-3c40-45ee-80ac-d45c5696e113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6340d2df-2896-4cc5-9d11-e0a44a6ad471",
        "cursor": {
          "ref": "dcad9c8d-b23c-42a9-b9bd-89d6be2aa375",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9829f3b2-d47d-4e22-b606-42290cba62df"
        },
        "item": {
          "id": "6340d2df-2896-4cc5-9d11-e0a44a6ad471",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6540dbe7-7900-49c9-8f72-7b28f6c0aff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8f635f-19fb-47c7-bcae-c06df0bd5e7a",
        "cursor": {
          "ref": "0dbee952-7579-4556-a087-7a211d1d6362",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5370c2b1-4773-4c57-a682-cdfa0aef1908"
        },
        "item": {
          "id": "df8f635f-19fb-47c7-bcae-c06df0bd5e7a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "23cefa88-c679-4679-a740-71a5bb2b83bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c31040-2e78-4293-8552-d61b0939fbea",
        "cursor": {
          "ref": "c4302a0c-6bd6-4bc9-ac85-4b1f92f06f8d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c0e6f4c3-f872-4158-adb8-08e94c812846"
        },
        "item": {
          "id": "69c31040-2e78-4293-8552-d61b0939fbea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7a639cb2-9d5d-4a4f-968c-e434e94c43f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3595bcda-187d-45ca-85fb-6d16f27fc383",
        "cursor": {
          "ref": "c8f874f1-2c2c-4c44-ae41-b153d44e0a59",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e150981e-2c22-4885-9d50-f4c7936f1924"
        },
        "item": {
          "id": "3595bcda-187d-45ca-85fb-6d16f27fc383",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "73b56943-38dc-4114-be8b-f2eae9a72768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6b7ab3-a4dd-467c-b160-9138ec13790b",
        "cursor": {
          "ref": "943aeeb5-c2c4-4b0a-8dd6-22e4c94d5cfd",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c9b9517a-a74a-4fc6-9662-3bac67b18bf7"
        },
        "item": {
          "id": "ca6b7ab3-a4dd-467c-b160-9138ec13790b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fb54c6de-b072-40c1-a627-2f9f2f74991d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629ca90b-b8a6-49f2-a610-625609e774b6",
        "cursor": {
          "ref": "b6af709d-ef77-47e1-9bb6-1c930dd830c3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bbb6ffa7-214e-464d-beb1-3fea585dc572"
        },
        "item": {
          "id": "629ca90b-b8a6-49f2-a610-625609e774b6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c40da373-8de2-448f-865f-3416f4aef2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8547ea47-db5a-45ff-ae02-64ae14866b68",
        "cursor": {
          "ref": "20319d9b-ee61-4aec-8d49-616df93ef3e3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d2d071ca-26bc-48b2-9428-a7b3e3815255"
        },
        "item": {
          "id": "8547ea47-db5a-45ff-ae02-64ae14866b68",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "234ae389-ff5a-4696-aebf-0efcbf83da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77c509a-2bd9-4630-a52b-c6a365294eed",
        "cursor": {
          "ref": "072d2cd7-b4f7-428b-8217-660c5b38565c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a18941f7-d18c-4e8b-b084-51a1a24b7509"
        },
        "item": {
          "id": "f77c509a-2bd9-4630-a52b-c6a365294eed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "21f1823b-030e-4668-bcc8-5e44fac83760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86811723-36c5-466a-b026-391b084e9dee",
        "cursor": {
          "ref": "d101345a-b715-4121-ae9e-15cbe2639399",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9784d539-4bf7-4a4e-a979-8b6b045bcd7a"
        },
        "item": {
          "id": "86811723-36c5-466a-b026-391b084e9dee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "478df79f-4931-4619-a542-6b2567de82e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e7c2e4-074a-4cb2-8aae-7aa2153793bf",
        "cursor": {
          "ref": "0b1a934d-2de6-445c-b7a0-ac881274daca",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b28c75c9-b96e-433b-b6f1-cb7edbf714f5"
        },
        "item": {
          "id": "66e7c2e4-074a-4cb2-8aae-7aa2153793bf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8bf5d0e9-85d7-4b6a-9806-b1abe444e781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ed61f9-014d-40d0-ab91-6bdb299a8912",
        "cursor": {
          "ref": "9db96ae4-3cd4-42be-b7cf-5e9dc817f153",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "24d05a4d-7ce9-4a07-9868-8908c506638c"
        },
        "item": {
          "id": "a5ed61f9-014d-40d0-ab91-6bdb299a8912",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5c71fc4d-3c4a-4211-ba1c-830a4c629276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd41d25c-65b6-412d-acc2-d354d4d15eb6",
        "cursor": {
          "ref": "3504e8b0-4c76-42f5-9a38-1ec9cfbc6a0a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cd16aa53-f4e9-4dd1-9af1-74dfb0c9ba29"
        },
        "item": {
          "id": "bd41d25c-65b6-412d-acc2-d354d4d15eb6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6fd94a57-c2c2-414a-ba2d-371c70d5a956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8059510-9a9d-471b-8f02-566ae4b77c0b",
        "cursor": {
          "ref": "9fd399c7-f29d-4261-8daa-3eac621c59b9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed131a48-4f8f-4c5d-b4fd-dd95171f4b11"
        },
        "item": {
          "id": "e8059510-9a9d-471b-8f02-566ae4b77c0b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "35c77327-2e10-4899-9a70-375c29dfad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a54289-451a-49a6-8fdf-d750c8bd8eec",
        "cursor": {
          "ref": "3353a870-c5b8-4ba7-887e-41b37488c609",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e78161c3-99e0-464c-8d19-57d227d52895"
        },
        "item": {
          "id": "f5a54289-451a-49a6-8fdf-d750c8bd8eec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6898109c-2ced-426f-96a9-6244d8701dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632bca8-8646-434f-9544-59cf6636dbd1",
        "cursor": {
          "ref": "5d1bc8c1-617a-4a45-9d93-3d78db83c003",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "df53a1fd-62a0-45f5-b1a5-3ca6fef216ca"
        },
        "item": {
          "id": "b632bca8-8646-434f-9544-59cf6636dbd1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ce98f054-339a-4f52-8406-d0392603cf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb80ff70-c2f3-41d5-bd82-48397ec0ea48",
        "cursor": {
          "ref": "269904a3-a53b-4e0f-8d6f-7870009d2e73",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "97f1af19-f801-481f-9a35-acdeae2c52c2"
        },
        "item": {
          "id": "bb80ff70-c2f3-41d5-bd82-48397ec0ea48",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0da141b7-6460-4973-953b-0678ea30dd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e38e7f4-ca68-4bec-899a-1bd7b3e27b02",
        "cursor": {
          "ref": "a25adb4f-9f69-48fb-9797-b0341b7bc5b7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e7c67d3-2f22-438c-9fb6-c7e4bed91ea8"
        },
        "item": {
          "id": "1e38e7f4-ca68-4bec-899a-1bd7b3e27b02",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "55aa137b-390c-42e1-ab17-40b1edd7e037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c59e86b-1faa-4f17-b9f7-5da4abb47d5d",
        "cursor": {
          "ref": "3bb4fd75-228a-4c73-9346-66da2e711997",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "85496118-a540-44f0-9b18-5e705aba5d41"
        },
        "item": {
          "id": "9c59e86b-1faa-4f17-b9f7-5da4abb47d5d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "df91218f-8a44-46b0-8d4a-d111103d8eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b94e2-2af8-4f55-9f4e-da960357d405",
        "cursor": {
          "ref": "c1f55c2a-5d39-4bf1-bb83-9d32e7639500",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "afc32890-3265-4eaa-91bd-ba245d6b3f08"
        },
        "item": {
          "id": "424b94e2-2af8-4f55-9f4e-da960357d405",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d12f9e66-bcd0-4f0e-9a64-2b6d2591a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4659aad4-7934-4099-9f98-0372e51cacc0",
        "cursor": {
          "ref": "bee61b61-e480-47c7-8031-bd060356cc40",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "27256646-612c-4654-b3e9-b553badba4f6"
        },
        "item": {
          "id": "4659aad4-7934-4099-9f98-0372e51cacc0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a0db7091-26a2-4f57-8c38-1560befd3413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4f6821-ac1d-433a-b481-23f059005a3e",
        "cursor": {
          "ref": "7f82c0ac-ded0-4c50-add0-609cddd96441",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1a43d887-a699-4074-8f26-31645aeb28a3"
        },
        "item": {
          "id": "7d4f6821-ac1d-433a-b481-23f059005a3e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2359aff6-e5e4-4645-9691-02cfe27e4da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2541d3a-ba05-4d83-b78e-26eb6a97d738",
        "cursor": {
          "ref": "121d6d7f-c179-4e3a-914d-2f189fedb48e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "042540db-c288-4261-b04d-b089fc417b99"
        },
        "item": {
          "id": "a2541d3a-ba05-4d83-b78e-26eb6a97d738",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0a9dd6a7-9f7f-4ce5-8a51-94e36d19d7b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bce8af-8209-4aa9-bb34-b80cf425d7db",
        "cursor": {
          "ref": "231baaf5-83e7-4915-9a64-40d5fc06554f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "58e3d2a4-4ccf-4e52-a78c-99616e15d0e3"
        },
        "item": {
          "id": "d8bce8af-8209-4aa9-bb34-b80cf425d7db",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ef62aa80-0a8f-4602-ab3f-a7328ce71528",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5af338-279d-448e-8a30-a66117e180c0",
        "cursor": {
          "ref": "0eaa7e7d-cb12-48e0-90cc-4245d29bdcdf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8acda029-5507-4ba4-bdc3-0c02d37e9b3f"
        },
        "item": {
          "id": "2c5af338-279d-448e-8a30-a66117e180c0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d84e2f71-f793-4911-a9fd-f1476c1dd5c9",
          "status": "OK",
          "code": 200,
          "responseTime": 3191,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da392c74-e04b-4d28-a9af-7a5890555960",
        "cursor": {
          "ref": "147952d3-83c2-48cc-977a-d752d5a43cba",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "937635f0-1910-4bde-ae10-89005eb3ab2b"
        },
        "item": {
          "id": "da392c74-e04b-4d28-a9af-7a5890555960",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e6091303-9010-4420-98c5-badd57515306",
          "status": "OK",
          "code": 200,
          "responseTime": 2800,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3872de-d179-4321-bba9-d72a54c528f3",
        "cursor": {
          "ref": "37e82703-97a4-4b7e-a9ed-8cceafba53e5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "69ad6c42-e63c-4dc0-9a45-5f47d02c5178"
        },
        "item": {
          "id": "bc3872de-d179-4321-bba9-d72a54c528f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c368993-6599-4783-9642-2ef19f8ef478",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3872de-d179-4321-bba9-d72a54c528f3",
        "cursor": {
          "ref": "37e82703-97a4-4b7e-a9ed-8cceafba53e5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "69ad6c42-e63c-4dc0-9a45-5f47d02c5178"
        },
        "item": {
          "id": "bc3872de-d179-4321-bba9-d72a54c528f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c368993-6599-4783-9642-2ef19f8ef478",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16472c45-762c-4155-8d28-9057bbe010d0",
        "cursor": {
          "ref": "aad34ab0-1fd5-4f1c-9a54-6a75b7d206b2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e1d7733b-7974-4631-b3bb-bf0c7051c94e"
        },
        "item": {
          "id": "16472c45-762c-4155-8d28-9057bbe010d0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "62760972-6f1e-40b1-bda3-875f8da117a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a7db46-2030-4582-82c0-a01665bd2bb6",
        "cursor": {
          "ref": "7ac85755-1c53-475a-83b0-508db3334a95",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ad95de4d-0eb9-48d9-aef1-58c28986acdc"
        },
        "item": {
          "id": "16a7db46-2030-4582-82c0-a01665bd2bb6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6df7cbc-5c28-4481-b765-a1f9b383c469",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}