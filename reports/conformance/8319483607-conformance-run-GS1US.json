{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a1687ba0-028c-432c-9c55-ec0a6869e639",
        "name": "Clear Cache",
        "item": [
          {
            "id": "225ec4f5-52e8-4ead-911e-cf41f773dd56",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6a40923-8d12-4895-a5a6-00b0244392a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6148a7c9-0a63-4204-9704-79e9ed5d71e7"
                }
              }
            ]
          },
          {
            "id": "96597fc9-bc01-429c-acd8-549d3c2f4c22",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0a07c1b-a5a7-4433-82f0-9d1cb123be69",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "310fd9ac-e7e1-4539-bbbc-5c4239f1e53c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "41b4a409-21a4-4b14-b89b-e66c8a7ca416",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c95d4705-7e2d-498b-8dd1-1c2de3470542",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f337717-adf9-4fc5-8f90-6227c49cea95",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad9fa7d0-e7b0-4b62-9dd3-aa144094e32a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5069a433-0a37-4e71-8028-4cb54f29a18f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f660d4b1-e24b-4440-b49a-1ffbf691e8b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73594619-b228-4ac4-833a-ac9763dbb4af"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f35287b8-3918-4c44-bca3-1f068c98a76f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "977194cf-f49b-4b56-99ff-2d8e0a2bc97b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cae4d3b-49f5-4e50-90c2-2132eed3a450",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c6a06c55-caef-4408-8a04-68daa5597b7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a407f4c2-2aa0-463a-ae25-ca92d0bd6829",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1575b9e-34a9-4b2c-8412-6e16467407a3"
            }
          }
        ]
      },
      {
        "id": "5860be72-2046-48f1-ba0d-bee2f3daf321",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3ff37c27-a3a3-4259-b0dc-d9264d382b13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fadd5d10-4284-4952-93d9-294e7cb42d44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7cda7ef6-f48f-4fad-bfc7-6e64160e2e28",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60ac49d-d21c-4a97-ae6d-fe8fec4dd538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90ce41a2-b91a-4d7f-acc4-44f643c4b8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69f23a9-2027-4ee7-b18a-95986095a85f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ac840a-0264-4db4-bb30-c3fd414f803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c01be39-5897-4791-9c51-0c86519e960b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a9219e-7f04-493c-9ae0-e98d4166ad48",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d67414-d795-4448-b45d-d9b40dabfbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "476327d4-64ee-4ac9-9196-06109432c6e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af0340c5-048c-47d9-b961-5af175b4b205",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59d39e42-c041-4414-836c-54ddfc9294af",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5501ecda-33d8-402a-a387-e32a6f9406d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7d703e9-48bd-4806-92a9-7bfb407173c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8a3ef2-0b43-4f1e-a29a-0ede73726efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77574d1-35ba-42e3-a423-db6dfd94d77a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9889e630-6d15-4be7-973d-886de2e35f59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a73f3410-8a2b-4836-9d11-eefa5c3b5900",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "daa322d2-feac-4c41-95a4-da29a5e2852d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8fc35b28-ae7f-4256-8260-986308baa671"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a4114d2-ba7e-4b9d-8378-92000a24ddb1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d03c9ec0-ba80-4589-ac23-cc64bfe8ddf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a901e1c-1157-47fd-810b-8cd91809b1d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b8ef920-f9f4-4953-9fb8-7abdf27e00fb"
            }
          }
        ]
      },
      {
        "id": "195f9b11-4754-483a-ab19-ef9756fadbbe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d2828b5-498d-403d-9862-719e072777fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34d8e69c-c5f6-47ef-891a-64e88b10e693",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "07c1779e-533c-4871-96c7-f1efc66339e1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafc1a9a-9e3a-4710-8205-465c6c85045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3175b8b-6ea1-4d95-9bce-0ef46c83b095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abea1476-5fe7-411f-98ec-45df5f73eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06b28cd7-c514-4d92-8b2b-22e5b15f97b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead53ad2-8d26-41da-b4fb-9ed47600d6c7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aac378-8dc5-4082-b74c-7fc9437dcb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25eb0c44-d56a-459f-9961-d3588a28f1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fd0ab9-7809-4333-a8cf-cff120b637ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94847d1f-946f-4810-81dc-4d0dcbac64f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187e82b7-9d86-480f-9940-96a31a6c7014",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaed6d6-f8ec-450e-99b9-c8ab7752789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49270aa7-6556-4a0c-a3ad-ccb0dfdab7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981b2fee-0874-40e4-b041-b98034315411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23e843af-bd94-448e-9238-ded99f24188c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fc8b04-1d3f-4e91-8b48-2bee2193dba8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdafae1-5719-454a-8f70-e1ea1a11e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d277d2-11db-4d9f-926c-c448060a0746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29df18e3-d3f0-454e-9a8c-6a81dc985042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c3b7b70-a58d-49d2-a045-51718b35842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc3be29-2979-4a07-8606-16650656b3cb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a94bc7-4584-40eb-8cbe-473cc13ac6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e4bab7-19a8-44bc-8622-d8e802928586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038a7570-78aa-4805-b04a-b78252db7f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a70915f1-825b-4199-aa64-30a673616468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c685009-0d72-4942-aaf8-831f744bb3ee",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb1179a-e813-4674-b8fd-a5d333b73e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cf64df-cbcf-4e21-af37-644c3e3e3303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74665a0b-795b-44d5-97ba-817b91db4b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d5c3cd5-a628-46dc-97b6-967a6fc50eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c11115e-f4af-46ea-9652-dcbdec76bd9e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86f1483-2773-45d0-9dce-d845dc019e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74a7735-2dbf-46ca-8e20-7afea49d721e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc51b96f-086a-40bd-a782-b68d132f51cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c66ee56-1b8e-4166-90f2-c458fec94e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c08235-ed55-49f4-be64-417af66f34b7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd29b57a-b060-4cad-92c3-49148194d682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4697e88-ecb9-4b0b-b179-c276757e0a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb4ebfc-5061-4ddf-a562-5d60725686a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4ad0632-e1bd-4fd8-b202-39307db7dd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c60bd49-85b6-4121-9fa3-ee79fa873c76",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50d5772-13e1-4f72-a776-ea39ecf312ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3eb1ff-e910-40b8-97f9-68f099415189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afa85b9-e4f5-48fc-9a0e-60a9c950087f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f0fe474-1eef-4c3a-8667-62f61efe3dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3540466f-e0f0-4f86-ad88-a1504e4bb776",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e986ad2-69a8-4f17-8225-cb56533db658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2773d3-609c-4ddb-981b-78affe1b8418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8335ceaa-11b6-44d8-a02c-3da96e1aea8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e224ed1d-3583-4162-a833-e02874cdd6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199ee6be-206f-4b57-a3b0-39a238a8cb75",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c6b0dd-3d81-433b-80b9-c7de3543b028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4243309-e52c-409d-b841-538811cc1eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bec6062-f3dd-4f48-93da-582bbb9dd745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b95aad31-1691-4a6d-b2f2-a6dfef053054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0abf8e-df2b-4362-9135-1b7596464d36",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44491337-9739-407b-9c78-12ac95526be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd22ada-45d9-4e81-b0a4-d8bdff72fff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e482075d-10bb-4a1c-b930-dc3f1cbd0c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe873cb1-94e6-4806-805d-981290ce862f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71266ee-265f-482c-9b36-be8ef152bbe7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5cbb5e-032d-47b5-92d4-8784a80228e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e452f5-5c41-4a97-840b-073797a2f8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed35e1f8-3bb2-4c95-b516-c9f4218663d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c73c2dd9-cab9-4c19-81f2-7aa7967d59e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c824cab-d16a-4173-b7f4-71482f5cd01e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba26f16b-68ca-4453-9e8d-b82f0c34d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299f3398-a391-4e7b-a733-6ffffba225f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77567a9f-0ac6-48e6-9d9a-e3a53de58a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3efeebe8-8521-4d1d-8d81-a98486a37075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d860be2-3335-4923-8dc7-a66985d09a43",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577dd95f-0aaa-4a90-b962-e28e458abbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d2dbb4-4445-4a60-8099-f30d48d0a2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1348502-3d73-4147-988e-a1a8ce98e56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a220449-ce4c-4df3-9c82-c08a408ee49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6553d164-8d6d-475d-8256-5b0950abbdaa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8132c27f-2dcc-4861-ad9c-120156c6ec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e70be0-f9d9-441c-9948-1e4d87598371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e73575-2fa0-4ed4-8c74-2b8c1d475b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c371ee80-d5d4-454f-bf5d-3b978bd3cc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b3fef-985f-4d39-9dfa-40fa05e014e0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6f8b61-d993-4258-9a30-518e6bdba81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c487419a-c824-4a8c-bcef-535e2f9572af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a39b0d4-5b76-4adb-b4d7-9f55c356b79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b395f50-6bfa-4d21-8085-ab769289fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737a6de8-2579-468e-867c-45fa4a128db3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f8f065-bd28-48bf-8175-5027abdc9532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1d895d-d0e9-4f6e-87c1-19823521b947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927df992-3092-47c4-9f3b-6cb227af52c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c21a0c-2a10-4ccd-aeeb-5217f007a18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785fad70-3968-4558-baca-ee655bdbb7ea",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dba6405-f1c7-4839-b3bf-8c4507a5e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5daa041-73df-46e4-af4d-a97383e95d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638733da-c045-4636-a555-67a26cd60e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e9bc98-4498-4b25-900b-ab8e8209f3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca47c55-4db8-498f-afd8-a7d1e19924cb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a43fd1-3555-4855-8b8c-2f835164e30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc47bb6-0ad2-4475-8329-b2378d3396d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758624d9-3b90-40ce-a005-64f845f2efa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8c6164-6dc7-4c1a-a6a6-ff2c3399ae88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1994e6-4060-4998-a890-23a522a02544",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ca2a22-d84b-491b-bce2-4e7f2401a2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13f4c41-0539-47b9-ac64-5f90f51e19c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3a09ab-9e98-41ad-b5dc-eb29bf7b3b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4eabc5-8185-4b2a-a2e5-f9c589e465ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7305b28-c3f0-43c1-8e65-044a217e5719",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b09035e-533a-4dc5-a48e-f8fb271f3fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cba6258-6e71-4da3-8dba-a3b922f73676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee3cfcc-723d-43c1-8fe8-c95db20f4896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3f9cd3-0ccc-4f75-8392-7fd45f61e092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63489419-fb7e-4d40-a143-c948f5bf9e7b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb93a7f-c338-49a3-98f6-5b6fe7aa6a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4517dcea-5f5c-41d2-9f1c-1fed762d61d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2314a51-b0d0-4bf2-bdb0-488ffbba36f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4fe1f2-c6df-4c4c-a2b4-c36e0e7bbb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7497c41-05b6-45e2-a0e3-699248e4b6f9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a07406-52a5-45a8-9110-69bed2bbecc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dfd0e3-4fbd-483d-864a-24cafef3fa8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694bb769-bfa2-4ae0-8e78-acdd0248a410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f01f02-5adf-439a-8c7f-3c3065aec29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b9b5e4-12fa-46df-97a5-8d86414b5413",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f67278e-f2eb-4aa5-af96-1df94dd7f18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed03771-d52d-43f9-a523-3cd0e3a3f764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02bf68b-6969-412b-a8eb-c851dd46fa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0d346a-bc9f-4031-8c58-40e4146e12a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99051b21-78dd-459a-be2e-f36a4a4cc004",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02079fc6-c25f-49ac-b3e5-06ac10b812a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c38b4f-0096-4cb8-b784-ba2462cc7577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b34a5b4-a625-4200-a85d-75f26347b20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b90b360a-40c1-4e91-b101-f504faf86b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ad3d6a-dd85-4179-9fab-ca002546ed32",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec455bcd-71df-48b4-a194-4095b1676aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ee445c-e901-4a30-807c-724f15b852d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52b4b81-a85f-4285-ad02-334fc7a94484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1520e701-db77-4f63-85ed-04f03916fa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5c37e5-0100-4e09-aa0a-4d4c30b79783",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0bf3bc-7122-4be4-8024-e8666a941eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730c130e-0c9d-4a64-8fcb-c4a77a68683b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7ab52a-feba-4351-ac43-14c5237af1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59818907-8537-4079-9abd-8561474361ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c7fe1e-6928-4a6f-9364-bce315b12847",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d88ead-1770-4646-a548-f76744c9aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e40d241-e41d-4569-ad04-68e6726b14ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9117da-0ee7-4ced-bee1-f4808786998f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d087418b-49a0-469b-b897-36e825d91e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a718252-5bd2-48df-854c-009617456c89",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38087b90-d7cd-4ee7-9690-f0655c5a9664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d31373-e610-4de5-b9d0-44ea1347b7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9628d004-1dc6-4d93-b6f8-c5e2d8427643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d258791-f9d0-47e0-93c1-46332e1e15da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7ea5de-eb77-4a3b-a5c7-d404059c1821",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30190f2-9cba-4a18-b7c7-1518c0df7ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e54cd8-849b-42d9-8a10-12db68ced07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e58c852-77e8-46e3-9121-ae930a956a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b40cc3ad-b00c-40cd-b329-061e0a94a4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fd0b46-ed38-47d1-97c4-4929e28b39b8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ff28ed-2e1c-4b28-a2b9-48b48c90a120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899f150e-7bcf-4834-af2f-c17e89f79668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a55b424-8309-4db8-ac90-1048ffa66030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b14242-5e24-46f8-ace3-502e9e3e2c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c3fca2-16e2-4174-a885-643f5c31d8ba",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8521b59-c1b8-45c8-82b3-08b10b54f798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd407c88-145f-40a8-943e-eb2bc7e684c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d71e3-36c0-46e8-a487-cdec5945a93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16821cc8-15e7-45ec-8802-99945b9b185e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372f1291-c271-4344-8f8b-7d98177e7383",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354ecb78-253b-4701-b985-b9e5f0f0fafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396e9435-d5c9-43f4-b51e-635f834d8a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b831f501-0a7d-4d52-8760-14d975f6c4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf218769-ed35-4d57-abee-dc1da334db28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72a4b01-a67c-4870-82ce-576ad0badf5b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b046b6b-886d-4646-99b4-6a655afb6bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5016c648-17c3-4ab9-8721-2c9905998f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ecd161-1ff3-4326-93c7-29b746cd70e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "78c3ec8e-dd61-4664-83f6-77a639473bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ea55c1-ad70-41c7-85c5-b2769c65a9a3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e91126-75c8-40e3-84d8-ff35989147bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64b272b8-2d55-49d0-9a4f-63fe6d9011ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5c4c05-4fbe-4bb5-8b69-1f2a7b4dd10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a251a53-9773-4a4f-8d39-132598a39fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7459965-dd41-465b-84a5-dbdf4d36922d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551219f-0d06-454a-898b-a49aba0af580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76688f49-b837-4163-b25d-0eeaddcf808a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a905f7-9749-4dc1-aae0-0831bcae1455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fef3a33-46a8-47ca-ba50-a579ff880d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db4a5d1-5fb6-4bfd-815c-ce8ca88269a5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f76b43-c9f8-49eb-bf97-be0bfe387967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf9ba56-fd54-4556-91ce-d231adbcc750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4c8307-af19-43db-b90b-786e3677b2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f788471a-9968-4193-ba24-6820662a5196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645b502a-653d-4650-9771-0e87793911ee",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a500c0-bda7-4a17-b0f3-06cb3632cb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70953f41-1da3-455a-913f-f2b3a4e1b1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2f5b2d-737b-4a5d-90ed-39bd2699ef0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0438dd-46bf-4ad2-9db0-60f760821225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf466d-611a-47d6-ab25-57857c33009d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e834d86d-d1bb-4a33-87e6-42bb974c0eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fd459e-5bc9-47a7-85c6-a1d69935e87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639d901d-10d1-4211-9a0d-5ddb35e4a44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f10504a-79d5-4f95-a2f3-08335911b9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45281bc0-304b-493f-9a69-4e4fe677a181",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87e8e38-2771-495d-9634-4452159b332c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f636af9-d787-4403-8a0f-b5965de6ed70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b792cee-fa46-464d-9224-b40457641d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bac427c7-337e-48c2-8971-646641d4810d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ef4b5d-ce1b-43b1-9924-8037f624d9fd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eb3e16-65d0-4cb4-aff7-235b04959058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27c1c99-3bcc-4377-bdc6-9d7cc79d62f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b517c8-40d3-40c8-bfeb-b33d4325c7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "44e7891e-a145-447f-a5b4-b2751a33f680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c81ee4a-a15b-4b31-a5db-e90248f7e325",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b52215-5895-4be3-9c96-7c313c2e00f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8ed43a-1a53-4417-9d12-8c1a1fd1ddc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe8a9fd-c40a-461a-aff2-c7e7c0f501fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0713225-f0a6-4828-8b5c-c9caaf1e2d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4c7c12-925a-4372-8e4b-434981eff5de",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbec3aeb-796d-4862-a7bc-d90fc9fae30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdceb542-b0f6-4faf-875e-5a90e04ab2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272cd8f2-e53e-4971-b492-fd00fce64c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f84105f4-94b1-4afb-9e0b-cb1cbc520ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bba2883-457d-4b97-abbc-fe48c270ddf9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76be8864-14cd-4397-b343-213774dbe1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5354ce7-c3df-4718-89c9-8172be614cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9239107-c14b-409f-aac8-bfb2b8326e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3aaffdb-282a-4b42-b6b1-d90828984ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb8e276-1967-47b2-b729-bca1d1fbe8af",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5606982b-6fde-4916-be21-e9fd838bda61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975dbe6d-2e32-4e7f-8ec9-1060f48238d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8598128e-540e-4906-91c2-cb04c169b3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0b099f-f13a-4a85-a277-a61d79e4c1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a3e9e1-2fe1-42af-8d12-10a413730368",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0c5143-02b0-44de-98fe-173e95bfca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bb0534-5598-4f4e-9218-8c44e5df1d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f0b0e4-2f5d-4b96-8c42-d425add135f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "871e8653-6d42-492d-8e98-78944a4c5021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4783d82e-b84f-4d97-9fcd-4c5ef1a7eb53",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978c7781-6b52-417c-a51a-555d88fe9479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee76937-382d-4eb2-b4b0-81201f571f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d4c267-94c6-4d0a-adeb-084dc829f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7f2b8f-7eb1-4c44-aa62-a7eb4499f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a6600d-ff6f-44eb-996b-41b66c0c2b4e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5d5fff-f0a2-477b-aed5-5a21dce96893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3fef3e-a06f-407c-ab9f-01394375eff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ddc080-5dc3-4487-8b97-e9cd578d906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea343877-4ae2-4b33-93d4-3c5ceb1b0484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293f4bdc-b47c-4e9f-86d5-c9106f174f7b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f051aaf6-4b38-4e01-9278-50df32afc17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff2d2a3-ebc3-4541-ad66-588aafd35833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba67cc57-8aa8-4b0d-ae26-b89cb02016c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdac9dc3-cc40-48ec-9006-932aaec267a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a1e35b-42d0-4126-8c6c-0b33570d22d9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7909e319-c3d7-4bd2-a70d-910fc3d65df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bbb675-add2-485f-a78f-1bde6b4b0aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044dd807-4459-4c67-bd15-da4bf29785b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a35be5-7e74-4142-a554-7ed3be77b88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fc5bef-42d5-43b7-ae19-d0ae16d6fa06",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9487f4-f50d-4774-8e29-cfda24aa35ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d78578c-89a3-4e9a-8740-10e095167d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e155977-42de-4606-832d-d738956987f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f49842-030f-41e5-842d-0c5ef166ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e4d9bb-8860-4542-86e9-90a68efe33c4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c41a16-3b18-4d56-9bfb-267fa247a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa49920-a527-452d-b6ea-09b1ba3d6005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0093276-9ae2-4f4e-a344-049dde94db19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4730089-74b3-4e8c-914d-b50119adb4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881cf816-14a0-4393-9fc9-473481e9121f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9a1416-ffba-492a-bc17-07b878d658e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd21cdf-99a6-4612-852a-21b94b2bcc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadf0b0f-9685-408a-8708-68b7ff48b7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e06d41a-bc52-4e22-8a3c-eb92a9007119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c4979a-e58a-4633-af7b-1cf129d7b72e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7069a2ea-1617-4f31-9a78-b3c8bba002bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00245938-5cb8-4f2d-bad8-d97d54b2098c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b006f75a-cdac-4bbf-84d1-528b5583cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9c3e8a-bfa4-4796-9c33-7ce98641b1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd9e71b-edac-4eb2-8f88-7a15ffe6cd3b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d81d99-3e19-447d-bcb0-33f6c941c491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778cd953-d79a-4768-9026-24cbd98a0659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2138481b-9f8a-46d0-a739-3a6d3760b0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c11bfe49-3fb1-4c5f-9e97-ae7dcc6465d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b932ec5-e784-41c2-95f9-53153794212b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c56067-3e76-41eb-8f93-0b74c4b63f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206e49f4-9c17-495a-b9a6-3202ac546219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b4c97a-71bf-4af0-a91e-a8e9323b5be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f41f6cd-6c08-4e22-8ea2-1e29f47eb7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dc7c4d-b98f-40df-9e5e-aa56d9caff37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be7b41d-6c33-45b9-b178-35b03708d915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55cdf155-b5d9-4db5-aed8-de6454c9b666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37385c9e-a0d3-491b-b6f8-8deee068843b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "abbfab72-ce93-4b66-8655-6d4c920cf8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2096f3eb-1e4a-43ae-bf98-a4f3977ed6b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b90aaf3-bdd7-4c62-84ec-65ade4421d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3ca145-537e-4499-a2e1-83fe5fc45b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a2b656-d7bf-4b2f-8f73-68e56dc2f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1959ff6-942a-4f0e-907c-b0ec3197ffcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73575cf-8fda-4b48-a5f1-d6af891de597",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ead2d9f-382e-44fd-86bf-8f8c36bd4c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc87cde1-99a0-47b8-a7a6-07f7dc735f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70977639-ff62-4fba-a803-74b1981b8308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b55418b-725f-46a9-a562-d760698ec4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30319cb-5afe-4efb-be44-a85b2e9a5b42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5e38e2-eede-4385-b6c5-b79e15b7cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9778a7-4217-48f9-b75d-f9b21ea5cfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3847bde-7002-4ff7-b86c-ab7fba3bb7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b064e2-c318-4761-9286-7935d8fb2dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332792a9-2ecd-44ab-b2b1-6e4be0c5b11d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb36a7b-0f0b-4108-80cc-0c4fb6554262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7008db-ad15-4819-b760-a4c72810c920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63862956-679a-4258-9a6b-052ec5b71ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "af1513b4-0894-40bd-9a44-ec63f82d028d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d7e421-e41c-435e-b761-3caf0374a3d7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babb09f2-e1be-4be9-b1d9-63acd93b25c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47611b6f-5417-42df-b116-a06f90eca7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673cb25a-d4e5-40cc-a479-c8614a577934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a1a62f-a4a4-4d98-b441-4525a0c3d165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b55c4c-54e1-4491-9d33-a0f8d9ef4e25",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fa0d63-84bb-4817-a63f-bea95c73fa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c5b39a-e698-4f5c-b965-d8c00e25b302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2de3d5-8fa1-4369-bf4d-c52332f12ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4c9ce4-cc62-40f9-bbf4-4ff5811ea507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c717ed-6a77-4ce8-9732-60317358f143",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeeedd6-7bdf-4b02-9a52-61488f642bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9719bf47-a257-4202-b4cb-1e8ad6cb7b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496a337f-8b37-4a9b-9573-774568267192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff757c7-e832-4169-affd-910f83c7f93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3e4c97-ab76-41fd-9966-2e7df8b59d27",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9852a1b6-e983-4620-8fc5-c9929565c715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e214d49f-0ccf-4718-a3a9-357d279a19f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba5cec9-b6b5-4202-86ae-e4265da0acdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df3bfb7-6ff3-4805-a2ea-355aa4a2b595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3479cf41-5805-4cee-a477-66ac91635334",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae95c7-c879-4e43-b79c-568006fe749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4134df-ab45-467e-8631-578726aa75a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bf87ee-786e-4961-8a14-75bd4474257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea56d265-a074-487f-8d8c-dbb747e224dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf6bf40-e84e-460e-8ace-baba8a506741",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca8c1c-663e-45db-b8f9-81260af8f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d2c8ec-4733-4d81-820d-e5bb6e249889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2f4a7b-af6a-49b0-a952-6772066de5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31385afe-ba1d-48f9-b2c5-cb82aaf8c2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9fed5c-e123-46d6-9b2b-a5fd0fe4e36e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785d0557-10a6-4255-b062-69ced33fba34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77dd29a9-e667-4e79-8818-1405d7785c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8d05dc-3492-4c01-ac62-0915cae05a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a9d461-b456-4d1a-ac7c-9df005a508ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d9bfda-d8dd-463a-8d34-0da86202dcdc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01c6df0-bdfe-48fb-9337-2a18e84156fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe781f14-b490-475c-a53d-70e853519314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe43a5a-8ce9-4f27-b840-53f2aa7b0679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5a93de-d8bc-4f0d-b498-9abc7dec2f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f724e2-c5ba-45b0-aab7-467f8b7cf96a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3a63be-9fa9-4595-9412-746ddcd0bc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d186625-4e22-4797-8215-0905dd76ed74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd495779-4b59-4831-91fa-cbba634f7072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2bd002-a3c0-4dca-b0a2-61900ae7bc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f40444-12cd-4615-91bc-0a10349ac8c2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2d6176-9c6a-4c6f-9cde-b3f85a8fdace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebefc92-b3f6-4b7f-8621-2a4e9904745d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a709c1-20b7-4b5e-9397-72f61ae751ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31774941-166b-447c-af0e-cda484f99f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0be0016-d158-4e2c-a8ef-48c5eba8791f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffd2f87-f01b-4554-9bbb-37d16c2c9356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a3ed73-4e6e-4f1c-b67e-79ac8ff5f503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bd1924-2d3c-46f5-9778-62cd03f68a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e486f1b-1755-4b74-8d71-63392ebc2f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe550547-8370-4f3f-acd5-1fc580cb6eea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc8753e-06e5-4276-9044-91406c0421b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad3eb17-4d99-443c-b8fb-04eec9bbd95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e218477-40df-4db8-b0f7-80121df46ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d10f3c7-940b-4c5e-8fb7-39aa16c793aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c52368-ed62-4533-8ad0-1e542542d817",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73b5c92-d4f2-49db-b864-69a41f1c6880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaa249f-b5af-4b29-9307-b887533527fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3e697b-1c78-4133-9eb0-041504e9f950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc67ca7-7983-49be-a4a6-edb1d3ef1639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9380fb-0b60-4204-8076-f1331858c5fa",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea625c78-e55e-46c3-9e36-84bfee9e45b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72af486-e2e8-4714-982a-da917fa09534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78120028-f421-4b75-8e43-5b583f610012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08035190-5576-4972-a9ea-59eaebe5c032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a5cf9-de32-4504-97fe-8dea3bb2d7af",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45012e92-2dcc-4840-9044-cae844312335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e0a46b-7e26-41d5-b7a6-8d05aadd0b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b46c789-8055-4d2a-b7e0-5fdb526ecbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b017da69-48ce-48a8-980a-204e51fd36eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7588c1af-bc77-4b06-a1b0-b550d5d49ba4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cd72b8-7ec3-4d25-8d74-3ff17d59780d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43497a3-6441-46c1-bca3-8485346ecef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab2d1aa-c4f0-4442-85a4-bd6835f3ef77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "185e9258-cbe8-4801-8896-4d1fba70ac92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b976a02-6a56-472d-b9e1-cb5e3613801f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01abe59-1310-4276-9056-40c898ce3e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b3ba27-ced4-408b-a982-9b05012ac45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c6342e-9aaf-41ac-a6c5-898bc6f7ee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aefedcd9-117a-4864-9811-bca9d258d1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4720e10-75cf-4fe6-b84c-28d2dab86a71",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380af459-87b0-4e00-b5f6-883e62359379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2f922e-eeee-400c-844c-c9b5f437f4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b2dbfc-d2fe-47a3-9cd4-f791250f3d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fecff605-741a-46f9-bdd0-fd98c92c05ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0afa1ad-7d94-421c-bb45-affe44341e9b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefe8e45-a257-4727-87c2-a9355a1d147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc06773f-6649-4df3-876a-6542ffb28448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc06ca3d-0803-4c7e-8b5c-4952a581abc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35bf8a5c-a16b-4728-bf0d-3013431c44f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c0eca-2b85-4065-9163-c2a71713c426",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa404b9e-6a2b-4faf-a259-249217f157f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e691007-3e4f-45f8-800c-4c700f82bad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f625fd57-1062-4a72-a15d-4be6d6f870ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f481b73-3502-4de2-8611-f322ea6b1f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf0dd68-61e0-452a-a414-57098f2d1816",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9385ef2c-a4ce-4cb2-ade5-cc8a0a1a089d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f0b0a2-92c3-4636-acfe-a03b95743d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b09f61-6133-4d79-91ad-ae477d729910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a10799-1903-4b25-a7c2-cb25d0615bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ab274a-fdb2-45b5-9ae4-44ad1c3f3d44",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0089cc-b35b-4a8e-83bc-2fa3b8bf50a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3ff47f-8fc8-4bdd-8310-3d75028823c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00990a1-4aa1-4f2e-b018-320b4ca0a830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f842619-64f7-4c8d-9490-7c8552c1a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04de3a81-7a16-479d-a608-530b5c4382c8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed890759-d213-45f4-b485-c972ffca879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac2bbb0-b9a0-4a8a-9a41-bf23cfd4a125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd0a7fb-57a1-4606-a3c9-50ca5f7e8d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc0e6a6-9a65-4ad0-86fd-6c73756394c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee73e4c4-e2b3-4df8-a624-94b87094fcdd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ca6654-3385-4566-b703-009babdecc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e17c52-5939-447b-966f-0c18dd9be56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725036a7-187d-4582-bf1e-5639bf5d3114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5ec0ea-7251-4872-a312-49f1fe2cfb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c600f4-1394-49d0-ab49-7b0467796527",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9482750e-ec52-41cf-a010-d673c3d47e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c25873-320a-4e18-a508-c8d4a5f60442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89e930b-62f4-435b-9d86-fdf74ac599a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7720fe92-dfed-4995-b92e-9ae5de9f38f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f97df1-2b9b-4fef-992d-46c595e2f578",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbe4a5f-749a-4db0-b456-f3445808f779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347f0c4-2aef-48fa-bad4-b75e236cb6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b2941b-c754-4fe3-ab1b-c390d0bd45d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "518245ab-2f6f-480b-aceb-0dd195428204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf14f25-e45a-4e76-84ba-a9f8320d826b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a2ee70-3fc9-48bc-86dc-2cec2729f540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67136dcc-ad39-4720-bb57-2fc02732040e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5223e833-94af-45d9-8634-b14d37d21558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e83444e7-95d7-4fb0-921c-96874ba831a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4507a8e5-ebd1-4c76-b565-526e9bb320b2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3353b1f5-2b4f-4d65-8736-b0de72d53cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef25ee79-1cca-4b83-b29e-1f1ba844c7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3b34ab-dcb2-4ecb-9fab-66e0d9c42c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f66eb23c-f274-4e31-805e-3ed3c0a370b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fb237e-450e-434a-b978-96a66a0387b1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104843e3-4dae-4648-882e-164ee011f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5aa0bd3-4a03-4064-ace6-1dad8ba7cf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71fe0c4-4a12-400c-b0b4-96daa76db419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8635ce-772d-45f5-9818-ef18419b5142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169aaf8c-b0aa-4d54-b309-c593baf375a3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828d3e6f-a3df-450d-836b-680134403592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "181f78a1-5be8-4493-8143-0e261556e7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6e4e1b-6ead-400d-a347-a0656974c7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23bc73a9-a8fa-4c42-8222-f497de7866b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f58d3175-748a-4a7a-a5cd-c5ca0e72e092",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b680c6a-aeb7-4b45-9ffe-0d0a11b0485d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb94b8-3e53-4543-a677-a4c64544b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96f199ba-c840-49ff-8164-6e2177565358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1b9303-83d7-4c07-80f1-3c548797f4d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e607d570-35ea-49a5-a213-83e970ab7b1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bbf63e5-9c78-442d-a754-ca5da5da0baa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c1d6b0-92e6-4031-bd1d-0d2e245eadf5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d428a3-797e-4a81-a248-e6d0a0f3ea72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48ce2704-a1a9-4f27-8e33-bd11c49e8c21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6980ea38-059c-4857-9709-8240a1e41240",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7319954-e5ec-4b9e-94ba-5d4b2d397eb2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ab78b3b-d16d-4788-be75-5a2f376bba22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "468c9be5-7a56-43ef-b32c-6ada9f6144bc"
                }
              }
            ]
          },
          {
            "id": "f4aced27-3a82-4fc0-9b9b-fefe2d7f22c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99e3a05f-1e8c-47de-a420-9b6e39b08660",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4b49b8c2-b681-4ce1-b3ed-3b814977a5a4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8a7cf1-bd88-4d6e-8aed-fbc06a3e3404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f5d7c7e6-7080-4880-ac1e-8a63413cc646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef66ecbd-74d1-4324-bacc-7c84d34f4cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03c2fb1-9095-4ac3-b6a4-730d358dc7b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "895ca7ad-fcbc-4f0b-92a4-1022a77acada",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "178610ac-00d4-41ca-b9e2-aef3cef5d26b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "030f59b6-59d7-44c5-9262-6f234dc2c174"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b080819-c0cd-4d9c-8901-3432764056ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d0d4c1b-8984-492f-8bc9-5ced68eb00fe"
                    }
                  }
                ]
              },
              {
                "id": "ee8705ca-7a9c-49f9-b9c5-d95080be8b26",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fd9af17-d20a-4ecb-b9f2-53ae15b97cc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aff64133-6881-4364-a477-94ee55f07b9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed93e3e6-64e3-4ac2-8a4b-8ba9f27a821e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1c425cd-2293-46d1-8436-0debd4f9db41"
                    }
                  }
                ]
              },
              {
                "id": "788ff617-89f4-42a3-a76a-ee8622b3b663",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57b503ff-de5d-4ee6-8ba3-ccc96850db23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "990ba448-47ac-4271-8687-1e8cb9796332"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6a9c340-e454-4b94-badb-bfe6d3ab0ff6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "075e9f63-7520-4232-b726-e2cf637641d7"
                    }
                  }
                ]
              },
              {
                "id": "4de784b1-063e-4ad4-998a-ccd498a18fea",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a68352a0-3ee9-49b4-9c5c-863bf01c6bc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67b36f72-2f64-41e0-9c74-08aeabe0e14c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ade949db-3313-44d9-a5af-06e2bdf4bd08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b0b3cbdd-ab79-4bfb-badb-5ad551fbc3e6"
                    }
                  }
                ]
              },
              {
                "id": "bf159589-c39d-4bb6-9d9a-558ead60a39d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17001793-db35-4e4a-8bc5-bdc5c8a951ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90867c43-3157-4bdd-a35b-ac93721c19c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3131fe69-203e-4653-b08d-224f52f274a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8aef2428-28fb-4103-b275-14963e50ee52"
                    }
                  }
                ]
              },
              {
                "id": "8b950a46-4fc8-4794-9382-c1f6540af9a2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5f62afe-850c-4ebb-b39d-cf12a6e942eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f46c2592-0d7f-4f20-bcdd-59ebe45c7505"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b850cfb-f7c7-49d0-8d6e-f11e98536a88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa8effa9-da42-4f81-b11a-0919011bc208"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f25c60d8-9584-4e7e-852c-ff09b7a206a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec4b751b-6034-4630-b310-0f81d8b320f8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc3035bb-6146-442d-8aa6-fbff0e70ddcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0095da01-3314-4cb3-a1e6-26d915beb588"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1521aef-db67-48ed-844d-2da3ffe3aa5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "940b74fa-f209-4507-88c2-b9a3b2942101"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93217f5f-9a7c-4f80-a68a-398774de6ce4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52be6c4b-7b58-4c22-b9b9-f1aa632056b6"
            }
          }
        ]
      },
      {
        "id": "4b747b74-ddbe-4363-9db5-31a74d5ebeab",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "26433877-5dea-4250-bbf1-5faccb8bb88c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e9f42bf-1813-46bd-bfc0-473164fefd99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee3ac059-9751-4f16-8484-ab457272260b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7d3cef-e0c1-4443-b1d4-e63bfe03669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd866f4-ac4e-4e21-89c3-40d21c4d36c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de877869-d534-4aaf-8a89-d32f59b28b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c341ba-a5e7-48b2-92aa-f353f6104d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0271d6-910b-4155-9202-ae1763c66e92",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390876df-59e4-45b7-ad11-8bc6d4b65917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18665ac-e555-4a90-b8cc-41c1c1cb86a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadc26f2-ab11-460a-9d5d-72a6ba3a25af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7411da5f-d554-4581-b540-1dc2cff8017a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82c3a62-12ca-4c51-910a-0ebd8d50ea40",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dc52fb-6ebf-4d5f-850a-8b92529c87bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73a0193-0537-4b13-8afd-a66fdec43236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e06f5b-37bc-4dbe-99f8-3aafcaa280d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37be7022-a6d1-44d3-af28-5b3d71e05641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ac3f9c-d1fd-4d44-b0ed-6f7c122250e4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad83c84e-eb3d-4f99-a1e1-d9f57d765972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d38265-98a0-43f8-b5af-0e49bb4ff91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa379d0-4bb5-461f-9088-a86a8d71527e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa3d8cc-0d16-46ff-b9fe-45045eaacf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ce67ed-51f4-459e-9553-53da5417635f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d052a7-354e-4901-9bff-148b88f28651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ea8400-987b-4e86-810c-dc25ee5bd580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143a590f-4bfa-4252-92e4-54dab7d34838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12da8645-c180-4ca5-b968-e4afc0a1a64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42912f8-e78a-4011-9b97-f161c9e2483d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc543fa-1443-4ff3-99cc-34eb471cc8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f48f4b-51bb-4a60-99ce-ddd1bb98fd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b76265-9eda-4767-b1d3-6e2d0c140a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dd03ad-cc2c-4eec-9b0e-29e667268775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cbe66b-0a77-46aa-9b6f-8190d760aec1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d7554f-1e35-47dd-b0a3-fc22e46fe50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23db2b4d-2218-47b7-9844-4dcf5ca6de76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7af33c1-a3b1-45a2-b9e4-e42d647a8bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4ab3f7-7124-422d-a88c-2e72bba39dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbf91ef-e54c-49ae-bd46-b6f996a362a8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b29da1f-6756-4d8d-b770-6ca3e744d38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcc4475-93a2-4ab0-9976-7ecb7b46a24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c701fec9-1958-44b4-a04f-22fa2cd57432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a2c773-60c0-4525-b479-9ce27407ab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbb5863-91ff-49db-a4b7-4f0c8abb4aed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e16455-6736-45c0-83fe-6dd095a718c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5637bd7-01f8-44c8-8632-e2dcafb886e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81eced8-2fd0-42c5-9add-f96c500574bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ecc64b-c921-4a58-a2b1-e5cb8b3afcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8951fe4a-185b-4fda-a933-72166352dd5a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93ab7bc-fab4-444b-b386-d6b6a5730baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1517b48-ccfa-4048-9671-43c8d5481618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2f9d4b-85c2-4290-aa5a-ec8d83382238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e012c30-bcf3-460e-907e-e5da96996f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332aeb82-5ca9-4595-b6b9-d8563cae8764",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc45d029-a8e4-4623-a320-c5407f36f477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88657a6c-ffd4-41d6-8d94-506adb5be3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba1fac9-4c1e-476c-80f1-e803e8890909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "58fd72c7-8191-43cc-859c-24d6eeea364c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610cb8a0-5aca-48c9-98c7-8ff02fd4d0f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c56a57-8c29-48bc-9554-dec751d3a7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbd65a4-3b88-4cca-be2e-00d35a78989d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b353c49-7ef1-49d8-b79a-1307725d55df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "205346c8-21e0-4f19-be90-6cda214ad008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6bd078-fd9c-4656-ad21-21de98628b08",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41b0a6c-5ff9-4fc7-8e2c-cae15bebd6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a911bbde-c2a8-474f-90d3-d080ee1ced3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92382d10-85f3-4c83-a4e5-eafc72dd8846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6663f0cd-c8a0-4a1b-b877-638a0cdcabe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6c742b-fc85-43b8-b887-21e7f25d8d73",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cf5b49-0f38-47a4-ae73-51326301f09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33981c6b-7351-4530-a2c3-1ee91162478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78addac7-c182-4af6-b287-8f708f2ac128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e44cba-e237-4338-9418-ede4e936d405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606e00d4-1545-4fa1-8c02-a82f4f426b9e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eac671c-da69-455a-aef5-5b809be889da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2405fb4-5d7a-4670-bae6-f4f8a6eeb4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6baed06-f801-477a-a25c-01f0ed9dceae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "80711542-df89-41a5-a350-c763bc174d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150aaeda-7d8d-43a5-be1d-69eded58b57b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5931a0c-79f2-4d10-8a66-9db0a006d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34abf51d-994a-4300-bf4a-76e8c96a1bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e37e974-61d0-4c3f-82e9-5763db311477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "539fe1d5-adc9-44cc-9608-9ed4934e194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17f8edb-47ec-4b94-9b81-ef6ae4354138",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b824819c-bf11-4bf5-b86c-84febe6de177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addc4435-cdfc-421e-933d-560c111536c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a151db8f-e25b-48a5-9669-e4576803db15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "82dbea98-6ff7-4dff-a244-55426bc306d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7bbdff-c4a0-437c-b8e0-86ade23387a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cabc52-ece8-41af-bace-6776c8287786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a694d8df-b75d-4074-b431-e85dd877062a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3745b64b-c8ff-46cd-9466-bbf7be97d34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44eacad-46b7-4167-a71e-32a89b844d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85f2877-ea14-4949-bfd4-06847f331d8d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a459d319-a06b-4b3a-9a0a-eaf1775febcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc92686b-3b61-4968-ad67-72b02563f9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9673088c-b21f-49ef-b5cc-31b5b1ab7891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5333be27-22d5-49fc-a756-a9c194c17797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c8febc-7e8d-41a7-bd70-e1483d0e8ace",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f37f0a6-2276-4e93-a81f-e19a54174eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875161d9-b837-4e91-a29a-92fc81ea5bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64080f1-679d-4de7-9d81-0e17b19b15bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c79bc225-576d-46b1-884e-0656396d02c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935855ac-9a67-4460-9864-c74565591fce",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba032d1e-254d-4204-bd1c-948d37500122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c968fd63-a418-499d-a5ea-e9a598d0e851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec47aa4a-27c3-474e-8993-1b07d9836f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fe85a2-b36e-44c6-9eba-6521dbda5f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06dde20-ae8a-4e65-9eb5-533ed08f45b2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a22e20-481d-43fd-8421-67e9ab0e7f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d372ea-26f1-4864-b9a4-e7ee46d75637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15219842-9328-4ccc-9451-c6597df4d292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d444dfe2-fdc6-4422-9341-84e3b5205fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c7cdb6-2fb6-49c7-84a9-b2277d1ecdea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c008c0-87aa-45f7-a855-e24fa3590f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8759fa5-6c41-4255-ad04-dbc168ef4ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9292d2b-a473-4409-9ec1-1c21e7de3512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d69454c-e8e9-4d84-9550-111eed718637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd16ca4-81cf-4de0-a9d1-97d310d45f9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5e091c-b757-4422-b44e-960772c93318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1661da4a-0937-47e0-9be7-e932451914ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d2568f-10de-4889-8446-6c7f6e22e8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "143eaa25-767b-49fa-8b14-62976cd8a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4edc5b8-49c1-4698-bc43-d302e5320d4e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd0ef2b-eff4-4ee5-862d-96e97345aaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32beb4b5-aff8-4326-abd1-a4e6e6933136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2c7db7-7c6d-46fb-9f3c-ac6dea0bf46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "263dbd1d-3c2f-4a78-94da-621bedfb74b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ce2c8b-6716-42a2-ab8f-b1eec7a7f07e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7579f32f-6134-4cea-90f1-ed8bd788d494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ca0c17-608c-4b82-9017-a3323e8dff65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692b5200-4a96-475e-b758-912c3a205fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aedd55c6-3870-4a47-bb84-10a5bf794399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b3a1fd-dfc1-446e-b420-f4a17cf9ef86",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298fd7a3-14ce-41a2-8b0d-afcb80821e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef08cc38-68df-410d-96a7-db73efc9ed6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d283ca8-1756-42a2-833c-0f43dbc7415f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "496e89ba-b1aa-45d5-a8fb-96440b1f285a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdc75e1-e1d5-4ca6-b2d5-b8fad68d207c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ed9288-2f17-45fc-9f01-0d66f969931b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a898e50-83b0-4647-b47a-f675dc2bcefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cdbf66-e1d3-4dbc-97a6-a15d3524a20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5136f45-371c-4bd3-adeb-59e020b8b830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806345a4-c123-45ba-aace-0bf47777207e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05d8535-cb0f-4a65-a750-e38a0f0bd483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9655b0b-647a-4cc3-85fd-b14b6500e3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69f7f3-17ea-4360-a502-978a94215a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8d55cf-24fc-43b7-9aa0-53053e2ee8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f999ef4-0915-4b42-9af1-560c662c1cf7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04226d9c-e521-4ae2-9e73-7d6aa3e848d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50f4f89-322e-47c5-8984-7a1719bea7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1283f3-b401-408e-9c66-9392bdb268bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d76a00-c107-4ce7-a5ba-eac19071ae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913ece4d-1841-41b8-8f74-c7234668197b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb0497b-1ff2-4a63-b511-432b96663aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e4de80-fe77-4512-acf0-eb35d24184ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2200303-8162-4891-8ea1-a4c06efea09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd1a69c-a389-495e-8f4e-b4e7eeb8dd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b436060-3acb-4e41-912a-80a396949f8e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6b9b8d-a404-42a7-93d8-f34b79a59664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d03b86e-3619-45f3-b0f7-b5f91d25badf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d000ae-0180-4d6e-bf44-42e377256ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5288e7fe-522f-4a55-b76e-3e6984094e4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67b66e48-a76f-4769-9b0a-c1975178708c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "478eb441-6895-4d20-bac5-eafc3339fe19",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d5693d-6e22-48d8-a55f-7bafcf6b5960",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fe660cfe-7ec4-4d7b-ba00-651a873d0250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace62704-0c10-4a6a-90ab-e096a26a61be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6573240c-84d5-404d-8aa6-034e8b150ca9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc9446b-93b6-4480-b7d5-058e5edf0e18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8aaf645e-98ec-42c7-9692-61db35d33e51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72526745-5108-46d7-90a2-08f3da518859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f77aae8-8cef-4c52-b0b9-4782900c7e8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf2bbda9-1f18-4b30-8646-a642297e76d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e0cc1332-0a75-49c7-9df1-2ab1c072e73a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b12c1eda-4af1-4bd9-a471-7a0d165f5bcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "928db0a3-b890-43b2-8df1-d30c12628edc"
            }
          }
        ]
      },
      {
        "id": "2c08cc85-12ad-49b5-99d7-490e6a6be5d4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6fd61a2f-1c29-4947-aa91-f8e68e861216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f468126-0303-44ff-9f6b-a81ca791fea0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "167cb3cf-8cc8-476c-8ce2-507f3a9215f7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0713be07-3ef8-461d-9941-522ad9d817a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eba2b2e-7a48-49b2-8d34-68b5014ee2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afd80ea-0c02-495e-842f-7b97fadab9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca65b8d-6a56-4895-9189-4e4add848741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37b870d-cbb2-4dfa-9add-7e2ad19e9c72",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f7a1dc-0755-414e-bf4e-54d3021b8a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb611c1-a1bd-4d91-acf5-0a606c63524b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f18980-762c-4e3a-a440-f8cc5c7879ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de1b697-1264-49d6-a5ba-f520271e84cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770df063-23a3-4894-99c8-624886b76208",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cf8ef6-6e5f-4f4a-b06d-231df0af59e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbaadee7-34d7-43e7-8b59-bcff8b32ff6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c8ee82-9776-472b-85b8-7e5c7122a746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "469406aa-cb75-4aab-b3bd-71e41e44581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af779c8-a954-4e98-a6b7-8ad0910b4a22",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2e6de-9a71-4d45-885d-e9261b36be32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1516af41-4ae3-44f5-806f-353c6f09febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2051047f-83af-4e2f-99a1-36ec62b642ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca42eca7-a54e-41f9-be4c-73dd6dabd6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bb27a4-3015-48ef-8415-3e8671217b19",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff2b322-d0bf-40e5-8e94-853a6ec8d7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6d17b7-5d5b-43b5-af29-81d8a45c1002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b0c78a-55ef-4164-93b3-c2b525807caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a746668-5c04-4c03-ac89-79e36e21ae16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aebe7f7-5958-4b8a-8585-1fc8a78252fb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5d3433-f5ba-4161-8ba0-9e3966bee642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df15e3c3-5a2a-4320-a0e8-d1809561f891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36cdc17-40bf-47d7-aa36-896808a693fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be52e51-9f54-45d1-9a20-85381a6d674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa650762-f42b-44d5-becb-0b1ee5cca1e2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d37e35-a778-49da-9e7c-8aaf1731963a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86564c71-02e0-43c0-ba30-a8c2f72fb328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d33f7fc-4569-4b6c-ad6e-8212a14f7510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "09024fe1-1f0b-45b2-9b01-520457c52cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d890d0d5-adba-479c-b77d-7392748426b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e52648-f961-462b-a9cf-ced33077f020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ed9b6e-0bed-409f-8880-36df25f3c31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8ec618-cc88-4ecd-bf58-6e653fe4f172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28d3db64-bdf5-4872-84f4-26b10bd4cd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde5680b-73ba-4982-bab7-d89ef6584dd1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53ad4d7-95f2-48ac-81d1-7f374df99126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95674c1d-882b-4027-b255-6edae8630573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a140ea-826c-4597-a334-f6c8c199b90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88dd1ce7-c94d-498f-bad7-f042d9b7cc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb89c745-b302-406c-9497-cee9eaaa810a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4cbe0d-0d01-48ef-9ed5-d8170a3e39b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769492a5-caf3-4aeb-9aad-6d81a91fd637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b9e3c4-384d-4f74-937d-f39d877c2f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e425ecde-df90-429b-a27e-1c92576190d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70acef6d-a70a-479e-8e44-a49bc572a5f0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b4d0a0-ee9f-4985-a097-3c7fbeeb1a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f0b4d9-5cfc-4460-b1ab-d6a6c99fba87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebd1dff-5f57-4e36-9c6b-b20e3331f80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c3d303-59b2-4ee2-bbaf-f188866af400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caffc9d1-2133-4c2e-b594-3ebb12676534",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2570ec0c-d4cd-41cd-bd1a-e52a003e3227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ef41e8-7756-47f2-8f88-e16da2bc421a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad96ceea-2ed9-4414-b9c2-52c9e556353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7a8b2f-44d4-4544-81f0-4941e0dfccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db58d499-e273-47c6-bb60-f16056b140bc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce1f9f3-b301-4a4c-adb6-5b4b8daa34fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049a1a05-9218-44ef-adab-21ce5cd26b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d770835-5922-494a-83b0-86fa3c9bac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34378a2-0157-4797-af8c-71ccafee3a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5502b9f1-9439-4140-9d29-75ca8ce2f019",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3042e05-5468-4fb6-a5a5-1b1161af7072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46669f4a-0494-4c69-8fb7-857a1c3098e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a70a9d-68df-41f1-b14d-3bd2a83b81e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5262ca98-4ee7-4be7-98e5-a0dfb2212843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18442d0-c886-4c94-ac61-18a6c2595f29",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a44d37a-0c7c-436d-811b-0e1fdbe564b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5834085-a4c7-4764-ad34-984c35022e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88181620-d0fe-4c00-912d-29ebdcb2dfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a1dfcd-9ea4-47ec-8e30-d495e4b20f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32c2a59-48fa-4bb5-a9ec-3497b5fbfb9b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446cb1d-8c30-4a2b-97ed-de8b34b5e044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e3a7bc-74ec-4103-8b5d-7e3b16bcbade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fe339a-827d-4137-8030-b420a9b41351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c78d52e-97f1-4b81-b6e2-9261f3cfcb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66cac70-37d1-43d3-ab3f-2d53fe77c3de",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867b88d0-03dd-4d2a-b80a-b0c9b2ad236e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7627b1e6-ac00-4d68-bcd4-a81fac190172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab00de5-3402-43f1-8fe1-a37a0e9d29e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7399a73-d72b-4c9d-99f4-97bab8a165bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ba0f62-6d2d-4a92-b570-3cebd0e7abac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a974082-0d93-49b3-a24d-18c05cbcbc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989d367e-2528-485b-a283-96ad1c49c630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e67532-4fa7-4afa-aace-d748a32f4b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c84eca8d-6127-4d0d-8be8-02d2369a35a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91223950-6225-49f5-8e09-fbbb873b2b64",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51477a3e-cc1c-42f2-be47-37d5e314d2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcecba5-5c91-4c33-a783-5aa2d30f6f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c439e2e3-524d-46ec-829c-4d0964777de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e87566c-24a7-4ea3-bb65-5dfefdc2fdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287b5c0c-2e2e-4a5d-a838-d36af6974623",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657afd9c-e6c3-499d-a64f-e514d6c308f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1c587e-f3d3-41ac-97f2-07ea0cee2c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7533ad-3379-480f-a093-e1ab88893fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1746119f-3349-46a3-a07a-bd0e09b0ced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09986a64-979b-4e2c-8c6a-15c1c04ae330",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de3c185-888f-42e8-9ecd-811ebd21ab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8deb0a46-9a1d-4bb5-89d2-6cf07390f9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f7e675-27f9-4834-9353-a6f08f248b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c6beec-0daa-4d0b-9f3b-9967dbf764ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a883146-e0e0-42da-afe8-3814ea23c7ca",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa1b8d7-736e-4b5c-8fed-17294b8d6492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a76eba-fcab-4a67-afe5-438261b1e8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e675d1-9b2f-4ec9-8208-040b59b820e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02626a1a-3677-4a1a-8029-b3342bfe63a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f56b9e1-a744-4da1-84eb-88b8684cb142",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50195083-e738-443f-bf42-41a899862b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc1dd7c-bb3e-4753-9c9d-28e3ae675123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32ad575-6b31-446d-825b-60f8dc185a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8384bda-cedf-4d54-89e9-76c52f886fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af766041-9140-4ed2-b73f-0b7ebfb32409",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0562ab99-32d6-4388-a997-711da94b6670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246f3bea-fde4-4e29-944b-6279770b3c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b0acfb-4248-4262-8404-1867ea00f55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44fb61b9-29e2-4de1-95f7-d20f69d89dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66c779d-dc6e-4b97-acc2-65ea7ea5519b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1107f111-d9cd-4310-8a95-bea4e32d65e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5177c974-3a3b-4513-a8a5-6e884317b819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc0dab8-6021-49bf-9c5e-00919db89416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8820d1e1-a72d-451a-8efe-6ac7d103fb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd351173-48ce-4598-8251-40d9a8058d0e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c94a6ab-b954-43ed-8491-af06a3f190df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b302fca-a62a-463a-a049-33d66cc94514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d6935e-0f23-4461-a88d-0f93aca1b765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f5f9b6-33de-43de-8f8b-01985172f115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fcadd6-3d4d-4228-81a4-6e8bf188cd2a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a26aaf0-b990-4ed6-8b2e-037af0705990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2933f1-9ac6-4f68-82f3-854617aae7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1184fb-6be7-46a6-81e5-f3f27d6105ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb72eac-6a4b-4106-97a3-7cbfdfb44de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816a220f-10c6-467e-bed5-b88de01ae8ad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b06647-f52d-4ced-a9e6-bc8f8f140bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8e3b68-1584-4e7f-bb53-ebc7b2ac190b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b9f5a1-c78e-4485-a7bf-ab4ac36de55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f68bbf-ac8e-43eb-b1c7-f36617b92392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a523f19-4ccc-44ae-8154-a8b54636f1d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d980ab6b-b65b-4663-ad9f-96562989920c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b778d4a-258b-4282-854d-c0d7502ba915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c44a087-de8c-4066-b653-af76909632ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbb4657-4ab1-4334-ac7e-bb5c30ff2ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88050b94-905b-46a6-9af1-35de5d343914",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46288dde-f53c-43df-a1d0-f03f5c4928a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846a330a-1ac0-4c8a-aebd-ed0509028302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0882fee-1cc7-491e-9e9f-c62dd1ab451b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3711024d-a8f4-4816-9c60-0ea7169b18ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981ecc8b-3a43-4d3c-b498-fbca00231db7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573eed2c-ebe8-42ef-81a4-34cf94cf1365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67ea063-804d-4993-9674-bf69c627f124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4067fb64-a315-4ccf-910f-decc9bcb90db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b308183-90be-4094-a32f-476b425ed4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21e62ba-e05f-4a33-bc2e-fde0f49182df",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746de260-0e2a-4e4d-8212-32c2e339e53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f590b8f3-15b4-4dcf-97c1-e6a5e89dbc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34354a7f-ad05-4a90-804b-c3357523d0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f63f7b-0bf1-4970-9d3c-d3b7a029018d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabc7996-5c8c-4098-b9d2-13d55242df9c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebf2ad9-1d93-44ac-9e17-fa19068458d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10eafe34-4287-4def-a47d-b6ece59eea50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084f5293-3689-46aa-bd44-7143a316ee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb3c82f-e862-4873-8f3f-02c21a9b8ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2a7113-0135-40e0-afd3-81d68015b2c9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4663c59-5182-4646-bf08-10a56cc6346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a341fb1-15ea-4a96-b0f3-a848c2af07cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425e2bad-ce38-456b-a37d-6d7b2682c717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "499d3336-c7c9-4d2c-ae70-b6240d868040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18019dd-daa4-4a9b-8287-c08b4757390f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f13f21-c294-46f6-b88f-dd41a858a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe59dd0-21fa-4b6c-8b3f-ee540f223a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b7f19e-5cbf-4727-8f6e-2d62499f915a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aee1417-4cc2-44b6-9c46-4c1800650949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42957ecd-40c7-46a8-9768-9fc5eaf18ff0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b168e5-398d-43e1-aaec-274af7342f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96aad113-bc9f-42c5-8f58-40f8881b4c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf42da62-5b6b-470d-bba9-c017a3a475a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e65bc9-608c-4ac6-85b0-eee7c020e5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c00562f-879e-4a03-93f8-05cacd98509e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df5f699-b824-48cd-b2ac-4ece93693ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8318ab6-85a5-44de-af41-96dbd5f1af80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab63f1c-c820-41f3-991e-6b1a0a745752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "838a7622-0c94-412d-b8fd-f05888cc3c79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c1b6432-63f9-42ad-98a3-24b22250b1eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa4fa1e2-43f0-4021-aa17-29986901c2fc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3857a6-2b7c-4d2e-980f-c4d214ad46bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "35b3174e-a9c9-4668-ab7e-3d9eb0ee7d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf2c6e3-c8d3-4ac8-b3c6-0088f41a3ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b7f923c-8d22-4789-8ba5-9fec7f23fffc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f54f61c3-6a41-4758-8396-279c0cdc6d4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd849811-28fb-4cf6-9e21-cdaffe31509d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf64eec9-35b8-4ead-a8b1-91f927ba503a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e946a2a-87fb-4547-b481-82c40f882c3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1864a44e-9784-4c7a-8997-71582e49a565",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2a9c6ac-314e-48a7-a597-8b866f5599e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b01da605-90ea-4032-8ec5-60cfbe2c9150",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b43337fa-9e60-46f7-a40b-b762b189add0"
            }
          }
        ]
      },
      {
        "id": "47cd8fac-8535-4ac4-afd9-51ad7481fd0b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "543c4cd4-8544-4fbd-9566-40c043e2f9cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb05b84d-3d44-4a99-a0bd-1e0171424eee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "25273b8e-2778-477e-bb58-153e9e90fe20",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1077e65-086b-4fd7-bba3-10e3d12df2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1427dd87-b984-44b9-982c-bdce9a9fa4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c11eab8-43e2-4333-8ccd-36b6cb882119",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99af7abc-45d9-46fd-9a83-a5a15d6ac093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66ab158-7ff6-471a-84e9-3c610c0ed962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99573277-6636-4846-9a08-9c5158642cf2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d645efcf-6916-40a5-8276-df2e3d25f8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936c20ef-20c1-43a4-9178-bb0b17067e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de2295-68d1-4391-b69f-51a51e284bfa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435b1a6a-46be-4104-b139-2e93b1ceb863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c780bfd-6336-47df-a6d9-e14bbf7fe8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beef320-d16c-4b30-a63e-f58b8dbc8f64",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2939bbb5-5e21-484b-a84b-1d086eb50ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bf6670-607e-43f3-b1a7-448d7897286b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e00a528-77e9-40ae-b8b2-92fbbc75e725",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce8b67f-5400-45f7-873d-258809924112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc59a73-56f0-435b-aefe-49bcadf3d45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f0f4ae-d6e6-446b-9f11-de615cf61fe7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ddc275-a9cb-4824-8f3e-603b8377ad10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf61646-a0c2-46d3-ab00-f8f6531299f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446d8a24-74cc-4e7d-8b94-084bd6a5d8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feaf9fa6-8af7-44bc-8bdd-9dd0da6975fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d392e965-cef6-45ab-966e-5123811b7906",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f193a8b-80b1-4a44-9421-99d4b5e73012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8da321-2e70-4fa6-89d9-67240927ccca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9ddeab-b5a7-4ee4-8d71-87d158c4e590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5dcb8d-258f-4e6d-b71d-7f91d62008c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c14851-101a-4f88-b9af-b6a4a981f489",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f3f40e-cc9a-4027-a4b6-127048a95de5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a27758c-7c32-486d-87e1-472030281c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6bc038-e055-423c-b38f-7cf3a7c6b94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a575eb0-53d4-48eb-aad4-b06aae81271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37fd240-757d-4da7-874c-fc915b6afb68",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a54f8a-ceab-45e3-9a09-1093e5b74bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb7618e-cbbb-4863-a6b5-61ec110c1925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ad996a-90fe-4cdb-acf4-7734c2f68b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa345b35-af7c-4103-bb26-5d4ce808272c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad0a940-9376-4267-834e-c0996bcf0d17",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5853ca-3bbb-4cbd-8d8d-23924b36c533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897ad7db-6cd4-4f70-9d78-b72c6a47ac50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72ef25e-8df2-4d64-bf68-904ee0b4ea4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17f0c9d-4d19-46df-b2c0-35952a8938a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3facc0a-5744-404d-b1e5-56ec0a204556",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9498ff1-264c-4140-90f7-3a9328c33456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541cbf7d-b1c1-44f7-9291-6f932c415806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be87657e-0a8b-46e2-84d6-5081cad20b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdbdf96-6832-4767-a913-239a6a5fd67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16b5ca2-24e6-4541-bbad-a29e47518dce",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550bbace-0bb7-4786-81f7-45971ec52f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8757cf7a-5db0-4ff5-9d9e-6ea7e4c1820b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953649c6-e87d-4e50-b8e4-fd1ec2121731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee83f9b3-a212-49e7-b3bd-c2d5be933047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f825524-8eb0-4da7-b65f-2fd62d54b2bc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95a984a-c9b5-4eb1-96ca-b0c26d1e189e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb52d963-8520-44fd-92a9-b61e8f41a467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8493d0-1a1a-4dd0-a3c5-2685d0a250b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f79dbaf-c44c-4895-b6e2-657ecf6f4bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfa4aaa-c8a1-4a96-8875-60083699f6c2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fd3767-c464-47fa-a789-8574746c84ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c48017f-0d53-49dd-b9c4-a10b0e4bd2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449ea22-1618-4f7f-b07c-d4895c0be3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1110a7d9-0de4-42ce-bec3-cf4c6cabf24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6bc73a-a5e9-435f-857f-2abb8e693b9c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f187e0-a12c-46b8-9a12-2e77e0f303f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0645a25b-521d-4fcd-962c-f6249e7f81d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa84d00c-383b-47ac-8260-9377de62b05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457b8a6b-4620-46dd-bd22-3d6e153efb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8838fe03-ce84-4185-a985-35de91d194ac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b428e183-48a1-4fe4-9182-872fd3053ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a061f0-2ec3-4dcf-8bbc-d80cd105564d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22862826-c8e2-4ad8-95f2-8a66b4b9c94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92aac90d-91b2-45e3-bba2-87656690e7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb46094-ce91-4ea4-883a-6e94b259707d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc73d38-41f2-4087-b6eb-f193ab649419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9081211-2ec7-42a1-ab55-46845e6deed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16172720-06eb-4026-9492-93a42e8e930a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd627e68-784b-4fe2-925a-645ec5c7f120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd0111e-dbc8-4e09-876f-4303fb1729bf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2170238-4370-4666-9905-6cf4b52052b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526d100b-5869-4ff7-8b4c-c237ad7977e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f80fb2-29b5-4204-b9af-d7aeab2a20a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10015a33-083b-40cc-a6a6-4249277c9688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6137b46-2751-42b8-b3c7-8ee238c4f883",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4e14aa-653f-418c-8d58-b6d7b2d05bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b11346c-dcf6-4247-8d3f-4afb5683ca3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28522f7-8790-4bb1-b1fa-0be52a9546a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17405a7e-b9db-47c6-a849-84fd9c366db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f49ca78-83dc-45f0-b887-1de5aeaadee7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c0b9e7-5290-46fc-991d-90fe9ea068eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a400a7f1-5ade-4bc3-b554-04b4345fe66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6aadd9-a3fc-4fa2-a431-6962cd7672b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58917287-966c-45a5-a227-d1630a223605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615a2fa5-e312-43fe-b5d0-e65ba2647957",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01289522-d1b2-4517-a1f1-6a6956ca48d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1812f88-718c-407b-90bf-fec8fcf7c109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a1a873-022b-44ec-b7f2-7b41d72b2333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177b104a-3730-4c43-8f8b-c26638a7f7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5cdc42-01d8-4f87-a3d3-8ea17304da75",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5b8d15-d049-4494-afd5-620c439bc3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94e0f74-7082-48d1-985d-7fb9702f1e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29903c63-dc78-46f7-b43f-39f04af87b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584e475d-c3d4-401a-b41d-db454588230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f23b31-fc64-48f2-9680-501c1d5bf4c6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c82d5c-ba0c-4e77-9c7b-b6ba970f50eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d86829f-13a1-416b-bc8b-04b0dd823959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5192b2-4e37-4bff-8e92-81e345fb831a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b533387-78f1-4f77-a021-84058c6aa6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b909e494-f68f-479f-a69b-c879fd66f9db",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3359f5d3-20de-4112-82b7-b584a5bb0104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7cb857f-0962-46e9-93b1-ae003c2872a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ad84aa-65a5-4715-a531-a6603bd8ba01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777e33ca-368e-48f8-beef-b357c79cf0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc414348-d0ee-44a5-a173-54f7eedeab85",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e404b8-67a2-4dce-bbe5-67763776f9a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf801ab-c97b-4e63-846d-8b073f61ac2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922c16b1-8637-4aeb-b82f-07cb7d808a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f02da-dd81-49a7-b860-9370343c2486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f1ca38-e9c8-42cf-a3c4-1d83071a0b99",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939b1791-a5dc-426c-b26a-fce0465164fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "947d8109-f00a-48ad-92a7-aa6f40877f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda4c3a-ffdd-42d8-945a-90ef7e8653ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b55c35f-4e41-4ecd-bd43-e9404a2c8c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3b4fac-d79e-4b40-8373-19b256d09893",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a1e3d0-8dc3-4924-b599-0127c51c1894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc15c872-e46b-40e5-a3b9-34610a7d3ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93355b8-3f48-40f9-8dc7-8a90e9a40fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855a1e53-b5a2-4e16-870a-69991d1f5e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced60cea-0ded-4258-bf50-4ba34eca6d19",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ab7d47-7a6b-4e33-b6eb-3f6c7027baa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96aa7ff3-8859-4984-a8c0-00c96c8ac2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf85344-4ee4-4e02-8935-0517da116e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e56fe1-19e3-4289-ab44-92d8505bc732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e705444e-006e-4a24-bdc9-0b6b25b7c658",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a85b0b-67ba-4b56-8a50-a73bbe63f0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3599de55-20cc-4dc6-b4f2-a0639d93f894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f49af3f-39b3-45c6-aa18-b1c00db93b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6bded8-ccf3-4480-a18c-0bb276bdebb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8ff75b-6abb-4324-be45-eaaceed59dfa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6fab76-0e4b-44a2-bbe9-ac14f6e3d09c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ff1756-d35e-4448-bb32-55742c6eb708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3626070-4ba8-459e-8242-05b8f9f85555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264ddee8-3232-4648-ad30-89624dfe105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c9a1f2-14e2-462d-89b5-7bd1bba6acc0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5d7cdb-6cd9-48c1-9d1b-bd909e4004c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336107ce-9d82-4cad-a025-60c27ab77657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a81cde-94b1-4058-b875-4f3f5c5a4a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacb3266-5ff4-423f-8914-a5c52bac8017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d453b6-625c-4867-ac64-e9873173f442",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741f208a-f167-46fb-8965-4982141ddfec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e7fb8b-92a7-438e-8c3a-9aba401cab95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e9fb79-e116-4b85-85a1-b78ee8631964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8687c17e-5a95-4e58-916c-d371f9bb529b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288f9213-e1e3-4839-adba-6456baa70dde",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dd4ecd-59f1-4462-8196-e158ae108424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350ba470-5538-4560-bbeb-bb761f118ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb39c5-8fb7-458c-b798-e373f0c1351d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dafdf48-35f9-4df1-8c7f-bcb99b37eceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39021e3a-15df-4f6e-a761-636d55355768",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c6c2fe-6928-43e8-b7da-577160594e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0618a0-391e-4902-9d39-e97a2f95ae67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e402cf82-1916-4d4d-a307-b50461f66e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02785294-eda7-49e2-a5d6-ef76df5921cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0315bc9-89c9-4374-86a1-956734370e6f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4dafd3-2122-417b-89ba-3ae53f3b2d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60ac926-ec10-4045-a425-7da8092b1360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33466744-3925-4855-9b48-2cb7a468c91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7467bc4c-36c7-4657-bcf5-ee7d94eaf117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964ad340-3d4d-4582-bcae-b29cea37e6b8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b81f78d-2f88-4d93-afdc-2fca7f514d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1d0495-08ab-4b4a-9b6a-8a1ba5c14a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62290128-8f66-47c9-83d5-7c1b3e2680ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ea992d-87df-446e-9e58-9f8ab206092e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0151e46-d5d5-4060-b6a3-ee6197b61aa3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c636c12-bf0e-48f9-af7e-301cd8ebc1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912f7bce-f1da-4f54-aa3d-453bb36f663d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191d65ef-e404-43c8-94e5-f63709bc8984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c726aa-8e7c-4ac7-a5e5-9cfe9bcff67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61737ca8-70f5-4596-89aa-bded090a1bc3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aba9dc-8c34-433e-9ceb-2c264e990fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b713b98-5270-4560-b160-9e5b1ae90543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc2eba0-55ac-4dc8-be63-44b4b44f6318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddf0d32-c028-4f3f-a8cf-b11c44f72757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0f36cf-f122-4dcc-bb9a-e9c55add219e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26a6967-fe1c-4359-ac06-2acedaba153e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8caba7f-abc9-4829-85fb-2f31e71e5de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c901cea2-4076-461b-a1d7-972fd33068ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba00a04-f5c7-4176-b6e4-9c0d1d16ef24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429a7411-d62a-43d1-99c6-f216ef124ff5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b79be2-d66a-459a-b094-466953c1e23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d994b853-9f7f-40f6-8245-8135cead4024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8968f3c-731d-467b-9f0b-ed3dc99bcab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8e1fa1-7ffe-4202-94e7-ba32c09c5434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610adb8e-318e-4b20-8d0e-a6bb32b12332",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dae51f6-0adf-401e-b835-d694452776d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895ed602-ca4d-4f29-9aef-b269c48a238e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965b9eaa-20ea-477a-81ce-315701fd88e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62954bda-391b-4f3e-bbb5-2c7a27528330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7ad8d9-e000-43a1-bd76-9434b3905f3d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce66eb9f-a348-48cb-9a31-ca37692caede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28477041-5742-41a1-846d-56cace7f68b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51160d3-8be4-42d5-b337-196136005219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd813255-cf67-4c6d-afb7-470f2c8f7c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbe17e9-70f0-4ed7-8162-e759522cfd78",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124415d3-33d6-4448-bd0c-b3c2f0edc2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b01a20a-42b1-4e21-b2f7-21f2860889cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2919a19e-4220-430f-87bf-9d8ab811eabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f944f8b3-fccd-4b23-8b11-5e4e27b53e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc72be7-1278-4647-987c-205ab97411dc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8478a1a4-1d63-47f1-a79c-6c1d1fe2cd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac896da-7ee4-4fd8-8916-1aa2e27317c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04474562-48f2-41c6-890a-e2fb683ae36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a577e57-a165-446f-b758-d05987380002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e071e07e-ba85-4348-81e9-1420b445397f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716b0616-68d5-46fd-88ac-7fb14e5e5ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d279ee-f6b1-446f-86fd-314d9cd4a6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508a9039-a2b5-4ae2-abc6-8c94081d6740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222dbdb6-cf9c-4976-b74b-78d31a5932a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9166fff8-bc6d-4972-8767-9b8dd8abf5fb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db64f32-5901-456d-94be-bb80216f2e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ed38fd-fb2f-4f05-a94b-7c811c4c93d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd959aa-3f4a-4caf-b584-807a02dffbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5f7a2e-6b82-44c9-be58-801197ea1f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2dcb22-ee25-4646-835d-73cff1fab873",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc54b311-6bfa-4c7d-9dfe-17ed1ca80bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9152f07e-465a-4636-9350-6d4105e296f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925b89be-34c1-40b1-ae71-7a979289fc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515be643-0237-421e-a819-e10f86c1bee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c42ce5-0979-44af-8cf2-c83822ec4233",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1634ba5-ee4e-4070-9b6d-c51baf666844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b969cecc-8d35-45b0-88f9-ba21548f7073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1782adf-27fe-4c4c-b0dc-7b8f2a905ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c371b3-5e86-446c-8b5b-341a9c4d30a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388fc65e-99a8-46f6-9bfc-91778df2864a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0405e59-9fc2-4acf-a22b-438ae6d5a832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71069d9f-5782-4a49-9faf-9906bc32da43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b270b834-b0b6-4f2c-b4c0-4a6610c40bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514259cb-5b10-4b45-9140-bd0d7524cf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a743aa-56d7-4095-887b-91ef3235e80d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da20ee6-e27d-4f52-8ea3-cf0825facbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d397e11d-734a-4a3d-9199-0a2f1c532dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f90294-34b9-4880-ab83-4665df5d3abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681763e6-e618-4ef1-b29c-443abe20ce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a04d3cb-4232-4203-b59d-5daee4048c2f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645d5af8-4220-4429-9aab-f122d5f1aa3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0d41f4-2807-4b03-b9d0-ae50c22fe28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64a2b27-4396-4769-8d8a-f8e3c2773fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a79d68-6010-41b9-bf16-1a16407705b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c4e0f2-3953-42f7-8a57-c24e2ac648d6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f269d7-95ce-4ae1-a28f-24726839333c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375581d0-360d-44a4-a253-66f57c4b27dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eac6e90-8276-4ec0-9e08-d24fc6d748b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5dd180-da42-4ba7-b213-5109b07c14c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56537f28-d8fe-4b9f-ab3a-6b8230ca167b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b60929-7a2d-4cbb-a5d5-42a95b4ff99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8322e7a-c66d-46e9-a4e7-9c36e64a95c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b4eacb-2b9d-4b72-92cf-a013b07c410e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f58ca9d-0b66-4975-a793-f189ab463ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6e50d7-8fbe-4e6e-9921-366079d45974",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8272fec2-5b6e-4413-b9f8-3b486a4ddae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b19aa5f-3226-44a4-803b-08a86fcd7a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dea79bb-d5c6-4a8d-949a-6a4eb9541391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3a816e-b229-48e9-9961-3de39b3b2f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b174719-3b66-44cd-8482-8ba3620d1386",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837eac92-ad07-4f5e-a134-5c4de3cde2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87948727-a505-45e5-b047-ad13b741f56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab22c8b-7881-4196-82f6-1db7df345eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2a62f1-3c63-4845-86cf-9b69bb23114b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac2a3fc-581d-4de6-a19a-a313698d92fa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc5142-f243-4527-824f-1d29fb684da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282d447a-77f5-4926-9e2e-3554eefd7fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dacee6d-7fb4-4529-a9f9-06be895c67a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a2a7f9-aad1-4562-a4f5-7829998a3db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1c100c-3ac5-43b8-a815-0a561aab8640",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5783e19-830f-4d4b-9c3e-929194da508b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c920a9-f1e1-4ba7-a047-1bf441022108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a366ccf-aa1b-4ea6-aedb-32f4ad8b8fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a769022b-9383-4271-98f1-4633d0a86140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56298533-b648-4fd1-8bbd-f1998d85c453",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9209b541-98bf-45f2-9e06-4f77a28a667d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2238ae20-be6a-4d3f-8eab-1f9887257258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc31247c-29c3-483d-84d1-0c10256a4b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e942460-0b17-45f2-9984-66b3c127410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5598b6-c1d7-442e-8cca-0ea2532e585a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2932caa6-6d21-4fd4-8f05-fd6132eb208b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf94ee41-3c2d-4ed7-85c0-3936984374f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e696e53f-282c-4e45-a5f5-d7c7a17d003f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6aa898-eb37-4b6d-8a98-e4b50f1ddbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdba8e99-bdab-429d-8b33-1c38a648ba1b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743b0162-c96d-4f5c-968d-c578242c9a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68b0944-d522-44a6-a163-d5ec2dd2edfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe57bdb-8a71-4d00-a086-48b2f7861c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b19ab5a-7f7d-41cc-bc00-ef1069851b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e2a8c3-9a13-4658-9c00-08ce11f44fd6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461c0f5c-f378-4d34-86c5-3e9081f678d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d1943b-ae22-46fc-aa00-76893a30bba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79690ad3-cc45-43fb-b32b-3e7ea5bf6e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b67bc0e-4737-4cf3-bae4-ef4c8a09be2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e58bcf-95db-47b4-908c-29417c390d15",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5a7155-86f8-409d-92b6-9c84a27e6c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6349af-bbee-4923-be61-ed61f7fba0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb818aa-b588-434f-84fe-9e1940af9034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad083ef-a68a-4c28-a452-b7dbda93a3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c232b0-1c52-49e6-a6cf-624fc959a38a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c4c843-16bb-4aaf-8a19-d6c415cb2b73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d07a14e-aa38-4a7c-a28a-9a9d3c10f7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92410494-0821-4d32-9940-bd704edbdedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a8ac97-7bd5-4f90-953e-203d7f245075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c40a35e-276d-41a8-b43a-67914cb3ecd2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5939b18-39c1-42f7-abfd-13c19f436f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06fd2f28-ef0f-4211-847e-3cbded41ec35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4526d89d-8a0d-41b2-a612-290531ef1eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ab62f3-df0a-4a59-a030-f924a5c3e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0550c949-0e0d-4eeb-89cd-1776809ca6d9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563414dc-6f92-401a-9e8d-d70e66836e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da14edf1-4129-4461-91ca-7eb01128001f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dd6276-fe91-4d71-aa62-440b60a2d210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8836947-8066-4df8-96b3-a64c005a431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be945a3-ddc2-40e9-ace3-a5aa7c634d18",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c704db-feff-4cb0-8493-9a871d515bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb24b30-0ae8-4046-a8f5-c87e2c7bcfbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8bf386-0fe9-4afb-9bb9-4b3971a4075e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41df3ff4-c1b7-40ae-abbb-8c4d0fd022bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5db8466-daa4-42ba-961b-4fc3f84b2533",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e54776-4555-409b-9640-acce43638fbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b38ac09-0ac0-4046-a97d-84d8e5c778a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f815eb-5aaa-482a-b43d-39202ab2d55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8a79c0-ebd3-40cd-95b0-4ab6b573a990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394fe7bc-3234-421a-8ce6-7edc26d1b4f9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41630f54-6243-4de2-bea1-b971beec3d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53a1d94-9cbc-4b87-b703-459c8264389c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4407da87-dab6-4f6f-a629-e4a90991c291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d855828-f59f-46f1-846c-3ef3dc556aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3033fa-f871-4723-803e-33e4f39c21aa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ef4f1-1bfa-4952-a92e-fb56adf8290d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f40c13ec-e939-4dfe-93b7-7dc9b10649ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61af426e-f3ba-4a2a-90ad-2bd05cb34433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9875f90c-e8c4-4ebe-b4cf-23a53727a788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4b8a82-1662-481a-a1bf-d471cb004ac1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1126cfe-f218-43b6-8194-ec6a4e11e81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d7b918-a7f8-4ce1-bbcc-e007a9a9982c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab16c4df-9f12-4907-b2df-3b7d7c6481da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2c0046-e00b-4b24-b731-18e89b7a0f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6b02fa-032f-48f6-a803-9ffe6794525b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2027e081-7e7b-47f8-aecd-9339c3e2bc13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4546bbb3-68a7-48d2-accc-843272846fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a996c1a-a1fa-46eb-bf89-40ec9652cbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5245c2-6a86-47e3-9302-83e4ae7f0f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3af4884-173a-48dd-879d-3f4306b39913",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468ba75f-3d0a-4c1a-91c8-9b2c8f18c3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725a8004-421d-4687-9a81-055ffcac9ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3599f4b9-775a-4d90-9c91-f1a2bbd74198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b7fadb-17de-4e1e-bacf-8714ae8e65f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83804ba-1324-4e65-9e9b-1f32632e0948",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2366079-8e50-4623-8571-6c68d8c2e95c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c65b03f-3529-4b6b-8c6b-79646b87c737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a790904a-4822-4048-8962-74a0bb77376e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef26ee76-6627-4534-8061-881daf704c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf095e44-5bf4-4712-ad0f-1cfd6dec6946",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3a876d-8418-455a-b8dd-138e4977be1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f28dc7f-8b7d-4be5-8884-cbcd43282807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5565b40c-7100-4dff-a25c-c4673f771747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06b1eab-957f-4d62-9f8e-01ee6bf90b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c53eb4-38fa-488a-a04c-14e3ce1143f5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b84e0e-3c26-482f-87cd-75a2c0eba98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f98b06-5a94-4dda-80ab-510cba4df596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc041072-d837-46ba-a812-a58ed4ac4ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6e95be-24c2-4afe-8642-271996b0bf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3097cd-43c1-428d-b063-4c40a5b905d6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6402c3b-3270-4eff-bccd-da66f36c330a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7684647-f7db-40d5-a716-ba5351aa32f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6e93c9-638a-41cc-9b49-c63e67b62dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299fff30-9274-4ec6-b09f-f0332bceaf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b82ce2-e308-4622-9412-36d64cf366e6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d1090-ae29-472b-a892-d461bd24feea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d3fa8b-de58-49e0-b4b9-88f5337b2562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66c17f-dd83-48ef-89c5-2c4e54540d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e69a74-1239-4f79-a8cb-dec1f0a4d7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bed7f13-15bc-4091-8ecd-6e4105502ee5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692b3c17-b057-4023-8c78-d57db99e990b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50710780-4947-44d2-a672-93b6b09bbdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3993b6-734a-47c3-bd91-a0405277865c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff8e832-5ac8-466d-8320-ee32304a546c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f706815e-0f82-42c6-8ba5-5e40719f4ae2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203e770d-ace7-4071-bc5e-82bf176d83cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944f28e1-3bd9-4b37-956e-f39c5498fbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ca7322-c313-4b9d-87a3-0bcb420a0543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1575554-c487-4a3b-9855-a01732eb0877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1f539a-1f20-4a8b-9444-bbff0f37c4de",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6182f2-d5a2-4f38-a572-5a1d127d1e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2d53432-4a72-4c9b-9c31-bb1fc04810cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e2d93d-7528-46cb-b67e-aa776195e5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b8ef07-f1a4-4f40-a76f-0a418c9d42d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f090cc1-29dd-4a11-96c4-a093888d4a26",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b176d8-d0e1-4de7-918c-9d77eacc7917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97738280-e9e8-4ad6-be6e-cd94bb3def70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81da3e25-88d7-484e-869e-69e404b280a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30535e1f-ba08-44a7-ad1c-d9cd9a049902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92eb5e4-b434-42b0-bd93-f770df1d5288",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2015348f-b827-4de5-bc0d-b400111ebc99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228b9658-faa4-49f7-8cec-78d2127c4389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c8fb27-340a-4a25-a356-8c2b0d7746bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930ceb6b-58ab-462b-b25e-a8237fe7d962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924ee254-ecbb-435f-96a5-4878e88e9d8c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da61fc0d-9039-4159-81cb-64ad406ec470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8259db89-8ad0-48c4-8687-733bb738b940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4f1d16-15f9-40a5-b6ec-b0538d8722d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fe1097-3a63-4f20-b6c0-6d45f64eb022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3197f5-44bd-4a59-8f62-a7a6b2b6809e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be0d741-12a7-46d4-bea8-5d95cba74b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac4779c-b4ad-489e-ad26-159ef60106a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec2b9c7-2965-4b71-b1c5-6e6cd334cd52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960a8bca-d315-4cc7-bc33-63e07388bec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298b8bab-6e5e-4b87-b424-243ea3d38024",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d0ba99-48fb-421b-a078-fe6b5e8ca2c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4f732f-3858-4395-a7b3-10831ee5394e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8685cbbf-e9a2-400c-8b6b-e0a31edefc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e09854a-39d9-4637-b4cc-e50d739e784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8495a0d0-e784-4969-9d4f-7de597bd0469",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf8d23f-a3a1-4338-9976-0af83c8df358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58eb4c31-ea14-41bb-afc4-4bfc266a0c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3222000d-96ba-4022-9c67-8564b8ce7e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4384bfa3-56aa-4025-8d35-764a13cbf8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a080c89-d4f5-4edc-b736-012428eaad29",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312628dc-9e5b-4165-84fa-d288b13704c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f175e8-a5e6-48e8-8031-3997bf503d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52a802d-6f27-46ce-bda5-315fbb112b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db0accf-74d1-4df6-8042-e2ad4ee1e376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce54472-5b95-497f-ab26-6ef945a86907",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527eb171-f7b8-48d8-9a37-e490195263e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db0b77c-10d0-4761-8953-4cb1d5e44cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bbeafb-808c-47d4-a720-917b7bbb7c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7ef4a5-868c-403b-97ee-e890fa834473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258d7469-11f8-43e3-858a-eb6186202617",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbafb87-f5ab-431a-818b-79fa0ed740a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9c7183-c34f-47ea-ba83-099a769f3869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fda6d1a-056a-45f0-a981-f585c2323355",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bae5ea-43bd-4ea3-9a33-e9b89cb3cb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e30a029-f4a3-4e03-b2f2-862557d2cf3f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3dae3b-e98a-4866-848b-2c63e65fd1d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1fd8852-1b50-472e-b004-41edea189de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f6f43a-a74b-42e5-adf8-c0615f5926af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ed1abd-b3d7-440f-ab70-1a18f7ae77de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1421d5b6-b573-4b9a-8795-276056a5663b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f025ac7-d1bc-41ad-8802-25965e734a89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988b1b3d-3267-4fb4-9433-4ef54ae86e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afe5d5c-b487-4b75-b145-6b904ae93030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2198c94-d8ef-4030-9632-a53638cc85ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841cdec5-7f56-419a-b0bb-063ff19dc49f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e0d921-0b18-4e92-8f53-e5e743d1c05b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd546f48-6fe9-4d7f-b537-fafabd82e7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a35e27-77e0-47db-91b3-31c75fa0ccfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df55ffd-64f1-471b-a254-60496ad20f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e63a222-ea6c-4594-9492-1b3cdd1be402",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1a6471-6093-4753-828f-2d126c07bef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6767d018-8318-442f-bd20-7409d3510071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6b99bb-dfbf-4f37-97d2-36b651f4b557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2c98e1-1fab-45c3-9fca-e7f1915399bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7469d0e7-4c9e-440f-96d1-45306ca9bde5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afe5974-fabc-433a-91ba-636ea3185fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ccc624-86c2-4cf6-a150-53e33dcae6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc1d27e-6ca2-4b2c-a894-44c46914cb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad6f342-82a9-4e1b-bc3c-46d669222fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2449052a-8dda-4f27-9ba0-73a8259bedf7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6506edb8-d93a-46a4-82c5-5b4df68e4bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce8b8d9-3841-49a7-a6c9-6ac48cbd30b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2572173-8555-4d6c-880a-9cb9099d9f62",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b8a5e9-5baa-4ac3-8255-d7528dec0575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fac3cd1-f2a5-44f3-8d6e-e95ef06e0a13",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5740fd7-e40f-4adf-8331-49e0c80b22f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec0aa55-4422-46ee-b79c-3793a151a535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d841e60-0f2e-47bf-8e18-b5865622fcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e92522-8551-4b31-a426-024c91637bae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2d38a82-7dcf-4377-99e1-8fa18cb39205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9f73154-46af-4101-894e-a69179417c02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60bdfe4e-b759-4079-bdf9-31cd7e8580cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90cab887-2edf-4230-97d3-adf63d395875"
                    }
                  }
                ]
              },
              {
                "id": "d50a9f75-acec-4ebe-a02f-7b0659429387",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86b4f613-8498-4816-84dc-37fd82e85b04",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa73097-6af5-4fd4-a3c1-9c5008fea0b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "94c6de61-b663-4ae1-8f12-608964bacba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23a15d3-c0d1-4ed9-af91-f6415e32df4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c8e1457-04b2-44d8-9d29-299afd645d79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76b89a53-1226-43ff-951f-46314dfec6d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8beb0e66-0fd8-4f53-bcae-973fd5bae8b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b4c6573-ad26-442d-9d18-546f39d5ff1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b0d2f58-127d-4e24-aae7-5b14f2c22aa5"
                    }
                  }
                ]
              },
              {
                "id": "2e1da0d0-dea4-489b-9a03-23f294dad557",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "176e417a-abd5-4577-a9f9-bcf22e0026d4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0249fadd-7db1-4f78-a104-d97f80313402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ecc59598-f9e2-4003-823c-54ad1768ca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755eee72-8ec3-42c9-a5bb-61c7cc0e174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d34f51b-056e-4a85-9602-77aaccd07510"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8f131d71-0686-44ef-9a95-47764be71f95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00c3300e-7dad-4e7f-9f76-c220b16a69c6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6529a8c-45ba-4e2c-945b-11aa234ca143",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "916c1095-2aaf-4252-8a9d-30a75e00988b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c7a5c0c-c1a2-4cfd-be64-b1ccf9003590",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cad80b5-6e43-4ae0-b716-592ffbb7c51c"
                    }
                  }
                ]
              },
              {
                "id": "2e4fb324-ca1f-47ef-94a2-5c604e5698ea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c16819d4-dae1-4118-9e22-4460b7ec6890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ecf8d779-b7f9-4e8a-945c-8c5daf4f6ba8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dc5f3fe-a01f-452f-ac52-692457bfc20e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ec7e0e9-8995-482c-aec6-20abfb04a9bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5949b967-0bbf-42eb-a913-bca1d17eeb7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a187b6eb-0ff8-414a-b954-956f6fe46f80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3231c38f-d7fc-4b46-908e-f3b70f96c689",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "560a988d-3c6a-44ee-99dc-e6f57e23abd5"
            }
          }
        ]
      },
      {
        "id": "224a7707-a885-4678-9c5b-b9a63c6aed96",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e39c368a-ecb9-457e-acdb-c3adf769ef50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0a58914-f303-450f-966d-ffefb1891203",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "744bc677-b234-485e-bd1b-4ad996c7bb2e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f3a292-e70b-4030-b502-68e5940a8cc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5802dc3a-8924-4236-be55-1c9d2fc5e14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4f6b4b-6a81-4b66-80f6-911ff5c569fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89b766da-2efe-4e27-bf3a-13635202cf3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2494d85e-abec-4cc2-bd06-0c1d6b240faa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc24565b-e14f-42eb-a05e-332cef26a55c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebebeb7c-352a-41c2-9d3c-dd82b9ef4ac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73d29a9d-d6b9-4fae-b41b-baa0014d4ed1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b45c7c33-b8cd-4856-b11d-4332a55273ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8d5857ed-9f0e-4c55-8bd8-94f6fdfd78f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3519e6f5-0122-40cd-af93-4c484f676f61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb6ef63c-7d8f-4eff-97cd-32932dcf7573"
            }
          }
        ]
      },
      {
        "id": "b8a75570-c689-4e68-af91-7584b75971a4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1fa31639-07a2-4d2f-8b81-3a95c7bd9e9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b49dfb0-4b38-4ad6-8487-126a0969e896",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "201eb46d-785e-4874-9b27-37865286209f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe10086-1583-4dea-bfab-e575bf878dd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e02399-2f70-4a86-b3c6-aea270630fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f12860-63f2-4dd6-9328-23c4f18c72c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aa1190b-7ce9-479f-ad64-ec7617829a44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4802d534-d724-4b22-922f-b6f4bfc8be3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8601a61-9570-4b4d-8cdc-e5e8c7b15656"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "389a258b-c789-400b-9c71-d887b2c85315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec728df0-26a5-4760-95b0-f9314402d3d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "724e240f-9b68-4ac0-af95-6f37be0e5cf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41aebaf4-4f95-4883-b7bd-38a716f5c739"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a09ce58-243a-4c00-a6e8-2887c13893c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1bf6dbf-771d-4d5c-b062-f60d69fc407c"
            }
          }
        ]
      },
      {
        "id": "3088312a-8cd2-41a8-86e5-7783d9942293",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "63938208-d5b7-40ae-ac36-ab2c49d6c1c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "435c76ae-d131-4863-a1f2-72021e6e6e24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d20ffb5a-2b6e-4f3a-9507-14a911cf4315",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d7e85-350d-4add-bd43-a0be4bf0f6de",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "744ebf52-3ace-4e89-bb0f-c47e667b95ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5691eb9e-0d3d-4298-9e45-4ce9a400e22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63511c48-c579-4785-a738-b2ff3c4364ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82838d61-604e-47c4-9ccb-f03d2e1fa054",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a31d0a90-7f20-41b4-8277-7f7585d34937"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "729ff6af-070e-4efd-9af8-5f918a2c6555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e643e733-bf07-4f4b-ac3c-60e0251cd362"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b81adcb-e3e3-44f2-85d5-76d4fd88f0a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b67dbe35-a0a4-4c6b-8843-23f666b6d87e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c7e3525-4cac-413f-8ddc-66e6b91b6f06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfafbdad-a316-4b13-92e1-340b1ffc808d"
            }
          }
        ]
      },
      {
        "id": "b55a29ef-d679-4ab9-a763-6fddcc6febec",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3379a0ae-9d78-475e-9c56-b58666fefee4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83dfeb49-22a5-40e5-8a22-19c478c048fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a2b3ebd6-43b0-473b-a787-13e8c99e6782",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1464bf9f-b2eb-4d68-a09d-381a587c81c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87b5af3b-8575-4187-8ca1-1c0048c96165",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 133.09824561403508,
      "responseMin": 5,
      "responseMax": 9125,
      "responseSd": 677.3309622725527,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710722119740,
      "completed": 1710722166776
    },
    "executions": [
      {
        "id": "225ec4f5-52e8-4ead-911e-cf41f773dd56",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "367968f0-086f-43f7-9249-c5ebc7238276",
          "httpRequestId": "62153850-bc67-4288-b7ff-a31b46f9b48d"
        },
        "item": {
          "id": "225ec4f5-52e8-4ead-911e-cf41f773dd56",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3b6dae9a-31fc-4278-b283-852031c813ee",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "96597fc9-bc01-429c-acd8-549d3c2f4c22",
        "cursor": {
          "ref": "770a687d-7947-41d9-b1ae-ec67fc0f42fb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5eb8a220-615b-4835-b964-342c5f7fd16f"
        },
        "item": {
          "id": "96597fc9-bc01-429c-acd8-549d3c2f4c22",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "811720e1-d0d9-4252-b233-31e48aff8e7b",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "7f337717-adf9-4fc5-8f90-6227c49cea95",
        "cursor": {
          "ref": "c4c26a40-e37d-4bc7-8597-ab3cfd011547",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "723ec607-5a64-4563-8123-a4ff8ca43cf2"
        },
        "item": {
          "id": "7f337717-adf9-4fc5-8f90-6227c49cea95",
          "name": "did_json"
        },
        "response": {
          "id": "0b4ce69f-ee94-4301-a8f6-64f695a3d5e3",
          "status": "OK",
          "code": 200,
          "responseTime": 289,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cda7ef6-f48f-4fad-bfc7-6e64160e2e28",
        "cursor": {
          "ref": "1f28ca85-0340-4dad-92f7-0cabd7f857bd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4ecf7ef0-d318-4f43-ba6c-ef42ba02dfdb"
        },
        "item": {
          "id": "7cda7ef6-f48f-4fad-bfc7-6e64160e2e28",
          "name": "did:invalid"
        },
        "response": {
          "id": "b48d3eb6-571b-4e04-ae60-eeeed0cad2c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1014,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cda7ef6-f48f-4fad-bfc7-6e64160e2e28",
        "cursor": {
          "ref": "1f28ca85-0340-4dad-92f7-0cabd7f857bd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4ecf7ef0-d318-4f43-ba6c-ef42ba02dfdb"
        },
        "item": {
          "id": "7cda7ef6-f48f-4fad-bfc7-6e64160e2e28",
          "name": "did:invalid"
        },
        "response": {
          "id": "b48d3eb6-571b-4e04-ae60-eeeed0cad2c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1014,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69f23a9-2027-4ee7-b18a-95986095a85f",
        "cursor": {
          "ref": "dc86c0b0-acbf-46cd-a050-cbd5db3a85bb",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b54c88c4-2a89-4ce7-aace-f67bf9c4e541"
        },
        "item": {
          "id": "e69f23a9-2027-4ee7-b18a-95986095a85f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6fb86b12-7188-4e0b-8e3b-732901c32f5c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a9219e-7f04-493c-9ae0-e98d4166ad48",
        "cursor": {
          "ref": "4c628a55-97f6-4dfa-b6d1-724dc17b5097",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5e93e65c-f5ff-4546-b3a6-ef34f9eb77a8"
        },
        "item": {
          "id": "44a9219e-7f04-493c-9ae0-e98d4166ad48",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e4927d90-fda3-4afa-b465-d173562855fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d39e42-c041-4414-836c-54ddfc9294af",
        "cursor": {
          "ref": "94ecb3a4-8f24-48f3-ac82-0ae48c99b135",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "11d4d0d0-23b9-4971-a48d-695cebc19348"
        },
        "item": {
          "id": "59d39e42-c041-4414-836c-54ddfc9294af",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "05c09578-4529-4e37-9f87-b9f3f05e62be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 112,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73f3410-8a2b-4836-9d11-eefa5c3b5900",
        "cursor": {
          "ref": "bfeea741-1cb3-4371-b05f-f720339d2225",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c467a1e5-4bfd-46ae-b6ec-1a234d66a976"
        },
        "item": {
          "id": "a73f3410-8a2b-4836-9d11-eefa5c3b5900",
          "name": "identifiers"
        },
        "response": {
          "id": "c5e42989-a96b-4808-9bc0-8e8353d8ada5",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c1779e-533c-4871-96c7-f1efc66339e1",
        "cursor": {
          "ref": "62e5946f-12e5-4f24-90e4-ef12061b9f06",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b2d5a856-6d30-429d-963b-bcfe1369311a"
        },
        "item": {
          "id": "07c1779e-533c-4871-96c7-f1efc66339e1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e71df059-c93e-43ba-a857-d104f923a798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead53ad2-8d26-41da-b4fb-9ed47600d6c7",
        "cursor": {
          "ref": "bc14ada7-a26c-4694-ba27-f60dc23a81ed",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b144e0bf-84bf-4b6e-858d-3c762aff39f6"
        },
        "item": {
          "id": "ead53ad2-8d26-41da-b4fb-9ed47600d6c7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "08e60fd1-316d-4285-a74e-97e9d05b8623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187e82b7-9d86-480f-9940-96a31a6c7014",
        "cursor": {
          "ref": "bde6a7e4-50aa-454c-b870-f2a620242b7f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2aa001b4-3fb0-44ff-a404-b98b906ba4f5"
        },
        "item": {
          "id": "187e82b7-9d86-480f-9940-96a31a6c7014",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d60b9420-28db-450e-b942-3be4fe8e8b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fc8b04-1d3f-4e91-8b48-2bee2193dba8",
        "cursor": {
          "ref": "bd54b744-0ddb-4468-bad8-85c63b22a88a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bad6daa8-2927-492e-9b18-4f1b56c36a6c"
        },
        "item": {
          "id": "69fc8b04-1d3f-4e91-8b48-2bee2193dba8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "369f1731-ba82-494e-838d-37b0b2b8857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc3be29-2979-4a07-8606-16650656b3cb",
        "cursor": {
          "ref": "9a9d6d0d-fe09-49da-a82d-3c2fec6c0723",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fa6480b6-c305-493d-9e9f-92038405af10"
        },
        "item": {
          "id": "dfc3be29-2979-4a07-8606-16650656b3cb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ecbcd1e9-8c7b-4be0-8479-cf5a5470318f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c685009-0d72-4942-aaf8-831f744bb3ee",
        "cursor": {
          "ref": "65a04238-c1ad-4413-b767-4a8415954348",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2538a392-685b-4472-8315-f7cea0f5ea4d"
        },
        "item": {
          "id": "4c685009-0d72-4942-aaf8-831f744bb3ee",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e7b1f2fc-61d3-41a2-ac43-15ff060631de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c11115e-f4af-46ea-9652-dcbdec76bd9e",
        "cursor": {
          "ref": "4bca56e3-67da-4612-a74b-778ca7d95aed",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "99bfebe9-0db1-4f91-8f80-6e9a6f26c601"
        },
        "item": {
          "id": "2c11115e-f4af-46ea-9652-dcbdec76bd9e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e4764e9f-fc82-4f1d-99aa-22a51a3e7d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c08235-ed55-49f4-be64-417af66f34b7",
        "cursor": {
          "ref": "d0287a5a-54f7-4443-93b4-09c0d2f61acf",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9df32717-6183-49fc-a0ce-f3d94c655573"
        },
        "item": {
          "id": "97c08235-ed55-49f4-be64-417af66f34b7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1347c67e-2494-4156-adf7-e46ac5666e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c60bd49-85b6-4121-9fa3-ee79fa873c76",
        "cursor": {
          "ref": "68d94602-7d14-483c-affd-f4b5c3977b47",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41ddaead-5f50-4dc2-ab5a-445ab8574eae"
        },
        "item": {
          "id": "8c60bd49-85b6-4121-9fa3-ee79fa873c76",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0286a968-a516-4c45-89a3-050f987aab5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3540466f-e0f0-4f86-ad88-a1504e4bb776",
        "cursor": {
          "ref": "aff079e5-2e1e-46af-80e1-ee8ab47430c2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "54689219-dab8-423d-aba3-e17afa0b3786"
        },
        "item": {
          "id": "3540466f-e0f0-4f86-ad88-a1504e4bb776",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "884ce4c3-4627-4fd6-a8c4-95b640a91186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199ee6be-206f-4b57-a3b0-39a238a8cb75",
        "cursor": {
          "ref": "70c0ee07-032d-4c78-9abb-2198663611ca",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c1ef275d-934c-4265-a825-59399f9f0f44"
        },
        "item": {
          "id": "199ee6be-206f-4b57-a3b0-39a238a8cb75",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7c755991-8648-4c93-b269-f9143040d853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0abf8e-df2b-4362-9135-1b7596464d36",
        "cursor": {
          "ref": "4b8460c2-aea2-48a5-8d6f-beb64faefdde",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7d8b03e9-d2ea-4753-88ec-b33d3fdc13fc"
        },
        "item": {
          "id": "1c0abf8e-df2b-4362-9135-1b7596464d36",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "28916503-3e50-4a72-8670-ba6ffe6d051d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71266ee-265f-482c-9b36-be8ef152bbe7",
        "cursor": {
          "ref": "bdc8901e-e78a-42f8-bd52-e226c142afb3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fabcefe7-c900-4157-9868-e170fc02ce06"
        },
        "item": {
          "id": "b71266ee-265f-482c-9b36-be8ef152bbe7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "36904cad-3a4e-406d-9415-bf665a62fc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c824cab-d16a-4173-b7f4-71482f5cd01e",
        "cursor": {
          "ref": "c51f058b-ed6f-46da-9378-94c728e13e73",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "39a3e252-2a85-4d25-ba83-f1717894446a"
        },
        "item": {
          "id": "0c824cab-d16a-4173-b7f4-71482f5cd01e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a25c198a-e4da-4123-b645-eadb600917ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d860be2-3335-4923-8dc7-a66985d09a43",
        "cursor": {
          "ref": "5c115ffd-1b33-427b-95c6-b11b59353205",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "db1ad372-b932-4b6a-ac93-798a5e2c79c2"
        },
        "item": {
          "id": "4d860be2-3335-4923-8dc7-a66985d09a43",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e8c47fde-861e-467e-89af-f47744cd7c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6553d164-8d6d-475d-8256-5b0950abbdaa",
        "cursor": {
          "ref": "a07de043-dbb2-42fc-b0cc-171681acea49",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a582a723-621c-4c80-85e6-0a35af27fe17"
        },
        "item": {
          "id": "6553d164-8d6d-475d-8256-5b0950abbdaa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "358bca94-18a7-48d4-84b1-729b63748332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b3fef-985f-4d39-9dfa-40fa05e014e0",
        "cursor": {
          "ref": "887def03-b5b0-4b9c-baa2-1bc28c86ce7a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fccddead-c8ae-4c86-9f68-8d59dc3acb60"
        },
        "item": {
          "id": "999b3fef-985f-4d39-9dfa-40fa05e014e0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "463f8747-945a-475d-910d-dad452ed6c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737a6de8-2579-468e-867c-45fa4a128db3",
        "cursor": {
          "ref": "c5b1e663-0906-4499-a5eb-5d1c0f7f033a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a8263069-870f-4230-a755-073bcdd25363"
        },
        "item": {
          "id": "737a6de8-2579-468e-867c-45fa4a128db3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "250e10f7-ddd6-4159-8cea-e935c6e8dbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785fad70-3968-4558-baca-ee655bdbb7ea",
        "cursor": {
          "ref": "b7a257a7-05d6-4324-be9a-0a8758923cfe",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f43ca4e9-6840-4712-bcf3-87f13e50fed3"
        },
        "item": {
          "id": "785fad70-3968-4558-baca-ee655bdbb7ea",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "67fb7833-9296-4eb8-861e-9d2ac91f2112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca47c55-4db8-498f-afd8-a7d1e19924cb",
        "cursor": {
          "ref": "28b79d2a-dd46-40f9-a9dd-235e65f9b732",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "202b9aa1-5ce9-4cd9-94ef-25e4143b86d6"
        },
        "item": {
          "id": "1ca47c55-4db8-498f-afd8-a7d1e19924cb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "157c7fd8-6a19-4797-a29e-ce531c01a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1994e6-4060-4998-a890-23a522a02544",
        "cursor": {
          "ref": "aabb37a0-e386-4666-8974-75684b39dd35",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1317e574-a92a-4fb5-a8cf-5239958154a2"
        },
        "item": {
          "id": "3f1994e6-4060-4998-a890-23a522a02544",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7534431c-9ff9-40dc-b176-c527432fb474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7305b28-c3f0-43c1-8e65-044a217e5719",
        "cursor": {
          "ref": "784f8f08-e5c9-4e4b-91f1-d78440e9708d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ff545af7-e2f6-4c9c-a10c-303eec19ef70"
        },
        "item": {
          "id": "b7305b28-c3f0-43c1-8e65-044a217e5719",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bb8c441f-6a85-4512-890f-0b84a8554fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63489419-fb7e-4d40-a143-c948f5bf9e7b",
        "cursor": {
          "ref": "29df965c-2a10-4900-8bb3-4f7e4bad8e9b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bec00c77-b7ee-4b36-9a22-ded2134509db"
        },
        "item": {
          "id": "63489419-fb7e-4d40-a143-c948f5bf9e7b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6a48ced4-7816-4e2d-929e-e0432e46ad57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7497c41-05b6-45e2-a0e3-699248e4b6f9",
        "cursor": {
          "ref": "8ecb1633-6c13-408e-99b3-2bfbbf0f8af1",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3ee9b684-cbf1-4327-863d-69e5a79f23bb"
        },
        "item": {
          "id": "b7497c41-05b6-45e2-a0e3-699248e4b6f9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "480d81da-c0a5-41b9-a771-1b1044f81193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b9b5e4-12fa-46df-97a5-8d86414b5413",
        "cursor": {
          "ref": "b91deb0e-550f-4abf-920a-8cb5533fe7ca",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5e3d564a-30e0-4787-8ef9-4a0c601b758f"
        },
        "item": {
          "id": "07b9b5e4-12fa-46df-97a5-8d86414b5413",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c10f7db9-ab46-4d6a-b504-b5d630ef893f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99051b21-78dd-459a-be2e-f36a4a4cc004",
        "cursor": {
          "ref": "3f7a272f-5e95-4230-a59f-4174bcc0bbe7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ad342a23-20fd-4e1b-b0a3-86ae7f776216"
        },
        "item": {
          "id": "99051b21-78dd-459a-be2e-f36a4a4cc004",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "246481f4-19a7-47d2-bbec-ba09751e2fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ad3d6a-dd85-4179-9fab-ca002546ed32",
        "cursor": {
          "ref": "c14fd5ee-03c3-4b12-bf36-c92e41036ed2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "de46f892-be86-438e-a918-053f55b66873"
        },
        "item": {
          "id": "47ad3d6a-dd85-4179-9fab-ca002546ed32",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fcddc1c6-bcbf-485e-9cb2-4cb5db79fbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5c37e5-0100-4e09-aa0a-4d4c30b79783",
        "cursor": {
          "ref": "9935d55c-75f4-4b36-b805-1e3244ab015c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "49c10b6f-e08b-492d-9788-0be87cb08037"
        },
        "item": {
          "id": "0d5c37e5-0100-4e09-aa0a-4d4c30b79783",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "99a8a5bc-3793-4cb4-ac45-b958b3e04a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c7fe1e-6928-4a6f-9364-bce315b12847",
        "cursor": {
          "ref": "d3d8fcd5-79e1-48bb-83d7-480fef913d8c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "14c85f8b-47eb-40a8-a8f7-97e52fda7abb"
        },
        "item": {
          "id": "88c7fe1e-6928-4a6f-9364-bce315b12847",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "41adc76e-6853-41e0-9fe1-9a723879c4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a718252-5bd2-48df-854c-009617456c89",
        "cursor": {
          "ref": "ca4419a8-0812-4f3a-b051-f7abb910e9ed",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "abd34303-79a4-40fd-a1f1-f41e8c76166d"
        },
        "item": {
          "id": "3a718252-5bd2-48df-854c-009617456c89",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b17ebba0-bb81-431c-9dbc-dd588f78d787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7ea5de-eb77-4a3b-a5c7-d404059c1821",
        "cursor": {
          "ref": "7657496f-fdc8-4302-a703-c8466c66dce2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da0f0de8-e791-4b40-a140-5ff84bd44843"
        },
        "item": {
          "id": "4b7ea5de-eb77-4a3b-a5c7-d404059c1821",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "daa0cdb3-7849-4a72-a6b2-64144ac208e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fd0b46-ed38-47d1-97c4-4929e28b39b8",
        "cursor": {
          "ref": "72fc1eb2-45d3-415c-9b4c-3cd567c3a27f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b3b5ee78-307f-4a88-ae06-cc16c3f34e36"
        },
        "item": {
          "id": "61fd0b46-ed38-47d1-97c4-4929e28b39b8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ca654494-7837-4597-8225-68b967c9fb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c3fca2-16e2-4174-a885-643f5c31d8ba",
        "cursor": {
          "ref": "af539aa0-e7cf-4979-ba34-337f3c99b471",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "80d7544a-ec0b-4230-9e29-dff8110b2978"
        },
        "item": {
          "id": "53c3fca2-16e2-4174-a885-643f5c31d8ba",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6fa86957-7a41-4693-b169-83e2f454a158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372f1291-c271-4344-8f8b-7d98177e7383",
        "cursor": {
          "ref": "f6a1b764-0915-4991-b680-c97c35b8bbd3",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4839291f-8cf1-40ae-914c-13939b17e6e4"
        },
        "item": {
          "id": "372f1291-c271-4344-8f8b-7d98177e7383",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eee9f8c3-8531-4646-95da-7a76f4cdfb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72a4b01-a67c-4870-82ce-576ad0badf5b",
        "cursor": {
          "ref": "7874df17-eb3c-45c2-93a4-f322d9ee6af3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "667abd78-ba1f-4f4a-8b02-4fbc0c7cadda"
        },
        "item": {
          "id": "d72a4b01-a67c-4870-82ce-576ad0badf5b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8d949e24-99d3-435b-b4e5-e093719574f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ea55c1-ad70-41c7-85c5-b2769c65a9a3",
        "cursor": {
          "ref": "4a3652ef-0da8-4e25-9f3e-366095d2e748",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4186bfbc-7640-4f02-9460-c387fd4300a5"
        },
        "item": {
          "id": "49ea55c1-ad70-41c7-85c5-b2769c65a9a3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e3ddbac2-0fd5-4bbb-b0b0-a08096d3d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7459965-dd41-465b-84a5-dbdf4d36922d",
        "cursor": {
          "ref": "1bd0e1a3-ffd5-45d0-8ee1-b53b4e3cf63d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ad1367ae-4459-4b98-b460-9d941fc7da8c"
        },
        "item": {
          "id": "d7459965-dd41-465b-84a5-dbdf4d36922d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b1f3307c-cda0-4f29-a7a3-26c2b8bb2edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db4a5d1-5fb6-4bfd-815c-ce8ca88269a5",
        "cursor": {
          "ref": "7730418f-ba3c-40d0-b556-9e213f7c3fa5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6d8f7ca9-5a99-429a-8eec-261b8ad13433"
        },
        "item": {
          "id": "6db4a5d1-5fb6-4bfd-815c-ce8ca88269a5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9389917c-0a9c-4ffd-9f1a-e8b0dc1529e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645b502a-653d-4650-9771-0e87793911ee",
        "cursor": {
          "ref": "7a65e015-de1d-4212-9759-b791f73efa25",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aea50bae-f05f-4fdd-be49-bb0bfc33cd07"
        },
        "item": {
          "id": "645b502a-653d-4650-9771-0e87793911ee",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dc9539bc-fbf2-43d2-b7d0-eb8ddbca499e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf466d-611a-47d6-ab25-57857c33009d",
        "cursor": {
          "ref": "95e257bb-7ee9-4eaf-8347-5b8839848525",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "57b09950-3bcd-489c-9025-7135b972f244"
        },
        "item": {
          "id": "fbdf466d-611a-47d6-ab25-57857c33009d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4cc16be3-d05d-451b-aa80-9da07eec59c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45281bc0-304b-493f-9a69-4e4fe677a181",
        "cursor": {
          "ref": "db5585b0-f729-4486-9fbb-9afdf311cae2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "43f4eb29-2259-4a9b-8d78-95b3474424bf"
        },
        "item": {
          "id": "45281bc0-304b-493f-9a69-4e4fe677a181",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "077383bc-84d5-43a5-aed0-ad4870f71689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ef4b5d-ce1b-43b1-9924-8037f624d9fd",
        "cursor": {
          "ref": "b8f0091e-73a2-4ea4-a79b-2d6cee1ee801",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e34513c5-4c88-415c-b173-0d90b7a95b81"
        },
        "item": {
          "id": "96ef4b5d-ce1b-43b1-9924-8037f624d9fd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "675d2205-ab8b-4c3a-898d-a611056fd1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c81ee4a-a15b-4b31-a5db-e90248f7e325",
        "cursor": {
          "ref": "c0db72e9-6238-443b-8a7a-7576f634c26b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ad2c8cb8-e36b-4826-9926-8efc16979d3b"
        },
        "item": {
          "id": "3c81ee4a-a15b-4b31-a5db-e90248f7e325",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c31bdede-7bcb-431a-ab7b-7aa29f183cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4c7c12-925a-4372-8e4b-434981eff5de",
        "cursor": {
          "ref": "f00940c4-cb28-4f2f-8c00-14d6cf3424e7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bc2977a1-1e21-4945-877e-a8e769eaac0f"
        },
        "item": {
          "id": "fb4c7c12-925a-4372-8e4b-434981eff5de",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1021ffa5-3656-4fc0-b7f6-d1fe2aeed725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bba2883-457d-4b97-abbc-fe48c270ddf9",
        "cursor": {
          "ref": "c8958435-d532-4b5f-9417-476ae8391905",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2aec6cfc-3051-4837-a66d-d61eef422664"
        },
        "item": {
          "id": "6bba2883-457d-4b97-abbc-fe48c270ddf9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4e36ac27-50fd-4c9e-b0af-c3a44c5cc30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb8e276-1967-47b2-b729-bca1d1fbe8af",
        "cursor": {
          "ref": "1512cafb-f82a-4f8c-8347-675441f8cd6d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e38845ea-1d7b-4a6a-b606-89156c172124"
        },
        "item": {
          "id": "1eb8e276-1967-47b2-b729-bca1d1fbe8af",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d4a19990-3b7e-4302-b3bf-b2c575faed5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a3e9e1-2fe1-42af-8d12-10a413730368",
        "cursor": {
          "ref": "24af5c7d-b464-4cc1-ad24-09d5db058b25",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "689a904f-d5b6-4cd5-8fed-1293a832abd3"
        },
        "item": {
          "id": "98a3e9e1-2fe1-42af-8d12-10a413730368",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4c9af6ba-5bb8-4869-a4ab-38bff624ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4783d82e-b84f-4d97-9fcd-4c5ef1a7eb53",
        "cursor": {
          "ref": "7d77072a-fac7-42a1-95c7-4084b178a965",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "437ddae7-41d3-4f3c-a6a3-c91591c2496c"
        },
        "item": {
          "id": "4783d82e-b84f-4d97-9fcd-4c5ef1a7eb53",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8a6fd877-1c8d-4e25-810d-7ec035302196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a6600d-ff6f-44eb-996b-41b66c0c2b4e",
        "cursor": {
          "ref": "2e8b0d86-107a-47a1-9bf1-e3663d5afa90",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "405be2b7-2d7e-4def-b05e-97f48ef13146"
        },
        "item": {
          "id": "35a6600d-ff6f-44eb-996b-41b66c0c2b4e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1c9402be-257c-4f2a-bed2-37e04073a45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293f4bdc-b47c-4e9f-86d5-c9106f174f7b",
        "cursor": {
          "ref": "ca5d29af-8793-474f-ad05-95eb5de364fd",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b0feaec5-d1ac-4059-b18d-8081d8ddf392"
        },
        "item": {
          "id": "293f4bdc-b47c-4e9f-86d5-c9106f174f7b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dd72d2cc-b1e4-4bff-81b3-aae2ecfaa832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a1e35b-42d0-4126-8c6c-0b33570d22d9",
        "cursor": {
          "ref": "7ba82746-c942-4cd8-90b2-4586983f4da2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7eb9a99a-bd0d-4dcd-b228-dc928cdc323e"
        },
        "item": {
          "id": "a5a1e35b-42d0-4126-8c6c-0b33570d22d9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8dc93e03-7a11-45a1-a88a-889b871ac412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fc5bef-42d5-43b7-ae19-d0ae16d6fa06",
        "cursor": {
          "ref": "57e83b0c-8915-4011-a3a4-b1bed8338d64",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7d12d014-769f-418c-9934-d64b8011eab3"
        },
        "item": {
          "id": "77fc5bef-42d5-43b7-ae19-d0ae16d6fa06",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cb2e0a4f-cf4c-4b00-b5e6-85c5fd4a5aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e4d9bb-8860-4542-86e9-90a68efe33c4",
        "cursor": {
          "ref": "61a03c1c-d546-49ba-96ac-308ab0f117a7",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b9612063-f2a7-4659-94c9-dc2e3c7beb3d"
        },
        "item": {
          "id": "e3e4d9bb-8860-4542-86e9-90a68efe33c4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "738d1cf3-49db-4b9a-832a-51e0d0dbc50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881cf816-14a0-4393-9fc9-473481e9121f",
        "cursor": {
          "ref": "03639375-77e2-4209-aecb-96a4ae8e6c6f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "319c6b9e-ac8a-4e11-9628-68d70797f647"
        },
        "item": {
          "id": "881cf816-14a0-4393-9fc9-473481e9121f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1fdebbb3-485d-44de-be8b-4def2efa8a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c4979a-e58a-4633-af7b-1cf129d7b72e",
        "cursor": {
          "ref": "e0ae60ea-4376-48c4-a2bf-ce50266eb5ba",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b5af0f85-b064-45a3-b415-c4585b0bb8fa"
        },
        "item": {
          "id": "f1c4979a-e58a-4633-af7b-1cf129d7b72e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2006eabf-19e5-478a-a767-ea2c5a031cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd9e71b-edac-4eb2-8f88-7a15ffe6cd3b",
        "cursor": {
          "ref": "e011e20c-71ec-4dce-8b13-ad6be6bfc6fc",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "365df737-2f55-48b1-b639-ab315c0d6cd8"
        },
        "item": {
          "id": "bdd9e71b-edac-4eb2-8f88-7a15ffe6cd3b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "29f441d4-a90d-45d8-b5b2-2aecec85826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b932ec5-e784-41c2-95f9-53153794212b",
        "cursor": {
          "ref": "1a6a168c-d0b4-411a-b46d-d49dc368c86f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3d6ed658-e3ad-4ea5-b266-3b4fb8f6f5b3"
        },
        "item": {
          "id": "5b932ec5-e784-41c2-95f9-53153794212b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0b44639b-af04-472c-9a2a-38c65e3fb912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dc7c4d-b98f-40df-9e5e-aa56d9caff37",
        "cursor": {
          "ref": "6a4ef5b8-5465-45a5-a813-519813c68257",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a257718c-c41a-439c-b9d4-d028ef8593f6"
        },
        "item": {
          "id": "76dc7c4d-b98f-40df-9e5e-aa56d9caff37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "073dc566-5f09-4abf-8737-08c651ef0cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2096f3eb-1e4a-43ae-bf98-a4f3977ed6b2",
        "cursor": {
          "ref": "fcf8046d-2208-4785-81ee-a3533e2dd837",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f11dab6d-64c5-47bb-8d54-0bb587aa6dcc"
        },
        "item": {
          "id": "2096f3eb-1e4a-43ae-bf98-a4f3977ed6b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6be87364-e9f9-4431-946a-f41872a3f2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73575cf-8fda-4b48-a5f1-d6af891de597",
        "cursor": {
          "ref": "6f0fc33b-fc4c-47a2-94d5-53eade4bd5c3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4298c96f-e5cf-4f78-b083-a1f7419e615e"
        },
        "item": {
          "id": "b73575cf-8fda-4b48-a5f1-d6af891de597",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9cf287fd-8dfe-4e04-bdc3-ce1ce4cae237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30319cb-5afe-4efb-be44-a85b2e9a5b42",
        "cursor": {
          "ref": "bdc82dda-226f-4d03-9bd0-d0b83e1652bc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2bf3a51d-e530-45e6-8b49-06857204f45f"
        },
        "item": {
          "id": "c30319cb-5afe-4efb-be44-a85b2e9a5b42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "23bab721-f6fe-49e2-8acc-c110112ae5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332792a9-2ecd-44ab-b2b1-6e4be0c5b11d",
        "cursor": {
          "ref": "bb84fe23-64a1-4795-bf6d-9216a820095a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "53e6c200-9143-42a3-be4b-35da1539270e"
        },
        "item": {
          "id": "332792a9-2ecd-44ab-b2b1-6e4be0c5b11d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9c0465e8-bdc7-4d26-9766-61a367d4705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d7e421-e41c-435e-b761-3caf0374a3d7",
        "cursor": {
          "ref": "2afd769e-78e8-4a1e-9e7d-652e29360610",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "53490a96-3469-4231-bc94-2dd9569e7fd8"
        },
        "item": {
          "id": "d6d7e421-e41c-435e-b761-3caf0374a3d7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ff752a50-0df4-4aef-adc6-5de2b077351f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b55c4c-54e1-4491-9d33-a0f8d9ef4e25",
        "cursor": {
          "ref": "58d8b147-e822-47ff-a1c0-cf68c07e4019",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7b703291-e306-48ed-9189-9d2131735ba9"
        },
        "item": {
          "id": "21b55c4c-54e1-4491-9d33-a0f8d9ef4e25",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ad812887-aacc-4ceb-b383-89883b1f840b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c717ed-6a77-4ce8-9732-60317358f143",
        "cursor": {
          "ref": "3336f257-855b-44ea-8d1b-4111f1a9a66b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "aa2ee407-a429-462d-809d-eedab920758a"
        },
        "item": {
          "id": "b6c717ed-6a77-4ce8-9732-60317358f143",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2fdb74e7-28aa-445a-9824-5e0804ea174b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3e4c97-ab76-41fd-9966-2e7df8b59d27",
        "cursor": {
          "ref": "47e08f9f-dca1-41b1-83bf-7f73c7fdf41c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "56ddba38-0185-4be9-90e8-8c3a0ef28050"
        },
        "item": {
          "id": "7b3e4c97-ab76-41fd-9966-2e7df8b59d27",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "20897bd2-0146-47e6-b32d-b595bc1051cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3479cf41-5805-4cee-a477-66ac91635334",
        "cursor": {
          "ref": "3d5fa40c-79aa-4e0f-8815-b243ab8bdbfe",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c56d972c-0145-4258-9863-ac3ba10fe2a1"
        },
        "item": {
          "id": "3479cf41-5805-4cee-a477-66ac91635334",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "02d51cb1-64df-4e5e-a570-35e868a6fce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf6bf40-e84e-460e-8ace-baba8a506741",
        "cursor": {
          "ref": "32efcbb5-da77-41df-88d3-e8172ce36374",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3a2662f1-4a51-4135-8c12-13f47af7e429"
        },
        "item": {
          "id": "5cf6bf40-e84e-460e-8ace-baba8a506741",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "89899c97-6f4a-4122-88d6-2f7ada0735b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9fed5c-e123-46d6-9b2b-a5fd0fe4e36e",
        "cursor": {
          "ref": "7ec60995-fc6f-4181-a131-b25c5dfa8e46",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "efc27a98-9393-410a-a6e2-7a4371b76080"
        },
        "item": {
          "id": "2a9fed5c-e123-46d6-9b2b-a5fd0fe4e36e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d51ff8f8-152e-42c0-bdd1-9048a432f121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d9bfda-d8dd-463a-8d34-0da86202dcdc",
        "cursor": {
          "ref": "e0ebf1e7-c234-4f72-96e9-8a903855c9ec",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "edf65250-13e0-477d-af77-a6fb005a27fc"
        },
        "item": {
          "id": "78d9bfda-d8dd-463a-8d34-0da86202dcdc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "016a618f-9ed3-4d4f-99a2-62df0bd3f780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f724e2-c5ba-45b0-aab7-467f8b7cf96a",
        "cursor": {
          "ref": "0a71d73e-53fc-4a14-8ab9-581b0c1efb4b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4c99adf2-eb8e-4498-bf06-d06b73e7184c"
        },
        "item": {
          "id": "48f724e2-c5ba-45b0-aab7-467f8b7cf96a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ab098672-7b82-44df-bb45-72217dc6e78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f40444-12cd-4615-91bc-0a10349ac8c2",
        "cursor": {
          "ref": "4ab31b53-90c9-4047-8a47-ccc74efd6ef6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "61a8fa21-6001-41da-8c61-8d93f917f38d"
        },
        "item": {
          "id": "27f40444-12cd-4615-91bc-0a10349ac8c2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1f349701-5911-464a-b72b-1ddd81909378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0be0016-d158-4e2c-a8ef-48c5eba8791f",
        "cursor": {
          "ref": "34384428-e8c7-40e5-9a2a-c81f90e65710",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3b0d9a5e-81e8-4ea4-beff-91bc9ab9a7e1"
        },
        "item": {
          "id": "e0be0016-d158-4e2c-a8ef-48c5eba8791f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1845f405-18c9-4f9c-8786-168897413d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe550547-8370-4f3f-acd5-1fc580cb6eea",
        "cursor": {
          "ref": "90187655-9674-412c-b415-8104f8b2f3c8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ecc5d025-54f5-4564-9d1b-70c77de3dc21"
        },
        "item": {
          "id": "fe550547-8370-4f3f-acd5-1fc580cb6eea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d4849d0b-1808-4ee3-b2cf-9f42a9847ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c52368-ed62-4533-8ad0-1e542542d817",
        "cursor": {
          "ref": "dcd8fdf5-05a0-41f8-9e99-afe7f30a2c58",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8a18edbd-763c-41c5-8839-659b5490db3d"
        },
        "item": {
          "id": "f8c52368-ed62-4533-8ad0-1e542542d817",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cbc06494-fe48-4227-a812-14eb4fe53616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9380fb-0b60-4204-8076-f1331858c5fa",
        "cursor": {
          "ref": "bb2872ff-ea2e-496b-9860-de498ec80d85",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b71ecad8-bcea-436e-9b0a-1f4a2c27ed1e"
        },
        "item": {
          "id": "9e9380fb-0b60-4204-8076-f1331858c5fa",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2d654e73-ebe5-4491-a293-bc2e15f0b304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a5cf9-de32-4504-97fe-8dea3bb2d7af",
        "cursor": {
          "ref": "721d1ab2-606b-4e06-bc8d-ecbfac1726c0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "03938c4d-ae70-4628-8d78-99d0b75530bf"
        },
        "item": {
          "id": "846a5cf9-de32-4504-97fe-8dea3bb2d7af",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3d46228c-7d6c-4e55-935c-95d860aa67fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7588c1af-bc77-4b06-a1b0-b550d5d49ba4",
        "cursor": {
          "ref": "00839ba3-3275-4804-a611-37b06540bfa4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "99bfad72-e3ad-406a-806e-2422edde769f"
        },
        "item": {
          "id": "7588c1af-bc77-4b06-a1b0-b550d5d49ba4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f57f5148-e711-4c00-93c9-b63317b21aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b976a02-6a56-472d-b9e1-cb5e3613801f",
        "cursor": {
          "ref": "e7f60fb5-37e9-4268-844e-6d28737d5544",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b89bd492-08d3-4a4b-90bc-683c524a125e"
        },
        "item": {
          "id": "1b976a02-6a56-472d-b9e1-cb5e3613801f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ac1a7ae1-e087-4e51-81a9-7d5dd723ff5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4720e10-75cf-4fe6-b84c-28d2dab86a71",
        "cursor": {
          "ref": "7e70a07c-625b-46c4-96e5-4a9c5346d960",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c6fc0713-849f-4c25-9e0d-b00c4c37f101"
        },
        "item": {
          "id": "d4720e10-75cf-4fe6-b84c-28d2dab86a71",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ea9067a8-727a-472a-bcb5-d0b8ba152ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0afa1ad-7d94-421c-bb45-affe44341e9b",
        "cursor": {
          "ref": "9d21a487-e971-4ecc-88b7-b8dca58fa22b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9f480434-3a22-4ac1-a7bf-6e13241c5b17"
        },
        "item": {
          "id": "c0afa1ad-7d94-421c-bb45-affe44341e9b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3ad36af5-1e06-4ddc-83eb-e30aceb84e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c0eca-2b85-4065-9163-c2a71713c426",
        "cursor": {
          "ref": "ecff7483-5d37-4de5-b80d-6095cbb82635",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a83d4f7d-ade2-49ec-a509-91775af37dfe"
        },
        "item": {
          "id": "141c0eca-2b85-4065-9163-c2a71713c426",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2b3612c4-1984-4451-a581-38da6b367471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf0dd68-61e0-452a-a414-57098f2d1816",
        "cursor": {
          "ref": "ef07c52f-7e4e-4218-89c5-3eb9a22c721a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "91f6c6f7-3874-470c-8c84-ac77d31ea15a"
        },
        "item": {
          "id": "dbf0dd68-61e0-452a-a414-57098f2d1816",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1e2e2c61-a51c-40d8-83c1-55909093e748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ab274a-fdb2-45b5-9ae4-44ad1c3f3d44",
        "cursor": {
          "ref": "db8a6cd0-674a-459b-a334-89beff22b1ae",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0167c61a-77f3-4d2c-ab29-83e4f1fbdd4a"
        },
        "item": {
          "id": "78ab274a-fdb2-45b5-9ae4-44ad1c3f3d44",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ab9b92d3-08ec-44f3-be1c-7cc7fe5418e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04de3a81-7a16-479d-a608-530b5c4382c8",
        "cursor": {
          "ref": "a72dfce4-f2dc-4264-ae43-cb867168a8ba",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e877678b-f9b8-4da6-8744-6b28365547cb"
        },
        "item": {
          "id": "04de3a81-7a16-479d-a608-530b5c4382c8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aa8533b8-53b4-4808-9a10-131b0665b81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee73e4c4-e2b3-4df8-a624-94b87094fcdd",
        "cursor": {
          "ref": "f8b86a3f-05ef-4223-8a70-3f41c6749b50",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cbcdeb67-a641-404e-8b65-5907f3ff5a98"
        },
        "item": {
          "id": "ee73e4c4-e2b3-4df8-a624-94b87094fcdd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "268c969a-baf6-4a54-95fa-8ce4c436a629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c600f4-1394-49d0-ab49-7b0467796527",
        "cursor": {
          "ref": "6c6e7ec5-5752-4615-a6c3-c1538db6ec0d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4f8b0ed8-85de-48cf-add9-86b423f9cf49"
        },
        "item": {
          "id": "d5c600f4-1394-49d0-ab49-7b0467796527",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "23b6de59-d827-4aa1-9899-ff7c79cd492a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f97df1-2b9b-4fef-992d-46c595e2f578",
        "cursor": {
          "ref": "53f453ef-33bc-4d3e-b394-1d7f013e62ec",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "aef2bb8a-2234-4231-a4a9-a5ad021713ef"
        },
        "item": {
          "id": "75f97df1-2b9b-4fef-992d-46c595e2f578",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8666b3fe-2847-4f10-8269-ef5b6ff42d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf14f25-e45a-4e76-84ba-a9f8320d826b",
        "cursor": {
          "ref": "099c7f47-4313-40be-83ab-a8c1656857c2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a94360e8-5b03-4085-ad64-2e4cd7e55197"
        },
        "item": {
          "id": "edf14f25-e45a-4e76-84ba-a9f8320d826b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c9105007-5854-49db-b00b-3f62d2f94f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4507a8e5-ebd1-4c76-b565-526e9bb320b2",
        "cursor": {
          "ref": "49cddc00-fd82-4b9f-b5f9-650f270adc99",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d5a0fa73-d629-429e-9ec9-4d0072b67231"
        },
        "item": {
          "id": "4507a8e5-ebd1-4c76-b565-526e9bb320b2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0158ac38-9ec3-4543-afd4-3b2f4340bb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fb237e-450e-434a-b978-96a66a0387b1",
        "cursor": {
          "ref": "725af431-9a5d-439f-8564-cc34c6bae680",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a184c7ca-686e-4f57-8cb3-195d3c899fde"
        },
        "item": {
          "id": "04fb237e-450e-434a-b978-96a66a0387b1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1812c855-bb91-42c7-85ba-cc45919f5ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169aaf8c-b0aa-4d54-b309-c593baf375a3",
        "cursor": {
          "ref": "acffae10-6755-4d3c-8ef9-f70c0c3e2695",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "72581b6b-2503-420d-9ad3-8bdfcdf766f8"
        },
        "item": {
          "id": "169aaf8c-b0aa-4d54-b309-c593baf375a3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5370875d-71a1-418a-be03-bd5d05b43584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b680c6a-aeb7-4b45-9ffe-0d0a11b0485d",
        "cursor": {
          "ref": "135bfad0-7ad2-4975-90e0-4b938ef2621c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a933eaef-0d0b-4588-9cd8-244d1d61895e"
        },
        "item": {
          "id": "3b680c6a-aeb7-4b45-9ffe-0d0a11b0485d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3fc21118-e6fe-48a6-be72-bd5a7ed6ed00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b49b8c2-b681-4ce1-b3ed-3b814977a5a4",
        "cursor": {
          "ref": "61d54198-bbd7-4569-bf1b-cd0b80c9ab42",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "996ecd71-0416-4d91-baec-c3084154baee"
        },
        "item": {
          "id": "4b49b8c2-b681-4ce1-b3ed-3b814977a5a4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "616efb6e-8bc2-4d79-99ae-5fcb2f867139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "895ca7ad-fcbc-4f0b-92a4-1022a77acada",
        "cursor": {
          "ref": "dd32441c-e723-4471-8d24-9ac57d96e6c3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ebf7364a-afc3-4375-b2b0-aef4f23232de"
        },
        "item": {
          "id": "895ca7ad-fcbc-4f0b-92a4-1022a77acada",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7694bfc3-b6ee-469d-9f73-3049bb8dbe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ee8705ca-7a9c-49f9-b9c5-d95080be8b26",
        "cursor": {
          "ref": "88726b2c-b43a-4f0d-9ecd-ac7dbaf655d2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "246f7637-c177-477c-9054-3efb3fc954fa"
        },
        "item": {
          "id": "ee8705ca-7a9c-49f9-b9c5-d95080be8b26",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "41594661-abd7-4d56-a6d9-2108437d010a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "788ff617-89f4-42a3-a76a-ee8622b3b663",
        "cursor": {
          "ref": "eae96b2b-7d70-47f0-8a80-9b69289404ce",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "52f5fbd6-dc5b-4e39-a9ee-b962ffa0585b"
        },
        "item": {
          "id": "788ff617-89f4-42a3-a76a-ee8622b3b663",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c437e021-1fec-47ce-a3d2-7bc750837e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "4de784b1-063e-4ad4-998a-ccd498a18fea",
        "cursor": {
          "ref": "51822396-fae2-4ef8-a1cf-435e1b0a97c5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "203b8db7-7c3a-4397-9717-422bf9408bae"
        },
        "item": {
          "id": "4de784b1-063e-4ad4-998a-ccd498a18fea",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e2c9548e-db64-4d2a-8826-ad0e7935dfff",
          "status": "Created",
          "code": 201,
          "responseTime": 9125,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf159589-c39d-4bb6-9d9a-558ead60a39d",
        "cursor": {
          "ref": "a6db09d8-ba0b-4dc3-a11d-3cb05b7a4968",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "463863a6-3741-4a95-a405-5576b5d76160"
        },
        "item": {
          "id": "bf159589-c39d-4bb6-9d9a-558ead60a39d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "97ae2c3c-e315-4c04-871c-427e34d0ea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8b950a46-4fc8-4794-9382-c1f6540af9a2",
        "cursor": {
          "ref": "183f3c89-d4ef-4979-b2af-21b994aeb366",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ec4a6ec5-57dc-4193-9d6c-1d00d00f3de2"
        },
        "item": {
          "id": "8b950a46-4fc8-4794-9382-c1f6540af9a2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2e71d46e-6026-4800-8321-5a129e717ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ee3ac059-9751-4f16-8484-ab457272260b",
        "cursor": {
          "ref": "81e605dc-7a79-4b7e-9001-57c41296e538",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "63db1d8a-ba09-4a89-b6a9-ebf26b9494e7"
        },
        "item": {
          "id": "ee3ac059-9751-4f16-8484-ab457272260b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e128d381-0e6c-4110-ab39-3112346f9118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0271d6-910b-4155-9202-ae1763c66e92",
        "cursor": {
          "ref": "3ddb06bd-04c5-4fd3-beed-b72920f41404",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a1021847-8d60-49e1-a1a5-fb6e1217abed"
        },
        "item": {
          "id": "2d0271d6-910b-4155-9202-ae1763c66e92",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e307125b-f1f9-4e68-8a16-41ba5db577d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82c3a62-12ca-4c51-910a-0ebd8d50ea40",
        "cursor": {
          "ref": "02263187-a91d-4643-8c1b-ca6cb504a1cb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0ae15a3d-3199-4ead-81a3-0d8d6e04c0ba"
        },
        "item": {
          "id": "e82c3a62-12ca-4c51-910a-0ebd8d50ea40",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d7558483-1b63-4d05-b3cf-5cf2abad747b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ac3f9c-d1fd-4d44-b0ed-6f7c122250e4",
        "cursor": {
          "ref": "88e8b4cf-4b1e-4b34-9582-12675c9c7231",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ed6769bd-36f0-49ac-ae24-cb37d5a82dcf"
        },
        "item": {
          "id": "33ac3f9c-d1fd-4d44-b0ed-6f7c122250e4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2b99982a-d1b3-4248-95fa-91bd6c20f285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ce67ed-51f4-459e-9553-53da5417635f",
        "cursor": {
          "ref": "f79c7ff0-a3ae-4c80-b2c8-11f43872d68f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fb5ee844-73e0-48c2-a9c6-194991fe6104"
        },
        "item": {
          "id": "22ce67ed-51f4-459e-9553-53da5417635f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2bf7af66-712c-433f-9ff6-178e2686bfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42912f8-e78a-4011-9b97-f161c9e2483d",
        "cursor": {
          "ref": "77e9c627-41ed-44c8-93fa-dd1caeff9818",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8c748c3f-38e6-4180-ac91-b8590137a41c"
        },
        "item": {
          "id": "d42912f8-e78a-4011-9b97-f161c9e2483d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a4093950-8ea0-4368-8a10-f7b50b6708e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cbe66b-0a77-46aa-9b6f-8190d760aec1",
        "cursor": {
          "ref": "84c602ea-3b0f-4732-a4b0-e11df5a9925a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e6000786-fe42-4869-911a-5dd47cea3ac1"
        },
        "item": {
          "id": "e7cbe66b-0a77-46aa-9b6f-8190d760aec1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "69d8aa5b-d67e-4a0d-b8a4-e0bb9ec87d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbf91ef-e54c-49ae-bd46-b6f996a362a8",
        "cursor": {
          "ref": "70361ca3-7063-4411-a6c0-ac5770d68259",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "74db198a-6cd6-4fee-978b-0185c03d0cdc"
        },
        "item": {
          "id": "fcbf91ef-e54c-49ae-bd46-b6f996a362a8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "404f60c4-3426-495a-9305-c32fbcd8c891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbb5863-91ff-49db-a4b7-4f0c8abb4aed",
        "cursor": {
          "ref": "e3a876d9-91cd-41bb-93cf-3c18992e6653",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1e408724-4c85-4aba-861b-418528c1fcc8"
        },
        "item": {
          "id": "bfbb5863-91ff-49db-a4b7-4f0c8abb4aed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d881a677-f426-4db3-9df6-51bbc0165568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8951fe4a-185b-4fda-a933-72166352dd5a",
        "cursor": {
          "ref": "62c5b55d-edab-46f4-8945-f7aee04fbdc3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bfe2bd7d-fa51-405d-b577-0b8263b81ab2"
        },
        "item": {
          "id": "8951fe4a-185b-4fda-a933-72166352dd5a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f2306ef7-4e6d-4e73-9039-40bb1b01ab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332aeb82-5ca9-4595-b6b9-d8563cae8764",
        "cursor": {
          "ref": "3f174259-2240-4ac8-a4d7-d00a21a29207",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08f3a357-92b6-4bbd-b965-7caaa0b37e7f"
        },
        "item": {
          "id": "332aeb82-5ca9-4595-b6b9-d8563cae8764",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c4f3ba75-a5fa-4472-bf7a-01c08252447a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610cb8a0-5aca-48c9-98c7-8ff02fd4d0f5",
        "cursor": {
          "ref": "ab1ee79d-aef1-49ea-bb2f-79048da1349b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b6f6cc72-a055-4b0f-a2dd-92a3527c3e8d"
        },
        "item": {
          "id": "610cb8a0-5aca-48c9-98c7-8ff02fd4d0f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "29d1ce7e-7b0f-40a8-875f-e0414a120fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6bd078-fd9c-4656-ad21-21de98628b08",
        "cursor": {
          "ref": "99d3408c-7e93-4709-a200-814ed9d020d8",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7086b2c6-6b3d-432b-ac32-3e4467bc9f57"
        },
        "item": {
          "id": "be6bd078-fd9c-4656-ad21-21de98628b08",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9e9567f1-def6-436c-95c9-9280995e2c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6c742b-fc85-43b8-b887-21e7f25d8d73",
        "cursor": {
          "ref": "526de39d-5b41-407f-9f1e-35bc8a1d0b88",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7ac9816f-c498-4c24-82a9-8af73ca02f5a"
        },
        "item": {
          "id": "3f6c742b-fc85-43b8-b887-21e7f25d8d73",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9ca1798d-0d59-4b5e-a38b-e8a21b95e954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606e00d4-1545-4fa1-8c02-a82f4f426b9e",
        "cursor": {
          "ref": "3754d1f7-8805-4d0f-a887-79ea795325dc",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fff53e3d-ca09-4a1b-844b-fb54554d06d3"
        },
        "item": {
          "id": "606e00d4-1545-4fa1-8c02-a82f4f426b9e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "474989da-568b-491c-a731-94d617879379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150aaeda-7d8d-43a5-be1d-69eded58b57b",
        "cursor": {
          "ref": "809b6e2f-2401-4a2a-8c4d-501a11e022b2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "958035b6-4c36-4ce8-8a3a-90d70d83d229"
        },
        "item": {
          "id": "150aaeda-7d8d-43a5-be1d-69eded58b57b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3eec4b7c-7e19-49ff-bd38-1eee8c114128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f8edb-47ec-4b94-9b81-ef6ae4354138",
        "cursor": {
          "ref": "d15a6e83-be04-448f-94a6-2d461512de51",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "de2209ef-bff9-45c8-a9ae-1b25e5be771c"
        },
        "item": {
          "id": "a17f8edb-47ec-4b94-9b81-ef6ae4354138",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "03391b9b-e2ab-49b2-81db-81af74d48df3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7d7bbdff-c4a0-437c-b8e0-86ade23387a5",
        "cursor": {
          "ref": "00d91957-b532-4d45-a1ae-ef94fd66eb8a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "40201b10-3bec-40d5-bfbb-dd8d0a3b669c"
        },
        "item": {
          "id": "7d7bbdff-c4a0-437c-b8e0-86ade23387a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e24171b5-2950-48eb-98a8-7cdf6d54b764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85f2877-ea14-4949-bfd4-06847f331d8d",
        "cursor": {
          "ref": "de0954b0-ae34-4b7c-854c-76ca88c1a131",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4d5d5ac3-191f-4836-a904-ceab415bb8cd"
        },
        "item": {
          "id": "a85f2877-ea14-4949-bfd4-06847f331d8d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cbd1f89e-9c0a-4d69-a00f-bad27741b715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c8febc-7e8d-41a7-bd70-e1483d0e8ace",
        "cursor": {
          "ref": "e5f27ebf-fe1a-4d5a-8451-a530b35d5966",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "81f87543-dfae-4d7b-975d-9a3988008c94"
        },
        "item": {
          "id": "77c8febc-7e8d-41a7-bd70-e1483d0e8ace",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a04ed4fe-6994-4e10-9a91-8efc2cbd5163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935855ac-9a67-4460-9864-c74565591fce",
        "cursor": {
          "ref": "9c4b425e-9e3e-4b54-99be-8469ee49ffb4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f2d46874-b8a0-4ddf-8d1c-21ae8cf43fd6"
        },
        "item": {
          "id": "935855ac-9a67-4460-9864-c74565591fce",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "33cc5495-c198-4352-83a5-ce311a4c94fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06dde20-ae8a-4e65-9eb5-533ed08f45b2",
        "cursor": {
          "ref": "c64f2641-7ec6-42a3-849b-118f34e40921",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "28a98161-f76d-469e-9cf8-b4c297b83a7e"
        },
        "item": {
          "id": "a06dde20-ae8a-4e65-9eb5-533ed08f45b2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "45cb839f-70db-41a5-99b5-636681cfa78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c7cdb6-2fb6-49c7-84a9-b2277d1ecdea",
        "cursor": {
          "ref": "e538613b-eae9-4f35-92ec-23b91869bdb2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a3dc0909-67fe-4024-9e3b-b15988939b5d"
        },
        "item": {
          "id": "73c7cdb6-2fb6-49c7-84a9-b2277d1ecdea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed0326e2-3e2e-48ab-b83d-e77462721072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd16ca4-81cf-4de0-a9d1-97d310d45f9c",
        "cursor": {
          "ref": "772c97ae-80db-4915-8d1f-719cebf2fe57",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c90f45b7-2da6-4e29-8832-38920afa8a6e"
        },
        "item": {
          "id": "cbd16ca4-81cf-4de0-a9d1-97d310d45f9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "caf9852b-c1c0-43a4-9210-60c643e9c252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4edc5b8-49c1-4698-bc43-d302e5320d4e",
        "cursor": {
          "ref": "926e8cd0-924c-4d5d-82cb-6645d92def16",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d32a2371-084c-44a4-b870-40ac20ba7858"
        },
        "item": {
          "id": "a4edc5b8-49c1-4698-bc43-d302e5320d4e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "89b722c6-0681-47ec-a4e4-9200d71b37fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "07ce2c8b-6716-42a2-ab8f-b1eec7a7f07e",
        "cursor": {
          "ref": "962e27ec-da6f-4a7c-88ae-1c9525b0a85e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "600625be-0741-4b3d-84cf-4cb21ae085fb"
        },
        "item": {
          "id": "07ce2c8b-6716-42a2-ab8f-b1eec7a7f07e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d178d2f9-23eb-4253-bd30-9b2ce3af0e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b3a1fd-dfc1-446e-b420-f4a17cf9ef86",
        "cursor": {
          "ref": "97460ce1-5d14-45ce-a884-a246b54bdd8b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f17c2031-d1e0-4340-9e03-fcdb5a698f4c"
        },
        "item": {
          "id": "97b3a1fd-dfc1-446e-b420-f4a17cf9ef86",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1c4bd643-5b82-4592-9dc7-6217e7fbf6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdc75e1-e1d5-4ca6-b2d5-b8fad68d207c",
        "cursor": {
          "ref": "2d6df2e4-76af-4b09-b4c9-81cd1f76b564",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4766db74-532a-4bd0-9f7a-20591ee1c826"
        },
        "item": {
          "id": "6cdc75e1-e1d5-4ca6-b2d5-b8fad68d207c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d9e144ba-5fa1-4a4f-930f-0322a917714a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806345a4-c123-45ba-aace-0bf47777207e",
        "cursor": {
          "ref": "4290c554-63fa-4a7e-8284-731788e229c6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f049ccd5-65f3-4edd-b859-c8c8d4f471c7"
        },
        "item": {
          "id": "806345a4-c123-45ba-aace-0bf47777207e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a2829920-c6af-4420-b21b-d7fdcfe7be07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f999ef4-0915-4b42-9af1-560c662c1cf7",
        "cursor": {
          "ref": "5940c6a6-8803-4ab9-8f09-00e2a81f3719",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c8bd597a-90b1-4679-b26d-6f97e27aa44d"
        },
        "item": {
          "id": "4f999ef4-0915-4b42-9af1-560c662c1cf7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0245632c-29da-4c48-87d8-1fabfdd11d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913ece4d-1841-41b8-8f74-c7234668197b",
        "cursor": {
          "ref": "d7c43dad-ba4c-4dff-b79f-020019d85ac6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "332378a1-7576-4355-916f-bc87f13af739"
        },
        "item": {
          "id": "913ece4d-1841-41b8-8f74-c7234668197b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e08cf95b-0781-4144-bb97-ef0e1d3bb25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b436060-3acb-4e41-912a-80a396949f8e",
        "cursor": {
          "ref": "73f5c26e-cfd7-4900-9cb3-4b02200821e1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e19ad0b9-0fb8-4fc2-8005-245dcc370275"
        },
        "item": {
          "id": "6b436060-3acb-4e41-912a-80a396949f8e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8f8196c5-4d4d-4c4e-8d96-a34d16a5a987",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "478eb441-6895-4d20-bac5-eafc3339fe19",
        "cursor": {
          "ref": "3de8cf3f-9959-4452-b2e8-e0cb4d4d8bef",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "00c8fe8e-caa0-41f9-b77f-eecd940487ab"
        },
        "item": {
          "id": "478eb441-6895-4d20-bac5-eafc3339fe19",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a8b48909-8b88-41e8-b7b1-006d8f993809",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167cb3cf-8cc8-476c-8ce2-507f3a9215f7",
        "cursor": {
          "ref": "b62c11e2-95ae-49d1-8a89-0a59bc3938af",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7d6b9b97-ee57-48bb-84b7-b180389a4c4d"
        },
        "item": {
          "id": "167cb3cf-8cc8-476c-8ce2-507f3a9215f7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c78ea048-0e96-447b-b876-1e6ab2969a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37b870d-cbb2-4dfa-9add-7e2ad19e9c72",
        "cursor": {
          "ref": "ea44804c-edd2-435c-8f68-eb936a99f4e3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d851af44-4d47-4555-9673-3e757f0ae09f"
        },
        "item": {
          "id": "d37b870d-cbb2-4dfa-9add-7e2ad19e9c72",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9aa0be01-7ad1-43dc-b2b8-130b24a27b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770df063-23a3-4894-99c8-624886b76208",
        "cursor": {
          "ref": "65bea986-8aef-401c-9881-e4d6b69f841c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "00d97ed1-dbcf-4d9e-8831-ad7bd0c64318"
        },
        "item": {
          "id": "770df063-23a3-4894-99c8-624886b76208",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "585d45d8-b36f-4e93-85c8-7c6fc5191b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af779c8-a954-4e98-a6b7-8ad0910b4a22",
        "cursor": {
          "ref": "b4327970-bad1-43f0-bf5f-8d347759cdfa",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4fa6eb24-d0ba-4c4e-b5e7-4c36f3424dca"
        },
        "item": {
          "id": "1af779c8-a954-4e98-a6b7-8ad0910b4a22",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "28b363a0-9e51-4b44-87a0-c29431dabda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bb27a4-3015-48ef-8415-3e8671217b19",
        "cursor": {
          "ref": "ed6747e6-a2ea-4192-a546-6ac50bcbcfd8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c1978c5a-29ad-4d62-81ce-d0fa76f1cd73"
        },
        "item": {
          "id": "18bb27a4-3015-48ef-8415-3e8671217b19",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "82ee5b69-71e1-4353-9d41-ce182593aa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aebe7f7-5958-4b8a-8585-1fc8a78252fb",
        "cursor": {
          "ref": "1d32d14e-da72-42ee-a9bb-779aa1e6f50f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1784798e-e0d1-4e53-a3d9-e00ef10be90d"
        },
        "item": {
          "id": "1aebe7f7-5958-4b8a-8585-1fc8a78252fb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cd189839-a906-41e3-8d0a-498beb1b3f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa650762-f42b-44d5-becb-0b1ee5cca1e2",
        "cursor": {
          "ref": "c354dc7a-a2ae-4b4e-98ec-53f44a1e49ed",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6fd99660-cb75-4191-ad63-53ed11d86fda"
        },
        "item": {
          "id": "fa650762-f42b-44d5-becb-0b1ee5cca1e2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e3e124df-4a61-4338-8568-37b10ea24f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d890d0d5-adba-479c-b77d-7392748426b2",
        "cursor": {
          "ref": "4ef6da14-1c18-458a-b69b-6ee92db2cbdd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a2b49a48-6435-44d6-96b1-ba04f5a54c44"
        },
        "item": {
          "id": "d890d0d5-adba-479c-b77d-7392748426b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1fa44726-d2e0-44cc-8f3e-5cd5e15d68d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde5680b-73ba-4982-bab7-d89ef6584dd1",
        "cursor": {
          "ref": "5371d2ae-941e-4350-82cd-b2514a3c8b3e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "19281892-9102-4075-9ad4-41c872af97a9"
        },
        "item": {
          "id": "fde5680b-73ba-4982-bab7-d89ef6584dd1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "473e00e9-cd80-49be-abb1-3315b6494232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89c745-b302-406c-9497-cee9eaaa810a",
        "cursor": {
          "ref": "87d965a8-b9e3-4fff-bab6-efd9f23ae1a6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4f74b51a-c035-4fb8-8cc1-313a811a9771"
        },
        "item": {
          "id": "cb89c745-b302-406c-9497-cee9eaaa810a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f08a1831-4099-431d-aac5-ba32c61dfe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70acef6d-a70a-479e-8e44-a49bc572a5f0",
        "cursor": {
          "ref": "fc27f978-2dd3-47cc-ab67-8ebebafe91f8",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2b096d6c-cdc4-4473-b6e3-845a39106b5b"
        },
        "item": {
          "id": "70acef6d-a70a-479e-8e44-a49bc572a5f0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "720c2033-4feb-45e3-8f0d-df649d81d6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caffc9d1-2133-4c2e-b594-3ebb12676534",
        "cursor": {
          "ref": "8aefb0da-b30b-4174-9325-f17c0a332ab4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8f80a6fc-f56c-453f-af39-cac445527e04"
        },
        "item": {
          "id": "caffc9d1-2133-4c2e-b594-3ebb12676534",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "352809bd-92a9-4938-91b3-e82bc7f0cab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db58d499-e273-47c6-bb60-f16056b140bc",
        "cursor": {
          "ref": "b8b138dd-a1ea-4051-a69e-c4280a7172a3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e3cd46c5-c7df-4e10-a035-fb5a6af563ab"
        },
        "item": {
          "id": "db58d499-e273-47c6-bb60-f16056b140bc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd14dd84-b846-4a4e-99f9-9335ce552c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5502b9f1-9439-4140-9d29-75ca8ce2f019",
        "cursor": {
          "ref": "b87c473f-c4d0-4260-a7e1-334a2276b5a5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5b6f925f-4c70-493b-89d2-115310a37b1c"
        },
        "item": {
          "id": "5502b9f1-9439-4140-9d29-75ca8ce2f019",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7f2186b2-a2bb-48f8-8191-69ce126a97ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18442d0-c886-4c94-ac61-18a6c2595f29",
        "cursor": {
          "ref": "07175e29-7471-4f6a-9983-3fc5c5e67182",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b4881876-9ebe-4be9-8bab-8907dad90013"
        },
        "item": {
          "id": "e18442d0-c886-4c94-ac61-18a6c2595f29",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "31c347c4-1015-4e13-9fbe-f9b9d47e3d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32c2a59-48fa-4bb5-a9ec-3497b5fbfb9b",
        "cursor": {
          "ref": "bdab4a21-39d4-4659-8b19-da6a6798fb12",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a792297e-a83d-4d57-a19d-6c707d30fedf"
        },
        "item": {
          "id": "d32c2a59-48fa-4bb5-a9ec-3497b5fbfb9b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9e3eb3b5-2a8e-4764-96a8-2f56cebc4268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66cac70-37d1-43d3-ab3f-2d53fe77c3de",
        "cursor": {
          "ref": "78dfbb8c-9bfb-481e-85c4-6f97336dbb0b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3acd8f15-1f09-4b53-b449-0cf790b02ec7"
        },
        "item": {
          "id": "d66cac70-37d1-43d3-ab3f-2d53fe77c3de",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ba14d2d3-4927-4ab5-9b0d-1b8bb23a0a1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "d2ba0f62-6d2d-4a92-b570-3cebd0e7abac",
        "cursor": {
          "ref": "c6356330-bb00-4db0-bb9f-8663a5967752",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e2f4678-efd6-4636-b884-1998d4fff1d0"
        },
        "item": {
          "id": "d2ba0f62-6d2d-4a92-b570-3cebd0e7abac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd0ddf8c-1c00-48ae-9ef0-830e47621df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91223950-6225-49f5-8e09-fbbb873b2b64",
        "cursor": {
          "ref": "02d22520-ef13-4f00-9dd8-a8431629cc10",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5aa0076e-499a-458f-bfd9-1296431ed155"
        },
        "item": {
          "id": "91223950-6225-49f5-8e09-fbbb873b2b64",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e77dd5ab-b959-4476-8876-b7a310602ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287b5c0c-2e2e-4a5d-a838-d36af6974623",
        "cursor": {
          "ref": "efe41762-6985-47c1-ad5a-f9a78f48876a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ab04ca07-7c7a-40ec-9f0b-22688d7b33c0"
        },
        "item": {
          "id": "287b5c0c-2e2e-4a5d-a838-d36af6974623",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "89f59adf-ff0d-4026-9b7a-369c51014249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09986a64-979b-4e2c-8c6a-15c1c04ae330",
        "cursor": {
          "ref": "6953db2f-7758-4a92-a48d-8af79da473cb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "39372263-e97e-4b44-9cb3-5738db1c1fa1"
        },
        "item": {
          "id": "09986a64-979b-4e2c-8c6a-15c1c04ae330",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c611b2a8-676d-4f89-bb73-7fa25f78f5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a883146-e0e0-42da-afe8-3814ea23c7ca",
        "cursor": {
          "ref": "5faf0213-7136-44c9-81f8-3b551f88db6b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a2f72f71-7591-4a18-ab4b-743e2464abb4"
        },
        "item": {
          "id": "7a883146-e0e0-42da-afe8-3814ea23c7ca",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0b6470bd-d861-43b3-ab77-6da3b17d8e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f56b9e1-a744-4da1-84eb-88b8684cb142",
        "cursor": {
          "ref": "96fb3e51-f8bb-4425-a56b-d8cb88c6b293",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4d793b4c-336f-4fcf-af36-e30b7a2d86c4"
        },
        "item": {
          "id": "0f56b9e1-a744-4da1-84eb-88b8684cb142",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4da6593b-d2cc-42ef-a683-6b0c32555762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af766041-9140-4ed2-b73f-0b7ebfb32409",
        "cursor": {
          "ref": "0a0c1fae-2164-49f3-b223-417dda7149ae",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b62bcd21-f5e8-4d6c-9c09-7541fe3f5104"
        },
        "item": {
          "id": "af766041-9140-4ed2-b73f-0b7ebfb32409",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "000dc0a1-9f51-4b49-ae0f-f6271841b8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66c779d-dc6e-4b97-acc2-65ea7ea5519b",
        "cursor": {
          "ref": "e1429bc0-c4e8-455f-9980-1471f4017e2b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "17fd0ace-06d8-44eb-b72d-b0b8b3aacd6f"
        },
        "item": {
          "id": "c66c779d-dc6e-4b97-acc2-65ea7ea5519b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "052e0e09-3a8e-4b97-8e6a-0cc675067ac4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "dd351173-48ce-4598-8251-40d9a8058d0e",
        "cursor": {
          "ref": "1ae5a59c-2530-4d73-8eec-7597c94d86cf",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "deb9dab6-96fb-4073-87a4-99e91011ba78"
        },
        "item": {
          "id": "dd351173-48ce-4598-8251-40d9a8058d0e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3768d159-ecb7-4b99-85f8-e0d2348bedc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fcadd6-3d4d-4228-81a4-6e8bf188cd2a",
        "cursor": {
          "ref": "4c51fc58-2020-462f-b8ed-1c5b5d6c45d8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "64e04fc7-8932-4164-912a-0e66599f234e"
        },
        "item": {
          "id": "d1fcadd6-3d4d-4228-81a4-6e8bf188cd2a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ab7a18e5-ed03-4e3f-a016-32cdf558ecfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816a220f-10c6-467e-bed5-b88de01ae8ad",
        "cursor": {
          "ref": "30d86eff-d123-498f-b2ee-efc156ac28c4",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a1936536-fd47-489f-a80d-9f696f571ad9"
        },
        "item": {
          "id": "816a220f-10c6-467e-bed5-b88de01ae8ad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c8334ddb-113e-4212-b406-dace25fdb743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a523f19-4ccc-44ae-8154-a8b54636f1d2",
        "cursor": {
          "ref": "f67f0f23-a083-4554-93e1-4a0c0808c407",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6e448cd9-b0b2-4a40-af0b-8f5547885b15"
        },
        "item": {
          "id": "9a523f19-4ccc-44ae-8154-a8b54636f1d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "58d472e9-3fa5-4933-9db2-49e4d415ff31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88050b94-905b-46a6-9af1-35de5d343914",
        "cursor": {
          "ref": "e170cac8-28fd-4dfa-925b-0afad8d3c34e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6eac8083-6228-4a90-987d-b9dd499a10eb"
        },
        "item": {
          "id": "88050b94-905b-46a6-9af1-35de5d343914",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "167b3fd3-9a2d-4b69-9ae4-ceaeb88893ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981ecc8b-3a43-4d3c-b498-fbca00231db7",
        "cursor": {
          "ref": "df250732-d5f9-4475-ab85-fd8523b34a79",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "edf87e7a-e236-49b2-b190-06f3cc67b2eb"
        },
        "item": {
          "id": "981ecc8b-3a43-4d3c-b498-fbca00231db7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "760f7227-9922-4268-9781-2c3b2d8279dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21e62ba-e05f-4a33-bc2e-fde0f49182df",
        "cursor": {
          "ref": "411257c7-63e7-43c2-a3d3-4bec5cc7583e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ea0ed905-2cec-4693-a3bc-72e25379fff3"
        },
        "item": {
          "id": "a21e62ba-e05f-4a33-bc2e-fde0f49182df",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "16e6bbb1-64bd-4106-8e90-195289007015",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "eabc7996-5c8c-4098-b9d2-13d55242df9c",
        "cursor": {
          "ref": "4daee024-ee11-4670-9360-f38c458ae21f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "baf4f2c2-8388-4136-8abc-90cc07f94020"
        },
        "item": {
          "id": "eabc7996-5c8c-4098-b9d2-13d55242df9c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "63cbc5e2-98e8-493b-888b-154d53711be9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "4c2a7113-0135-40e0-afd3-81d68015b2c9",
        "cursor": {
          "ref": "7b2ae1f1-4a9c-40c0-9f8f-dbebd5cbc8e5",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ec11eb21-810c-417e-8d42-b161d7961f68"
        },
        "item": {
          "id": "4c2a7113-0135-40e0-afd3-81d68015b2c9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2f8d9cfb-cced-4248-8b6c-fb66a0934aa3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "a18019dd-daa4-4a9b-8287-c08b4757390f",
        "cursor": {
          "ref": "95c49cb2-07a4-4f64-8d99-613c6218f325",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "adebb1c8-af2b-41c3-a2f1-5073626ff362"
        },
        "item": {
          "id": "a18019dd-daa4-4a9b-8287-c08b4757390f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "501c3c74-db0e-4093-afc1-3fbb80442010",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "42957ecd-40c7-46a8-9768-9fc5eaf18ff0",
        "cursor": {
          "ref": "90618c13-8dd4-4410-9435-55ecff21bc2e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "45969116-c1d1-4412-87f7-d3bff09d58d4"
        },
        "item": {
          "id": "42957ecd-40c7-46a8-9768-9fc5eaf18ff0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "65195da2-80a6-4fb0-8a3f-f5109e663c46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "1c00562f-879e-4a03-93f8-05cacd98509e",
        "cursor": {
          "ref": "6cdf9998-c94e-49d5-9fbe-0ca85ff69f8e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "faed1ee8-3449-450a-9701-6e5150a347ec"
        },
        "item": {
          "id": "1c00562f-879e-4a03-93f8-05cacd98509e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1bdd0366-f2dd-413d-8fb9-a42495cbdba4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "fa4fa1e2-43f0-4021-aa17-29986901c2fc",
        "cursor": {
          "ref": "4bc09a4b-85f8-4cfd-8456-c65450a187d5",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "657de736-a04a-44da-931b-773d3db372de"
        },
        "item": {
          "id": "fa4fa1e2-43f0-4021-aa17-29986901c2fc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "358a0e1d-b5aa-4d65-8a51-98ee34fc734b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25273b8e-2778-477e-bb58-153e9e90fe20",
        "cursor": {
          "ref": "67591681-9e26-4e35-95f0-459d93c33a70",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "97293ff0-fd6c-4f24-b232-4cc976594be5"
        },
        "item": {
          "id": "25273b8e-2778-477e-bb58-153e9e90fe20",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "71cc3985-6279-4348-bc22-cda3362add77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c11eab8-43e2-4333-8ccd-36b6cb882119",
        "cursor": {
          "ref": "8c6c678f-2535-40a3-93b4-1ef62b41c433",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f852d2e8-2de5-4ab7-b976-d9497c68bb49"
        },
        "item": {
          "id": "7c11eab8-43e2-4333-8ccd-36b6cb882119",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aa353cfb-7738-4fd8-ae60-866585459942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99573277-6636-4846-9a08-9c5158642cf2",
        "cursor": {
          "ref": "a00b5c81-0885-40c6-bcb5-8a220764ee4b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "986abea9-2946-455e-9706-91fcc8a96264"
        },
        "item": {
          "id": "99573277-6636-4846-9a08-9c5158642cf2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b095de54-88a9-468d-9b5f-8d86d51fa279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de2295-68d1-4391-b69f-51a51e284bfa",
        "cursor": {
          "ref": "1efe21df-9b5e-427a-9407-45ddab1a87b2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f65ca978-2d4d-4128-9290-b6dc88863874"
        },
        "item": {
          "id": "23de2295-68d1-4391-b69f-51a51e284bfa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f6db94bd-364a-4a13-b69b-d400c940300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beef320-d16c-4b30-a63e-f58b8dbc8f64",
        "cursor": {
          "ref": "3e55fe52-9dc9-41ed-9089-9a1e9addee63",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "52c44204-b4ea-4b6d-b295-f200df6443aa"
        },
        "item": {
          "id": "6beef320-d16c-4b30-a63e-f58b8dbc8f64",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1a62441e-3b67-43d3-8bf0-588d37590150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e00a528-77e9-40ae-b8b2-92fbbc75e725",
        "cursor": {
          "ref": "7807c4d7-9971-4412-a544-47c7bb826a87",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a3d986cc-cfb3-4cc6-a0f7-28bed4ff92cc"
        },
        "item": {
          "id": "9e00a528-77e9-40ae-b8b2-92fbbc75e725",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a42b8e5c-595a-4fda-9fbc-b34e4bb897e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f0f4ae-d6e6-446b-9f11-de615cf61fe7",
        "cursor": {
          "ref": "6eaf7a6c-2409-4ff9-821c-2d5f8083dc0e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4f703203-a9b4-4a3b-807b-cdc15be35f4c"
        },
        "item": {
          "id": "40f0f4ae-d6e6-446b-9f11-de615cf61fe7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d9f1f73d-afcf-4e2f-9358-23370ee3f7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d392e965-cef6-45ab-966e-5123811b7906",
        "cursor": {
          "ref": "16b2d218-18fe-4e31-957a-7279ac0c479b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c6814967-7afd-41dc-b38b-e51768467d31"
        },
        "item": {
          "id": "d392e965-cef6-45ab-966e-5123811b7906",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3510b06f-cf31-4a2f-908c-4feaf67543d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c14851-101a-4f88-b9af-b6a4a981f489",
        "cursor": {
          "ref": "1d3f947b-3067-4ea9-b009-3e694fb3acea",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f092d46e-ed97-41c4-89da-aa42da7549bb"
        },
        "item": {
          "id": "e9c14851-101a-4f88-b9af-b6a4a981f489",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "125f8c6e-9fa6-425b-acea-90e085d64ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37fd240-757d-4da7-874c-fc915b6afb68",
        "cursor": {
          "ref": "5720360f-439d-4d27-8860-c491e5130ed1",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cfb8a2b6-2493-479a-ac0e-72f705b03596"
        },
        "item": {
          "id": "b37fd240-757d-4da7-874c-fc915b6afb68",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "63fab828-e87f-4325-98d3-27c7a8d070a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad0a940-9376-4267-834e-c0996bcf0d17",
        "cursor": {
          "ref": "f58715e8-fcf0-433d-bffe-ca065d259794",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "117985af-1db6-4a00-beb5-bd73e7396468"
        },
        "item": {
          "id": "5ad0a940-9376-4267-834e-c0996bcf0d17",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "20165ace-f2a4-41f3-a6a1-56976c5b4927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3facc0a-5744-404d-b1e5-56ec0a204556",
        "cursor": {
          "ref": "2a878626-ec16-4ddd-91a7-1a8e5fbd503b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d52a24e8-dfc1-44b7-99db-ef5be6d03fd1"
        },
        "item": {
          "id": "c3facc0a-5744-404d-b1e5-56ec0a204556",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d04143ea-2659-48e8-9248-a62675d09686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16b5ca2-24e6-4541-bbad-a29e47518dce",
        "cursor": {
          "ref": "76c72cb1-a6ca-4c11-9bcb-d9323e483e5b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4a2080b2-b49a-4db5-ada3-a55252931694"
        },
        "item": {
          "id": "c16b5ca2-24e6-4541-bbad-a29e47518dce",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "378558e2-5a03-4fbd-8b98-29836921bd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f825524-8eb0-4da7-b65f-2fd62d54b2bc",
        "cursor": {
          "ref": "5616f005-a934-4bf7-84dd-533671de8891",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "67e1d44d-e5ea-497f-8b78-ad1d2a53c516"
        },
        "item": {
          "id": "1f825524-8eb0-4da7-b65f-2fd62d54b2bc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f72bb0a-bc81-4b36-804f-92d78eeed069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfa4aaa-c8a1-4a96-8875-60083699f6c2",
        "cursor": {
          "ref": "5eb3000d-4a3c-4000-ad3d-36362d53fb5c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "76113873-1e91-4697-baec-2f17b25bee28"
        },
        "item": {
          "id": "4dfa4aaa-c8a1-4a96-8875-60083699f6c2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2b3c32de-5b73-42d8-aa77-be05eb581e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6bc73a-a5e9-435f-857f-2abb8e693b9c",
        "cursor": {
          "ref": "a3730812-5a2f-42ef-83ec-9ae0419bdf14",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "73664e33-a224-409f-8d78-65c34b14ef35"
        },
        "item": {
          "id": "de6bc73a-a5e9-435f-857f-2abb8e693b9c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b1f71025-cb59-49dc-b92f-d636ea890266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8838fe03-ce84-4185-a985-35de91d194ac",
        "cursor": {
          "ref": "088bd4cc-6c95-4135-a323-3d16953d9c78",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "525cf54f-ed52-4d9d-bf95-81ccd0166067"
        },
        "item": {
          "id": "8838fe03-ce84-4185-a985-35de91d194ac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "991eb6b9-ab44-42f9-b58e-d7bf95141666",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2eb46094-ce91-4ea4-883a-6e94b259707d",
        "cursor": {
          "ref": "5b478428-13da-4435-8d5a-a341e82153af",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fdb912d3-7885-464d-bdd7-b16d8a2f8330"
        },
        "item": {
          "id": "2eb46094-ce91-4ea4-883a-6e94b259707d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3283bc24-a5e6-46c1-a0d4-442e9a445571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd0111e-dbc8-4e09-876f-4303fb1729bf",
        "cursor": {
          "ref": "37a6d603-6692-4474-aaa0-8c4515d58f03",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ebb546ce-a063-44ab-b536-2b9afaa26b27"
        },
        "item": {
          "id": "9cd0111e-dbc8-4e09-876f-4303fb1729bf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "55674d46-00b3-4804-a9f9-8298cf43b38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6137b46-2751-42b8-b3c7-8ee238c4f883",
        "cursor": {
          "ref": "833341e3-dd88-46a1-a1cf-3084e96ae987",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "97c523a9-79ca-4921-b2f7-3db7622f8aeb"
        },
        "item": {
          "id": "d6137b46-2751-42b8-b3c7-8ee238c4f883",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "43a7b4de-a157-43a0-bfc9-eb43719f03d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f49ca78-83dc-45f0-b887-1de5aeaadee7",
        "cursor": {
          "ref": "556216c3-bca9-4314-a35e-1ca358cc1a5a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5cfdb271-c74a-4b06-802b-4deda7d7a044"
        },
        "item": {
          "id": "5f49ca78-83dc-45f0-b887-1de5aeaadee7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0b5bba76-a0c5-4924-be22-dc9169f8f5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615a2fa5-e312-43fe-b5d0-e65ba2647957",
        "cursor": {
          "ref": "da50eea2-b3f9-48c2-9ebc-f1aaf13fe863",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "edaa02fb-420b-430a-84d8-6aad1edd2536"
        },
        "item": {
          "id": "615a2fa5-e312-43fe-b5d0-e65ba2647957",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "efd4325d-f82c-488b-ad74-259053bc8a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5cdc42-01d8-4f87-a3d3-8ea17304da75",
        "cursor": {
          "ref": "5b45e1d0-2fbe-45f2-b98f-663063fa4b20",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "49a5edbd-1069-4972-8c01-4ef26056e130"
        },
        "item": {
          "id": "6b5cdc42-01d8-4f87-a3d3-8ea17304da75",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "36371468-526e-4135-b52f-010dd752373e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f23b31-fc64-48f2-9680-501c1d5bf4c6",
        "cursor": {
          "ref": "52e19427-a4ee-4837-aba6-8a4e72c321db",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8bf76403-7f7d-4373-82a6-482659cdddba"
        },
        "item": {
          "id": "a0f23b31-fc64-48f2-9680-501c1d5bf4c6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cb0ff7a1-967e-45a7-a502-01c49b767317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b909e494-f68f-479f-a69b-c879fd66f9db",
        "cursor": {
          "ref": "85899d55-8c28-4f81-98d4-a8af6b52ccdb",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d2fd2a56-bb2e-4869-b8cd-61845579c1f6"
        },
        "item": {
          "id": "b909e494-f68f-479f-a69b-c879fd66f9db",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9ca3105d-5abe-4e92-b82c-4fd5042c8117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc414348-d0ee-44a5-a173-54f7eedeab85",
        "cursor": {
          "ref": "63f85fc0-28be-42f3-b5e6-ed8ad2945686",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "68b04118-7fa1-4652-803c-a1f7dd7d84cb"
        },
        "item": {
          "id": "bc414348-d0ee-44a5-a173-54f7eedeab85",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "51c28f32-bdc8-4ad2-9145-9c5eb2425c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f1ca38-e9c8-42cf-a3c4-1d83071a0b99",
        "cursor": {
          "ref": "2b444177-e9e1-486b-a354-e06a6fbcd1ef",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "da0f3223-aa0a-4fe2-990e-1da79dae2720"
        },
        "item": {
          "id": "e7f1ca38-e9c8-42cf-a3c4-1d83071a0b99",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "889e9807-ec47-4109-891a-6cb7d0b6b1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3b4fac-d79e-4b40-8373-19b256d09893",
        "cursor": {
          "ref": "0ced4d2b-2bb9-494c-a058-5ade6a7d7d40",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8c6e46f0-bc25-464b-b4a8-2c5854da3ca2"
        },
        "item": {
          "id": "bf3b4fac-d79e-4b40-8373-19b256d09893",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9a51cd5b-5371-4e47-9294-6a200fbcd855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced60cea-0ded-4258-bf50-4ba34eca6d19",
        "cursor": {
          "ref": "26e12444-78c3-48dc-a862-5fdc8e8fbfc9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5ff7974e-955f-423b-8b66-e4e57cf48727"
        },
        "item": {
          "id": "ced60cea-0ded-4258-bf50-4ba34eca6d19",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bc3e9cea-bff9-43a4-9cbd-30969126c6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e705444e-006e-4a24-bdc9-0b6b25b7c658",
        "cursor": {
          "ref": "0fb9ae98-75de-4ebb-af68-92bcd7f68c21",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cb8f2bed-b2bb-418e-bbe8-50804b585c48"
        },
        "item": {
          "id": "e705444e-006e-4a24-bdc9-0b6b25b7c658",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e8c05104-1b33-4c41-8fc9-c17b35a4afff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8ff75b-6abb-4324-be45-eaaceed59dfa",
        "cursor": {
          "ref": "2acefa16-f4d5-4032-aa90-4f30bda78dee",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e041fd6-fdd5-42d1-9ce1-636abfa0be89"
        },
        "item": {
          "id": "2d8ff75b-6abb-4324-be45-eaaceed59dfa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "390d2283-411e-4d02-8995-a03302a2ccbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c9a1f2-14e2-462d-89b5-7bd1bba6acc0",
        "cursor": {
          "ref": "d0e92f2e-9f5a-44e1-921c-2c32263c3d4b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "814a065d-f2ae-4d24-8e78-4641322e7e04"
        },
        "item": {
          "id": "84c9a1f2-14e2-462d-89b5-7bd1bba6acc0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "084b07fe-45e0-4081-8000-f4e3e17ca67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d453b6-625c-4867-ac64-e9873173f442",
        "cursor": {
          "ref": "6d817ffc-0b4e-4b7b-bacc-8cb3688b1990",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "56e67408-5cc8-4f88-a8ed-ec8aced2ccf7"
        },
        "item": {
          "id": "83d453b6-625c-4867-ac64-e9873173f442",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cfb28325-5729-4fc5-aa2d-ae88ba7970cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288f9213-e1e3-4839-adba-6456baa70dde",
        "cursor": {
          "ref": "fb374779-d286-4a5f-96c5-db9f4fafb1f7",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ec80320f-e232-44d2-9097-f5a30c3a2622"
        },
        "item": {
          "id": "288f9213-e1e3-4839-adba-6456baa70dde",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "edc8856e-9710-4f68-81d6-72b00013619a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39021e3a-15df-4f6e-a761-636d55355768",
        "cursor": {
          "ref": "5b165a20-f4c7-4040-b387-a8c48fb025da",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2933eb48-195d-4c57-bff6-35f61ea32c4c"
        },
        "item": {
          "id": "39021e3a-15df-4f6e-a761-636d55355768",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0c3fc758-90c4-4a71-988a-5592727414e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0315bc9-89c9-4374-86a1-956734370e6f",
        "cursor": {
          "ref": "e9c152d0-ce33-4670-9f4c-6a165627674d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "77b67304-ca8d-4bd3-b46f-ff6cebe792c8"
        },
        "item": {
          "id": "e0315bc9-89c9-4374-86a1-956734370e6f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e4e3e4a5-98ea-4bb2-acad-bafabc9c045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964ad340-3d4d-4582-bcae-b29cea37e6b8",
        "cursor": {
          "ref": "63fd0d45-3fa8-4e69-9c7d-c0e881dd7f25",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8a982cb7-0c6c-464d-8bb7-4bdb94126bba"
        },
        "item": {
          "id": "964ad340-3d4d-4582-bcae-b29cea37e6b8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7d9529a9-7ab6-441c-89c9-53b0c687263a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0151e46-d5d5-4060-b6a3-ee6197b61aa3",
        "cursor": {
          "ref": "9c320903-4990-4776-b0ad-44ff723c88e5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1837c24-18f1-4e92-bc74-92f3c3e049f0"
        },
        "item": {
          "id": "d0151e46-d5d5-4060-b6a3-ee6197b61aa3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "148ef704-ca29-42ca-858e-5f15ef36594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61737ca8-70f5-4596-89aa-bded090a1bc3",
        "cursor": {
          "ref": "878154ee-84a6-475f-aeba-f4be436e8904",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "82cdf41f-3ac5-49e2-9334-38be9bd9de5f"
        },
        "item": {
          "id": "61737ca8-70f5-4596-89aa-bded090a1bc3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6cbd3537-bcea-49c6-9e04-fda8d459ccb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0f36cf-f122-4dcc-bb9a-e9c55add219e",
        "cursor": {
          "ref": "60c54c5d-9611-4a57-926b-fabccdb7156f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9a71f2e7-63df-45cc-ac64-6b0da667ec76"
        },
        "item": {
          "id": "0f0f36cf-f122-4dcc-bb9a-e9c55add219e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e6d063a3-9d09-4e21-ad7f-824746089637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429a7411-d62a-43d1-99c6-f216ef124ff5",
        "cursor": {
          "ref": "bb49fe60-79d2-4218-9c63-b042349fb1b1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8bc6906d-ccc1-4fbe-8a08-8b5831972fb9"
        },
        "item": {
          "id": "429a7411-d62a-43d1-99c6-f216ef124ff5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f9534798-ace4-40c3-9d29-b00ae3ea5808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610adb8e-318e-4b20-8d0e-a6bb32b12332",
        "cursor": {
          "ref": "11b63e81-271e-4216-84f1-55347dc718a2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "92e50d9b-d7dc-45a5-9313-ad4f1a1313ed"
        },
        "item": {
          "id": "610adb8e-318e-4b20-8d0e-a6bb32b12332",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e74e5580-d98e-4da3-998e-75e7a60cdab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7ad8d9-e000-43a1-bd76-9434b3905f3d",
        "cursor": {
          "ref": "fd3ec80c-2d86-42d5-9bcb-09aa758a6448",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "69523902-ce67-4202-9ac9-ade6a871edd5"
        },
        "item": {
          "id": "1c7ad8d9-e000-43a1-bd76-9434b3905f3d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fed3fb58-2d1e-4786-bd62-12c4122aa667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbe17e9-70f0-4ed7-8162-e759522cfd78",
        "cursor": {
          "ref": "41a1f79e-9f06-4239-b2ab-20eb6fa7feda",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "31e19c0e-5cd2-4bed-be7e-5c00c029d522"
        },
        "item": {
          "id": "edbe17e9-70f0-4ed7-8162-e759522cfd78",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "403ff409-8524-4ed4-a428-b18926f3b8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc72be7-1278-4647-987c-205ab97411dc",
        "cursor": {
          "ref": "24964485-dcc1-48f6-90fa-f41719b7a258",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5d540446-3c60-4fa5-b8e3-f2b899b0d585"
        },
        "item": {
          "id": "6fc72be7-1278-4647-987c-205ab97411dc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "26139aaa-498c-41ea-bbe1-7aa4148bdb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e071e07e-ba85-4348-81e9-1420b445397f",
        "cursor": {
          "ref": "d8fa71d5-d90b-44a7-9a61-16c606d6f9c4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f8d5ed82-e0cf-49af-8fe0-767b00b11cc3"
        },
        "item": {
          "id": "e071e07e-ba85-4348-81e9-1420b445397f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ca157968-9929-4d68-b577-a4d78c637c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9166fff8-bc6d-4972-8767-9b8dd8abf5fb",
        "cursor": {
          "ref": "64b4fd8f-6caf-4f6c-a32b-93271b5c5aa2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "38736408-2e18-47d0-85d7-1bcb43370f88"
        },
        "item": {
          "id": "9166fff8-bc6d-4972-8767-9b8dd8abf5fb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46e20147-e6b3-4fbb-a1e5-1314a56ed54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2dcb22-ee25-4646-835d-73cff1fab873",
        "cursor": {
          "ref": "9a9def25-7604-4d6c-a518-828013d8a2ac",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1e2fb9ab-a6b9-4645-ab70-6cef136ca98a"
        },
        "item": {
          "id": "9b2dcb22-ee25-4646-835d-73cff1fab873",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c0fbe3a4-a537-45bf-8cb1-58e57b3b5db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c42ce5-0979-44af-8cf2-c83822ec4233",
        "cursor": {
          "ref": "5cccbc09-15e0-46c6-92b4-cf4f1fea465d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d25ea0b5-5054-4b91-897f-c783c6131003"
        },
        "item": {
          "id": "f8c42ce5-0979-44af-8cf2-c83822ec4233",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "00ac7a56-bbef-47d6-8507-adb385b3bb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388fc65e-99a8-46f6-9bfc-91778df2864a",
        "cursor": {
          "ref": "ed2de8ec-6ba3-4c38-8cfa-be3d4cc6a124",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "49ea4d84-4ecc-4798-9d9d-4a821e557445"
        },
        "item": {
          "id": "388fc65e-99a8-46f6-9bfc-91778df2864a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3577306d-efa3-4780-96a6-828acc512182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a743aa-56d7-4095-887b-91ef3235e80d",
        "cursor": {
          "ref": "f04da3f8-28fe-4d47-b47b-3bcffdb5915b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "52174cdf-870c-4720-830f-5732b11eb5c5"
        },
        "item": {
          "id": "25a743aa-56d7-4095-887b-91ef3235e80d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c8170354-bfd5-4e35-8dd5-a75967c6127f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a04d3cb-4232-4203-b59d-5daee4048c2f",
        "cursor": {
          "ref": "1d37786a-d32f-4dc6-964d-4c91653dbbb9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "15d242cc-b426-42ee-967c-2d2a2206671e"
        },
        "item": {
          "id": "7a04d3cb-4232-4203-b59d-5daee4048c2f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "631b5f54-6093-4eed-9292-ec513720763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c4e0f2-3953-42f7-8a57-c24e2ac648d6",
        "cursor": {
          "ref": "41e019a1-2b97-4797-aa77-5a3902917790",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a8ae7c5e-eec3-43cf-90e5-2ca2fcbc83af"
        },
        "item": {
          "id": "82c4e0f2-3953-42f7-8a57-c24e2ac648d6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "386ac895-61fa-4a4a-95a4-ad5e436f6fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56537f28-d8fe-4b9f-ab3a-6b8230ca167b",
        "cursor": {
          "ref": "75ba6029-c331-436e-a3da-416405ebde57",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f7d93f28-c19e-47cb-8968-bd189530078d"
        },
        "item": {
          "id": "56537f28-d8fe-4b9f-ab3a-6b8230ca167b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cf75d389-c868-4234-bad8-3395b82a3367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6e50d7-8fbe-4e6e-9921-366079d45974",
        "cursor": {
          "ref": "2c2a9b96-1ddf-4592-a772-b09361cad3d8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ae158676-afd1-4229-9113-c5ba98fd88b3"
        },
        "item": {
          "id": "7e6e50d7-8fbe-4e6e-9921-366079d45974",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9c095a39-54d0-4cce-b654-5bd921b0c566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b174719-3b66-44cd-8482-8ba3620d1386",
        "cursor": {
          "ref": "5276daff-4ee8-4fe2-b637-470c667ca87a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e03b8b53-c107-4b78-a70a-3a43c46809c2"
        },
        "item": {
          "id": "3b174719-3b66-44cd-8482-8ba3620d1386",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d3bdd722-107b-4700-af35-ac9e8fa46e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac2a3fc-581d-4de6-a19a-a313698d92fa",
        "cursor": {
          "ref": "89b10b45-7963-47ef-88d1-a5bec37c48cb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6503f425-fc2c-4fdc-ab0f-3ba08186846d"
        },
        "item": {
          "id": "7ac2a3fc-581d-4de6-a19a-a313698d92fa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6d2f1f09-ffd0-4968-90b8-de83f66af662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1c100c-3ac5-43b8-a815-0a561aab8640",
        "cursor": {
          "ref": "e998c2e1-5b3a-4cb6-9796-1bf070df69d6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "61f73bc3-b4fa-419f-acce-ed5d1f982598"
        },
        "item": {
          "id": "ad1c100c-3ac5-43b8-a815-0a561aab8640",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e64b8f08-e69a-40a0-8b44-bcfe8515ad44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56298533-b648-4fd1-8bbd-f1998d85c453",
        "cursor": {
          "ref": "5a263ecc-df1c-44ca-abc4-877f0590e319",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a39cc141-e331-4b9e-bfe6-c718634e22c8"
        },
        "item": {
          "id": "56298533-b648-4fd1-8bbd-f1998d85c453",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2c5d3195-1f4a-4c66-ac48-a8eb65a6f715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5598b6-c1d7-442e-8cca-0ea2532e585a",
        "cursor": {
          "ref": "a7e3009e-904d-41c5-a0ee-8a67d915ab34",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dfd4d6fe-4a78-4205-858a-24728037c217"
        },
        "item": {
          "id": "2b5598b6-c1d7-442e-8cca-0ea2532e585a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c5b7e67b-83c7-4798-919c-cc87ce236ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdba8e99-bdab-429d-8b33-1c38a648ba1b",
        "cursor": {
          "ref": "dd7c93ec-d846-4712-99bc-8ea941785ee3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e0eb9950-c041-4236-9c5d-194dc163aa37"
        },
        "item": {
          "id": "fdba8e99-bdab-429d-8b33-1c38a648ba1b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d1997900-40bf-49e9-9014-07d0d3e2d907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e2a8c3-9a13-4658-9c00-08ce11f44fd6",
        "cursor": {
          "ref": "7b8959d2-fd90-44f8-84dd-d355cd6ec3db",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2dee703c-a0e4-4d94-bfab-519bad906e36"
        },
        "item": {
          "id": "d2e2a8c3-9a13-4658-9c00-08ce11f44fd6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5f8ab3bc-0e1e-43d5-ab7f-a4e12b02a11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e58bcf-95db-47b4-908c-29417c390d15",
        "cursor": {
          "ref": "25d992f5-65f0-4437-8aab-eff2b64c6613",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ac5b2c4d-cee0-46b7-9bed-0fbc571d4922"
        },
        "item": {
          "id": "43e58bcf-95db-47b4-908c-29417c390d15",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "288452b0-397e-4cb3-883e-71810fdb99b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c232b0-1c52-49e6-a6cf-624fc959a38a",
        "cursor": {
          "ref": "4b110f1e-45d9-4b66-8de6-bdde202f91bc",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "da7231b4-8538-4ae4-84ee-e6dce566faf1"
        },
        "item": {
          "id": "d1c232b0-1c52-49e6-a6cf-624fc959a38a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "37ce7c5f-909c-4aa4-b5ab-47c2b648b3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c40a35e-276d-41a8-b43a-67914cb3ecd2",
        "cursor": {
          "ref": "55561a55-80d0-4593-bbea-926f9ec4d5fe",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "428a9cec-b03b-43a1-971b-fbbb91115588"
        },
        "item": {
          "id": "4c40a35e-276d-41a8-b43a-67914cb3ecd2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "918fbe30-b807-46a0-86cf-805c4168c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0550c949-0e0d-4eeb-89cd-1776809ca6d9",
        "cursor": {
          "ref": "81fd541f-9563-4232-9e0e-03d3ccfcb585",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "102273ff-02ad-45b4-bb26-cacc186ccd40"
        },
        "item": {
          "id": "0550c949-0e0d-4eeb-89cd-1776809ca6d9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8b41b6cc-43e6-421a-b7f8-64f3c9fd2b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be945a3-ddc2-40e9-ace3-a5aa7c634d18",
        "cursor": {
          "ref": "de7db87f-77f3-49c9-ade0-5b3e70e5dd25",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4ee943ae-2653-4fdf-9579-2317d215fdc6"
        },
        "item": {
          "id": "0be945a3-ddc2-40e9-ace3-a5aa7c634d18",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a9a5f2da-e23f-4a1f-a0b6-2ab8b8b76aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5db8466-daa4-42ba-961b-4fc3f84b2533",
        "cursor": {
          "ref": "5c02b66c-9303-4d56-897c-0e29c0485d36",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ca95b33-f5bd-462a-a8e8-8747a90c4527"
        },
        "item": {
          "id": "a5db8466-daa4-42ba-961b-4fc3f84b2533",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a72f2e6b-14dd-4e72-9a7c-896c946e872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394fe7bc-3234-421a-8ce6-7edc26d1b4f9",
        "cursor": {
          "ref": "6437c9bf-ccce-4920-8f47-eed0e00ae131",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f1dd211e-9d88-426c-b304-7cf1086c944f"
        },
        "item": {
          "id": "394fe7bc-3234-421a-8ce6-7edc26d1b4f9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cf7e2011-1385-4958-ba14-e4972d541bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3033fa-f871-4723-803e-33e4f39c21aa",
        "cursor": {
          "ref": "208fada3-1f81-40ea-9b40-1425e317c360",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9fe9bf53-de92-4213-9ddc-c64d8de5f431"
        },
        "item": {
          "id": "6c3033fa-f871-4723-803e-33e4f39c21aa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "063d573a-1f28-49c8-91ca-3d765bb31620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4b8a82-1662-481a-a1bf-d471cb004ac1",
        "cursor": {
          "ref": "a7141a24-f1e8-4def-9fde-ad77870613c3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8fb46c25-07da-4dfb-8825-c784c44fe350"
        },
        "item": {
          "id": "bb4b8a82-1662-481a-a1bf-d471cb004ac1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f601eae0-4954-4e9e-bd41-9723957a6ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6b02fa-032f-48f6-a803-9ffe6794525b",
        "cursor": {
          "ref": "8ac4f27b-dab9-4206-9790-856ee0892deb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e468d549-e9b2-494a-aec6-a82d05ad98cd"
        },
        "item": {
          "id": "6c6b02fa-032f-48f6-a803-9ffe6794525b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "45213f37-efb5-43a5-bb10-e0e05cda4c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3af4884-173a-48dd-879d-3f4306b39913",
        "cursor": {
          "ref": "dc11fcf8-f268-4588-93f5-5eaa1f14cc30",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b30aca5f-b486-4fab-aa65-c2bdeebcd6c8"
        },
        "item": {
          "id": "e3af4884-173a-48dd-879d-3f4306b39913",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6050416b-73c2-41a5-930d-47e135085dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83804ba-1324-4e65-9e9b-1f32632e0948",
        "cursor": {
          "ref": "c14a86db-dc6f-41b5-8fe6-03e44717724b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "984d794f-2051-4e1d-b8ef-9d334588616c"
        },
        "item": {
          "id": "c83804ba-1324-4e65-9e9b-1f32632e0948",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0215c57a-2ae1-4c35-b0d0-b1ae86c1a53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf095e44-5bf4-4712-ad0f-1cfd6dec6946",
        "cursor": {
          "ref": "dff3bc59-1082-4452-a924-3acb7dee9991",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "24e93e17-89db-4bf8-9260-e6a0662799ce"
        },
        "item": {
          "id": "bf095e44-5bf4-4712-ad0f-1cfd6dec6946",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b29e46d7-1c04-4cb5-81a8-bb90fdb6be8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c53eb4-38fa-488a-a04c-14e3ce1143f5",
        "cursor": {
          "ref": "f817bf95-4037-40a2-806c-0294876fdff9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "346d99ea-8a30-4b6b-8a71-f4604be4ac48"
        },
        "item": {
          "id": "18c53eb4-38fa-488a-a04c-14e3ce1143f5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7c2e68ac-fc8d-45a3-b2c3-48ee58a29fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3097cd-43c1-428d-b063-4c40a5b905d6",
        "cursor": {
          "ref": "6b26e846-d3e3-4f41-89fc-8e73af2e2b10",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c16bd1a8-4d8b-466c-847a-ce087408268f"
        },
        "item": {
          "id": "2f3097cd-43c1-428d-b063-4c40a5b905d6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c0182b64-2e42-4838-bb70-de64c009a2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b82ce2-e308-4622-9412-36d64cf366e6",
        "cursor": {
          "ref": "079a4110-066d-431a-b4f2-485897ff53fd",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d142f262-df0a-4a8e-a3d9-f839550bc6b9"
        },
        "item": {
          "id": "b3b82ce2-e308-4622-9412-36d64cf366e6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8fc4bfc0-7495-4ef3-9af9-f9c481987f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bed7f13-15bc-4091-8ecd-6e4105502ee5",
        "cursor": {
          "ref": "a81de051-2bdc-4786-9c1c-48b57a3cc2ee",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d1ccd603-95d0-4e74-bfd9-d4707f937539"
        },
        "item": {
          "id": "3bed7f13-15bc-4091-8ecd-6e4105502ee5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "125b5a0f-4b53-4846-9c69-b172f1536d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f706815e-0f82-42c6-8ba5-5e40719f4ae2",
        "cursor": {
          "ref": "2a1c54f0-c9cb-4ec2-bd73-3fb517ed9bb1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a04bcfe6-1e4a-4819-9f49-1e345348abf3"
        },
        "item": {
          "id": "f706815e-0f82-42c6-8ba5-5e40719f4ae2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d690239d-2309-4111-ae19-565db4fd4732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1f539a-1f20-4a8b-9444-bbff0f37c4de",
        "cursor": {
          "ref": "3d89fe5a-c316-4909-83f7-2e5e2b5e7d03",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bd3f24cb-e91d-431e-b080-f8c150dc7510"
        },
        "item": {
          "id": "fb1f539a-1f20-4a8b-9444-bbff0f37c4de",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "72950dda-10bf-496e-8af5-ad26ea7c895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f090cc1-29dd-4a11-96c4-a093888d4a26",
        "cursor": {
          "ref": "cb871234-1b5b-4469-a813-9294989784b0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "93f24aa9-766e-44ee-845d-8d979f1e86f4"
        },
        "item": {
          "id": "0f090cc1-29dd-4a11-96c4-a093888d4a26",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "35c442b9-e5fa-455d-aac1-5bbcc28e14f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92eb5e4-b434-42b0-bd93-f770df1d5288",
        "cursor": {
          "ref": "d4ce34a6-5560-4c30-bdb0-c2381d91820b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "184b31ea-5c2d-4def-b61a-4a149b1f0a91"
        },
        "item": {
          "id": "f92eb5e4-b434-42b0-bd93-f770df1d5288",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a222aff8-4c2f-492d-ae13-0e30a1198919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924ee254-ecbb-435f-96a5-4878e88e9d8c",
        "cursor": {
          "ref": "1d25e138-ef40-4d68-b887-b7711fcb69cc",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d856a3ab-083c-4a5c-92a8-c9983d966092"
        },
        "item": {
          "id": "924ee254-ecbb-435f-96a5-4878e88e9d8c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e952bcc9-8c5a-41f5-894c-b8062ac2e03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3197f5-44bd-4a59-8f62-a7a6b2b6809e",
        "cursor": {
          "ref": "14172486-f898-4e35-9124-62382e0fd5c2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "17df8c3a-8170-495f-86c0-e080d82f1917"
        },
        "item": {
          "id": "3b3197f5-44bd-4a59-8f62-a7a6b2b6809e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "69f7b872-80de-44e4-a608-d8149cbba847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298b8bab-6e5e-4b87-b424-243ea3d38024",
        "cursor": {
          "ref": "4d03fe4d-75f1-4a5e-bdc9-242b22af014d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "28f3971e-8b75-4195-9035-cf5b0ce1b82c"
        },
        "item": {
          "id": "298b8bab-6e5e-4b87-b424-243ea3d38024",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "44104867-71ec-4814-81c7-e30452dc6b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8495a0d0-e784-4969-9d4f-7de597bd0469",
        "cursor": {
          "ref": "0c5a7bd2-c134-4c67-91cf-221dd284e7db",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a6641a1a-f61a-4251-883c-ed7afda417b2"
        },
        "item": {
          "id": "8495a0d0-e784-4969-9d4f-7de597bd0469",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bcd5ea91-29a5-4cb6-b0b1-66a10645ede9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a080c89-d4f5-4edc-b736-012428eaad29",
        "cursor": {
          "ref": "cea65a96-1332-46a2-bfca-a4b5f1a19b00",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bf56ca14-9972-422b-b5f3-9ba80d61ec55"
        },
        "item": {
          "id": "4a080c89-d4f5-4edc-b736-012428eaad29",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5a26c924-d808-4701-b541-3d24fcaf9139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce54472-5b95-497f-ab26-6ef945a86907",
        "cursor": {
          "ref": "55e38449-66bd-4e1e-ae86-bafdd81b986d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fa3e3b4f-fcaa-4ae2-8e56-4b5038ebf204"
        },
        "item": {
          "id": "5ce54472-5b95-497f-ab26-6ef945a86907",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a391156-df5f-42ce-8fde-958280367025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258d7469-11f8-43e3-858a-eb6186202617",
        "cursor": {
          "ref": "23861806-85db-4970-b21a-cd36d44fa66f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2154c51e-4112-4a03-8bf4-49288bc8d0a2"
        },
        "item": {
          "id": "258d7469-11f8-43e3-858a-eb6186202617",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4994a3fd-10d2-45d8-a841-c98c296ae872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e30a029-f4a3-4e03-b2f2-862557d2cf3f",
        "cursor": {
          "ref": "eb14df44-f0aa-45c4-be20-c93c4d3c144c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bc690afb-e8be-418c-8eff-fcb0cd4cccba"
        },
        "item": {
          "id": "3e30a029-f4a3-4e03-b2f2-862557d2cf3f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "57659326-f8bf-49ab-b235-6b49aaf3c872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1421d5b6-b573-4b9a-8795-276056a5663b",
        "cursor": {
          "ref": "0db5dcc5-3404-4751-a81e-6e05c59304ed",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1d6aa554-fddf-4295-b398-e4ebf1943551"
        },
        "item": {
          "id": "1421d5b6-b573-4b9a-8795-276056a5663b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fe4d4007-2c76-4b54-8167-203e3a85600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841cdec5-7f56-419a-b0bb-063ff19dc49f",
        "cursor": {
          "ref": "d32ce1cd-174e-4733-973c-5c020c92a3ba",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1d57e92d-289b-48c0-9d31-e4d953f784a8"
        },
        "item": {
          "id": "841cdec5-7f56-419a-b0bb-063ff19dc49f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e4d144dd-2a76-4d41-a584-1604a2fb60d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1471,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e63a222-ea6c-4594-9492-1b3cdd1be402",
        "cursor": {
          "ref": "2895dd59-1044-4609-9a9e-406a74659aa5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8fa24baa-fbc9-4c3c-a3e1-b7aa29e8a0bd"
        },
        "item": {
          "id": "3e63a222-ea6c-4594-9492-1b3cdd1be402",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "234acf0f-28a9-4ef6-8b5a-ec32f95750b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7469d0e7-4c9e-440f-96d1-45306ca9bde5",
        "cursor": {
          "ref": "a7a4a8dd-40b4-4d43-8722-245d867e428e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "20af81eb-454f-407b-a2a5-9af30252fcbe"
        },
        "item": {
          "id": "7469d0e7-4c9e-440f-96d1-45306ca9bde5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5bf9cea0-63b9-435a-82a2-b015154958cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2449052a-8dda-4f27-9ba0-73a8259bedf7",
        "cursor": {
          "ref": "87019d46-2a4c-419d-b192-162eca1bf6b1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fad1c081-bd16-437d-ba8a-35df1cff4518"
        },
        "item": {
          "id": "2449052a-8dda-4f27-9ba0-73a8259bedf7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "21256bcc-c19b-4ebb-94ab-7b8f21388e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fac3cd1-f2a5-44f3-8d6e-e95ef06e0a13",
        "cursor": {
          "ref": "cda418c3-22dd-4222-a28b-f4234e787acc",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "033a8658-7fc9-43f5-b67a-da4600af7872"
        },
        "item": {
          "id": "0fac3cd1-f2a5-44f3-8d6e-e95ef06e0a13",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "36ae14b3-0187-4919-a72d-7ba10cda51a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b4f613-8498-4816-84dc-37fd82e85b04",
        "cursor": {
          "ref": "5bcaeef7-22fc-4369-862c-7ef7dd24bc28",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9f8ae6c3-fd0f-4a8f-b7b8-3edee724bde3"
        },
        "item": {
          "id": "86b4f613-8498-4816-84dc-37fd82e85b04",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "74ab03cd-0634-410d-bd13-1becf20fd867",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e417a-abd5-4577-a9f9-bcf22e0026d4",
        "cursor": {
          "ref": "eee19596-34d1-41bb-a369-2517dc7ca0d4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ddaf9f44-5871-4cdf-9fa6-4733c98ac33b"
        },
        "item": {
          "id": "176e417a-abd5-4577-a9f9-bcf22e0026d4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3d8b0e4c-384b-4a78-874c-f19642e03030",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c3300e-7dad-4e7f-9f76-c220b16a69c6",
        "cursor": {
          "ref": "e0c6970d-4a69-4096-af4c-c6b6e56b4397",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "26184d11-2b8c-40cf-a6c5-5909b7c37d64"
        },
        "item": {
          "id": "00c3300e-7dad-4e7f-9f76-c220b16a69c6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "caa5824a-9717-4f6a-9915-a6fc36571d11",
          "status": "OK",
          "code": 200,
          "responseTime": 5558,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4fb324-ca1f-47ef-94a2-5c604e5698ea",
        "cursor": {
          "ref": "062e6843-cf02-463a-aed8-7ed960ac1086",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a29f91d2-35e1-48bf-a5a1-8697837c49f8"
        },
        "item": {
          "id": "2e4fb324-ca1f-47ef-94a2-5c604e5698ea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2c6ac0a6-2973-48df-ad78-c572209a27f6",
          "status": "OK",
          "code": 200,
          "responseTime": 3004,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "744bc677-b234-485e-bd1b-4ad996c7bb2e",
        "cursor": {
          "ref": "129021bd-b442-4d91-acf0-9aa6e7ec1385",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b3d2fdea-8a19-4fcd-869f-2b9054885d50"
        },
        "item": {
          "id": "744bc677-b234-485e-bd1b-4ad996c7bb2e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe09a54d-9c84-4241-b80d-aac23278fb41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744bc677-b234-485e-bd1b-4ad996c7bb2e",
        "cursor": {
          "ref": "129021bd-b442-4d91-acf0-9aa6e7ec1385",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b3d2fdea-8a19-4fcd-869f-2b9054885d50"
        },
        "item": {
          "id": "744bc677-b234-485e-bd1b-4ad996c7bb2e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe09a54d-9c84-4241-b80d-aac23278fb41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201eb46d-785e-4874-9b27-37865286209f",
        "cursor": {
          "ref": "8a6647da-f272-4fc9-bc0f-616d05de57eb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "355cc325-fbdb-4266-8754-964c8c53cc59"
        },
        "item": {
          "id": "201eb46d-785e-4874-9b27-37865286209f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ddae609-84be-4f29-bf30-f3c5b42fe832",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20ffb5a-2b6e-4f3a-9507-14a911cf4315",
        "cursor": {
          "ref": "4395216c-5742-4148-b380-a73048d464d1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "68509e89-fda2-4ab1-8a96-60acda9c5b65"
        },
        "item": {
          "id": "d20ffb5a-2b6e-4f3a-9507-14a911cf4315",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9bb13769-08b5-483a-bce2-924c76754087",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}